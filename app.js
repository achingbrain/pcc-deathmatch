/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/deathmatch/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.GameContainer = undefined;

	__webpack_require__(1);

	__webpack_require__(2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactRedux = __webpack_require__(172);

	var _configureStore = __webpack_require__(212);

	var _configureStore2 = _interopRequireDefault(_configureStore);

	var _containers = __webpack_require__(303);

	var _components = __webpack_require__(305);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_reactDom2.default.render(_react2.default.createElement(
	  'div',
	  null,
	  _react2.default.createElement(
	    _reactRedux.Provider,
	    { store: (0, _configureStore2.default)() },
	    _react2.default.createElement(
	      _components.App,
	      null,
	      _react2.default.createElement(_components.ToolBar, null),
	      _react2.default.createElement(_containers.GameContainer, null)
	    )
	  )
	), document.getElementById('app'));

	exports.GameContainer = _containers.GameContainer;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "pcc-avatar.png";

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(4);


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactBaseClasses = __webpack_require__(6);
	var ReactChildren = __webpack_require__(15);
	var ReactDOMFactories = __webpack_require__(23);
	var ReactElement = __webpack_require__(17);
	var ReactPropTypes = __webpack_require__(24);
	var ReactVersion = __webpack_require__(29);

	var createReactClass = __webpack_require__(30);
	var onlyChild = __webpack_require__(32);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (false) {
	  var lowPriorityWarning = require('./lowPriorityWarning');
	  var canDefineProperty = require('./canDefineProperty');
	  var ReactElementValidator = require('./ReactElementValidator');
	  var didWarnPropTypesDeprecated = false;
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;
	var createMixin = function (mixin) {
	  return mixin;
	};

	if (false) {
	  var warnedForSpread = false;
	  var warnedForCreateMixin = false;
	  __spread = function () {
	    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
	    warnedForSpread = true;
	    return _assign.apply(null, arguments);
	  };

	  createMixin = function (mixin) {
	    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
	    warnedForCreateMixin = true;
	    return mixin;
	  };
	}

	var React = {
	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactBaseClasses.Component,
	  PureComponent: ReactBaseClasses.PureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: createReactClass,
	  createFactory: createFactory,
	  createMixin: createMixin,

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	if (false) {
	  var warnedForCreateClass = false;
	  if (canDefineProperty) {
	    Object.defineProperty(React, 'PropTypes', {
	      get: function () {
	        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
	        didWarnPropTypesDeprecated = true;
	        return ReactPropTypes;
	      }
	    });

	    Object.defineProperty(React, 'createClass', {
	      get: function () {
	        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
	        warnedForCreateClass = true;
	        return createReactClass;
	      }
	    });
	  }

	  // React.DOM factories are deprecated. Wrap these methods so that
	  // invocations of the React.DOM namespace and alert users to switch
	  // to the `react-dom-factories` package.
	  React.DOM = {};
	  var warnedForFactories = false;
	  Object.keys(ReactDOMFactories).forEach(function (factory) {
	    React.DOM[factory] = function () {
	      if (!warnedForFactories) {
	        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
	        warnedForFactories = true;
	      }
	      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
	    };
	  });
	}

	module.exports = React;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(5);

	var ReactNoopUpdateQueue = __webpack_require__(8);

	var canDefineProperty = __webpack_require__(11);
	var emptyObject = __webpack_require__(12);
	var invariant = __webpack_require__(13);
	var lowPriorityWarning = __webpack_require__(14);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = {
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent
	};

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var warning = __webpack_require__(9);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(10);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var canDefineProperty = false;
	if (false) {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (false) {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	if (false) {
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = lowPriorityWarning;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var PooledClass = __webpack_require__(16);
	var ReactElement = __webpack_require__(17);

	var emptyFunction = __webpack_require__(10);
	var traverseAllChildren = __webpack_require__(20);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var invariant = __webpack_require__(13);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactCurrentOwner = __webpack_require__(18);

	var warning = __webpack_require__(9);
	var canDefineProperty = __webpack_require__(11);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var REACT_ELEMENT_TYPE = __webpack_require__(19);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (false) {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	module.exports = ReactCurrentOwner;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(18);
	var REACT_ELEMENT_TYPE = __webpack_require__(19);

	var getIteratorFn = __webpack_require__(21);
	var invariant = __webpack_require__(13);
	var KeyEscapeUtils = __webpack_require__(22);
	var warning = __webpack_require__(9);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ }),
/* 21 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(17);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(17),
	    isValidElement = _require.isValidElement;

	var factory = __webpack_require__(25);

	module.exports = factory(isValidElement);

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	// React 15.5 references this module, and assumes PropTypes are still callable in production.
	// Therefore we re-export development-only version with all the PropTypes checks here.
	// However if one is migrating to the `prop-types` npm library, they will go through the
	// `index.js` entry point, and it will branch depending on the environment.
	var factory = __webpack_require__(26);
	module.exports = function(isValidElement) {
	  // It is still allowed in 15.5.
	  var throwOnDirectAccess = false;
	  return factory(isValidElement, throwOnDirectAccess);
	};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(10);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);
	var assign = __webpack_require__(5);

	var ReactPropTypesSecret = __webpack_require__(27);
	var checkPropTypes = __webpack_require__(28);

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker,
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (false) {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (false) {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	       false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	       false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        warning(
	          false,
	          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
	          'received %s at index %s.',
	          getPostfixForTypeWarning(checker),
	          i
	        );
	        return emptyFunction.thatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from
	      // props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          return new PropTypeError(
	            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
	            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
	            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
	          );
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	if (false) {
	  var invariant = require('fbjs/lib/invariant');
	  var warning = require('fbjs/lib/warning');
	  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
	  var loggedTypeFailures = {};
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (false) {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;


/***/ }),
/* 29 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	module.exports = '15.6.2';

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(6),
	    Component = _require.Component;

	var _require2 = __webpack_require__(17),
	    isValidElement = _require2.isValidElement;

	var ReactNoopUpdateQueue = __webpack_require__(8);
	var factory = __webpack_require__(31);

	module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var emptyObject = __webpack_require__(12);
	var _invariant = __webpack_require__(13);

	if (false) {
	  var warning = require('fbjs/lib/warning');
	}

	var MIXINS_KEY = 'mixins';

	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}

	var ReactPropTypeLocationNames;
	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	} else {
	  ReactPropTypeLocationNames = {};
	}

	function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	  /**
	   * Policies that describe methods in `ReactClassInterface`.
	   */

	  var injectedMixins = [];

	  /**
	   * Composite components are higher-level components that compose other composite
	   * or host components.
	   *
	   * To create a new type of `ReactClass`, pass a specification of
	   * your new class to `React.createClass`. The only requirement of your class
	   * specification is that you implement a `render` method.
	   *
	   *   var MyComponent = React.createClass({
	   *     render: function() {
	   *       return <div>Hello World</div>;
	   *     }
	   *   });
	   *
	   * The class specification supports a specific protocol of methods that have
	   * special meaning (e.g. `render`). See `ReactClassInterface` for
	   * more the comprehensive protocol. Any other properties and methods in the
	   * class specification will be available on the prototype.
	   *
	   * @interface ReactClassInterface
	   * @internal
	   */
	  var ReactClassInterface = {
	    /**
	     * An array of Mixin objects to include when defining your component.
	     *
	     * @type {array}
	     * @optional
	     */
	    mixins: 'DEFINE_MANY',

	    /**
	     * An object containing properties and methods that should be defined on
	     * the component's constructor instead of its prototype (static methods).
	     *
	     * @type {object}
	     * @optional
	     */
	    statics: 'DEFINE_MANY',

	    /**
	     * Definition of prop types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    propTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    contextTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types this component sets for its children.
	     *
	     * @type {object}
	     * @optional
	     */
	    childContextTypes: 'DEFINE_MANY',

	    // ==== Definition methods ====

	    /**
	     * Invoked when the component is mounted. Values in the mapping will be set on
	     * `this.props` if that prop is not specified (i.e. using an `in` check).
	     *
	     * This method is invoked before `getInitialState` and therefore cannot rely
	     * on `this.state` or use `this.setState`.
	     *
	     * @return {object}
	     * @optional
	     */
	    getDefaultProps: 'DEFINE_MANY_MERGED',

	    /**
	     * Invoked once before the component is mounted. The return value will be used
	     * as the initial value of `this.state`.
	     *
	     *   getInitialState: function() {
	     *     return {
	     *       isOn: false,
	     *       fooBaz: new BazFoo()
	     *     }
	     *   }
	     *
	     * @return {object}
	     * @optional
	     */
	    getInitialState: 'DEFINE_MANY_MERGED',

	    /**
	     * @return {object}
	     * @optional
	     */
	    getChildContext: 'DEFINE_MANY_MERGED',

	    /**
	     * Uses props from `this.props` and state from `this.state` to render the
	     * structure of the component.
	     *
	     * No guarantees are made about when or how often this method is invoked, so
	     * it must not have side effects.
	     *
	     *   render: function() {
	     *     var name = this.props.name;
	     *     return <div>Hello, {name}!</div>;
	     *   }
	     *
	     * @return {ReactComponent}
	     * @required
	     */
	    render: 'DEFINE_ONCE',

	    // ==== Delegate methods ====

	    /**
	     * Invoked when the component is initially created and about to be mounted.
	     * This may have side effects, but any external subscriptions or data created
	     * by this method must be cleaned up in `componentWillUnmount`.
	     *
	     * @optional
	     */
	    componentWillMount: 'DEFINE_MANY',

	    /**
	     * Invoked when the component has been mounted and has a DOM representation.
	     * However, there is no guarantee that the DOM node is in the document.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been mounted (initialized and rendered) for the first time.
	     *
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidMount: 'DEFINE_MANY',

	    /**
	     * Invoked before the component receives new props.
	     *
	     * Use this as an opportunity to react to a prop transition by updating the
	     * state using `this.setState`. Current props are accessed via `this.props`.
	     *
	     *   componentWillReceiveProps: function(nextProps, nextContext) {
	     *     this.setState({
	     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	     *     });
	     *   }
	     *
	     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	     * transition may cause a state change, but the opposite is not true. If you
	     * need it, you are probably looking for `componentWillUpdate`.
	     *
	     * @param {object} nextProps
	     * @optional
	     */
	    componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Invoked while deciding if the component should be updated as a result of
	     * receiving new props, state and/or context.
	     *
	     * Use this as an opportunity to `return false` when you're certain that the
	     * transition to the new props/state/context will not require a component
	     * update.
	     *
	     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	     *     return !equal(nextProps, this.props) ||
	     *       !equal(nextState, this.state) ||
	     *       !equal(nextContext, this.context);
	     *   }
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @return {boolean} True if the component should update.
	     * @optional
	     */
	    shouldComponentUpdate: 'DEFINE_ONCE',

	    /**
	     * Invoked when the component is about to update due to a transition from
	     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	     * and `nextContext`.
	     *
	     * Use this as an opportunity to perform preparation before an update occurs.
	     *
	     * NOTE: You **cannot** use `this.setState()` in this method.
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @param {ReactReconcileTransaction} transaction
	     * @optional
	     */
	    componentWillUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component's DOM representation has been updated.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been updated.
	     *
	     * @param {object} prevProps
	     * @param {?object} prevState
	     * @param {?object} prevContext
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component is about to be removed from its parent and have
	     * its DOM representation destroyed.
	     *
	     * Use this as an opportunity to deallocate any external resources.
	     *
	     * NOTE: There is no `componentDidUnmount` since your component will have been
	     * destroyed by that point.
	     *
	     * @optional
	     */
	    componentWillUnmount: 'DEFINE_MANY',

	    // ==== Advanced methods ====

	    /**
	     * Updates the component's currently mounted DOM representation.
	     *
	     * By default, this implements React's rendering and reconciliation algorithm.
	     * Sophisticated clients may wish to override this.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     * @overridable
	     */
	    updateComponent: 'OVERRIDE_BASE'
	  };

	  /**
	   * Mapping from class specification keys to special processing functions.
	   *
	   * Although these are declared like instance properties in the specification
	   * when defining classes using `React.createClass`, they are actually static
	   * and are accessible on the constructor instead of the prototype. Despite
	   * being static, they must be defined outside of the "statics" key under
	   * which all other static methods are defined.
	   */
	  var RESERVED_SPEC_KEYS = {
	    displayName: function(Constructor, displayName) {
	      Constructor.displayName = displayName;
	    },
	    mixins: function(Constructor, mixins) {
	      if (mixins) {
	        for (var i = 0; i < mixins.length; i++) {
	          mixSpecIntoComponent(Constructor, mixins[i]);
	        }
	      }
	    },
	    childContextTypes: function(Constructor, childContextTypes) {
	      if (false) {
	        validateTypeDef(Constructor, childContextTypes, 'childContext');
	      }
	      Constructor.childContextTypes = _assign(
	        {},
	        Constructor.childContextTypes,
	        childContextTypes
	      );
	    },
	    contextTypes: function(Constructor, contextTypes) {
	      if (false) {
	        validateTypeDef(Constructor, contextTypes, 'context');
	      }
	      Constructor.contextTypes = _assign(
	        {},
	        Constructor.contextTypes,
	        contextTypes
	      );
	    },
	    /**
	     * Special case getDefaultProps which should move into statics but requires
	     * automatic merging.
	     */
	    getDefaultProps: function(Constructor, getDefaultProps) {
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps = createMergedResultFunction(
	          Constructor.getDefaultProps,
	          getDefaultProps
	        );
	      } else {
	        Constructor.getDefaultProps = getDefaultProps;
	      }
	    },
	    propTypes: function(Constructor, propTypes) {
	      if (false) {
	        validateTypeDef(Constructor, propTypes, 'prop');
	      }
	      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	    },
	    statics: function(Constructor, statics) {
	      mixStaticSpecIntoComponent(Constructor, statics);
	    },
	    autobind: function() {}
	  };

	  function validateTypeDef(Constructor, typeDef, location) {
	    for (var propName in typeDef) {
	      if (typeDef.hasOwnProperty(propName)) {
	        // use a warning instead of an _invariant so components
	        // don't show up in prod but only in __DEV__
	        if (false) {
	          warning(
	            typeof typeDef[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	              'React.PropTypes.',
	            Constructor.displayName || 'ReactClass',
	            ReactPropTypeLocationNames[location],
	            propName
	          );
	        }
	      }
	    }
	  }

	  function validateMethodOverride(isAlreadyDefined, name) {
	    var specPolicy = ReactClassInterface.hasOwnProperty(name)
	      ? ReactClassInterface[name]
	      : null;

	    // Disallow overriding of base class methods unless explicitly allowed.
	    if (ReactClassMixin.hasOwnProperty(name)) {
	      _invariant(
	        specPolicy === 'OVERRIDE_BASE',
	        'ReactClassInterface: You are attempting to override ' +
	          '`%s` from your class specification. Ensure that your method names ' +
	          'do not overlap with React methods.',
	        name
	      );
	    }

	    // Disallow defining methods more than once unless explicitly allowed.
	    if (isAlreadyDefined) {
	      _invariant(
	        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
	        'ReactClassInterface: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be due ' +
	          'to a mixin.',
	        name
	      );
	    }
	  }

	  /**
	   * Mixin helper which handles policy validation and reserved
	   * specification keys when building React classes.
	   */
	  function mixSpecIntoComponent(Constructor, spec) {
	    if (!spec) {
	      if (false) {
	        var typeofSpec = typeof spec;
	        var isMixinValid = typeofSpec === 'object' && spec !== null;

	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            isMixinValid,
	            "%s: You're attempting to include a mixin that is either null " +
	              'or not an object. Check the mixins included by the component, ' +
	              'as well as any mixins they include themselves. ' +
	              'Expected object but got %s.',
	            Constructor.displayName || 'ReactClass',
	            spec === null ? null : typeofSpec
	          );
	        }
	      }

	      return;
	    }

	    _invariant(
	      typeof spec !== 'function',
	      "ReactClass: You're attempting to " +
	        'use a component class or function as a mixin. Instead, just use a ' +
	        'regular object.'
	    );
	    _invariant(
	      !isValidElement(spec),
	      "ReactClass: You're attempting to " +
	        'use a component as a mixin. Instead, just use a regular object.'
	    );

	    var proto = Constructor.prototype;
	    var autoBindPairs = proto.__reactAutoBindPairs;

	    // By handling mixins before any other properties, we ensure the same
	    // chaining order is applied to methods with DEFINE_MANY policy, whether
	    // mixins are listed before or after these methods in the spec.
	    if (spec.hasOwnProperty(MIXINS_KEY)) {
	      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	    }

	    for (var name in spec) {
	      if (!spec.hasOwnProperty(name)) {
	        continue;
	      }

	      if (name === MIXINS_KEY) {
	        // We have already handled mixins in a special case above.
	        continue;
	      }

	      var property = spec[name];
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      validateMethodOverride(isAlreadyDefined, name);

	      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	        RESERVED_SPEC_KEYS[name](Constructor, property);
	      } else {
	        // Setup methods on prototype:
	        // The following member methods should not be automatically bound:
	        // 1. Expected ReactClass methods (in the "interface").
	        // 2. Overridden methods (that were mixed in).
	        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	        var isFunction = typeof property === 'function';
	        var shouldAutoBind =
	          isFunction &&
	          !isReactClassMethod &&
	          !isAlreadyDefined &&
	          spec.autobind !== false;

	        if (shouldAutoBind) {
	          autoBindPairs.push(name, property);
	          proto[name] = property;
	        } else {
	          if (isAlreadyDefined) {
	            var specPolicy = ReactClassInterface[name];

	            // These cases should already be caught by validateMethodOverride.
	            _invariant(
	              isReactClassMethod &&
	                (specPolicy === 'DEFINE_MANY_MERGED' ||
	                  specPolicy === 'DEFINE_MANY'),
	              'ReactClass: Unexpected spec policy %s for key %s ' +
	                'when mixing in component specs.',
	              specPolicy,
	              name
	            );

	            // For methods which are defined more than once, call the existing
	            // methods before calling the new property, merging if appropriate.
	            if (specPolicy === 'DEFINE_MANY_MERGED') {
	              proto[name] = createMergedResultFunction(proto[name], property);
	            } else if (specPolicy === 'DEFINE_MANY') {
	              proto[name] = createChainedFunction(proto[name], property);
	            }
	          } else {
	            proto[name] = property;
	            if (false) {
	              // Add verbose displayName to the function, which helps when looking
	              // at profiling tools.
	              if (typeof property === 'function' && spec.displayName) {
	                proto[name].displayName = spec.displayName + '_' + name;
	              }
	            }
	          }
	        }
	      }
	    }
	  }

	  function mixStaticSpecIntoComponent(Constructor, statics) {
	    if (!statics) {
	      return;
	    }
	    for (var name in statics) {
	      var property = statics[name];
	      if (!statics.hasOwnProperty(name)) {
	        continue;
	      }

	      var isReserved = name in RESERVED_SPEC_KEYS;
	      _invariant(
	        !isReserved,
	        'ReactClass: You are attempting to define a reserved ' +
	          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	          'as an instance property instead; it will still be accessible on the ' +
	          'constructor.',
	        name
	      );

	      var isInherited = name in Constructor;
	      _invariant(
	        !isInherited,
	        'ReactClass: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be ' +
	          'due to a mixin.',
	        name
	      );
	      Constructor[name] = property;
	    }
	  }

	  /**
	   * Merge two objects, but throw if both contain the same key.
	   *
	   * @param {object} one The first object, which is mutated.
	   * @param {object} two The second object
	   * @return {object} one after it has been mutated to contain everything in two.
	   */
	  function mergeIntoWithNoDuplicateKeys(one, two) {
	    _invariant(
	      one && two && typeof one === 'object' && typeof two === 'object',
	      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	    );

	    for (var key in two) {
	      if (two.hasOwnProperty(key)) {
	        _invariant(
	          one[key] === undefined,
	          'mergeIntoWithNoDuplicateKeys(): ' +
	            'Tried to merge two objects with the same key: `%s`. This conflict ' +
	            'may be due to a mixin; in particular, this may be caused by two ' +
	            'getInitialState() or getDefaultProps() methods returning objects ' +
	            'with clashing keys.',
	          key
	        );
	        one[key] = two[key];
	      }
	    }
	    return one;
	  }

	  /**
	   * Creates a function that invokes two functions and merges their return values.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createMergedResultFunction(one, two) {
	    return function mergedResult() {
	      var a = one.apply(this, arguments);
	      var b = two.apply(this, arguments);
	      if (a == null) {
	        return b;
	      } else if (b == null) {
	        return a;
	      }
	      var c = {};
	      mergeIntoWithNoDuplicateKeys(c, a);
	      mergeIntoWithNoDuplicateKeys(c, b);
	      return c;
	    };
	  }

	  /**
	   * Creates a function that invokes two functions and ignores their return vales.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createChainedFunction(one, two) {
	    return function chainedFunction() {
	      one.apply(this, arguments);
	      two.apply(this, arguments);
	    };
	  }

	  /**
	   * Binds a method to the component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   * @param {function} method Method to be bound.
	   * @return {function} The bound method.
	   */
	  function bindAutoBindMethod(component, method) {
	    var boundMethod = method.bind(component);
	    if (false) {
	      boundMethod.__reactBoundContext = component;
	      boundMethod.__reactBoundMethod = method;
	      boundMethod.__reactBoundArguments = null;
	      var componentName = component.constructor.displayName;
	      var _bind = boundMethod.bind;
	      boundMethod.bind = function(newThis) {
	        for (
	          var _len = arguments.length,
	            args = Array(_len > 1 ? _len - 1 : 0),
	            _key = 1;
	          _key < _len;
	          _key++
	        ) {
	          args[_key - 1] = arguments[_key];
	        }

	        // User is trying to bind() an autobound method; we effectively will
	        // ignore the value of "this" that the user is trying to use, so
	        // let's warn.
	        if (newThis !== component && newThis !== null) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): React component methods may only be bound to the ' +
	                'component instance. See %s',
	              componentName
	            );
	          }
	        } else if (!args.length) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): You are binding a component method to the component. ' +
	                'React does this for you automatically in a high-performance ' +
	                'way, so you can safely remove this call. See %s',
	              componentName
	            );
	          }
	          return boundMethod;
	        }
	        var reboundMethod = _bind.apply(boundMethod, arguments);
	        reboundMethod.__reactBoundContext = component;
	        reboundMethod.__reactBoundMethod = method;
	        reboundMethod.__reactBoundArguments = args;
	        return reboundMethod;
	      };
	    }
	    return boundMethod;
	  }

	  /**
	   * Binds all auto-bound methods in a component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   */
	  function bindAutoBindMethods(component) {
	    var pairs = component.__reactAutoBindPairs;
	    for (var i = 0; i < pairs.length; i += 2) {
	      var autoBindKey = pairs[i];
	      var method = pairs[i + 1];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }

	  var IsMountedPreMixin = {
	    componentDidMount: function() {
	      this.__isMounted = true;
	    }
	  };

	  var IsMountedPostMixin = {
	    componentWillUnmount: function() {
	      this.__isMounted = false;
	    }
	  };

	  /**
	   * Add more to the ReactClass base class. These are all legacy features and
	   * therefore not already part of the modern ReactComponent.
	   */
	  var ReactClassMixin = {
	    /**
	     * TODO: This will be deprecated because state should always keep a consistent
	     * type signature and the only use case for this, is to avoid that.
	     */
	    replaceState: function(newState, callback) {
	      this.updater.enqueueReplaceState(this, newState, callback);
	    },

	    /**
	     * Checks whether or not this composite component is mounted.
	     * @return {boolean} True if mounted, false otherwise.
	     * @protected
	     * @final
	     */
	    isMounted: function() {
	      if (false) {
	        warning(
	          this.__didWarnIsMounted,
	          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
	            'subscriptions and pending requests in componentWillUnmount to ' +
	            'prevent memory leaks.',
	          (this.constructor && this.constructor.displayName) ||
	            this.name ||
	            'Component'
	        );
	        this.__didWarnIsMounted = true;
	      }
	      return !!this.__isMounted;
	    }
	  };

	  var ReactClassComponent = function() {};
	  _assign(
	    ReactClassComponent.prototype,
	    ReactComponent.prototype,
	    ReactClassMixin
	  );

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  function createClass(spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (false) {
	        warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	            'JSX instead. See: https://fb.me/react-legacyfactory'
	        );
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (
	          initialState === undefined &&
	          this.getInitialState._isMockFunction
	        ) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      _invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      );

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
	    mixSpecIntoComponent(Constructor, spec);
	    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    _invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    );

	    if (false) {
	      warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	          'The name is phrased as a question because the function is ' +
	          'expected to return a value.',
	        spec.displayName || 'A component'
	      );
	      warning(
	        !Constructor.prototype.componentWillRecieveProps,
	        '%s has a method called ' +
	          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
	        spec.displayName || 'A component'
	      );
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  }

	  return createClass;
	}

	module.exports = factory;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactElement = __webpack_require__(17);

	var invariant = __webpack_require__(13);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(34);


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactDefaultInjection = __webpack_require__(39);
	var ReactMount = __webpack_require__(163);
	var ReactReconciler = __webpack_require__(60);
	var ReactUpdates = __webpack_require__(57);
	var ReactVersion = __webpack_require__(168);

	var findDOMNode = __webpack_require__(169);
	var getHostComponentFromComposite = __webpack_require__(170);
	var renderSubtreeIntoContainer = __webpack_require__(171);
	var warning = __webpack_require__(9);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	  /* eslint-enable camelcase */
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (false) {
	  var ReactInstrumentation = require('./ReactInstrumentation');
	  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
	  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
	  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}

	module.exports = ReactDOM;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentFlags = __webpack_require__(38);

	var invariant = __webpack_require__(13);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;

/***/ }),
/* 36 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ }),
/* 38 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = __webpack_require__(40);
	var BeforeInputEventPlugin = __webpack_require__(41);
	var ChangeEventPlugin = __webpack_require__(56);
	var DefaultEventPluginOrder = __webpack_require__(69);
	var EnterLeaveEventPlugin = __webpack_require__(70);
	var HTMLDOMPropertyConfig = __webpack_require__(75);
	var ReactComponentBrowserEnvironment = __webpack_require__(76);
	var ReactDOMComponent = __webpack_require__(89);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactDOMEmptyComponent = __webpack_require__(134);
	var ReactDOMTreeTraversal = __webpack_require__(135);
	var ReactDOMTextComponent = __webpack_require__(136);
	var ReactDefaultBatchingStrategy = __webpack_require__(137);
	var ReactEventListener = __webpack_require__(138);
	var ReactInjection = __webpack_require__(141);
	var ReactReconcileTransaction = __webpack_require__(142);
	var SVGDOMPropertyConfig = __webpack_require__(150);
	var SelectEventPlugin = __webpack_require__(151);
	var SimpleEventPlugin = __webpack_require__(152);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ }),
/* 40 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};

	module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var FallbackCompositionState = __webpack_require__(50);
	var SyntheticCompositionEvent = __webpack_require__(53);
	var SyntheticInputEvent = __webpack_require__(55);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);

	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var warning = __webpack_require__(9);

	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var EventPluginRegistry = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(45);
	var ReactErrorUtils = __webpack_require__(46);

	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var invariant = __webpack_require__(13);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }
	};

	module.exports = EventPluginHub;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	};

	module.exports = EventPluginRegistry;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var ReactErrorUtils = __webpack_require__(46);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}

	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}

	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = function () {
	        func(a);
	      };
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

/***/ }),
/* 48 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ }),
/* 49 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(51);

	var getTextContentAccessor = __webpack_require__(52);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(51);

	var emptyFunction = __webpack_require__(10);
	var warning = __webpack_require__(9);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.returnValue !== 'unknown') {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	/** Proxying after everything set on SyntheticEvent
	  * to resolve Proxy issue on some WebKit browsers
	  * in which some Event properties are set to undefined (GH#10010)
	  */
	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(43);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactUpdates = __webpack_require__(57);
	var SyntheticEvent = __webpack_require__(54);

	var inputValueTracking = __webpack_require__(65);
	var getEventTarget = __webpack_require__(66);
	var isEventSupported = __webpack_require__(67);
	var isTextInputElement = __webpack_require__(68);

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};

	function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
	  event.type = 'change';
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getInstIfValueChanged(targetInst, nativeEvent) {
	  var updated = inputValueTracking.updateValueIfChanged(targetInst);
	  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

	  if (updated || simulated) {
	    return targetInst;
	  }
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}

	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.

	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
	}

	/**
	 * (For IE <=9) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For IE <=9) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementInst = null;
	}

	/**
	 * (For IE <=9) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
	    manualDispatchChangeEvent(nativeEvent);
	  }
	}

	function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    return getInstIfValueChanged(activeElementInst, nativeEvent);
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topClick') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}

	function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}

	function handleControlledInputBlur(inst, node) {
	  // TODO: In IE, inst is occasionally null. Why?
	  if (inst == null) {
	    return;
	  }

	  // Fiber and ReactDOM keep wrapper state in separate places
	  var state = inst._wrapperState || node._wrapperState;

	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }

	  // If controlled, assign the value attribute to the current value on blur
	  var value = '' + node.value;
	  if (node.getAttribute('value') !== value) {
	    node.setAttribute('value', value);
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	  eventTypes: eventTypes,

	  _allowSimulatedPassThrough: true,
	  _isInputEventSupported: isInputEventSupported,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventPolyfill;
	        handleEventFunc = handleEventsForInputEventPolyfill;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
	      if (inst) {
	        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }

	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === 'topBlur') {
	      handleControlledInputBlur(targetInst, targetNode);
	    }
	  }
	};

	module.exports = ChangeEventPlugin;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36),
	    _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(58);
	var PooledClass = __webpack_require__(51);
	var ReactFeatureFlags = __webpack_require__(59);
	var ReactReconciler = __webpack_require__(60);
	var Transaction = __webpack_require__(64);

	var invariant = __webpack_require__(13);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + 'updates are not being batched.');
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PooledClass = __webpack_require__(51);

	var invariant = __webpack_require__(13);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */

	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);

	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */


	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };

	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };

	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };

	  /**
	   * `PooledClass` looks for this.
	   */


	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };

	  return CallbackQueue;
	}();

	module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ }),
/* 59 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactRef = __webpack_require__(61);
	var ReactInstrumentation = __webpack_require__(63);

	var warning = __webpack_require__(9);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
	  {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	};

	module.exports = ReactReconciler;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactOwner = __webpack_require__(62);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }

	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }

	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	};

	module.exports = ReactOwner;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	// Trust the developer to only use ReactInstrumentation with a __DEV__ check

	var debugTool = null;

	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	var OBSERVED_ERROR = {};

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /* eslint-disable space-before-function-paren */

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    /* eslint-enable space-before-function-paren */
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	module.exports = TransactionImpl;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(35);

	function isCheckable(elem) {
	  var type = elem.type;
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
	}

	function getTracker(inst) {
	  return inst._wrapperState.valueTracker;
	}

	function attachTracker(inst, tracker) {
	  inst._wrapperState.valueTracker = tracker;
	}

	function detachTracker(inst) {
	  inst._wrapperState.valueTracker = null;
	}

	function getValueFromNode(node) {
	  var value;
	  if (node) {
	    value = isCheckable(node) ? '' + node.checked : node.value;
	  }
	  return value;
	}

	var inputValueTracking = {
	  // exposed for testing
	  _getTrackerFromNode: function (node) {
	    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
	  },


	  track: function (inst) {
	    if (getTracker(inst)) {
	      return;
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var valueField = isCheckable(node) ? 'checked' : 'value';
	    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

	    var currentValue = '' + node[valueField];

	    // if someone has already defined a value or Safari, then bail
	    // and don't track value will cause over reporting of changes,
	    // but it's better then a hard failure
	    // (needed for certain tests that spyOn input values and Safari)
	    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
	      return;
	    }

	    Object.defineProperty(node, valueField, {
	      enumerable: descriptor.enumerable,
	      configurable: true,
	      get: function () {
	        return descriptor.get.call(this);
	      },
	      set: function (value) {
	        currentValue = '' + value;
	        descriptor.set.call(this, value);
	      }
	    });

	    attachTracker(inst, {
	      getValue: function () {
	        return currentValue;
	      },
	      setValue: function (value) {
	        currentValue = '' + value;
	      },
	      stopTracking: function () {
	        detachTracker(inst);
	        delete node[valueField];
	      }
	    });
	  },

	  updateValueIfChanged: function (inst) {
	    if (!inst) {
	      return false;
	    }
	    var tracker = getTracker(inst);

	    if (!tracker) {
	      inputValueTracking.track(inst);
	      return true;
	    }

	    var lastValue = tracker.getValue();
	    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

	    if (nextValue !== lastValue) {
	      tracker.setValue(nextValue);
	      return true;
	    }

	    return false;
	  },
	  stopTracking: function (inst) {
	    var tracker = getTracker(inst);
	    if (tracker) {
	      tracker.stopTracking();
	    }
	  }
	};

	module.exports = inputValueTracking;

/***/ }),
/* 66 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ }),
/* 68 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  color: true,
	  date: true,
	  datetime: true,
	  'datetime-local': true,
	  email: true,
	  month: true,
	  number: true,
	  password: true,
	  range: true,
	  search: true,
	  tel: true,
	  text: true,
	  time: true,
	  url: true,
	  week: true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ }),
/* 69 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */

	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(35);
	var SyntheticMouseEvent = __webpack_require__(71);

	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};

	var EnterLeaveEventPlugin = {
	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }
	};

	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);
	var ViewportMetrics = __webpack_require__(73);

	var getEventModifierState = __webpack_require__(74);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	var getEventTarget = __webpack_require__(66);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ }),
/* 73 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ViewportMetrics = {
	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	};

	module.exports = ViewportMetrics;

/***/ }),
/* 74 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  Alt: 'altKey',
	  Control: 'ctrlKey',
	  Meta: 'metaKey',
	  Shift: 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    controlsList: 0,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {},
	  DOMMutationMethods: {
	    value: function (node, value) {
	      if (value == null) {
	        return node.removeAttribute('value');
	      }

	      // Number inputs get special treatment due to some edge cases in
	      // Chrome. Let everything else assign the value attribute as normal.
	      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
	      if (node.type !== 'number' || node.hasAttribute('value') === false) {
	        node.setAttribute('value', '' + value);
	      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
	        // Don't assign an attribute if validation reports bad
	        // input. Chrome will clear the value. Additionally, don't
	        // operate on inputs that have focus, otherwise Chrome might
	        // strip off trailing decimal places and cause the user's
	        // cursor position to jump to the beginning of the input.
	        //
	        // In ReactDOMInput, we have an onBlur event that will trigger
	        // this function again when focus is lost.
	        node.setAttribute('value', '' + value);
	      }
	    }
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(77);
	var ReactDOMIDOperations = __webpack_require__(88);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(78);
	var Danger = __webpack_require__(84);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactInstrumentation = __webpack_require__(63);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(81);
	var setInnerHTML = __webpack_require__(80);
	var setTextContent = __webpack_require__(82);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: {
	                toIndex: update.toIndex,
	                content: update.content.toString()
	              }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	};

	module.exports = DOMChildrenOperations;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(79);
	var setInnerHTML = __webpack_require__(80);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(81);
	var setTextContent = __webpack_require__(82);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ }),
/* 79 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);
	var DOMNamespaces = __webpack_require__(79);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(81);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xfeff) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ }),
/* 81 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);
	var escapeTextContentForBrowser = __webpack_require__(83);
	var setInnerHTML = __webpack_require__(80);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ }),
/* 83 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var DOMLazyTree = __webpack_require__(78);
	var ExecutionEnvironment = __webpack_require__(49);

	var createNodesFromMarkup = __webpack_require__(85);
	var emptyFunction = __webpack_require__(10);
	var invariant = __webpack_require__(13);

	var Danger = {
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	};

	module.exports = Danger;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(49);

	var createArrayFromMixed = __webpack_require__(86);
	var getMarkupWrap = __webpack_require__(87);
	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(13);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(49);

	var invariant = __webpack_require__(13);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(77);
	var ReactDOMComponentTree = __webpack_require__(35);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(36),
	    _assign = __webpack_require__(5);

	var AutoFocusUtils = __webpack_require__(90);
	var CSSPropertyOperations = __webpack_require__(92);
	var DOMLazyTree = __webpack_require__(78);
	var DOMNamespaces = __webpack_require__(79);
	var DOMProperty = __webpack_require__(37);
	var DOMPropertyOperations = __webpack_require__(100);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactBrowserEventEmitter = __webpack_require__(102);
	var ReactDOMComponentFlags = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactDOMInput = __webpack_require__(105);
	var ReactDOMOption = __webpack_require__(108);
	var ReactDOMSelect = __webpack_require__(109);
	var ReactDOMTextarea = __webpack_require__(110);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMultiChild = __webpack_require__(111);
	var ReactServerRenderingTransaction = __webpack_require__(130);

	var emptyFunction = __webpack_require__(10);
	var escapeTextContentForBrowser = __webpack_require__(83);
	var invariant = __webpack_require__(13);
	var isEventSupported = __webpack_require__(67);
	var shallowEqual = __webpack_require__(119);
	var inputValueTracking = __webpack_require__(65);
	var validateDOMNesting = __webpack_require__(133);
	var warning = __webpack_require__(9);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { string: true, number: true };

	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setAndValidateContentChildDev = emptyFunction;
	if (false) {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trackInputValue() {
	  inputValueTracking.track(this);
	}

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	var newlineEatingTags = {
	  listing: true,
	  pre: true,
	  textarea: true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (false) {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);

	        // We also check that we haven't missed a value update, such as a
	        // Radio group shifting the checked value to another named radio input.
	        inputValueTracking.updateValueIfChanged(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setAndValidateContentChildDev.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	      case 'textarea':
	        inputValueTracking.stopTracking(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (false) {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }
	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(35);

	var focusNode = __webpack_require__(91);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ }),
/* 91 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(93);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactInstrumentation = __webpack_require__(63);

	var camelizeStyleName = __webpack_require__(94);
	var dangerousStyleValue = __webpack_require__(96);
	var hyphenateStyleName = __webpack_require__(97);
	var memoizeStringOnly = __webpack_require__(99);
	var warning = __webpack_require__(9);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      var styleValue = styles[styleName];
	      if (false) {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styleValue, component);
	        }
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      if (false) {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styles[styleName], component);
	        }
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (isCustomProperty) {
	        style.setProperty(styleName, styleValue);
	      } else if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	};

	module.exports = CSSPropertyOperations;

/***/ }),
/* 93 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  columns: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(95);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ }),
/* 95 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(93);
	var warning = __webpack_require__(9);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(98);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ }),
/* 98 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ }),
/* 99 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactInstrumentation = __webpack_require__(63);

	var quoteAttributeValueForBrowser = __webpack_require__(101);
	var warning = __webpack_require__(9);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	};

	module.exports = DOMPropertyOperations;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(83);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventPluginRegistry = __webpack_require__(44);
	var ReactEventEmitterMixin = __webpack_require__(103);
	var ViewportMetrics = __webpack_require__(73);

	var getVendorPrefixedEventName = __webpack_require__(104);
	var isEventSupported = __webpack_require__(67);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	});

	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(43);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36),
	    _assign = __webpack_require__(5);

	var DOMPropertyOperations = __webpack_require__(100);
	var LinkedValueUtils = __webpack_require__(106);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      controlled: isControlled(props)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      if (value === 0 && node.value === '') {
	        node.value = '0';
	        // Note: IE9 reports a number inputs as 'text', so check props instead.
	      } else if (props.type === 'number') {
	        // Simulate `input.valueAsNumber`. IE9 does not support it
	        var valueAsNumber = parseFloat(node.value, 10) || 0;

	        if (
	        // eslint-disable-next-line
	        value != valueAsNumber ||
	        // eslint-disable-next-line
	        value == valueAsNumber && node.value != value) {
	          // Cast `value` to a string to ensure the value is set correctly. While
	          // browsers typically do this as necessary, jsdom doesn't.
	          node.value = '' + value;
	        }
	      } else if (node.value !== '' + value) {
	        // Cast `value` to a string to ensure the value is set correctly. While
	        // browsers typically do this as necessary, jsdom doesn't.
	        node.value = '' + value;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var ReactPropTypesSecret = __webpack_require__(107);
	var propTypesFactory = __webpack_require__(25);

	var React = __webpack_require__(4);
	var PropTypes = propTypesFactory(React.isValidElement);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var hasReadOnlyValue = {
	  button: true,
	  checkbox: true,
	  image: true,
	  hidden: true,
	  radio: true,
	  reset: true,
	  submit: true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: PropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;

/***/ }),
/* 107 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var React = __webpack_require__(4);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactDOMSelect = __webpack_require__(109);

	var warning = __webpack_require__(9);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }
	};

	module.exports = ReactDOMOption;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var LinkedValueUtils = __webpack_require__(106);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactUpdates = __webpack_require__(57);

	var warning = __webpack_require__(9);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36),
	    _assign = __webpack_require__(5);

	var LinkedValueUtils = __webpack_require__(106);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;

	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var ReactComponentEnvironment = __webpack_require__(112);
	var ReactInstanceMap = __webpack_require__(113);
	var ReactInstrumentation = __webpack_require__(63);

	var ReactCurrentOwner = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(60);
	var ReactChildReconciler = __webpack_require__(114);

	var emptyFunction = __webpack_require__(10);
	var flattenChildren = __webpack_require__(129);
	var invariant = __webpack_require__(13);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (false) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	  }
	};

	module.exports = ReactMultiChild;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	var injected = false;

	var ReactComponentEnvironment = {
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	};

	module.exports = ReactComponentEnvironment;

/***/ }),
/* 113 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	};

	module.exports = ReactInstanceMap;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(60);

	var instantiateReactComponent = __webpack_require__(116);
	var KeyEscapeUtils = __webpack_require__(124);
	var shouldUpdateReactComponent = __webpack_require__(120);
	var traverseAllChildren = __webpack_require__(125);
	var warning = __webpack_require__(9);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(128);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
	  {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
	  {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(115)))

/***/ }),
/* 115 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36),
	    _assign = __webpack_require__(5);

	var ReactCompositeComponent = __webpack_require__(117);
	var ReactEmptyComponent = __webpack_require__(121);
	var ReactHostComponent = __webpack_require__(122);

	var getNextDebugID = __webpack_require__(123);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (false) {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (false) {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	module.exports = instantiateReactComponent;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36),
	    _assign = __webpack_require__(5);

	var React = __webpack_require__(4);
	var ReactComponentEnvironment = __webpack_require__(112);
	var ReactCurrentOwner = __webpack_require__(18);
	var ReactErrorUtils = __webpack_require__(46);
	var ReactInstanceMap = __webpack_require__(113);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactNodeTypes = __webpack_require__(118);
	var ReactReconciler = __webpack_require__(60);

	if (false) {
	  var checkReactTypeSpec = require('./checkReactTypeSpec');
	}

	var emptyObject = __webpack_require__(12);
	var invariant = __webpack_require__(13);
	var shallowEqual = __webpack_require__(119);
	var shouldUpdateReactComponent = __webpack_require__(120);
	var warning = __webpack_require__(9);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }

	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;

	    if (doConstruct) {
	      if (false) {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }

	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (false) {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;

	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }

	    if (inst.componentWillMount) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

	    if (false) {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }

	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;

	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (false) {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;

	    if (inst.getChildContext) {
	      if (false) {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }

	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (false) {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (false) {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();

	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }

	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

	      if (false) {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;

	    if (false) {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }

	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }

	    return renderedElement;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (("production") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedElement;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null
	};

	module.exports = ReactCompositeComponent;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var React = __webpack_require__(4);

	var invariant = __webpack_require__(13);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;

/***/ }),
/* 119 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ }),
/* 120 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 121 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	var genericComponentClass = null;
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;

/***/ }),
/* 123 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var nextDebugID = 1;

	function getNextDebugID() {
	  return nextDebugID++;
	}

	module.exports = getNextDebugID;

/***/ }),
/* 124 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var ReactCurrentOwner = __webpack_require__(18);
	var REACT_ELEMENT_TYPE = __webpack_require__(126);

	var getIteratorFn = __webpack_require__(127);
	var invariant = __webpack_require__(13);
	var KeyEscapeUtils = __webpack_require__(124);
	var warning = __webpack_require__(9);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ }),
/* 126 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 127 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(7);

	var ReactCurrentOwner = __webpack_require__(18);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty
	  // Strip regex characters so we can use it for regex
	  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
	  // Remove hasOwnProperty from the template to make it generic
	  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;

	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();

	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };

	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};

	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };

	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };

	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}

	var unmountedIDs = [];

	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },


	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs,

	  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
	    if (typeof console.reactStack !== 'function') {
	      return;
	    }

	    var stack = [];
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    try {
	      if (isCreatingElement) {
	        stack.push({
	          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
	          fileName: currentSource ? currentSource.fileName : null,
	          lineNumber: currentSource ? currentSource.lineNumber : null
	        });
	      }

	      while (id) {
	        var element = ReactComponentTreeHook.getElement(id);
	        var parentID = ReactComponentTreeHook.getParentID(id);
	        var ownerID = ReactComponentTreeHook.getOwnerID(id);
	        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
	        var source = element && element._source;
	        stack.push({
	          name: ownerName,
	          fileName: source ? source.fileName : null,
	          lineNumber: source ? source.lineNumber : null
	        });
	        id = parentID;
	      }
	    } catch (err) {
	      // Internal state is messed up.
	      // Stop building the stack (it's just a nice to have).
	    }

	    console.reactStack(stack);
	  },
	  popNonStandardWarningStack: function () {
	    if (typeof console.reactStackEnd !== 'function') {
	      return;
	    }
	    console.reactStackEnd();
	  }
	};

	module.exports = ReactComponentTreeHook;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(124);
	var traverseAllChildren = __webpack_require__(125);
	var warning = __webpack_require__(9);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(128);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(115)))

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(51);
	var Transaction = __webpack_require__(64);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactServerUpdateQueue = __webpack_require__(131);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(132);

	var warning = __webpack_require__(9);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var ReactCurrentOwner = __webpack_require__(18);
	var ReactInstanceMap = __webpack_require__(113);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactUpdates = __webpack_require__(57);

	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    // Future-proof 15.5
	    if (callback !== undefined && callback !== null) {
	      ReactUpdateQueue.validateCallback(callback, 'replaceState');
	      if (internalInstance._pendingCallbacks) {
	        internalInstance._pendingCallbacks.push(callback);
	      } else {
	        internalInstance._pendingCallbacks = [callback];
	      }
	    }

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	};

	module.exports = ReactUpdateQueue;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var emptyFunction = __webpack_require__(10);
	var warning = __webpack_require__(9);

	var validateDOMNesting = emptyFunction;

	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var DOMLazyTree = __webpack_require__(78);
	var ReactDOMComponentTree = __webpack_require__(35);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var invariant = __webpack_require__(13);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36),
	    _assign = __webpack_require__(5);

	var DOMChildrenOperations = __webpack_require__(77);
	var DOMLazyTree = __webpack_require__(78);
	var ReactDOMComponentTree = __webpack_require__(35);

	var escapeTextContentForBrowser = __webpack_require__(83);
	var invariant = __webpack_require__(13);
	var validateDOMNesting = __webpack_require__(133);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMTextComponent;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactUpdates = __webpack_require__(57);
	var Transaction = __webpack_require__(64);

	var emptyFunction = __webpack_require__(10);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventListener = __webpack_require__(139);
	var ExecutionEnvironment = __webpack_require__(49);
	var PooledClass = __webpack_require__(51);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactUpdates = __webpack_require__(57);

	var getEventTarget = __webpack_require__(66);
	var getUnboundedScrollPosition = __webpack_require__(140);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(10);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;

/***/ }),
/* 140 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);
	var ReactComponentEnvironment = __webpack_require__(112);
	var ReactEmptyComponent = __webpack_require__(121);
	var ReactBrowserEventEmitter = __webpack_require__(102);
	var ReactHostComponent = __webpack_require__(122);
	var ReactUpdates = __webpack_require__(57);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(58);
	var PooledClass = __webpack_require__(51);
	var ReactBrowserEventEmitter = __webpack_require__(102);
	var ReactInputSelection = __webpack_require__(143);
	var ReactInstrumentation = __webpack_require__(63);
	var Transaction = __webpack_require__(64);
	var ReactUpdateQueue = __webpack_require__(132);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(144);

	var containsNode = __webpack_require__(146);
	var focusNode = __webpack_require__(91);
	var getActiveElement = __webpack_require__(149);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var getNodeForCharacterOffset = __webpack_require__(145);
	var getTextContentAccessor = __webpack_require__(52);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ }),
/* 145 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(147);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(148);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ }),
/* 148 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ }),
/* 149 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	module.exports = getActiveElement;

/***/ }),
/* 150 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactInputSelection = __webpack_require__(143);
	var SyntheticEvent = __webpack_require__(54);

	var getActiveElement = __webpack_require__(149);
	var isTextInputElement = __webpack_require__(68);
	var shallowEqual = __webpack_require__(119);

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var EventListener = __webpack_require__(139);
	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(35);
	var SyntheticAnimationEvent = __webpack_require__(153);
	var SyntheticClipboardEvent = __webpack_require__(154);
	var SyntheticEvent = __webpack_require__(54);
	var SyntheticFocusEvent = __webpack_require__(155);
	var SyntheticKeyboardEvent = __webpack_require__(156);
	var SyntheticMouseEvent = __webpack_require__(71);
	var SyntheticDragEvent = __webpack_require__(159);
	var SyntheticTouchEvent = __webpack_require__(160);
	var SyntheticTransitionEvent = __webpack_require__(161);
	var SyntheticUIEvent = __webpack_require__(72);
	var SyntheticWheelEvent = __webpack_require__(162);

	var emptyFunction = __webpack_require__(10);
	var getEventCharCode = __webpack_require__(157);
	var invariant = __webpack_require__(13);

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});

	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	var SimpleEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	};

	module.exports = SimpleEventPlugin;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);

	var getEventCharCode = __webpack_require__(157);
	var getEventKey = __webpack_require__(158);
	var getEventModifierState = __webpack_require__(74);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 157 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(157);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  Esc: 'Escape',
	  Spacebar: ' ',
	  Left: 'ArrowLeft',
	  Up: 'ArrowUp',
	  Right: 'ArrowRight',
	  Down: 'ArrowDown',
	  Del: 'Delete',
	  Win: 'OS',
	  Menu: 'ContextMenu',
	  Apps: 'ContextMenu',
	  Scroll: 'ScrollLock',
	  MozPrintableKey: 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1',
	  113: 'F2',
	  114: 'F3',
	  115: 'F4',
	  116: 'F5',
	  117: 'F6',
	  118: 'F7',
	  119: 'F8',
	  120: 'F9',
	  121: 'F10',
	  122: 'F11',
	  123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(71);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);

	var getEventModifierState = __webpack_require__(74);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(54);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(71);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var DOMLazyTree = __webpack_require__(78);
	var DOMProperty = __webpack_require__(37);
	var React = __webpack_require__(4);
	var ReactBrowserEventEmitter = __webpack_require__(102);
	var ReactCurrentOwner = __webpack_require__(18);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactDOMContainerInfo = __webpack_require__(164);
	var ReactDOMFeatureFlags = __webpack_require__(165);
	var ReactFeatureFlags = __webpack_require__(59);
	var ReactInstanceMap = __webpack_require__(113);
	var ReactInstrumentation = __webpack_require__(63);
	var ReactMarkupChecksum = __webpack_require__(166);
	var ReactReconciler = __webpack_require__(60);
	var ReactUpdateQueue = __webpack_require__(132);
	var ReactUpdates = __webpack_require__(57);

	var emptyObject = __webpack_require__(12);
	var instantiateReactComponent = __webpack_require__(116);
	var invariant = __webpack_require__(13);
	var setInnerHTML = __webpack_require__(80);
	var shouldUpdateReactComponent = __webpack_require__(120);
	var warning = __webpack_require__(9);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = React.createElement(TopLevelWrapper, {
	      child: nextElement
	    });

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};

	module.exports = ReactMount;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(133);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;

/***/ }),
/* 165 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var adler32 = __webpack_require__(167);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ }),
/* 167 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ }),
/* 168 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	module.exports = '15.6.2';

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(36);

	var ReactCurrentOwner = __webpack_require__(18);
	var ReactDOMComponentTree = __webpack_require__(35);
	var ReactInstanceMap = __webpack_require__(113);

	var getHostComponentFromComposite = __webpack_require__(170);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(9);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(118);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactMount = __webpack_require__(163);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;

	var _Provider = __webpack_require__(173);

	var _Provider2 = _interopRequireDefault(_Provider);

	var _connectAdvanced = __webpack_require__(178);

	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

	var _connect = __webpack_require__(182);

	var _connect2 = _interopRequireDefault(_connect);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Provider = _Provider2.default;
	exports.createProvider = _Provider.createProvider;
	exports.connectAdvanced = _connectAdvanced2.default;
	exports.connect = _connect2.default;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.createProvider = createProvider;

	var _react = __webpack_require__(3);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _PropTypes = __webpack_require__(176);

	var _warning = __webpack_require__(177);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;

	  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}

	function createProvider() {
	  var _Provider$childContex;

	  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
	  var subKey = arguments[1];

	  var subscriptionKey = subKey || storeKey + 'Subscription';

	  var Provider = function (_Component) {
	    _inherits(Provider, _Component);

	    Provider.prototype.getChildContext = function getChildContext() {
	      var _ref;

	      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
	    };

	    function Provider(props, context) {
	      _classCallCheck(this, Provider);

	      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	      _this[storeKey] = props.store;
	      return _this;
	    }

	    Provider.prototype.render = function render() {
	      return _react.Children.only(this.props.children);
	    };

	    return Provider;
	  }(_react.Component);

	  if (false) {
	    Provider.prototype.componentWillReceiveProps = function (nextProps) {
	      if (this[storeKey] !== nextProps.store) {
	        warnAboutReceivingStore();
	      }
	    };
	  }

	  Provider.propTypes = {
	    store: _PropTypes.storeShape.isRequired,
	    children: _propTypes2.default.element.isRequired
	  };
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);

	  return Provider;
	}

	exports.default = createProvider();

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	if (false) {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;

	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(175)();
	}


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(10);
	var invariant = __webpack_require__(13);
	var ReactPropTypesSecret = __webpack_require__(27);

	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim
	  };

	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.storeShape = exports.subscriptionShape = undefined;

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
	  trySubscribe: _propTypes2.default.func.isRequired,
	  tryUnsubscribe: _propTypes2.default.func.isRequired,
	  notifyNestedSubs: _propTypes2.default.func.isRequired,
	  isSubscribed: _propTypes2.default.func.isRequired
	});

	var storeShape = exports.storeShape = _propTypes2.default.shape({
	  subscribe: _propTypes2.default.func.isRequired,
	  dispatch: _propTypes2.default.func.isRequired,
	  getState: _propTypes2.default.func.isRequired
	});

/***/ }),
/* 177 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = connectAdvanced;

	var _hoistNonReactStatics = __webpack_require__(179);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _invariant = __webpack_require__(180);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(3);

	var _Subscription = __webpack_require__(181);

	var _Subscription2 = _interopRequireDefault(_Subscription);

	var _PropTypes = __webpack_require__(176);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var hotReloadingVersion = 0;
	var dummyState = {};
	function noop() {}
	function makeSelectorStateful(sourceSelector, store) {
	  // wrap the selector in an object that tracks its results between runs.
	  var selector = {
	    run: function runComponentSelector(props) {
	      try {
	        var nextProps = sourceSelector(store.getState(), props);
	        if (nextProps !== selector.props || selector.error) {
	          selector.shouldComponentUpdate = true;
	          selector.props = nextProps;
	          selector.error = null;
	        }
	      } catch (error) {
	        selector.shouldComponentUpdate = true;
	        selector.error = error;
	      }
	    }
	  };

	  return selector;
	}

	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory) {
	  var _contextTypes, _childContextTypes;

	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$getDisplayName = _ref.getDisplayName,
	      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
	    return 'ConnectAdvanced(' + name + ')';
	  } : _ref$getDisplayName,
	      _ref$methodName = _ref.methodName,
	      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
	      _ref$renderCountProp = _ref.renderCountProp,
	      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
	      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
	      _ref$storeKey = _ref.storeKey,
	      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
	      _ref$withRef = _ref.withRef,
	      withRef = _ref$withRef === undefined ? false : _ref$withRef,
	      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;

	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);

	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));

	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

	    var displayName = getDisplayName(wrappedComponentName);

	    var selectorFactoryOptions = _extends({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent
	    });

	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);

	      function Connect(props, context) {
	        _classCallCheck(this, Connect);

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = props[storeKey] || context[storeKey];
	        _this.propsMode = Boolean(props[storeKey]);
	        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

	        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

	        _this.initSelector();
	        _this.initSubscription();
	        return _this;
	      }

	      Connect.prototype.getChildContext = function getChildContext() {
	        var _ref2;

	        // If this component received store from props, its subscription should be transparent
	        // to any descendants receiving store+subscription from context; it passes along
	        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
	        // Connect to control ordering of notifications to flow top-down.
	        var subscription = this.propsMode ? null : this.subscription;
	        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
	      };

	      Connect.prototype.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return;

	        // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      };

	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };

	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };

	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        this.subscription = null;
	        this.notifyNestedSubs = noop;
	        this.store = null;
	        this.selector.run = noop;
	        this.selector.shouldComponentUpdate = false;
	      };

	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
	        return this.wrappedInstance;
	      };

	      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };

	      Connect.prototype.initSelector = function initSelector() {
	        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
	        this.selector = makeSelectorStateful(sourceSelector, this.store);
	        this.selector.run(this.props);
	      };

	      Connect.prototype.initSubscription = function initSubscription() {
	        if (!shouldHandleStateChanges) return;

	        // parentSub's source should match where store came from: props vs. context. A component
	        // connected to the store via props shouldn't use subscription from context, or vice versa.
	        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
	        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));

	        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
	        // the middle of the notification loop, where `this.subscription` will then be null. An
	        // extra null check every change can be avoided by copying the method onto `this` and then
	        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
	        // listeners logic is changed to not call listeners that have been unsubscribed in the
	        // middle of the notification loop.
	        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
	      };

	      Connect.prototype.onStateChange = function onStateChange() {
	        this.selector.run(this.props);

	        if (!this.selector.shouldComponentUpdate) {
	          this.notifyNestedSubs();
	        } else {
	          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
	          this.setState(dummyState);
	        }
	      };

	      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
	        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
	        // needs to notify nested subs. Once called, it unimplements itself until further state
	        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
	        // a boolean check every time avoids an extra method call most of the time, resulting
	        // in some perf boost.
	        this.componentDidUpdate = undefined;
	        this.notifyNestedSubs();
	      };

	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };

	      Connect.prototype.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
	        // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	        var withExtras = _extends({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
	        return withExtras;
	      };

	      Connect.prototype.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;

	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };

	      return Connect;
	    }(_react.Component);

	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;

	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        var _this2 = this;

	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector();

	          // If any connected descendants don't hot reload (and resubscribe in the process), their
	          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
	          // listeners, this does mean that the old versions of connected descendants will still be
	          // notified of state changes; however, their onStateChange function is a no-op so this
	          // isn't a huge deal.
	          var oldListeners = [];

	          if (this.subscription) {
	            oldListeners = this.subscription.listeners.get();
	            this.subscription.tryUnsubscribe();
	          }
	          this.initSubscription();
	          if (shouldHandleStateChanges) {
	            this.subscription.trySubscribe();
	            oldListeners.forEach(function (listener) {
	              return _this2.subscription.listeners.subscribe(listener);
	            });
	          }
	        }
	      };
	    }

	    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
	  };
	}

/***/ }),
/* 179 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	  name: true,
	  length: true,
	  prototype: true,
	  caller: true,
	  callee: true,
	  arguments: true,
	  arity: true
	};

	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

	        if (objectPrototype) {
	            var inheritedComponent = getPrototypeOf(sourceComponent);
	            if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	            }
	        }

	        var keys = getOwnPropertyNames(sourceComponent);

	        if (getOwnPropertySymbols) {
	            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            var key = keys[i];
	            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                try { // Avoid failures from read-only properties
	                    defineProperty(targetComponent, key, descriptor);
	                } catch (e) {}
	            }
	        }

	        return targetComponent;
	    }

	    return targetComponent;
	};


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ }),
/* 181 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants

	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};

	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];

	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    get: function get() {
	      return next;
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);

	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;

	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}

	var Subscription = function () {
	  function Subscription(store, parentSub, onStateChange) {
	    _classCallCheck(this, Subscription);

	    this.store = store;
	    this.parentSub = parentSub;
	    this.onStateChange = onStateChange;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }

	  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };

	  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };

	  Subscription.prototype.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };

	  Subscription.prototype.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

	      this.listeners = createListenerCollection();
	    }
	  };

	  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };

	  return Subscription;
	}();

	exports.default = Subscription;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.createConnect = createConnect;

	var _connectAdvanced = __webpack_require__(178);

	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

	var _shallowEqual = __webpack_require__(183);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _mapDispatchToProps = __webpack_require__(184);

	var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);

	var _mapStateToProps = __webpack_require__(208);

	var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);

	var _mergeProps = __webpack_require__(209);

	var _mergeProps2 = _interopRequireDefault(_mergeProps);

	var _selectorFactory = __webpack_require__(210);

	var _selectorFactory2 = _interopRequireDefault(_selectorFactory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:

	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.

	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */

	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }

	  return function (dispatch, options) {
	    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
	  };
	}

	function strictEqual(a, b) {
	  return a === b;
	}

	// createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	function createConnect() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;

	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	        _ref2$pure = _ref2.pure,
	        pure = _ref2$pure === undefined ? true : _ref2$pure,
	        _ref2$areStatesEqual = _ref2.areStatesEqual,
	        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
	        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
	        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
	        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
	        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
	        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
	        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
	        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

	    return connectHOC(selectorFactory, _extends({
	      // used in error messages
	      methodName: 'connect',

	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return 'Connect(' + name + ')';
	      },

	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),

	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual

	    }, extraOptions));
	  };
	}

	exports.default = createConnect();

/***/ }),
/* 183 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;

	function is(x, y) {
	  if (x === y) {
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}

	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) return true;

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) return false;

	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;

	var _redux = __webpack_require__(185);

	var _wrapMapToProps = __webpack_require__(206);

	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}

	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return { dispatch: dispatch };
	  }) : undefined;
	}

	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}

	exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

	var _createStore = __webpack_require__(186);

	var _createStore2 = _interopRequireDefault(_createStore);

	var _combineReducers = __webpack_require__(201);

	var _combineReducers2 = _interopRequireDefault(_combineReducers);

	var _bindActionCreators = __webpack_require__(203);

	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

	var _applyMiddleware = __webpack_require__(204);

	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

	var _compose = __webpack_require__(205);

	var _compose2 = _interopRequireDefault(_compose);

	var _warning = __webpack_require__(202);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}

	if (false) {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}

	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;

	var _isPlainObject = __webpack_require__(187);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _symbolObservable = __webpack_require__(197);

	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'

	  /**
	   * Creates a Redux store that holds the state tree.
	   * The only way to change the data in the store is to call `dispatch()` on it.
	   *
	   * There should only be a single store in your app. To specify how different
	   * parts of the state tree respond to actions, you may combine several reducers
	   * into a single reducer function by using `combineReducers`.
	   *
	   * @param {Function} reducer A function that returns the next state tree, given
	   * the current state tree and the action to handle.
	   *
	   * @param {any} [preloadedState] The initial state. You may optionally specify it
	   * to hydrate the state from the server in universal apps, or to restore a
	   * previously serialized user session.
	   * If you use `combineReducers` to produce the root reducer function, this must be
	   * an object with the same shape as `combineReducers` keys.
	   *
	   * @param {Function} [enhancer] The store enhancer. You may optionally specify it
	   * to enhance the store with third-party capabilities such as middleware,
	   * time travel, persistence, etc. The only store enhancer that ships with Redux
	   * is `applyMiddleware()`.
	   *
	   * @returns {Store} A Redux store that lets you read the state, dispatch actions
	   * and subscribe to changes.
	   */
	};function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;

	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }

	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }

	    return enhancer(createStore)(reducer, preloadedState);
	  }

	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }

	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;

	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }

	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }

	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }

	    var isSubscribed = true;

	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);

	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }

	      isSubscribed = false;

	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }

	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }

	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }

	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }

	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }

	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      var listener = listeners[i];
	      listener();
	    }

	    return action;
	  }

	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }

	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }

	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/tc39/proposal-observable
	   */
	  function observable() {
	    var _ref;

	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }

	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }

	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }

	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });

	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(188),
	    getPrototype = __webpack_require__(194),
	    isObjectLike = __webpack_require__(196);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(189),
	    getRawTag = __webpack_require__(192),
	    objectToString = __webpack_require__(193);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(190);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(191);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ }),
/* 191 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(189);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ }),
/* 193 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(195);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ }),
/* 195 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ }),
/* 196 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(198);


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ponyfill = __webpack_require__(200);

	var _ponyfill2 = _interopRequireDefault(_ponyfill);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var root; /* global window */


	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}

	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(199)(module)))

/***/ }),
/* 199 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 200 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;

		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}

		return result;
	};

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = combineReducers;

	var _createStore = __webpack_require__(186);

	var _isPlainObject = __webpack_require__(187);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _warning = __webpack_require__(202);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
	}

	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }

	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }

	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });

	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });

	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}

	function assertReducerShape(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
	    }

	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
	    }
	  });
	}

	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];

	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }

	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);

	  var unexpectedKeyCache = void 0;
	  if (false) {
	    unexpectedKeyCache = {};
	  }

	  var shapeAssertionError = void 0;
	  try {
	    assertReducerShape(finalReducers);
	  } catch (e) {
	    shapeAssertionError = e;
	  }

	  return function combination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];

	    if (shapeAssertionError) {
	      throw shapeAssertionError;
	    }

	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }

	    var hasChanged = false;
	    var nextState = {};
	    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
	      var _key = finalReducerKeys[_i];
	      var reducer = finalReducers[_key];
	      var previousStateForKey = state[_key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(_key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[_key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ }),
/* 202 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 203 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}

	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }

	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }

	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = applyMiddleware;

	var _compose = __webpack_require__(205);

	var _compose2 = _interopRequireDefault(_compose);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];

	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ }),
/* 205 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */

	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }

	  if (funcs.length === 1) {
	    return funcs[0];
	  }

	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

	var _verifyPlainObject = __webpack_require__(207);

	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);

	    function constantSelector() {
	      return constant;
	    }
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	}

	// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	}

	// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;

	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    };

	    // allow detectFactoryAndVerify to get ownProps
	    proxy.dependsOnOwnProps = true;

	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	      var props = proxy(stateOrDispatch, ownProps);

	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }

	      if (false) (0, _verifyPlainObject2.default)(props, displayName, methodName);

	      return props;
	    };

	    return proxy;
	  };
	}

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = verifyPlainObject;

	var _isPlainObject = __webpack_require__(187);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _warning = __webpack_require__(177);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject2.default)(value)) {
	    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
	  }
	}

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;

	var _wrapMapToProps = __webpack_require__(206);

	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}

	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}

	exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;

	var _verifyPlainObject = __webpack_require__(207);

	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return _extends({}, ownProps, stateProps, dispatchProps);
	}

	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;

	    var hasRunOnce = false;
	    var mergedProps = void 0;

	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;

	        if (false) (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
	      }

	      return mergedProps;
	    };
	  };
	}

	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}

	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}

	exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;

	var _verifySubselectors = __webpack_require__(211);

	var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}

	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;

	  var hasRunAtLeastOnce = false;
	  var state = void 0;
	  var ownProps = void 0;
	  var stateProps = void 0;
	  var dispatchProps = void 0;
	  var mergedProps = void 0;

	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }

	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);

	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }

	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }

	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;

	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

	    return mergedProps;
	  }

	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;

	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }

	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	}

	// TODO: Add more comments

	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.

	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);

	  if (false) {
	    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }

	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = verifySubselectors;

	var _warning = __webpack_require__(177);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
	    }
	  }
	}

	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _redux = __webpack_require__(185);

	var _createStore = __webpack_require__(213);

	var _createStore2 = _interopRequireDefault(_createStore);

	var _reducers = __webpack_require__(254);

	var _reducers2 = _interopRequireDefault(_reducers);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var configureStore = function configureStore() {
	  return (0, _createStore2.default)((0, _redux.combineReducers)(_reducers2.default));
	};

	exports.default = configureStore;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _redux = __webpack_require__(185);

	var _actions = __webpack_require__(214);

	var _actions2 = _interopRequireDefault(_actions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var makeStore = function makeStore(rootReducer, initialState) {
	  var enhancers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

	  var composeEnhancers = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || _redux.compose;
	  var store = (0, _redux.createStore)(rootReducer, initialState, composeEnhancers.apply(undefined, [].concat(_toConsumableArray(enhancers))));

	  (0, _actions2.default)(store);

	  return store;
	};

	exports.default = makeStore;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _index = __webpack_require__(215);

	var _index2 = _interopRequireDefault(_index);

	var _actions = __webpack_require__(235);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	var _assets = __webpack_require__(236);

	var _assets2 = _interopRequireDefault(_assets);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (store) {
	  _index2.default.on('init', function (_ref) {
	    var bluetoothStatus = _ref.bluetoothStatus,
	        riders = _ref.riders,
	        devices = _ref.devices,
	        state = _ref.state;

	    store.dispatch((0, _actions.updateBluetoothStatus)(bluetoothStatus));
	    store.dispatch((0, _actions.setRiders)(riders));
	    store.dispatch((0, _actions.setDevices)(devices));
	    store.dispatch((0, _actions.updateGameState)(_gameState2.default.loading));

	    _assets2.default.load(riders, function (done, total) {
	      store.dispatch((0, _actions.setLoadProgress)(100 - parseInt(done / total * 100, 10)));
	    }, function () {
	      store.dispatch((0, _actions.updateGameState)(state));
	    });
	  });

	  _index2.default.on('bluetooth:status', function (_ref2) {
	    var status = _ref2.status;

	    store.dispatch((0, _actions.updateBluetoothStatus)(status));
	  });

	  _index2.default.on('device:search:start', function () {
	    store.dispatch((0, _actions.updateBluetoothSearchStatus)(true));
	  });

	  _index2.default.on('device:search:stop', function () {
	    store.dispatch((0, _actions.updateBluetoothSearchStatus)(false));
	  });

	  _index2.default.on('device:found', function (device) {
	    store.dispatch((0, _actions.addDevice)(device));
	  });

	  _index2.default.on('devices', function (devices) {
	    store.dispatch((0, _actions.setDevices)(devices));
	  });

	  _index2.default.on('riders', function (riders) {
	    store.dispatch((0, _actions.setRiders)(riders));
	  });

	  _index2.default.on('game:riders', function (riders) {
	    store.dispatch((0, _actions.setRiders)(riders));
	    store.dispatch((0, _actions.updateGameState)(_gameState2.default.riders));
	  });

	  _index2.default.on('game:done', function (riders) {
	    store.dispatch((0, _actions.setRiders)(riders));
	    store.dispatch((0, _actions.updateGameState)(_gameState2.default.done));
	  });

	  _index2.default.on('game:players', function (players) {
	    store.dispatch((0, _actions.setPlayers)(players));
	  });

	  _index2.default.on('game:countdown', function () {
	    store.dispatch((0, _actions.updateGameState)(_gameState2.default.countingDown));
	  });

	  _index2.default.on('game:go', function () {
	    store.dispatch((0, _actions.updateGameState)(_gameState2.default.race));
	  });

	  _index2.default.on('game:sprint', function () {});

	  _index2.default.on('game:finishing', function () {
	    store.dispatch((0, _actions.updateGameState)(_gameState2.default.finishing));
	  });

	  _index2.default.on('game:finished', function (riders) {
	    store.dispatch((0, _actions.setRiders)(riders));
	    store.dispatch((0, _actions.updateGameState)(_gameState2.default.finished));
	  });

	  _index2.default.on('demo', function () {
	    store.dispatch((0, _actions.setDemo)(true));
	  });
	};

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	if (true) {
	  module.exports = __webpack_require__(216);
	} else {
	  var io = require('socket.io-client');
	  var socket = io('//');

	  module.exports = socket;
	}

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _events = __webpack_require__(217);

	var _shortid = __webpack_require__(218);

	var _shortid2 = _interopRequireDefault(_shortid);

	var _game = __webpack_require__(228);

	var _game2 = _interopRequireDefault(_game);

	var _riders = __webpack_require__(230);

	var _riders2 = _interopRequireDefault(_riders);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var socket = new _events.EventEmitter();

	socket.on('admin:game:new', function (token) {
	  _riders2.default.reset();
	  _game2.default.selectRiders();
	});

	socket.on('admin:game:continue', function (token) {
	  _game2.default.selectRiders();
	});

	socket.on('admin:game:rider-quit', function (token, rider) {
	  _game2.default.riderHasQuit(rider);
	});

	socket.on('admin:game:start', function (token, trackLength) {
	  _game2.default.startGame(trackLength, _riders2.default);
	});

	socket.on('admin:game:stop', function (token) {
	  _game2.default.cancelGame();
	});

	_game2.default.on('game:countdown', function () {
	  socket.emit('game:countdown');
	});

	_game2.default.on('game:go', function () {
	  socket.emit('game:go');
	});

	_game2.default.on('game:sprint', function () {
	  socket.emit('game:sprint');
	});

	_game2.default.on('game:finishing', function () {
	  socket.emit('game:finishing');
	});

	_game2.default.on('game:riders', function (riders) {
	  socket.emit('game:riders', riders);
	});

	_game2.default.on('game:done', function (riders) {
	  socket.emit('game:done', riders);
	});

	_game2.default.on('game:finished', function (winner, loser) {
	  _riders2.default.raceResult(winner, loser);

	  socket.emit('game:finished', _riders2.default.get());
	});

	_game2.default.on('game:players', function (players) {
	  socket.emit('game:players', players);
	});

	exports.default = socket;


	setTimeout(function () {
	  console.warn('*** DEMO MODE ***');

	  socket.emit('demo');
	  socket.emit('init', {
	    bluetoothStatus: 'poweredOn',
	    riders: _riders2.default.get(),
	    devices: [],
	    state: _game2.default.state
	  });
	});

/***/ }),
/* 217 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;

	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;

	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;

	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;

	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};

	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;

	  if (!this._events)
	    this._events = {};

	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }

	  handler = this._events[type];

	  if (isUndefined(handler))
	    return false;

	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }

	  return true;
	};

	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events)
	    this._events = {};

	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);

	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];

	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }

	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }

	  return this;
	};

	EventEmitter.prototype.on = EventEmitter.prototype.addListener;

	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  var fired = false;

	  function g() {
	    this.removeListener(type, g);

	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }

	  g.listener = listener;
	  this.on(type, g);

	  return this;
	};

	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events || !this._events[type])
	    return this;

	  list = this._events[type];
	  length = list.length;
	  position = -1;

	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);

	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }

	    if (position < 0)
	      return this;

	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }

	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }

	  return this;
	};

	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;

	  if (!this._events)
	    return this;

	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }

	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }

	  listeners = this._events[type];

	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];

	  return this;
	};

	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};

	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];

	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};

	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};

	function isFunction(arg) {
	  return typeof arg === 'function';
	}

	function isNumber(arg) {
	  return typeof arg === 'number';
	}

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}

	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	module.exports = __webpack_require__(219);


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var alphabet = __webpack_require__(220);
	var encode = __webpack_require__(222);
	var decode = __webpack_require__(224);
	var build = __webpack_require__(225);
	var isValid = __webpack_require__(226);

	// if you are using cluster or multiple servers use this to make each instance
	// has a unique value for worker
	// Note: I don't know if this is automatically set when using third
	// party cluster solutions such as pm2.
	var clusterWorkerId = __webpack_require__(227) || 0;

	/**
	 * Set the seed.
	 * Highly recommended if you don't want people to try to figure out your id schema.
	 * exposed as shortid.seed(int)
	 * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
	 */
	function seed(seedValue) {
	    alphabet.seed(seedValue);
	    return module.exports;
	}

	/**
	 * Set the cluster worker or machine id
	 * exposed as shortid.worker(int)
	 * @param workerId worker must be positive integer.  Number less than 16 is recommended.
	 * returns shortid module so it can be chained.
	 */
	function worker(workerId) {
	    clusterWorkerId = workerId;
	    return module.exports;
	}

	/**
	 *
	 * sets new characters to use in the alphabet
	 * returns the shuffled alphabet
	 */
	function characters(newCharacters) {
	    if (newCharacters !== undefined) {
	        alphabet.characters(newCharacters);
	    }

	    return alphabet.shuffled();
	}

	/**
	 * Generate unique id
	 * Returns string id
	 */
	function generate() {
	  return build(clusterWorkerId);
	}

	// Export all other functions as properties of the generate function
	module.exports = generate;
	module.exports.generate = generate;
	module.exports.seed = seed;
	module.exports.worker = worker;
	module.exports.characters = characters;
	module.exports.decode = decode;
	module.exports.isValid = isValid;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var randomFromSeed = __webpack_require__(221);

	var ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
	var alphabet;
	var previousSeed;

	var shuffled;

	function reset() {
	    shuffled = false;
	}

	function setCharacters(_alphabet_) {
	    if (!_alphabet_) {
	        if (alphabet !== ORIGINAL) {
	            alphabet = ORIGINAL;
	            reset();
	        }
	        return;
	    }

	    if (_alphabet_ === alphabet) {
	        return;
	    }

	    if (_alphabet_.length !== ORIGINAL.length) {
	        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
	    }

	    var unique = _alphabet_.split('').filter(function(item, ind, arr){
	       return ind !== arr.lastIndexOf(item);
	    });

	    if (unique.length) {
	        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
	    }

	    alphabet = _alphabet_;
	    reset();
	}

	function characters(_alphabet_) {
	    setCharacters(_alphabet_);
	    return alphabet;
	}

	function setSeed(seed) {
	    randomFromSeed.seed(seed);
	    if (previousSeed !== seed) {
	        reset();
	        previousSeed = seed;
	    }
	}

	function shuffle() {
	    if (!alphabet) {
	        setCharacters(ORIGINAL);
	    }

	    var sourceArray = alphabet.split('');
	    var targetArray = [];
	    var r = randomFromSeed.nextValue();
	    var characterIndex;

	    while (sourceArray.length > 0) {
	        r = randomFromSeed.nextValue();
	        characterIndex = Math.floor(r * sourceArray.length);
	        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
	    }
	    return targetArray.join('');
	}

	function getShuffled() {
	    if (shuffled) {
	        return shuffled;
	    }
	    shuffled = shuffle();
	    return shuffled;
	}

	/**
	 * lookup shuffled letter
	 * @param index
	 * @returns {string}
	 */
	function lookup(index) {
	    var alphabetShuffled = getShuffled();
	    return alphabetShuffled[index];
	}

	module.exports = {
	    characters: characters,
	    seed: setSeed,
	    lookup: lookup,
	    shuffled: getShuffled
	};


/***/ }),
/* 221 */
/***/ (function(module, exports) {

	'use strict';

	// Found this seed-based random generator somewhere
	// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

	var seed = 1;

	/**
	 * return a random number based on a seed
	 * @param seed
	 * @returns {number}
	 */
	function getNextValue() {
	    seed = (seed * 9301 + 49297) % 233280;
	    return seed/(233280.0);
	}

	function setSeed(_seed_) {
	    seed = _seed_;
	}

	module.exports = {
	    nextValue: getNextValue,
	    seed: setSeed
	};


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var randomByte = __webpack_require__(223);

	function encode(lookup, number) {
	    var loopCounter = 0;
	    var done;

	    var str = '';

	    while (!done) {
	        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );
	        done = number < (Math.pow(16, loopCounter + 1 ) );
	        loopCounter++;
	    }
	    return str;
	}

	module.exports = encode;


/***/ }),
/* 223 */
/***/ (function(module, exports) {

	'use strict';

	var crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

	function randomByte() {
	    if (!crypto || !crypto.getRandomValues) {
	        return Math.floor(Math.random() * 256) & 0x30;
	    }
	    var dest = new Uint8Array(1);
	    crypto.getRandomValues(dest);
	    return dest[0] & 0x30;
	}

	module.exports = randomByte;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var alphabet = __webpack_require__(220);

	/**
	 * Decode the id to get the version and worker
	 * Mainly for debugging and testing.
	 * @param id - the shortid-generated id.
	 */
	function decode(id) {
	    var characters = alphabet.shuffled();
	    return {
	        version: characters.indexOf(id.substr(0, 1)) & 0x0f,
	        worker: characters.indexOf(id.substr(1, 1)) & 0x0f
	    };
	}

	module.exports = decode;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var encode = __webpack_require__(222);
	var alphabet = __webpack_require__(220);

	// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
	// This number should be updated every year or so to keep the generated id short.
	// To regenerate `new Date() - 0` and bump the version. Always bump the version!
	var REDUCE_TIME = 1459707606518;

	// don't change unless we change the algos or REDUCE_TIME
	// must be an integer and less than 16
	var version = 6;

	// Counter is used when shortid is called multiple times in one second.
	var counter;

	// Remember the last time shortid was called in case counter is needed.
	var previousSeconds;

	/**
	 * Generate unique id
	 * Returns string id
	 */
	function build(clusterWorkerId) {

	    var str = '';

	    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

	    if (seconds === previousSeconds) {
	        counter++;
	    } else {
	        counter = 0;
	        previousSeconds = seconds;
	    }

	    str = str + encode(alphabet.lookup, version);
	    str = str + encode(alphabet.lookup, clusterWorkerId);
	    if (counter > 0) {
	        str = str + encode(alphabet.lookup, counter);
	    }
	    str = str + encode(alphabet.lookup, seconds);

	    return str;
	}

	module.exports = build;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var alphabet = __webpack_require__(220);

	function isShortId(id) {
	    if (!id || typeof id !== 'string' || id.length < 6 ) {
	        return false;
	    }

	    var characters = alphabet.characters();
	    var len = id.length;
	    for(var i = 0; i < len;i++) {
	        if (characters.indexOf(id[i]) === -1) {
	            return false;
	        }
	    }
	    return true;
	}

	module.exports = isShortId;


/***/ }),
/* 227 */
/***/ (function(module, exports) {

	'use strict';

	module.exports = 0;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var EventEmitter = __webpack_require__(217).EventEmitter;
	var rangeMap = __webpack_require__(229);
	var riders = __webpack_require__(230);
	var selectRiders = __webpack_require__(231);

	var _require = __webpack_require__(233),
	    startGame = _require.startGame,
	    stopGame = _require.stopGame;

	var GAME_STATE = __webpack_require__(232);

	var emitter = new EventEmitter();

	emitter.state = GAME_STATE.intro;

	emitter.startGame = function (trackLength) {
	  var getWatts = function getWatts() {
	    return parseInt(300 + Math.random() * 100, 10);
	  };
	  var getCadence = function getCadence() {
	    return parseInt(50 + Math.random() * 100, 10);
	  };

	  startGame(emitter, getWatts, getCadence, trackLength, riders);

	  setTimeout(function () {
	    emitter.state = GAME_STATE.countingDown;
	    emitter.emit('game:countdown');
	  }, 1000);

	  setTimeout(function () {
	    emitter.state = GAME_STATE.race;
	    emitter.emit('game:go');
	  }, 7000);
	};

	emitter.riderHasQuit = function (rider) {
	  var r = riders.get().map(function (r) {
	    if (r.id === rider.id) {
	      r.eliminated = true;
	    }

	    return r;
	  });

	  riders.set(r);
	  emitter.selectRiders(emitter, r);
	};

	emitter.selectRiders = function () {
	  var r = riders.get();
	  var willRace = selectRiders(emitter, r);

	  riders.set(r);

	  if (willRace) {
	    emitter.emit('game:riders', r);
	  } else {
	    // we have a champion
	    emitter.state = GAME_STATE.done;
	    emitter.emit('game:done', r);
	  }
	};

	emitter.cancelGame = function () {
	  stopGame();
	};

	module.exports = emitter;

/***/ }),
/* 229 */
/***/ (function(module, exports) {

	//takes in a value and scales from it's initial range to another
	const rangeMap = (input, inLow, inHigh, outLow, outHigh) => {
	  return Math.round((input-inLow)/(inHigh-inLow) * (outHigh-outLow) + outLow)
	}

	module.exports = rangeMap


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _shortid = __webpack_require__(218);

	var _shortid2 = _interopRequireDefault(_shortid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createRiders = function createRiders() {
	  return [{
	    'id': _shortid2.default.generate(),
	    'name': 'Alex Denise',
	    'age': '35',
	    'gender': 'male',
	    'weight': '68',
	    'photoSelect': './photos/alexd-select.png',
	    'photoWin': './photos/alexd-happy.png',
	    'photoLose': './photos/alexd-sad.png',
	    'photoPower': './photos/alexd-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Alex Potsides',
	    'age': '37',
	    'gender': 'male',
	    'weight': '74',
	    'photoSelect': './photos/alexp-select.png',
	    'photoWin': './photos/alexp-happy.png',
	    'photoLose': './photos/alexp-sad.png',
	    'photoPower': './photos/alexp-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Chris Durham',
	    'age': '32',
	    'gender': 'male',
	    'weight': '74',
	    'photoSelect': './photos/chris-select.png',
	    'photoWin': './photos/chris-happy.png',
	    'photoLose': './photos/chris-sad.png',
	    'photoPower': './photos/chris-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Geoff Davies',
	    'age': '32',
	    'gender': 'male',
	    'weight': '74',
	    'photoSelect': './photos/geoff-select.png',
	    'photoWin': './photos/geoff-happy.png',
	    'photoLose': './photos/geoff-sad.png',
	    'photoPower': './photos/geoff-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'James Mcfarlane',
	    'age': '32',
	    'gender': 'male',
	    'weight': '74',
	    'photoSelect': './photos/james-select.png',
	    'photoWin': './photos/james-happy.png',
	    'photoLose': './photos/james-sad.png',
	    'photoPower': './photos/james-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Tim Clark',
	    'age': '30',
	    'gender': 'male',
	    'weight': '70',
	    'photoSelect': './photos/oldtim-select.png',
	    'photoWin': './photos/oldtim-happy.png',
	    'photoLose': './photos/oldtim-sad.png',
	    'photoPower': './photos/oldtim-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Paul Schneider',
	    'age': '30',
	    'gender': 'male',
	    'weight': '70',
	    'photoSelect': './photos/paul-select.png',
	    'photoWin': './photos/paul-happy.png',
	    'photoLose': './photos/paul-sad.png',
	    'photoPower': './photos/paul-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Rob Whitworth',
	    'age': '30',
	    'gender': 'male',
	    'weight': '70',
	    'photoSelect': './photos/rob-select.png',
	    'photoWin': './photos/rob-happy.png',
	    'photoLose': './photos/rob-sad.png',
	    'photoPower': './photos/rob-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Tim El-Oun',
	    'age': '36',
	    'gender': 'male',
	    'weight': '72',
	    'photoSelect': './photos/tim-select.png',
	    'photoWin': './photos/tim-happy.png',
	    'photoLose': './photos/tim-sad.png',
	    'photoPower': './photos/tim-power.png',
	    'races': 0
	  }, {
	    'id': _shortid2.default.generate(),
	    'name': 'Tom Meakin',
	    'age': '30',
	    'gender': 'male',
	    'weight': '72',
	    'photoSelect': './photos/tom-select.png',
	    'photoWin': './photos/tom-happy.png',
	    'photoLose': './photos/tom-sad.png',
	    'photoPower': './photos/tom-power.png',
	    'races': 0
	  }];
	};

	var riders = createRiders();

	module.exports = {
	  get: function get() {
	    return riders;
	  },

	  set: function set(r) {
	    riders = r;
	  },

	  create: function create(rider) {
	    var next = riders.filter(function (r) {
	      return r.gender === rider.gender;
	    }).pop() || { image: 0 };

	    if (next.image === images[rider.gender].max) {
	      images[rider.gender].last = 0;
	    }

	    riders.push({
	      id: _shortid2.default.generate(),
	      name: rider.name,
	      age: rider.age,
	      gender: rider.gender,
	      weight: rider.weight,
	      image: images[rider.gender].last,
	      races: 0
	    });

	    images[rider.gender].last++;

	    return riders;
	  },

	  update: function update(rider) {
	    riders.filter(function (r) {
	      return rider.id === r.id;
	    }).forEach(function (r) {
	      r.name = rider.name;
	      r.age = rider.age;
	      r.gender = rider.gender;
	      r.weight = rider.weight;
	    });

	    return riders;
	  },

	  delete: function _delete(rider) {
	    riders = riders.filter(function (r) {
	      return rider.id !== r.id;
	    });

	    return riders;
	  },

	  reset: function reset() {
	    riders.forEach(function (rider) {
	      delete rider.eliminated;
	      delete rider.selected;
	      delete rider.bike;
	      delete rider.winner;
	      delete rider.loser;

	      rider.races = 0;
	    });

	    return riders;
	  },

	  selectPlayers: function selectPlayers() {
	    riders.forEach(function (rider) {
	      delete rider.winner;
	      delete rider.loser;
	      delete rider.selected;
	      delete rider.bike;
	    });

	    var player1 = findRider(riders);
	    var player2 = findRider(riders, player1.id);

	    player1.selected = true;
	    player1.bike = 'A';
	    player2.selected = true;
	    player2.bike = 'B';

	    return riders;
	  },

	  raceResult: function raceResult(winner, loser) {
	    riders.forEach(function (rider) {
	      delete rider.winner;
	      delete rider.loser;

	      if (rider.id === loser) {
	        rider.eliminated = true;
	        rider.loser = true;
	        rider.races = rider.races + 1;
	      }

	      if (rider.id === winner) {
	        rider.winner = true;
	        rider.races = rider.races + 1;
	      }
	    });

	    return riders;
	  }
	};

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var GAME_STATE = __webpack_require__(232);

	var selectRiders = function selectRiders(emitter, riders) {
	  // remove eliminated riders
	  var eligible = riders.filter(function (rider) {
	    return !rider.eliminated;
	  });

	  if (eligible.length > 2) {
	    // if we are not at the final round, remove the rider who won the last round
	    // no no-one does two races in a row
	    eligible = eligible.filter(function (rider) {
	      return !rider.winner;
	    });
	  }

	  // sort by number of races ascending so everyone rides at least once
	  // before the first rider has to ride again
	  eligible = eligible.sort(function (a, b) {
	    if (a.races < b.races) {
	      return -1;
	    }

	    if (a.races > b.races) {
	      return 1;
	    }

	    return 0;
	  });

	  if (eligible.length > 1) {
	    // there are two or more eligible riders, we race!
	    emitter.state = GAME_STATE.riders;

	    // choose from the set of people who have ridden the fewest races

	    if (eligible[0].races === eligible[1].races) {
	      // e.g. 0, 0, 0, 1, 2 - just take the 0s
	      eligible = eligible.filter(function (rider) {
	        return rider.races === eligible[0].races;
	      }).sort(function () {
	        return 0.5 - Math.random();
	      });
	    } else {
	      // e.g. 0, 1, 1, 1, 2 - take the 0 and a random 1
	      eligible = [eligible[0]].concat(eligible.slice(1).filter(function (rider) {
	        return rider.races === eligible[1].races;
	      }).sort(function () {
	        return 0.5 - Math.random();
	      }).pop());
	    }

	    riders.forEach(function (rider) {
	      delete rider.selected;
	      delete rider.bike;
	    });

	    eligible.slice(0, 2).forEach(function (rider, index) {
	      rider.selected = true;
	      rider.bike = index === 0 ? 'A' : 'B';
	    });

	    return true;
	  }

	  eligible[0].winner = true;

	  return false;
	};

	module.exports = selectRiders;

/***/ }),
/* 232 */
/***/ (function(module, exports) {

	'use strict';

	var GAME_STATE = {
	  connecting: 'CONNECTING',
	  loading: 'LOADING_ASSETS',
	  intro: 'INTRO',
	  riders: 'TWO_PEOPLE_ENTER_ONE_PERSON_LEAVES',
	  countingDown: 'GET_READY',
	  race: 'GO',
	  sprint: 'DIG_DEEP',
	  finishing: 'THE_END_IS_IN_SIGHT',
	  finished: 'AND_ACROSS_THE_LINE',
	  done: 'THERE_CAN_BE_ONLY_ONE'
	};

	module.exports = GAME_STATE;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var rangeMap = __webpack_require__(229);
	var setUpPlayers = __webpack_require__(234);
	var GAME_STATE = __webpack_require__(232);

	var SPRINT_DISTANCE_FROM_FINISH = 10;
	var SHOW_FINISH_DISTANCE_FROM_FINISH = 2;

	var gameInterval = void 0;

	var gameLoop = function gameLoop(emitter, getWatts, getCadence, trackLength, then, players) {
	  return function () {
	    var now = Date.now();

	    players = players.map(function (player) {
	      player.power = getWatts(player);
	      player.cadence = getCadence(player);
	      player.metersRemaining = trackLength;

	      if (emitter.state === GAME_STATE.race || emitter.state === GAME_STATE.sprinting || emitter.state === GAME_STATE.finishing) {
	        var seconds = (now - then) / 1000;
	        var joules = player.power / seconds;

	        player.totalJoules += joules;
	        player.metersRemaining = trackLength - rangeMap(player.totalJoules, 0, player.targetJoules, 0, trackLength);

	        if (emitter.state === GAME_STATE.finishing && player.totalJoules > player.targetJoules) {
	          emitter.state = GAME_STATE.finished;

	          clearInterval(gameInterval);
	          gameInterval = null;

	          emitter.emit('game:finished', player.id, players.filter(function (p) {
	            return p.id !== player.id;
	          }).pop().id);
	        }
	      }

	      // within 5% of the end, show the finish line!
	      if (emitter.state === GAME_STATE.race && player.totalJoules > player.targetJoules - player.targetJoules / 100 * SPRINT_DISTANCE_FROM_FINISH) {
	        emitter.state = GAME_STATE.sprinting;
	        emitter.emit('game:sprint');
	      }

	      // within 2% of the end, show the finish line!
	      if (emitter.state === GAME_STATE.sprinting && player.totalJoules > player.targetJoules - player.targetJoules / 100 * SHOW_FINISH_DISTANCE_FROM_FINISH) {
	        emitter.state = GAME_STATE.finishing;
	        emitter.emit('game:finishing');
	      }

	      return player;
	    });

	    then = now;

	    emitter.emit('game:players', players);
	  };
	};

	module.exports = {
	  startGame: function startGame(emitter, getWatts, getCadence, trackLength, riders) {
	    if (gameInterval) {
	      module.exports.stopGame();
	    }

	    gameInterval = setInterval(gameLoop(emitter, getWatts, getCadence, trackLength, Date.now(), setUpPlayers(riders.get().filter(function (rider) {
	      return rider.selected;
	    }).sort(function (a, b) {
	      return a.bike.localeCompare(b.bike);
	    }), trackLength)), 1000);
	  },

	  stopGame: function stopGame() {
	    clearInterval(gameInterval);
	    gameInterval = null;
	  }
	};

/***/ }),
/* 234 */
/***/ (function(module, exports) {

	'use strict';

	var BIKE_WEIGHT_KG = 7.5;
	var SECONDS_IN_AN_HOUR = 3600;
	var METERS_IN_A_KM = 1000;
	var AVERAGE_SPEED_KPH = 45;
	var MENS_OLYMPIC_FLYING_500_M_RECORD = 24.758; // Chris Hoy
	var WOMENS_OLYMPIC_FLYING_500_M_RECORD = 28.970; // Kristina Vogel

	var setUpPlayers = function setUpPlayers(riders, trackLength) {
	  return riders.map(function (rider) {
	    return JSON.parse(JSON.stringify(rider));
	  }).map(function (rider) {
	    var speedKph = AVERAGE_SPEED_KPH;
	    var speedMps = speedKph * METERS_IN_A_KM / SECONDS_IN_AN_HOUR;
	    var newtons = (BIKE_WEIGHT_KG + rider.weight) * speedMps;
	    var joules = newtons * trackLength;

	    rider.totalJoules = 0;
	    rider.targetJoules = joules;

	    if (rider.gender === 'female') {
	      rider.targetJoules *= MENS_OLYMPIC_FLYING_500_M_RECORD / WOMENS_OLYMPIC_FLYING_500_M_RECORD;
	    }

	    return rider;
	  });
	};

	module.exports = setUpPlayers;

/***/ }),
/* 235 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ADMIN_TOKEN = exports.ADMIN_TOKEN = 'ADMIN_TOKEN';
	var BLUETOOTH_STATUS = exports.BLUETOOTH_STATUS = 'BLUETOOTH_STATUS';
	var BLUETOOTH_SEARCH_STATUS = exports.BLUETOOTH_SEARCH_STATUS = 'BLUETOOTH_SEARCH_STATUS';
	var GAME_MODE = exports.GAME_MODE = 'GAME_MODE';
	var DEVICES_SET = exports.DEVICES_SET = 'DEVICES/SET';
	var DEVICES_ADD = exports.DEVICES_ADD = 'DEVICES/ADD';
	var PLAYERS_SET = exports.PLAYERS_SET = 'PLAYERS/SET';
	var RIDERS_SET = exports.RIDERS_SET = 'RIDERS/SET';
	var RIDERS_SELECT = exports.RIDERS_SELECT = 'RIDERS/SELECT';
	var TRACK_LENGTH_SET = exports.TRACK_LENGTH_SET = 'TRACK_LENGTH/SET';
	var DEMO_SET = exports.DEMO_SET = 'DEMO/SET';
	var LOADED_SET = exports.LOADED_SET = 'LOADED/SET';

	var setAction = function setAction(type) {
	  return function (payload) {
	    return {
	      type: type,
	      payload: payload
	    };
	  };
	};

	var setAdminToken = exports.setAdminToken = setAction(ADMIN_TOKEN);
	var setDemo = exports.setDemo = setAction(DEMO_SET);
	var updateBluetoothStatus = exports.updateBluetoothStatus = setAction(BLUETOOTH_STATUS);
	var updateBluetoothSearchStatus = exports.updateBluetoothSearchStatus = setAction(BLUETOOTH_SEARCH_STATUS);
	var updateGameState = exports.updateGameState = setAction(GAME_MODE);
	var setDevices = exports.setDevices = setAction(DEVICES_SET);
	var setLoaded = exports.setLoaded = setAction(LOADED_SET);
	var addDevice = exports.addDevice = setAction(DEVICES_ADD);
	var setPlayers = exports.setPlayers = setAction(PLAYERS_SET);
	var setRiders = exports.setRiders = setAction(RIDERS_SET);
	var selectRiders = exports.selectRiders = setAction(RIDERS_SELECT);
	var setTrackLength = exports.setTrackLength = setAction(TRACK_LENGTH_SET);
	var setLoadProgress = exports.setLoadProgress = setAction(LOADED_SET);

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _pccLogo2x = __webpack_require__(237);

	var _pccLogo2x2 = _interopRequireDefault(_pccLogo2x);

	var _finishLine = __webpack_require__(238);

	var _finishLine2 = _interopRequireDefault(_finishLine);

	var _backgroundClouds = __webpack_require__(239);

	var _backgroundClouds2 = _interopRequireDefault(_backgroundClouds);

	var _backgroundCity = __webpack_require__(240);

	var _backgroundCity2 = _interopRequireDefault(_backgroundCity);

	var _backgroundTerraces = __webpack_require__(241);

	var _backgroundTerraces2 = _interopRequireDefault(_backgroundTerraces);

	var _backgroundRoad = __webpack_require__(242);

	var _backgroundRoad2 = _interopRequireDefault(_backgroundRoad);

	var _intro = __webpack_require__(243);

	var _intro2 = _interopRequireDefault(_intro);

	var _backgroundPower = __webpack_require__(244);

	var _backgroundPower2 = _interopRequireDefault(_backgroundPower);

	var _riderSprite = __webpack_require__(245);

	var _riderSprite2 = _interopRequireDefault(_riderSprite);

	var _riderMale = __webpack_require__(246);

	var _riderMale2 = _interopRequireDefault(_riderMale);

	var _riderMale3 = __webpack_require__(247);

	var _riderMale4 = _interopRequireDefault(_riderMale3);

	var _riderMale5 = __webpack_require__(248);

	var _riderMale6 = _interopRequireDefault(_riderMale5);

	var _riderFemale = __webpack_require__(249);

	var _riderFemale2 = _interopRequireDefault(_riderFemale);

	var _riderFemale3 = __webpack_require__(250);

	var _riderFemale4 = _interopRequireDefault(_riderFemale3);

	var _riderFemale5 = __webpack_require__(251);

	var _riderFemale6 = _interopRequireDefault(_riderFemale5);

	var _pccAvatar = __webpack_require__(1);

	var _pccAvatar2 = _interopRequireDefault(_pccAvatar);

	var _player1Outline = __webpack_require__(252);

	var _player1Outline2 = _interopRequireDefault(_player1Outline);

	var _player2Outline = __webpack_require__(253);

	var _player2Outline2 = _interopRequireDefault(_player2Outline);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var list = [_pccLogo2x2.default, _finishLine2.default, _backgroundClouds2.default, _backgroundCity2.default, _backgroundTerraces2.default, _backgroundRoad2.default, _intro2.default, _backgroundPower2.default, _riderSprite2.default, _riderMale2.default, _riderMale4.default, _riderMale6.default, _riderFemale2.default, _riderFemale4.default, _riderFemale6.default, _pccAvatar2.default, _player1Outline2.default, _player2Outline2.default];

	var assets = {};

	module.exports = {
	  load: function load(riders, progress, cb) {
	    riders.forEach(function (rider) {
	      if (rider.photoSelect) {
	        list.push(rider.photoSelect);
	      }

	      if (rider.photoWin) {
	        list.push(rider.photoWin);
	      }

	      if (rider.photoLose) {
	        list.push(rider.photoLose);
	      }

	      if (rider.photoPower) {
	        list.push(rider.photoPower);
	      }
	    });

	    var remaning = list.length;

	    Promise.all(list.map(function (asset) {
	      return new Promise(function (resolve, reject) {
	        var image = new window.Image();
	        image.src = asset;
	        image.onload = function () {
	          assets[asset] = image;

	          remaning -= 1;

	          progress(remaning, list.length);

	          resolve();
	        };
	      });
	    })).then(function () {
	      return cb();
	    }).catch(function (error) {
	      return cb(error);
	    });
	  },

	  get: function get(key) {
	    return assets[key];
	  }
	};

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "pcc-logo@2x.png";

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "finish-line.png";

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "background-clouds.png";

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "background-city.png";

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "background-terraces.png";

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "background-road.png";

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "intro.png";

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "background-power.png";

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "rider-sprite.png";

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "rider-male-0.png";

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "rider-male-1.png";

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "rider-male-2.png";

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "rider-female-0.png";

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "rider-female-1.png";

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "rider-female-2.png";

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "player1-outline.png";

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "player2-outline.png";

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _admin = __webpack_require__(255);

	var _admin2 = _interopRequireDefault(_admin);

	var _bluetooth = __webpack_require__(256);

	var _bluetooth2 = _interopRequireDefault(_bluetooth);

	var _devices = __webpack_require__(258);

	var _devices2 = _interopRequireDefault(_devices);

	var _game = __webpack_require__(259);

	var _game2 = _interopRequireDefault(_game);

	var _players = __webpack_require__(260);

	var _players2 = _interopRequireDefault(_players);

	var _riders = __webpack_require__(302);

	var _riders2 = _interopRequireDefault(_riders);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var reducers = {
	  admin: _admin2.default,
	  bluetooth: _bluetooth2.default,
	  devices: _devices2.default,
	  game: _game2.default,
	  players: _players2.default,
	  riders: _riders2.default
	};

	exports.default = reducers;

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actions = __webpack_require__(235);

	var initialState = {
	  token: 'something-random'
	};

	var adminReducer = function adminReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];

	  switch (action.type) {
	    case _actions.ADMIN_TOKEN:
	      return _extends({}, state, {
	        token: action.payload
	      });
	    default:
	      return state;
	  }
	};

	exports.default = adminReducer;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actions = __webpack_require__(235);

	var _bluetooth = __webpack_require__(257);

	var _bluetooth2 = _interopRequireDefault(_bluetooth);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var initialState = {
	  status: 'poweredOff',
	  searching: false
	};

	var bluetoothReducer = function bluetoothReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];

	  switch (action.type) {
	    case _actions.BLUETOOTH_STATUS:
	      var status = action.payload;

	      if (!_bluetooth2.default[status]) {
	        console.warn('Unknown Bluetooth status ' + action.payload);
	        status = 'unknown';
	      }

	      return _extends({}, state, {
	        status: status
	      });
	    case _actions.BLUETOOTH_SEARCH_STATUS:
	      return _extends({}, state, {
	        searching: action.payload
	      });
	    default:
	      return state;
	  }
	};

	exports.default = bluetoothReducer;

/***/ }),
/* 257 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var STATUSES = {
	  unknown: 0,
	  resetting: 1,
	  unsupported: 2,
	  unauthorized: 3,
	  poweredOff: 4,
	  poweredOn: 5
	};

	exports.default = STATUSES;

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actions = __webpack_require__(235);

	var initialState = {
	  devices: []
	};

	var deviceReducer = function deviceReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];

	  switch (action.type) {
	    case _actions.DEVICES_SET:
	      return _extends({}, state, {
	        devices: action.payload
	      });
	    case _actions.DEVICES_ADD:
	      console.info('devices', state.devices);
	      console.info('payload', action.payload);

	      var devices = state.devices.filter(function (device) {
	        return device.id !== action.payload.id;
	      }).concat(action.payload);

	      return _extends({}, state, {
	        devices: devices
	      });
	    default:
	      return state;
	  }
	};

	exports.default = deviceReducer;

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actions = __webpack_require__(235);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var initialState = {
	  loaded: 0,
	  state: _gameState2.default.connecting,
	  trackLength: 250,
	  demo: false
	};

	var updateGameState = function updateGameState() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];

	  switch (action.type) {
	    case _actions.GAME_MODE:
	      console.info('GAME_MODE = ' + action.payload);

	      return _extends({}, state, {
	        state: action.payload
	      });
	    case _actions.TRACK_LENGTH_SET:
	      return _extends({}, state, {
	        trackLength: action.payload
	      });
	    case _actions.DEMO_SET:
	      return _extends({}, state, {
	        demo: action.payload
	      });
	    case _actions.LOADED_SET:
	      return _extends({}, state, {
	        loaded: action.payload
	      });
	    default:
	      return state;
	  }
	};

	exports.default = updateGameState;

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actions = __webpack_require__(235);

	var _rangeMap = __webpack_require__(229);

	var _rangeMap2 = _interopRequireDefault(_rangeMap);

	var _player = __webpack_require__(261);

	var _settings = __webpack_require__(301);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var initialState = {
	  players: []
	};

	var MAX_DIFF = 50;

	var playerReducer = function playerReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];

	  switch (action.type) {
	    case _actions.PLAYERS_SET:
	      var player1 = action.payload[0];
	      var player2 = action.payload[1];
	      var p1Diff = player1.metersRemaining - player2.metersRemaining;
	      var p2Diff = player2.metersRemaining - player1.metersRemaining;

	      if (p1Diff > MAX_DIFF) {
	        p1Diff = MAX_DIFF;
	      }

	      if (p1Diff < -MAX_DIFF) {
	        p1Diff = -MAX_DIFF;
	      }

	      if (p2Diff > MAX_DIFF) {
	        p2Diff = MAX_DIFF;
	      }

	      if (p2Diff < -MAX_DIFF) {
	        p2Diff = -MAX_DIFF;
	      }

	      player1.x = (0, _rangeMap2.default)(p2Diff, -MAX_DIFF, MAX_DIFF, 0, _settings.STAGE_WIDTH - _player.SPRITE_WIDTH - 50);
	      player2.x = (0, _rangeMap2.default)(p1Diff, -MAX_DIFF, MAX_DIFF, 0, _settings.STAGE_WIDTH - _player.SPRITE_WIDTH - 50);

	      return _extends({}, state, {
	        players: action.payload
	      });
	    default:
	      return state;
	  }
	};

	exports.default = playerReducer;

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.UPDATE_FREQUENCY_MS = exports.NAME_SIZE = exports.SPRITE_HEIGHT = exports.SPRITE_WIDTH = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  background-color: #FFF;\n  padding: 5px 10px;\n  margin: 0;\n  font-size: 16px;\n  display: inline-block;\n'], ['\n  background-color: #FFF;\n  padding: 5px 10px;\n  margin: 0;\n  font-size: 16px;\n  display: inline-block;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _reactKonva = __webpack_require__(297);

	var _riderSprite = __webpack_require__(245);

	var _riderSprite2 = _interopRequireDefault(_riderSprite);

	var _animator = __webpack_require__(300);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	var _rangeMap = __webpack_require__(229);

	var _rangeMap2 = _interopRequireDefault(_rangeMap);

	var _assets = __webpack_require__(236);

	var _assets2 = _interopRequireDefault(_assets);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var PlayerName = _styledComponents2.default.div(_templateObject);

	var SPRITE_WIDTH = exports.SPRITE_WIDTH = 500;
	var SPRITE_HEIGHT = exports.SPRITE_HEIGHT = 400;
	var NAME_SIZE = exports.NAME_SIZE = 24;
	var UPDATE_FREQUENCY_MS = exports.UPDATE_FREQUENCY_MS = 1000;

	var Player = (_temp2 = _class = function (_Component) {
	  _inherits(Player, _Component);

	  function Player() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Player);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Player.__proto__ || Object.getPrototypeOf(Player)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      animation: 'riding',
	      x: 0,
	      nextX: 0,
	      lastX: 0,
	      startXTime: 0
	    }, _this.componentWillUnmount = function () {
	      (0, _animator.removeAnimateable)(_this.animate);
	    }, _this.animate = function () {
	      if (_this.props.gameState === _gameState2.default.countingDown) {
	        return _this.setState(function (s) {
	          return {
	            x: s.x + 2
	          };
	        });
	      }

	      if (_this.props.gameState === _gameState2.default.finishing) {
	        return _this.setState(function (s) {
	          return {
	            //animation: 'lunge',
	            x: s.x + 10
	          };
	        });
	      }

	      var through = Date.now() - _this.state.startXTime;

	      _this.setState(function (s) {
	        return {
	          animation: 'riding',
	          x: (0, _rangeMap2.default)(through > UPDATE_FREQUENCY_MS ? UPDATE_FREQUENCY_MS : through, 0, UPDATE_FREQUENCY_MS, _this.state.lastX, _this.state.nextX)
	        };
	      });
	    }, _this.setSprite = function (sprite) {
	      _this.sprite = sprite;

	      if (_this.sprite && !_this.sprite.isRunning()) {
	        _this.sprite.start();
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Player, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.setState({
	        x: 0 - SPRITE_WIDTH
	      });

	      (0, _animator.addAnimateable)(this.animate);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _this2 = this;

	      this.setState(function (s) {
	        return {
	          lastX: s.nextX,
	          nextX: _this2.props.player.x,
	          startXTime: Date.now()
	        };
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactKonva.Group,
	        null,
	        _react2.default.createElement(_reactKonva.Text, {
	          text: this.props.player.name,
	          x: this.state.x + this.props.xOffset,
	          y: this.props.yOffset,
	          fill: 'black',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: NAME_SIZE,
	          shadowColor: 'white',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        }),
	        _react2.default.createElement(_reactKonva.Sprite, {
	          ref: this.setSprite,
	          image: _assets2.default.get(_riderSprite2.default),
	          x: this.state.x,
	          y: this.props.yOffset + NAME_SIZE,
	          width: SPRITE_WIDTH,
	          height: SPRITE_HEIGHT,
	          animation: this.state.animation,
	          animations: {
	            riding: [0, 0, 500, 400, 500, 0, 500, 400, 1000, 0, 500, 400, 1500, 0, 500, 400]
	          },
	          frameRate: 4,
	          frameIndex: this.sprite && this.sprite.frameIndex() || 0
	        })
	      );
	    }
	  }]);

	  return Player;
	}(_react.Component), _class.propTypes = {
	  player: _propTypes2.default.object.isRequired,
	  gameState: _propTypes2.default.string.isRequired,
	  xOffset: _propTypes2.default.number.isRequired,
	  yOffset: _propTypes2.default.number.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var state = _ref2.game.state;
	  return {
	    gameState: state
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Player);

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.StyleSheetManager = exports.ServerStyleSheet = exports.withTheme = exports.ThemeProvider = exports.injectGlobal = exports.keyframes = exports.css = undefined;

	var _flatten = __webpack_require__(263);

	var _flatten2 = _interopRequireDefault(_flatten);

	var _stringifyRules = __webpack_require__(267);

	var _stringifyRules2 = _interopRequireDefault(_stringifyRules);

	var _generateAlphabeticName = __webpack_require__(269);

	var _generateAlphabeticName2 = _interopRequireDefault(_generateAlphabeticName);

	var _css = __webpack_require__(270);

	var _css2 = _interopRequireDefault(_css);

	var _ServerStyleSheet = __webpack_require__(272);

	var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);

	var _StyleSheetManager = __webpack_require__(277);

	var _StyleSheetManager2 = _interopRequireDefault(_StyleSheetManager);

	var _StyledComponent2 = __webpack_require__(278);

	var _StyledComponent3 = _interopRequireDefault(_StyledComponent2);

	var _ComponentStyle2 = __webpack_require__(288);

	var _ComponentStyle3 = _interopRequireDefault(_ComponentStyle2);

	var _styled2 = __webpack_require__(290);

	var _styled3 = _interopRequireDefault(_styled2);

	var _keyframes2 = __webpack_require__(292);

	var _keyframes3 = _interopRequireDefault(_keyframes2);

	var _injectGlobal2 = __webpack_require__(293);

	var _injectGlobal3 = _interopRequireDefault(_injectGlobal2);

	var _constructWithOptions2 = __webpack_require__(294);

	var _constructWithOptions3 = _interopRequireDefault(_constructWithOptions2);

	var _ThemeProvider = __webpack_require__(284);

	var _ThemeProvider2 = _interopRequireDefault(_ThemeProvider);

	var _withTheme = __webpack_require__(295);

	var _withTheme2 = _interopRequireDefault(_withTheme);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/* Instantiate singletons */


	/* Import components */


	/* Import singleton constructors */


	/* Import singletons */
	var ComponentStyle = (0, _ComponentStyle3.default)(_generateAlphabeticName2.default, _flatten2.default, _stringifyRules2.default);

	/* Import Higher Order Components */

	var constructWithOptions = (0, _constructWithOptions3.default)(_css2.default);
	var StyledComponent = (0, _StyledComponent3.default)(ComponentStyle, constructWithOptions);

	/* Instantiate exported singletons */
	var keyframes = (0, _keyframes3.default)(_generateAlphabeticName2.default, _stringifyRules2.default, _css2.default);
	var injectGlobal = (0, _injectGlobal3.default)(_stringifyRules2.default, _css2.default);
	var styled = (0, _styled3.default)(StyledComponent, constructWithOptions);

	/* Export everything */
	exports.default = styled;
	exports.css = _css2.default;
	exports.keyframes = keyframes;
	exports.injectGlobal = injectGlobal;
	exports.ThemeProvider = _ThemeProvider2.default;
	exports.withTheme = _withTheme2.default;
	exports.ServerStyleSheet = _ServerStyleSheet2.default;
	exports.StyleSheetManager = _StyleSheetManager2.default;

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.objToCss = undefined;

	var _hyphenateStyleName = __webpack_require__(97);

	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

	var _isPlainObject = __webpack_require__(264);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(174).any;

	var objToCss = exports.objToCss = function objToCss(obj, prevKey) {
	  var css = Object.keys(obj).filter(function (key) {
	    var chunk = obj[key];
	    return chunk !== undefined && chunk !== null && chunk !== false && chunk !== '';
	  }).map(function (key) {
	    if ((0, _isPlainObject2.default)(obj[key])) return objToCss(obj[key], key);
	    return (0, _hyphenateStyleName2.default)(key) + ': ' + obj[key] + ';';
	  }).join(' ');
	  return prevKey ? prevKey + ' {\n  ' + css + '\n}' : css;
	};

	var flatten = function flatten(chunks, executionContext) {
	  return chunks.reduce(function (ruleSet, chunk) {
	    /* Remove falsey values */
	    if (chunk === undefined || chunk === null || chunk === false || chunk === '') return ruleSet;
	    /* Flatten ruleSet */
	    if (Array.isArray(chunk)) return [].concat(ruleSet, flatten(chunk, executionContext));

	    /* Handle other components */
	    // $FlowFixMe not sure how to make this pass
	    if (chunk.hasOwnProperty('styledComponentId')) return [].concat(ruleSet, ['.' + chunk.styledComponentId]);

	    /* Either execute or defer the function */
	    if (typeof chunk === 'function') {
	      return executionContext ? ruleSet.concat.apply(ruleSet, flatten([chunk(executionContext)], executionContext)) : ruleSet.concat(chunk);
	    }

	    /* Handle objects */
	    // $FlowFixMe have to add %checks somehow to isPlainObject
	    return ruleSet.concat((0, _isPlainObject2.default)(chunk) ? objToCss(chunk) : chunk.toString());
	  }, []);
	};

	exports.default = flatten;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */

	'use strict';

	var isObject = __webpack_require__(265);

	function isObjectObject(o) {
	  return isObject(o) === true
	    && Object.prototype.toString.call(o) === '[object Object]';
	}

	module.exports = function isPlainObject(o) {
	  var ctor,prot;

	  if (isObjectObject(o) === false) return false;

	  // If has modified constructor
	  ctor = o.constructor;
	  if (typeof ctor !== 'function') return false;

	  // If has modified prototype
	  prot = ctor.prototype;
	  if (isObjectObject(prot) === false) return false;

	  // If constructor does not have an Object-specific method
	  if (prot.hasOwnProperty('isPrototypeOf') === false) {
	    return false;
	  }

	  // Most likely a plain Object
	  return true;
	};


/***/ }),
/* 265 */
/***/ (function(module, exports) {

	/*!
	 * isobject <https://github.com/jonschlinkert/isobject>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */

	'use strict';

	module.exports = function isObject(val) {
	  return val != null && typeof val === 'object' && Array.isArray(val) === false;
	};


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	/* todo: I want this to actually be an array of Function | string but that causes errors */
	if (true) Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_StyleSheet", {
	  value: __webpack_require__(174).shape({
	    create: __webpack_require__(174).func.isRequired
	  })
	});

	/* eslint-disable no-undef */

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _stylis = __webpack_require__(268);

	var _stylis2 = _interopRequireDefault(_stylis);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(174).any;

	var stylis = new _stylis2.default({
	  global: false,
	  cascade: true,
	  keyframe: false,
	  prefix: true,
	  compress: false,
	  semicolon: true
	});

	var stringifyRules = function stringifyRules(rules, selector, prefix) {
	  var flatCSS = rules.join('').replace(/^\s*\/\/.*$/gm, ''); // replace JS comments

	  var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;

	  return stylis(prefix || !selector ? '' : selector, cssStr);
	};

	exports.default = stringifyRules;
	module.exports = exports['default'];

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/*
	 *          __        ___
	 *    _____/ /___  __/ (_)____
	 *   / ___/ __/ / / / / / ___/
	 *  (__  ) /_/ /_/ / / (__  )
	 * /____/\__/\__, /_/_/____/
	 *          /____/
	 *
	 * light - weight css preprocessor @licence MIT
	 */
	(function (factory) {/* eslint-disable */
		 true ? (module['exports'] = factory(null)) :
			typeof define === 'function' && define['amd'] ? define(factory(null)) :
				(window['stylis'] = factory(null))
	}(/** @param {*=} options */function factory (options) {/* eslint-disable */

		'use strict'

		/**
		 * Notes
		 *
		 * The ['<method name>'] pattern is used to support closure compiler
		 * the jsdoc signatures are also used to the same effect
		 *
		 * ----
		 *
		 * int + int + int === n4 [faster]
		 *
		 * vs
		 *
		 * int === n1 && int === n2 && int === n3
		 *
		 * ----
		 *
		 * switch (int) { case ints...} [faster]
		 *
		 * vs
		 *
		 * if (int == 1 && int === 2 ...)
		 *
		 * ----
		 *
		 * The (first*n1 + second*n2 + third*n3) format used in the property parser
		 * is a simple way to hash the sequence of characters
		 * taking into account the index they occur in
		 * since any number of 3 character sequences could produce duplicates.
		 *
		 * On the other hand sequences that are directly tied to the index of the character
		 * resolve a far more accurate measure, it's also faster
		 * to evaluate one condition in a switch statement
		 * than three in an if statement regardless of the added math.
		 *
		 * This allows the vendor prefixer to be both small and fast.
		 */

		var nullptn = /^\0+/g /* matches leading null characters */
		var formatptn = /[\0\r\f]/g /* matches new line, null and formfeed characters */
		var colonptn = /: */g /* splits animation rules */
		var cursorptn = /zoo|gra/ /* assert cursor varient */
		var transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */
		var animationptn = /,+\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */
		var propertiesptn = / +\s*(?![^(]*[)])/g /* animation properties */
		var elementptn = / *[\0] */g /* selector elements */
		var selectorptn = /,\r+?/g /* splits selectors */
		var andptn = /([\t\r\n ])*\f?&/g /* match & */
		var escapeptn = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g /* matches :global(.*) */
		var invalidptn = /\W+/g /* removes invalid characters from keyframes */
		var keyframeptn = /@(k\w+)\s*(\S*)\s*/ /* matches @keyframes $1 */
		var plcholdrptn = /::(place)/g /* match ::placeholder varient */
		var readonlyptn = /:(read-only)/g /* match :read-only varient */
		var beforeptn = /\s+(?=[{\];=:>])/g /* matches \s before ] ; = : */
		var afterptn = /([[}=:>])\s+/g /* matches \s after characters [ } = : */
		var tailptn = /(\{[^{]+?);(?=\})/g /* matches tail semi-colons ;} */
		var whiteptn = /\s{2,}/g /* matches repeating whitespace */
		var pseudoptn = /([^\(])(:+) */g /* pseudo element */
		var writingptn = /[svh]\w+-[tblr]{2}/ /* match writing mode property values */
		var gradientptn = /([\w-]+t\()/g /* match *gradient property */
		var supportsptn = /\(\s*([^]*?)\s*\)/g /* match supports (groups) */
		var propertyptn = /([^]*?);/g /* match properties leading semicolon */
		var selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */
		var pseudofmt = /[^]*?(:[rp][el]a[\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */

		/* vendors */
		var webkit = '-webkit-'
		var moz = '-moz-'
		var ms = '-ms-'

		/* character codes */
		var SEMICOLON = 59 /* ; */
		var CLOSEBRACES = 125 /* } */
		var OPENBRACES = 123 /* { */
		var OPENPARENTHESES = 40 /* ( */
		var CLOSEPARENTHESES = 41 /* ) */
		var OPENBRACKET = 91 /* [ */
		var CLOSEBRACKET = 93 /* ] */
		var NEWLINE = 10 /* \n */
		var CARRIAGE = 13 /* \r */
		var TAB = 9 /* \t */
		var AT = 64 /* @ */
		var SPACE = 32 /*   */
		var AND = 38 /* & */
		var DASH = 45 /* - */
		var UNDERSCORE = 95 /* _ */
		var STAR = 42 /* * */
		var COMMA = 44 /* , */
		var COLON = 58 /* : */
		var SINGLEQUOTE = 39 /* ' */
		var DOUBLEQUOTE = 34 /* " */
		var FOWARDSLASH = 47 /* / */
		var GREATERTHAN = 62 /* > */
		var PLUS = 43 /* + */
		var TILDE = 126 /* ~ */
		var NULL = 0 /* \0 */
		var FORMFEED = 12 /* \f */
		var VERTICALTAB = 11 /* \v */

		/* special identifiers */
		var KEYFRAME = 107 /* k */
		var MEDIA = 109 /* m */
		var SUPPORTS = 115 /* s */
		var PLACEHOLDER = 112 /* p */
		var READONLY = 111 /* o */
		var IMPORT = 169 /* <at>i */
		var CHARSET = 163 /* <at>c */
		var DOCUMENT = 100 /* <at>d */

		var column = 1 /* current column */
		var line = 1 /* current line numebr */
		var pattern = 0 /* :pattern */

		var cascade = 1 /* #id h1 h2 vs h1#id h2#id  */
		var prefix = 1 /* vendor prefix */
		var escape = 1 /* escape :global() pattern */
		var compress = 0 /* compress output */
		var semicolon = 0 /* no/semicolon option */
		var preserve = 0 /* preserve empty selectors */

		/* empty reference */
		var array = []

		/* plugins */
		var plugins = []
		var plugged = 0
		var should = null

		/* plugin context */
		var POSTS = -2
		var PREPS = -1
		var UNKWN = 0
		var PROPS = 1
		var BLCKS = 2
		var ATRUL = 3

		/* plugin newline context */
		var unkwn = 0

		/* keyframe animation */
		var keyed = 1
		var key = ''

		/* selector namespace */
		var nscopealt = ''
		var nscope = ''

		/**
		 * Compile
		 *
		 * @param {Array<string>} parent
		 * @param {Array<string>} current
		 * @param {string} body
		 * @param {number} id
		 * @param {number} depth
		 * @return {string}
		 */
		function compile (parent, current, body, id, depth) {
			var bracket = 0 /* brackets [] */
			var comment = 0 /* comments /* // or /* */
			var parentheses = 0 /* functions () */
			var quote = 0 /* quotes '', "" */

			var first = 0 /* first character code */
			var second = 0 /* second character code */
			var code = 0 /* current character code */
			var tail = 0 /* previous character code */
			var trail = 0 /* character before previous code */
			var peak = 0 /* previous non-whitespace code */

			var counter = 0 /* count sequence termination */
			var context = 0 /* track current context */
			var atrule = 0 /* track @at-rule context */
			var pseudo = 0 /* track pseudo token index */
			var caret = 0 /* current character index */
			var format = 0 /* control character formating context */
			var insert = 0 /* auto semicolon insertion */
			var invert = 0 /* inverted selector pattern */
			var length = 0 /* generic length address */
			var eof = body.length /* end of file(length) */
			var eol = eof - 1 /* end of file(characters) */

			var char = '' /* current character */
			var chars = '' /* current buffer of characters */
			var child = '' /* next buffer of characters */
			var out = '' /* compiled body */
			var children = '' /* compiled children */
			var flat = '' /* compiled leafs */
			var selector /* generic selector address */
			var result /* generic address */

			// ...build body
			while (caret < eof) {
				code = body.charCodeAt(caret)

				if (comment + quote + parentheses + bracket === 0) {
					// eof varient
					if (caret === eol) {
						if (format > 0) {
							chars = chars.replace(formatptn, '')
						}

						if (chars.trim().length > 0) {
							switch (code) {
								case SPACE:
								case TAB:
								case SEMICOLON:
								case CARRIAGE:
								case NEWLINE: {
									break
								}
								default: {
									chars += body.charAt(caret)
								}
							}

							code = SEMICOLON
						}
					}

					// auto semicolon insertion
					if (insert === 1) {
						switch (code) {
							// false flags
							case OPENBRACES:
							case COMMA: {
								insert = 0
								break
							}
							// ignore
							case TAB:
							case CARRIAGE:
							case NEWLINE:
							case SPACE: {
								break
							}
							// valid
							default: {
								caret--
								code = SEMICOLON
							}
						}
					}

					// token varient
					switch (code) {
						case OPENBRACES: {
							chars = chars.trim()
							first = chars.charCodeAt(0)
							counter = 1
							length = ++caret

							while (caret < eof) {
								code = body.charCodeAt(caret)

								switch (code) {
									case OPENBRACES: {
										counter++
										break
									}
									case CLOSEBRACES: {
										counter--
										break
									}
								}

								if (counter === 0) {
									break
								}

								caret++
							}

							child = body.substring(length, caret)

							if (first === NULL) {
								first = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)
							}

							switch (first) {
								// @at-rule
								case AT: {
									if (format > 0) {
										chars = chars.replace(formatptn, '')
									}

									second = chars.charCodeAt(1)

									switch (second) {
										case DOCUMENT:
										case MEDIA:
										case SUPPORTS: {
											selector = current
											break
										}
										default: {
											selector = array
										}
									}

									child = compile(current, selector, child, second, depth+1)
									length = child.length

									// preserve empty @at-rule
									if (preserve > 0 && length === 0) {
										length = chars.length
									}

									// execute plugins, @at-rule context
									if (plugged > 0) {
										selector = select(array, chars, invert)
										result = proxy(ATRUL, child, selector, current, line, column, length, second, depth)
										chars = selector.join('')

										if (result !== void 0) {
											if ((length = (child = result.trim()).length) === 0) {
												second = 0
												child = ''
											}
										}
									}

									if (length > 0) {
										switch (second) {
											case SUPPORTS: {
												chars = chars.replace(supportsptn, supports)
											}
											case DOCUMENT:
											case MEDIA: {
												child = chars + '{' + child + '}'
												break
											}
											case KEYFRAME: {
												chars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))
												child = chars + '{' + child + '}'

												if (prefix === 1 || (prefix === 2 && vendor('@'+child, 3))) {
													child = '@' + webkit + child + '@' + child
												} else {
													child = '@' + child
												}
												break
											}
											default: {
												child = chars + child
											}
										}
									} else {
										child = ''
									}

									break
								}
								// selector
								default: {
									child = compile(current, select(current, chars, invert), child, id, depth+1)
								}
							}

							children += child

							// reset
							context = 0
							insert = 0
							pseudo = 0
							format = 0
							invert = 0
							atrule = 0
							chars = ''
							child = ''
							code = body.charCodeAt(++caret)
							break
						}
						case CLOSEBRACES:
						case SEMICOLON: {
							chars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()

							if ((length = chars.length) > 1) {
								// monkey-patch missing colon
								if (pseudo === 0) {
									first = chars.charCodeAt(0)

									// first character is a letter or dash, buffer has a space character
									if ((first === DASH || first > 96 && first < 123)) {
										length = (chars = chars.replace(' ', ':')).length
									}
								}

								// execute plugins, property context
								if (plugged > 0) {
									if ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth)) !== void 0) {
										if ((length = (chars = result.trim()).length) === 0) {
											chars = '\0\0'
										}
									}
								}

								first = chars.charCodeAt(0)
								second = chars.charCodeAt(1)

								switch (first + second) {
									case NULL: {
										break
									}
									case IMPORT:
									case CHARSET: {
										flat += chars + body.charAt(caret)
										break
									}
									default: {
										if (chars.charCodeAt(length-1) === COLON)
											break

										out += property(chars, first, second, chars.charCodeAt(2))
									}
								}
							}

							// reset
							context = 0
							insert = 0
							pseudo = 0
							format = 0
							invert = 0
							chars = ''
							code = body.charCodeAt(++caret)
							break
						}
					}
				}

				// parse characters
				switch (code) {
					case CARRIAGE:
					case NEWLINE: {
						// auto insert semicolon
						if (comment + quote + parentheses + bracket + semicolon === 0) {
							// valid non-whitespace characters that
							// may precede a newline
							switch (peak) {
								case CLOSEPARENTHESES:
								case SINGLEQUOTE:
								case DOUBLEQUOTE:
								case AT:
								case TILDE:
								case GREATERTHAN:
								case STAR:
								case PLUS:
								case FOWARDSLASH:
								case DASH:
								case COLON:
								case COMMA:
								case SEMICOLON:
								case OPENBRACES:
								case CLOSEBRACES: {
									break
								}
								default: {
									// current buffer has a colon
									if (pseudo > 0) {
										insert = 1
									}
								}
							}
						}

						// terminate line comment
						if (comment === FOWARDSLASH) {
							comment = 0
						}

						// execute plugins, newline context
						if (plugged * unkwn > 0) {
							proxy(UNKWN, chars, current, parent, line, column, out.length, id, depth)
						}

						// next line, reset column position
						column = 1
						line++
						break
					}
					case SEMICOLON:
					case CLOSEBRACES: {
						if (comment + quote + parentheses + bracket === 0) {
							column++
							break
						}
					}
					default: {
						// increment column position
						column++

						// current character
						char = body.charAt(caret)

						// remove comments, escape functions, strings, attributes and prepare selectors
						switch (code) {
							case TAB:
							case SPACE: {
								if (quote + bracket === 0) {
									switch (tail) {
										case COMMA:
										case COLON:
										case TAB:
										case SPACE: {
											char = ''
											break
										}
										default: {
											if (code !== SPACE) {
												char = ' '
											}
										}
									}
								}
								break
							}
							// escape breaking control characters
							case NULL: {
								char = '\\0'
								break
							}
							case FORMFEED: {
								char = '\\f'
								break
							}
							case VERTICALTAB: {
								char = '\\v'
								break
							}
							// &
							case AND: {
								// inverted selector pattern i.e html &
								if (quote + comment + bracket === 0 && cascade > 0) {
									invert = 1
									format = 1
									char = '\f' + char
								}
								break
							}
							// ::p<l>aceholder, l
							// :read-on<l>y, l
							case 108: {
								if (quote + comment + bracket + pattern === 0 && pseudo > 0) {
									switch (caret - pseudo) {
										// ::placeholder
										case 2: {
											if (tail === PLACEHOLDER && body.charCodeAt(caret-3) === COLON) {
												pattern = tail
											}
										}
										// :read-only
										case 8: {
											if (trail === READONLY) {
												pattern = trail
											}
										}
									}
								}
								break
							}
							// :<pattern>
							case COLON: {
								if (quote + comment + bracket === 0) {
									pseudo = caret
								}
								break
							}
							// selectors
							case COMMA: {
								if (comment + parentheses + quote + bracket === 0) {
									format = 1
									char += '\r'
								}
								break
							}
							// quotes
							case DOUBLEQUOTE: {
								if (comment === 0) {
									quote = quote === code ? 0 : (quote === 0 ? code : quote)
									// " last character, add synthetic padding
									if (caret === eol) {
										eol++
										eof++
									}
								}
								break
							}
							case SINGLEQUOTE: {
								if (comment === 0) {
									quote = quote === code ? 0 : (quote === 0 ? code : quote)
									// ' last character, add synthetic padding
									if (caret === eol) {
										eol++
										eof++
									}
								}
								break
							}
							// attributes
							case OPENBRACKET: {
								if (quote + comment + parentheses === 0) {
									bracket++
								}
								break
							}
							case CLOSEBRACKET: {
								if (quote + comment + parentheses === 0) {
									bracket--
								}
								break
							}
							// functions
							case CLOSEPARENTHESES: {
								if (quote + comment + bracket === 0) {
									// ) last character, add synthetic padding
									if (caret === eol) {
										eol++
										eof++
									}

									parentheses--
								}
								break
							}
							case OPENPARENTHESES: {
								if (quote + comment + bracket === 0) {
									if (context === 0) {
										switch (tail*2 + trail*3) {
											// :matches
											case 533: {
												break
											}
											// :global, :not, :nth-child etc...
											default: {
												counter = 0
												context = 1
											}
										}
									}

									parentheses++
								}
								break
							}
							case AT: {
								if (comment + parentheses + quote + bracket + pseudo + atrule === 0) {
									atrule = 1
								}
								break
							}
							// block/line comments
							case STAR:
							case FOWARDSLASH: {
								if (quote + bracket + parentheses > 0) {
									break
								}

								switch (comment) {
									// initialize line/block comment context
									case 0: {
										switch (code*2 + body.charCodeAt(caret+1)*3) {
											// //
											case 235: {
												comment = FOWARDSLASH
												break
											}
											// /*
											case 220: {
												length = caret
												comment = STAR
												break
											}
										}
										break
									}
									// end block comment context
									case STAR: {
										if (code === FOWARDSLASH && tail === STAR) {
											// /*<!> ... */, !
											if (body.charCodeAt(length+2) === 33) {
												out += body.substring(length, caret+1)
											}
											char = ''
											comment = 0
										}
									}
								}
							}
						}

						// ignore comment blocks
						if (comment === 0) {
							// aggressive isolation mode, divide each individual selector
							// including selectors in :not function but excluding selectors in :global function
							if (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {
								switch (code) {
									case COMMA:
									case TILDE:
									case GREATERTHAN:
									case PLUS:
									case CLOSEPARENTHESES:
									case OPENPARENTHESES: {
										if (context === 0) {
											// outside of an isolated context i.e nth-child(<...>)
											switch (tail) {
												case TAB:
												case SPACE:
												case NEWLINE:
												case CARRIAGE: {
													char = char + '\0'
													break
												}
												default: {
													char = '\0' + char + (code === COMMA ? '' : '\0')
												}
											}
											format = 1
										} else {
											// within an isolated context, sleep untill it's terminated
											switch (code) {
												case OPENPARENTHESES: {
													context = ++counter
													break
												}
												case CLOSEPARENTHESES: {
													if ((context = --counter) === 0) {
														format = 1
														char += '\0'
													}
													break
												}
											}
										}
										break
									}
									case SPACE: {
										switch (tail) {
											case NULL:
											case OPENBRACES:
											case CLOSEBRACES:
											case SEMICOLON:
											case COMMA:
											case FORMFEED:
											case TAB:
											case SPACE:
											case NEWLINE:
											case CARRIAGE: {
												break
											}
											default: {
												// ignore in isolated contexts
												if (context === 0) {
													format = 1
													char += '\0'
												}
											}
										}
									}
								}
							}

							// concat buffer of characters
							chars += char

							// previous non-whitespace character code
							if (code !== SPACE) {
								peak = code
							}
						}
					}
				}

				// tail character codes
				trail = tail
				tail = code

				// visit every character
				caret++
			}

			length = out.length

			// preserve empty selector
	 		if (preserve > 0) {
	 			if (length === 0 && children.length === 0 && (current[0].length === 0) === false) {
	 				if (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {
						length = current.join(',').length + 2
	 				}
	 			}
			}

			if (length > 0) {
				// cascade isolation mode?
				selector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current

				// execute plugins, block context
				if (plugged > 0) {
					result = proxy(BLCKS, out, selector, parent, line, column, length, id, depth)

					if (result !== void 0 && (out = result).length === 0) {
						return flat + out + children
					}
				}

				out = selector.join(',') + '{' + out + '}'

				if (prefix*pattern !== 0) {
					if (prefix === 2 && !vendor(out, 2))
						pattern = 0

					switch (pattern) {
						// ::read-only
						case READONLY: {
							out = out.replace(readonlyptn, ':'+moz+'$1')+out
							break
						}
						// ::placeholder
						case PLACEHOLDER: {
							out = (
								out.replace(plcholdrptn, '::' + webkit + 'input-$1') +
								out.replace(plcholdrptn, '::' + moz + '$1') +
								out.replace(plcholdrptn, ':' + ms + 'input-$1') + out
							)
							break
						}
					}

					pattern = 0
				}
			}

			return flat + out + children
		}

		/**
		 * Select
		 *
		 * @param {Array<string>} parent
		 * @param {string} current
		 * @param {number} invert
		 * @return {Array<string>}
		 */
		function select (parent, current, invert) {
			var selectors = current.trim().split(selectorptn)
			var out = selectors

			var length = selectors.length
			var l = parent.length

			switch (l) {
				// 0-1 parent selectors
				case 0:
				case 1: {
					for (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {
						out[i] = scope(selector, out[i], invert, l).trim()
					}
					break
				}
				// >2 parent selectors, nested
				default: {
					for (var i = 0, j = 0, out = []; i < length; ++i) {
						for (var k = 0; k < l; ++k) {
							out[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()
						}
					}
				}
			}

			return out
		}

		/**
		 * Scope
		 *
		 * @param {string} parent
		 * @param {string} current
		 * @param {number} invert
		 * @param {number} level
		 * @return {string}
		 */
		function scope (parent, current, invert, level) {
			var selector = current
			var code = selector.charCodeAt(0)

			// trim leading whitespace
			if (code < 33) {
				code = (selector = selector.trim()).charCodeAt(0)
			}

			switch (code) {
				// &
				case AND: {
					switch (cascade + level) {
						case 0:
						case 1: {
							if (parent.trim().length === 0) {
								break
							}
						}
						default: {
							return selector.replace(andptn, '$1'+parent.trim())
						}
					}
					break
				}
				// :
				case COLON: {
					switch (selector.charCodeAt(1)) {
						// g in :global
						case 103: {
							if (escape > 0 && cascade > 0) {
								return selector.replace(escapeptn, '$1').replace(andptn, '$1'+nscope)
							}
							break
						}
						default: {
							// :hover
							return parent.trim() + selector
						}
					}
				}
				default: {
					// html &
					if (invert*cascade > 0 && selector.indexOf('\f') > 0) {
						return selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1')+parent.trim())
					}
				}
			}

			return parent + selector
		}

		/**
		 * Property
		 *
		 * @param {string} input
		 * @param {number} first
		 * @param {number} second
		 * @param {number} third
		 * @return {string}
		 */
		function property (input, first, second, third) {
			var index = 0
			var out = input + ';'
			var hash = (first*2) + (second*3) + (third*4)
			var cache

			// animation: a, n, i characters
			if (hash === 944) {
				return animation(out)
			} else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {
				return out
			}

			// vendor prefix
			switch (hash) {
				// text-decoration/text-size-adjust: t, e, x
				case 1015: {
					// text-size-adjust, -
					return out.charCodeAt(9) === DASH ? webkit + out + out : out
				}
				// filter/fill f, i, l
				case 951: {
					// filter, t
					return out.charCodeAt(3) === 116 ? webkit + out + out : out
				}
				// color/column, c, o, l
				case 963: {
					// column, n
					return out.charCodeAt(5) === 110 ? webkit + out + out : out
				}
				// mask, m, a, s
				// clip-path, c, l, i
				case 969:
				case 942: {
					return webkit + out + out
				}
				// appearance: a, p, p
				case 978: {
					return webkit + out + moz + out + out
				}
				// hyphens: h, y, p
				// user-select: u, s, e
				case 1019:
				case 983: {
					return webkit + out + moz + out + ms + out + out
				}
				// background/backface-visibility, b, a, c
				case 883: {
					// backface-visibility, -
					return out.charCodeAt(8) === DASH ? webkit + out + out : out
				}
				// flex: f, l, e
				case 932: {
					return webkit + out + ms + out + out
				}
				// order: o, r, d
				case 964: {
					return webkit + out + ms + 'flex' + '-' + out + out
				}
				// justify-items/justify-content, j, u, s
				case 1023: {
					// justify-content, c
					if (out.charCodeAt(8) !== 99) {
						break
					}

					cache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')
					return webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out
				}
				// cursor, c, u, r
				case 1005: {
					return cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out
				}
				// writing-mode, w, r, i
				case 1000: {
					cache = out.substring(13).trim()
					index = cache.indexOf('-') + 1

					switch (cache.charCodeAt(0)+cache.charCodeAt(index)) {
						// vertical-lr
						case 226: {
							cache = out.replace(writingptn, 'tb')
							break
						}
						// vertical-rl
						case 232: {
							cache = out.replace(writingptn, 'tb-rl')
							break
						}
						// horizontal-tb
						case 220: {
							cache = out.replace(writingptn, 'lr')
							break
						}
						default: {
							return out
						}
					}

					return webkit + out + ms + cache + out
				}
				// position: sticky
				case 1017: {
					if (out.indexOf('sticky', 9) === -1) {
						return out
					}
				}
				// display(flex/inline-flex/inline-box): d, i, s
				case 975: {
					index = (out = input).length - 10
					cache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()

					switch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7)|0)) {
						// inline-
						case 203: {
							// inline-box
							if (cache.charCodeAt(8) < 111) {
								break
							}
						}
						// inline-box/sticky
						case 115: {
							out = out.replace(cache, webkit+cache)+';'+out
							break
						}
						// inline-flex
						// flex
						case 207:
						case 102: {
							out = (
								out.replace(cache, webkit+(hash > 102 ? 'inline-' : '')+'box')+';'+
								out.replace(cache, webkit+cache)+';'+
								out.replace(cache, ms+cache+'box')+';'+
								out
							)
						}
					}

					return out + ';'
				}
				// align-items, align-center, align-self: a, l, i, -
				case 938: {
					if (out.charCodeAt(5) === DASH) {
						switch (out.charCodeAt(6)) {
							// align-items, i
							case 105: {
								cache = out.replace('-items', '')
								return webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out
							}
							// align-self, s
							case 115: {
								return webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out
							}
							// align-content
							default: {
								return webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '') + out
							}
						}
					}
					break
				}
				// width: min-content / width: max-content
				case 953: {
					if ((index = out.indexOf('-content', 9)) > 0) {
						// width: min-content / width: max-content
						if (out.charCodeAt(index - 3) === 109 && out.charCodeAt(index - 4) !== 45) {
							cache = out.substring(index - 3)
							return 'width:' + webkit + cache + 'width:' + moz + cache + 'width:' + cache
						}
					}
					break
				}
				// transform, transition: t, r, a
				case 962: {
					out = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out

					// transitions
					if (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {
						return out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out
					}

					break
				}
			}

			return out
		}

		var i = 0

		/**
		 * Vendor
		 *
		 * @param {string} content
		 * @param {number} context
		 * @return {boolean}
		 */
		function vendor (content, context) {
			var index = content.indexOf(context === 1 ? ':' : '{')
			var key = content.substring(0, context !== 3 ? index : 10)
			var value = content.substring(index + 1, content.length - 1)

			return should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)
		}

		/**
		 * Supports
		 *
		 * @param {string} match
		 * @param {string} group
		 * @return {string}
		 */
		function supports (match, group) {
			var out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))

			return out !== group+';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '('+group+')'
		}

		/**
		 * Animation
		 *
		 * @param {string} input
		 * @return {string}
		 */
		function animation (input) {
			var length = input.length
			var index = input.indexOf(':', 9) + 1
			var declare = input.substring(0, index).trim()
			var out = input.substring(index, length-1).trim()

			switch (input.charCodeAt(9)*keyed) {
				case 0: {
					break
				}
				// animation-*, -
				case DASH: {
					// animation-name, n
					if (input.charCodeAt(10) !== 110) {
						break
					}
				}
				// animation/animation-name
				default: {
					// split in case of multiple animations
					var list = out.split((out = '', animationptn))

					for (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {
						var value = list[i]
						var items = value.split(propertiesptn)

						while (value = items[index]) {
							var peak = value.charCodeAt(0)

							if (keyed === 1 && (
								// letters
								(peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||
								// dash but not in sequence i.e --
								(peak === DASH && value.charCodeAt(1) !== DASH)
							)) {
								// not a number/function
								switch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {
									case 1: {
										switch (value) {
											// not a valid reserved keyword
											case 'infinite': case 'alternate': case 'backwards': case 'running':
											case 'normal': case 'forwards': case 'both': case 'none': case 'linear':
											case 'ease': case 'ease-in': case 'ease-out': case 'ease-in-out':
											case 'paused': case 'reverse': case 'alternate-reverse': case 'inherit':
											case 'initial': case 'unset': case 'step-start': case 'step-end': {
												break
											}
											default: {
												value += key
											}
										}
									}
								}
							}

							items[index++] = value
						}

						out += (i === 0 ? '' : ',') + items.join(' ')
					}
				}
			}

			out = declare + out + ';'

			if (prefix === 1 || (prefix === 2 && vendor(out, 1)))
				return webkit + out + out

			return out
		}

		/**
		 * Isolate
		 *
		 * @param {Array<string>} current
		 */
		function isolate (current) {
			for (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {
				// split individual elements in a selector i.e h1 h2 === [h1, h2]
				var elements = current[i].split(elementptn)
				var out = ''

				for (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {
					// empty element
					if ((size = (element = elements[j]).length) === 0 && l > 1) {
						continue
					}

					tail = out.charCodeAt(out.length-1)
					code = element.charCodeAt(0)
					padding = ''

					if (j !== 0) {
						// determine if we need padding
						switch (tail) {
							case STAR:
							case TILDE:
							case GREATERTHAN:
							case PLUS:
							case SPACE:
							case OPENPARENTHESES:  {
								break
							}
							default: {
								padding = ' '
							}
						}
					}

					switch (code) {
						case AND: {
							element = padding + nscopealt
						}
						case TILDE:
						case GREATERTHAN:
						case PLUS:
						case SPACE:
						case CLOSEPARENTHESES:
						case OPENPARENTHESES: {
							break
						}
						case OPENBRACKET: {
							element = padding + element + nscopealt
							break
						}
						case COLON: {
							switch (element.charCodeAt(1)*2 + element.charCodeAt(2)*3) {
								// :global
								case 530: {
									if (escape > 0) {
										element = padding + element.substring(8, size - 1)
										break
									}
								}
								// :hover, :nth-child(), ...
								default: {
									if (j < 1 || elements[j-1].length < 1) {
										element = padding + nscopealt + element
									}
								}
							}
							break
						}
						case COMMA: {
							padding = ''
						}
						default: {
							if (size > 1 && element.indexOf(':') > 0) {
								element = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')
							} else {
								element = padding + element + nscopealt
							}
						}
					}

					out += element
				}

				selector[i] = out.replace(formatptn, '').trim()
			}

			return selector
		}

		/**
		 * Proxy
		 *
		 * @param {number} context
		 * @param {string} content
		 * @param {Array<string>} selectors
		 * @param {Array<string>} parents
		 * @param {number} line
		 * @param {number} column
		 * @param {number} length
		 * @param {number} id
		 * @param {number} depth
		 * @return {(string|void|*)}
		 */
		function proxy (context, content, selectors, parents, line, column, length, id, depth) {
			for (var i = 0, out = content, next; i < plugged; ++i) {
				switch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth)) {
					case void 0:
					case false:
					case true:
					case null: {
						break
					}
					default: {
						out = next
					}
				}
			}

			switch (out) {
				case void 0:
				case false:
				case true:
				case null:
				case content: {
					break
				}
				default: {
					return out
				}
			}
		}

		/**
		 * Minify
		 *
		 * @param {(string|*)} output
		 * @return {string}
		 */
		function minify (output) {
			return output
				.replace(formatptn, '')
				.replace(beforeptn, '')
				.replace(afterptn, '$1')
				.replace(tailptn, '$1')
				.replace(whiteptn, ' ')
		}

		/**
		 * Use
		 *
		 * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin
		 */
		function use (plugin) {
			switch (plugin) {
				case void 0:
				case null: {
					plugged = plugins.length = 0
					break
				}
				default: {
					switch (plugin.constructor) {
						case Array: {
							for (var i = 0, length = plugin.length; i < length; ++i) {
								use(plugin[i])
							}
							break
						}
						case Function: {
							plugins[plugged++] = plugin
							break
						}
						case Boolean: {
							unkwn = !!plugin|0
						}
					}
				}
	 		}

	 		return use
		}

		/**
		 * Set
		 *
		 * @param {*} options
		 */
		function set (options) {
			for (var name in options) {
				var value = options[name]
				switch (name) {
					case 'keyframe': keyed = value|0; break
					case 'global': escape = value|0; break
					case 'cascade': cascade = value|0; break
					case 'compress': compress = value|0; break
					case 'semicolon': semicolon = value|0; break
					case 'preserve': preserve = value|0; break
					case 'prefix':
						should = null

						if (!value) {
							prefix = 0
						} else if (typeof value !== 'function') {
							prefix = 1
						} else {
							prefix = 2
							should = value
						}
				}
			}

			return set
		}

		/**
		 * Stylis
		 *
		 * @param {string} selector
		 * @param {string} input
		 * @return {*}
		 */
		function stylis (selector, input) {
			if (this !== void 0 && this.constructor === stylis) {
				return factory(selector)
			}

			// setup
			var ns = selector
			var code = ns.charCodeAt(0)

			// trim leading whitespace
			if (code < 33) {
				code = (ns = ns.trim()).charCodeAt(0)
			}

			// keyframe/animation namespace
			if (keyed > 0) {
				key = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')
			}

			// reset, used to assert if a plugin is moneky-patching the return value
			code = 1

			// cascade/isolate
			if (cascade === 1) {
				nscope = ns
			} else {
				nscopealt = ns
			}

			var selectors = [nscope]
			var result

			// execute plugins, pre-process context
			if (plugged > 0) {
				result = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0)

				if (result !== void 0 && typeof result === 'string') {
					input = result
				}
			}

			// build
			var output = compile(array, selectors, input, 0, 0)

			// execute plugins, post-process context
			if (plugged > 0) {
				result = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0)

				// bypass minification
				if (result !== void 0 && typeof(output = result) !== 'string') {
					code = 0
				}
			}

			// reset
			key = ''
			nscope = ''
			nscopealt = ''
			pattern = 0
			line = 1
			column = 1

			return compress*code === 0 ? output : minify(output)
		}

		stylis['use'] = use
		stylis['set'] = set

		if (options !== void 0) {
			set(options)
		}

		return stylis
	}));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(199)(module)))

/***/ }),
/* 269 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');
	var charsLength = chars.length;

	/* Some high number, usually 9-digit base-10. Map it to base-😎 */
	var generateAlphabeticName = function generateAlphabeticName(code) {
	  var name = '';
	  var x = void 0;

	  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {
	    name = chars[x % charsLength] + name;
	  }

	  return chars[x % charsLength] + name;
	};

	exports.default = generateAlphabeticName;
	module.exports = exports['default'];

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _interleave = __webpack_require__(271);

	var _interleave2 = _interopRequireDefault(_interleave);

	var _flatten = __webpack_require__(263);

	var _flatten2 = _interopRequireDefault(_flatten);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_RuleSet = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_RuleSet || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(174).any;

	exports.default = function (strings) {
	  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    interpolations[_key - 1] = arguments[_key];
	  }

	  return (0, _flatten2.default)((0, _interleave2.default)(strings, interpolations));
	};

	module.exports = exports['default'];

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(174).any;

	exports.default = function (strings, interpolations) {
	  return interpolations.reduce(function (array, interp, i) {
	    return array.concat(interp, strings[i + 1]);
	  }, [strings[0]]);
	};

	module.exports = exports['default'];

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _StyleSheet = __webpack_require__(273);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	var _StyleSheetManager = __webpack_require__(277);

	var _StyleSheetManager2 = _interopRequireDefault(_StyleSheetManager);

	var _nonce = __webpack_require__(276);

	var _nonce2 = _interopRequireDefault(_nonce);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	/* eslint-disable no-underscore-dangle */


	var babelPluginFlowReactPropTypes_proptype_Tag = __webpack_require__(273).babelPluginFlowReactPropTypes_proptype_Tag || __webpack_require__(174).any;

	var ServerTag = function () {
	  function ServerTag(isLocal) {
	    _classCallCheck(this, ServerTag);

	    this.isLocal = isLocal;
	    this.components = {};
	    this.size = 0;
	    this.names = [];
	  }

	  ServerTag.prototype.isFull = function isFull() {
	    return false;
	  };

	  ServerTag.prototype.addComponent = function addComponent(componentId) {
	    if (this.components[componentId]) throw new Error('Trying to add Component \'' + componentId + '\' twice!');
	    this.components[componentId] = { componentId: componentId, css: '' };
	    this.size += 1;
	  };

	  ServerTag.prototype.concatenateCSS = function concatenateCSS() {
	    var _this = this;

	    return Object.keys(this.components).reduce(function (styles, k) {
	      return styles + _this.components[k].css;
	    }, '');
	  };

	  ServerTag.prototype.inject = function inject(componentId, css, name) {
	    var comp = this.components[componentId];

	    if (!comp) throw new Error('Must add a new component before you can inject css into it');
	    if (comp.css === '') comp.css = '/* sc-component-id: ' + componentId + ' */\n';

	    comp.css += css.replace(/\n*$/, '\n');

	    if (name) this.names.push(name);
	  };

	  ServerTag.prototype.toHTML = function toHTML() {
	    var attrs = ['type="text/css"', _StyleSheet.SC_ATTR + '="' + this.names.join(' ') + '"', _StyleSheet.LOCAL_ATTR + '="' + (this.isLocal ? 'true' : 'false') + '"'];

	    var nonce = (0, _nonce2.default)();

	    if (nonce) {
	      attrs.push('nonce="' + nonce + '"');
	    }

	    return '<style ' + attrs.join(' ') + '>' + this.concatenateCSS() + '</style>';
	  };

	  ServerTag.prototype.toReactElement = function toReactElement(key) {
	    var _attrs;

	    var attrs = (_attrs = {}, _attrs[_StyleSheet.SC_ATTR] = this.names.join(' '), _attrs[_StyleSheet.LOCAL_ATTR] = this.isLocal.toString(), _attrs);

	    var nonce = (0, _nonce2.default)();

	    if (nonce) {
	      attrs.nonce = nonce;
	    }

	    return _react2.default.createElement('style', _extends({
	      key: key, type: 'text/css' }, attrs, {
	      dangerouslySetInnerHTML: { __html: this.concatenateCSS() }
	    }));
	  };

	  ServerTag.prototype.clone = function clone() {
	    var _this2 = this;

	    var copy = new ServerTag(this.isLocal);
	    copy.names = [].concat(this.names);
	    copy.size = this.size;
	    copy.components = Object.keys(this.components).reduce(function (acc, key) {
	      acc[key] = _extends({}, _this2.components[key]); // eslint-disable-line no-param-reassign
	      return acc;
	    }, {});

	    return copy;
	  };

	  return ServerTag;
	}();

	var ServerStyleSheet = function () {
	  function ServerStyleSheet() {
	    _classCallCheck(this, ServerStyleSheet);

	    this.instance = _StyleSheet2.default.clone(_StyleSheet2.default.instance);
	  }

	  ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {
	    if (this.closed) throw new Error("Can't collect styles once you've called getStyleTags!");
	    return _react2.default.createElement(
	      _StyleSheetManager2.default,
	      { sheet: this.instance },
	      children
	    );
	  };

	  ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {
	    if (!this.closed) {
	      _StyleSheet.clones.splice(_StyleSheet.clones.indexOf(this.instance), 1);
	      this.closed = true;
	    }

	    return this.instance.toHTML();
	  };

	  ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {
	    if (!this.closed) {
	      _StyleSheet.clones.splice(_StyleSheet.clones.indexOf(this.instance), 1);
	      this.closed = true;
	    }

	    return this.instance.toReactElements();
	  };

	  ServerStyleSheet.create = function create() {
	    return new _StyleSheet2.default(function (isLocal) {
	      return new ServerTag(isLocal);
	    });
	  };

	  return ServerStyleSheet;
	}();

	exports.default = ServerStyleSheet;
	module.exports = exports['default'];

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.clones = exports.CONTEXT_KEY = exports.LOCAL_ATTR = exports.SC_ATTR = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _BrowserStyleSheet = __webpack_require__(274);

	var _BrowserStyleSheet2 = _interopRequireDefault(_BrowserStyleSheet);

	var _ServerStyleSheet = __webpack_require__(272);

	var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var SC_ATTR = exports.SC_ATTR = 'data-styled-components';
	var LOCAL_ATTR = exports.LOCAL_ATTR = 'data-styled-components-is-local';
	var CONTEXT_KEY = exports.CONTEXT_KEY = '__styled-components-stylesheet__';

	var instance = null;
	// eslint-disable-next-line no-use-before-define
	var clones = exports.clones = [];

	var StyleSheet = function () {
	  function StyleSheet(tagConstructor) {
	    var tags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
	    var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	    _classCallCheck(this, StyleSheet);

	    this.hashes = {};
	    this.deferredInjections = {};
	    this.stylesCacheable = typeof document !== 'undefined';

	    this.tagConstructor = tagConstructor;
	    this.tags = tags;
	    this.names = names;
	    this.constructComponentTagMap();
	  }
	  // helper for `ComponentStyle` to know when it cache static styles.
	  // staticly styled-component can not safely cache styles on the server
	  // without all `ComponentStyle` instances saving a reference to the
	  // the styleSheet instance they last rendered with,
	  // or listening to creation / reset events. otherwise you might create
	  // a component with one stylesheet and render it another api response
	  // with another, losing styles on from your server-side render.


	  StyleSheet.prototype.constructComponentTagMap = function constructComponentTagMap() {
	    var _this = this;

	    this.componentTags = {};

	    this.tags.forEach(function (tag) {
	      Object.keys(tag.components).forEach(function (componentId) {
	        _this.componentTags[componentId] = tag;
	      });
	    });
	  };

	  /* Best level of caching—get the name from the hash straight away. */


	  StyleSheet.prototype.getName = function getName(hash) {
	    return this.hashes[hash.toString()];
	  };

	  /* Second level of caching—if the name is already in the dom, don't
	   * inject anything and record the hash for getName next time. */


	  StyleSheet.prototype.alreadyInjected = function alreadyInjected(hash, name) {
	    if (!this.names[name]) return false;

	    this.hashes[hash.toString()] = name;
	    return true;
	  };

	  /* Third type of caching—don't inject components' componentId twice. */


	  StyleSheet.prototype.hasInjectedComponent = function hasInjectedComponent(componentId) {
	    return !!this.componentTags[componentId];
	  };

	  StyleSheet.prototype.deferredInject = function deferredInject(componentId, isLocal, css) {
	    if (this === instance) {
	      clones.forEach(function (clone) {
	        clone.deferredInject(componentId, isLocal, css);
	      });
	    }

	    this.getOrCreateTag(componentId, isLocal);
	    this.deferredInjections[componentId] = css;
	  };

	  StyleSheet.prototype.inject = function inject(componentId, isLocal, css, hash, name) {
	    if (this === instance) {
	      clones.forEach(function (clone) {
	        clone.inject(componentId, isLocal, css);
	      });
	    }

	    var tag = this.getOrCreateTag(componentId, isLocal);

	    var deferredInjection = this.deferredInjections[componentId];
	    if (deferredInjection) {
	      tag.inject(componentId, deferredInjection);
	      delete this.deferredInjections[componentId];
	    }

	    tag.inject(componentId, css, name);

	    if (hash && name) {
	      this.hashes[hash.toString()] = name;
	    }
	  };

	  StyleSheet.prototype.toHTML = function toHTML() {
	    return this.tags.map(function (tag) {
	      return tag.toHTML();
	    }).join('');
	  };

	  StyleSheet.prototype.toReactElements = function toReactElements() {
	    return this.tags.map(function (tag, i) {
	      return tag.toReactElement('sc-' + i);
	    });
	  };

	  StyleSheet.prototype.getOrCreateTag = function getOrCreateTag(componentId, isLocal) {
	    var existingTag = this.componentTags[componentId];
	    if (existingTag) {
	      return existingTag;
	    }

	    var lastTag = this.tags[this.tags.length - 1];
	    var componentTag = !lastTag || lastTag.isFull() || lastTag.isLocal !== isLocal ? this.createNewTag(isLocal) : lastTag;
	    this.componentTags[componentId] = componentTag;
	    componentTag.addComponent(componentId);
	    return componentTag;
	  };

	  StyleSheet.prototype.createNewTag = function createNewTag(isLocal) {
	    var newTag = this.tagConstructor(isLocal);
	    this.tags.push(newTag);
	    return newTag;
	  };

	  StyleSheet.reset = function reset(isServer) {
	    instance = StyleSheet.create(isServer);
	  };

	  /* We can make isServer totally implicit once Jest 20 drops and we
	   * can change environment on a per-test basis. */


	  StyleSheet.create = function create() {
	    var isServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typeof document === 'undefined';

	    return (isServer ? _ServerStyleSheet2.default : _BrowserStyleSheet2.default).create();
	  };

	  StyleSheet.clone = function clone(oldSheet) {
	    var newSheet = new StyleSheet(oldSheet.tagConstructor, oldSheet.tags.map(function (tag) {
	      return tag.clone();
	    }), _extends({}, oldSheet.names));

	    newSheet.hashes = _extends({}, oldSheet.hashes);
	    newSheet.deferredInjections = _extends({}, oldSheet.deferredInjections);
	    clones.push(newSheet);

	    return newSheet;
	  };

	  _createClass(StyleSheet, null, [{
	    key: 'instance',
	    get: function get() {
	      return instance || (instance = StyleSheet.create());
	    }
	  }]);

	  return StyleSheet;
	}();

	exports.default = StyleSheet;

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.COMPONENTS_PER_TAG = undefined;

	var _extractCompsFromCSS = __webpack_require__(275);

	var _extractCompsFromCSS2 = _interopRequireDefault(_extractCompsFromCSS);

	var _nonce = __webpack_require__(276);

	var _nonce2 = _interopRequireDefault(_nonce);

	var _StyleSheet = __webpack_require__(273);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	/* eslint-disable no-underscore-dangle */
	/*
	 * Browser Style Sheet with Rehydration
	 *
	 * <style data-styled-components="x y z"
	 *        data-styled-components-is-local="true">
	 *   /· sc-component-id: a ·/
	 *   .sc-a { ... }
	 *   .x { ... }
	 *   /· sc-component-id: b ·/
	 *   .sc-b { ... }
	 *   .y { ... }
	 *   .z { ... }
	 * </style>
	 *
	 * Note: replace · with * in the above snippet.
	 * */


	var babelPluginFlowReactPropTypes_proptype_Tag = __webpack_require__(273).babelPluginFlowReactPropTypes_proptype_Tag || __webpack_require__(174).any;

	var COMPONENTS_PER_TAG = exports.COMPONENTS_PER_TAG = 40;

	var BrowserTag = function () {
	  function BrowserTag(el, isLocal) {
	    var existingSource = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

	    _classCallCheck(this, BrowserTag);

	    this.el = el;
	    this.isLocal = isLocal;
	    this.ready = false;

	    var extractedComps = (0, _extractCompsFromCSS2.default)(existingSource);

	    this.size = extractedComps.length;
	    this.components = extractedComps.reduce(function (acc, obj) {
	      acc[obj.componentId] = obj; // eslint-disable-line no-param-reassign
	      return acc;
	    }, {});
	  }

	  BrowserTag.prototype.isFull = function isFull() {
	    return this.size >= COMPONENTS_PER_TAG;
	  };

	  BrowserTag.prototype.addComponent = function addComponent(componentId) {
	    if (!this.ready) this.replaceElement();
	    if (this.components[componentId]) throw new Error('Trying to add Component \'' + componentId + '\' twice!');

	    var comp = { componentId: componentId, textNode: document.createTextNode('') };
	    this.el.appendChild(comp.textNode);

	    this.size += 1;
	    this.components[componentId] = comp;
	  };

	  BrowserTag.prototype.inject = function inject(componentId, css, name) {
	    if (!this.ready) this.replaceElement();
	    var comp = this.components[componentId];

	    if (!comp) throw new Error('Must add a new component before you can inject css into it');
	    if (comp.textNode.data === '') comp.textNode.appendData('\n/* sc-component-id: ' + componentId + ' */\n');

	    comp.textNode.appendData(css);
	    if (name) {
	      var existingNames = this.el.getAttribute(_StyleSheet.SC_ATTR);
	      this.el.setAttribute(_StyleSheet.SC_ATTR, existingNames ? existingNames + ' ' + name : name);
	    }

	    var nonce = (0, _nonce2.default)();

	    if (nonce) {
	      this.el.setAttribute('nonce', nonce);
	    }
	  };

	  BrowserTag.prototype.toHTML = function toHTML() {
	    return this.el.outerHTML;
	  };

	  BrowserTag.prototype.toReactElement = function toReactElement() {
	    throw new Error('BrowserTag doesn\'t implement toReactElement!');
	  };

	  BrowserTag.prototype.clone = function clone() {
	    throw new Error('BrowserTag cannot be cloned!');
	  };

	  /* Because we care about source order, before we can inject anything we need to
	   * create a text node for each component and replace the existing CSS. */


	  BrowserTag.prototype.replaceElement = function replaceElement() {
	    var _this = this;

	    this.ready = true;
	    // We have nothing to inject. Use the current el.
	    if (this.size === 0) return;

	    // Build up our replacement style tag
	    var newEl = this.el.cloneNode();
	    newEl.appendChild(document.createTextNode('\n'));

	    Object.keys(this.components).forEach(function (key) {
	      var comp = _this.components[key];

	      // eslint-disable-next-line no-param-reassign
	      comp.textNode = document.createTextNode(comp.cssFromDOM);
	      newEl.appendChild(comp.textNode);
	    });

	    if (!this.el.parentNode) throw new Error("Trying to replace an element that wasn't mounted!");

	    // The ol' switcheroo
	    this.el.parentNode.replaceChild(newEl, this.el);
	    this.el = newEl;
	  };

	  return BrowserTag;
	}();

	/* Factory function to separate DOM operations from logical ones*/


	exports.default = {
	  create: function create() {
	    var tags = [];
	    var names = {};

	    /* Construct existing state from DOM */
	    var nodes = document.querySelectorAll('[' + _StyleSheet.SC_ATTR + ']');
	    var nodesLength = nodes.length;

	    for (var i = 0; i < nodesLength; i += 1) {
	      var el = nodes[i];

	      tags.push(new BrowserTag(el, el.getAttribute(_StyleSheet.LOCAL_ATTR) === 'true', el.innerHTML));

	      var attr = el.getAttribute(_StyleSheet.SC_ATTR);
	      if (attr) {
	        attr.trim().split(/\s+/).forEach(function (name) {
	          names[name] = true;
	        });
	      }
	    }

	    /* Factory for making more tags */
	    var tagConstructor = function tagConstructor(isLocal) {
	      var el = document.createElement('style');
	      el.type = 'text/css';
	      el.setAttribute(_StyleSheet.SC_ATTR, '');
	      el.setAttribute(_StyleSheet.LOCAL_ATTR, isLocal ? 'true' : 'false');
	      if (!document.head) throw new Error('Missing document <head>');
	      document.head.appendChild(el);
	      return new BrowserTag(el, isLocal);
	    };

	    return new _StyleSheet2.default(tagConstructor, tags, names);
	  }
	};

/***/ }),
/* 275 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s+(\S+)\s+\*\//mg;

	exports.default = function (maybeCSS) {
	  var css = '' + (maybeCSS || ''); // Definitely a string, and a clone
	  var existingComponents = [];
	  css.replace(SC_COMPONENT_ID, function (match, componentId, matchIndex) {
	    existingComponents.push({ componentId: componentId, matchIndex: matchIndex });
	    return match;
	  });
	  return existingComponents.map(function (_ref, i) {
	    var componentId = _ref.componentId,
	        matchIndex = _ref.matchIndex;

	    var nextComp = existingComponents[i + 1];
	    var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);
	    return { componentId: componentId, cssFromDOM: cssFromDOM };
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 276 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports.default = function () {
	  return typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;
	};
	/* eslint-disable camelcase, no-undef */

	module.exports = exports['default'];

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _StyleSheetManager$ch;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _StyleSheet = __webpack_require__(273);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StyleSheetManager = function (_Component) {
	  _inherits(StyleSheetManager, _Component);

	  function StyleSheetManager() {
	    _classCallCheck(this, StyleSheetManager);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  StyleSheetManager.prototype.getChildContext = function getChildContext() {
	    var _ref;

	    return _ref = {}, _ref[_StyleSheet.CONTEXT_KEY] = this.props.sheet, _ref;
	  };

	  StyleSheetManager.prototype.render = function render() {
	    /* eslint-disable react/prop-types */
	    // Flow v0.43.1 will report an error accessing the `children` property,
	    // but v0.47.0 will not. It is necessary to use a type cast instead of
	    // a "fixme" comment to satisfy both Flow versions.
	    return _react2.default.Children.only(this.props.children);
	  };

	  return StyleSheetManager;
	}(_react.Component);

	StyleSheetManager.childContextTypes = (_StyleSheetManager$ch = {}, _StyleSheetManager$ch[_StyleSheet.CONTEXT_KEY] = _propTypes2.default.instanceOf(_StyleSheet2.default).isRequired, _StyleSheetManager$ch);

	StyleSheetManager.propTypes = {
	  sheet: _propTypes2.default.instanceOf(_StyleSheet2.default).isRequired
	};

	exports.default = StyleSheetManager;
	module.exports = exports['default'];

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createWarnTooManyClasses = __webpack_require__(279);

	var _createWarnTooManyClasses2 = _interopRequireDefault(_createWarnTooManyClasses);

	var _validAttr = __webpack_require__(280);

	var _validAttr2 = _interopRequireDefault(_validAttr);

	var _isTag = __webpack_require__(281);

	var _isTag2 = _interopRequireDefault(_isTag);

	var _isStyledComponent = __webpack_require__(282);

	var _isStyledComponent2 = _interopRequireDefault(_isStyledComponent);

	var _getComponentName = __webpack_require__(283);

	var _getComponentName2 = _interopRequireDefault(_getComponentName);

	var _ThemeProvider = __webpack_require__(284);

	var _StyleSheet = __webpack_require__(273);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var babelPluginFlowReactPropTypes_proptype_Theme = __webpack_require__(284).babelPluginFlowReactPropTypes_proptype_Theme || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_RuleSet = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_RuleSet || __webpack_require__(174).any;

	var escapeRegex = /[[\].#*$><+~=|^:(),"'`]/g;
	var multiDashRegex = /--+/g;

	// HACK for generating all static styles without needing to allocate
	// an empty execution context every single time...
	var STATIC_EXECUTION_CONTEXT = {};

	exports.default = function (ComponentStyle, constructWithOptions) {
	  /* We depend on components having unique IDs */
	  var identifiers = {};
	  var generateId = function generateId(_displayName, parentComponentId) {
	    var displayName = typeof _displayName !== 'string' ? 'sc' : _displayName.replace(escapeRegex, '-') // Replace all possible CSS selectors
	    .replace(multiDashRegex, '-'); // Replace multiple -- with single -

	    var nr = (identifiers[displayName] || 0) + 1;
	    identifiers[displayName] = nr;

	    var hash = ComponentStyle.generateName(displayName + nr);
	    var componentId = displayName + '-' + hash;
	    return parentComponentId !== undefined ? parentComponentId + '-' + componentId : componentId;
	  };

	  var BaseStyledComponent = function (_Component) {
	    _inherits(BaseStyledComponent, _Component);

	    function BaseStyledComponent() {
	      var _temp, _this, _ret;

	      _classCallCheck(this, BaseStyledComponent);

	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.attrs = {}, _this.state = {
	        theme: null,
	        generatedClassName: ''
	      }, _this.unsubscribeId = -1, _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    BaseStyledComponent.prototype.unsubscribeFromContext = function unsubscribeFromContext() {
	      if (this.unsubscribeId !== -1) {
	        this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
	      }
	    };

	    BaseStyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props) {
	      var attrs = this.constructor.attrs;

	      var context = _extends({}, props, { theme: theme });
	      if (attrs === undefined) {
	        return context;
	      }

	      this.attrs = Object.keys(attrs).reduce(function (acc, key) {
	        var attr = attrs[key];
	        // eslint-disable-next-line no-param-reassign
	        acc[key] = typeof attr === 'function' ? attr(context) : attr;
	        return acc;
	      }, {});

	      return _extends({}, context, this.attrs);
	    };

	    BaseStyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
	      var _constructor = this.constructor,
	          attrs = _constructor.attrs,
	          componentStyle = _constructor.componentStyle,
	          warnTooManyClasses = _constructor.warnTooManyClasses;

	      var styleSheet = this.context[_StyleSheet.CONTEXT_KEY] || _StyleSheet2.default.instance;

	      // staticaly styled-components don't need to build an execution context object,
	      // and shouldn't be increasing the number of class names
	      if (componentStyle.isStatic && attrs === undefined) {
	        return componentStyle.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, styleSheet);
	      } else {
	        var executionContext = this.buildExecutionContext(theme, props);
	        var className = componentStyle.generateAndInjectStyles(executionContext, styleSheet);

	        if (warnTooManyClasses !== undefined) warnTooManyClasses(className);

	        return className;
	      }
	    };

	    BaseStyledComponent.prototype.componentWillMount = function componentWillMount() {
	      var _this2 = this;

	      var componentStyle = this.constructor.componentStyle;

	      var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];

	      // If this is a staticaly-styled component, we don't need to the theme
	      // to generate or build styles.
	      if (componentStyle.isStatic) {
	        var generatedClassName = this.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, this.props);
	        this.setState({ generatedClassName: generatedClassName });
	        // If there is a theme in the context, subscribe to the event emitter. This
	        // is necessary due to pure components blocking context updates, this circumvents
	        // that by updating when an event is emitted
	      } else if (styledContext !== undefined) {
	        var subscribe = styledContext.subscribe;

	        this.unsubscribeId = subscribe(function (nextTheme) {
	          // This will be called once immediately

	          // Props should take precedence over ThemeProvider, which should take precedence over
	          // defaultProps, but React automatically puts defaultProps on props.
	          var defaultProps = _this2.constructor.defaultProps;
	          /* eslint-disable react/prop-types */

	          var isDefaultTheme = defaultProps && _this2.props.theme === defaultProps.theme;
	          var theme = _this2.props.theme && !isDefaultTheme ? _this2.props.theme : nextTheme;
	          /* eslint-enable */
	          var generatedClassName = _this2.generateAndInjectStyles(theme, _this2.props);
	          _this2.setState({ theme: theme, generatedClassName: generatedClassName });
	        });
	      } else {
	        // eslint-disable-next-line react/prop-types
	        var _theme = this.props.theme || {};
	        var _generatedClassName = this.generateAndInjectStyles(_theme, this.props);
	        this.setState({ theme: _theme, generatedClassName: _generatedClassName });
	      }
	    };

	    BaseStyledComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var _this3 = this;

	      // If this is a staticaly-styled component, we don't need to listen to
	      // props changes to update styles
	      var componentStyle = this.constructor.componentStyle;

	      if (componentStyle.isStatic) {
	        return;
	      }

	      this.setState(function (oldState) {
	        // Props should take precedence over ThemeProvider, which should take precedence over
	        // defaultProps, but React automatically puts defaultProps on props.
	        var defaultProps = _this3.constructor.defaultProps;
	        /* eslint-disable react/prop-types */

	        var isDefaultTheme = defaultProps && nextProps.theme === defaultProps.theme;
	        var theme = nextProps.theme && !isDefaultTheme ? nextProps.theme : oldState.theme;
	        /* eslint-enable */
	        var generatedClassName = _this3.generateAndInjectStyles(theme, nextProps);

	        return { theme: theme, generatedClassName: generatedClassName };
	      });
	    };

	    BaseStyledComponent.prototype.componentWillUnmount = function componentWillUnmount() {
	      this.unsubscribeFromContext();
	    };

	    BaseStyledComponent.prototype.render = function render() {
	      var _this4 = this;

	      // eslint-disable-next-line react/prop-types
	      var innerRef = this.props.innerRef;
	      var generatedClassName = this.state.generatedClassName;
	      var _constructor2 = this.constructor,
	          styledComponentId = _constructor2.styledComponentId,
	          target = _constructor2.target;


	      var isTargetTag = (0, _isTag2.default)(target);

	      var className = [
	      // eslint-disable-next-line react/prop-types
	      this.props.className, styledComponentId, this.attrs.className, generatedClassName].filter(Boolean).join(' ');

	      var baseProps = _extends({}, this.attrs, {
	        className: className
	      });

	      if ((0, _isStyledComponent2.default)(target)) {
	        baseProps.innerRef = innerRef;
	      } else {
	        baseProps.ref = innerRef;
	      }

	      var propsForElement = Object.keys(this.props).reduce(function (acc, propName) {
	        // Don't pass through non HTML tags through to HTML elements
	        // always omit innerRef
	        if (propName !== 'innerRef' && propName !== 'className' && (!isTargetTag || (0, _validAttr2.default)(propName))) {
	          // eslint-disable-next-line no-param-reassign
	          acc[propName] = _this4.props[propName];
	        }

	        return acc;
	      }, baseProps);

	      return (0, _react.createElement)(target, propsForElement);
	    };

	    return BaseStyledComponent;
	  }(_react.Component);

	  var createStyledComponent = function createStyledComponent(target, options, rules) {
	    var _StyledComponent$cont;

	    var _options$displayName = options.displayName,
	        displayName = _options$displayName === undefined ? (0, _isTag2.default)(target) ? 'styled.' + target : 'Styled(' + (0, _getComponentName2.default)(target) + ')' : _options$displayName,
	        _options$componentId = options.componentId,
	        componentId = _options$componentId === undefined ? generateId(options.displayName, options.parentComponentId) : _options$componentId,
	        _options$ParentCompon = options.ParentComponent,
	        ParentComponent = _options$ParentCompon === undefined ? BaseStyledComponent : _options$ParentCompon,
	        extendingRules = options.rules,
	        attrs = options.attrs;


	    var styledComponentId = options.displayName && options.componentId ? options.displayName + '-' + options.componentId : componentId;

	    var warnTooManyClasses = void 0;
	    if (false) {
	      warnTooManyClasses = (0, _createWarnTooManyClasses2.default)(displayName);
	    }

	    var componentStyle = new ComponentStyle(extendingRules === undefined ? rules : extendingRules.concat(rules), styledComponentId);

	    var StyledComponent = function (_ParentComponent) {
	      _inherits(StyledComponent, _ParentComponent);

	      function StyledComponent() {
	        _classCallCheck(this, StyledComponent);

	        return _possibleConstructorReturn(this, _ParentComponent.apply(this, arguments));
	      }

	      StyledComponent.withComponent = function withComponent(tag) {
	        var previousComponentId = options.componentId,
	            optionsToCopy = _objectWithoutProperties(options, ['componentId']);

	        var newComponentId = previousComponentId && previousComponentId + '-' + ((0, _isTag2.default)(tag) ? tag : (0, _getComponentName2.default)(tag));

	        var newOptions = _extends({}, optionsToCopy, {
	          componentId: newComponentId,
	          ParentComponent: StyledComponent
	        });

	        return createStyledComponent(tag, newOptions, rules);
	      };

	      _createClass(StyledComponent, null, [{
	        key: 'extend',
	        get: function get() {
	          var rulesFromOptions = options.rules,
	              parentComponentId = options.componentId,
	              optionsToCopy = _objectWithoutProperties(options, ['rules', 'componentId']);

	          var newRules = rulesFromOptions === undefined ? rules : rulesFromOptions.concat(rules);

	          var newOptions = _extends({}, optionsToCopy, {
	            rules: newRules,
	            parentComponentId: parentComponentId,
	            ParentComponent: StyledComponent
	          });

	          return constructWithOptions(createStyledComponent, target, newOptions);
	        }
	      }]);

	      return StyledComponent;
	    }(ParentComponent);

	    StyledComponent.contextTypes = (_StyledComponent$cont = {}, _StyledComponent$cont[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _StyledComponent$cont[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _StyledComponent$cont[_StyleSheet.CONTEXT_KEY] = _propTypes2.default.instanceOf(_StyleSheet2.default), _StyledComponent$cont);
	    StyledComponent.displayName = displayName;
	    StyledComponent.styledComponentId = styledComponentId;
	    StyledComponent.attrs = attrs;
	    StyledComponent.componentStyle = componentStyle;
	    StyledComponent.warnTooManyClasses = warnTooManyClasses;
	    StyledComponent.target = target;


	    return StyledComponent;
	  };

	  return createStyledComponent;
	};

	module.exports = exports['default'];

/***/ }),
/* 279 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var LIMIT = 200;

	exports.default = function (displayName) {
	  var generatedClasses = {};
	  var warningSeen = false;

	  return function (className) {
	    if (!warningSeen) {
	      generatedClasses[className] = true;
	      if (Object.keys(generatedClasses).length >= LIMIT) {
	        // Unable to find latestRule in test environment.
	        /* eslint-disable no-console, prefer-template */
	        console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. ' + 'Consider using style property for frequently changed styles.\n' + 'Example:\n' + '  const StyledComp = styled.div`width: 100%;`\n' + '  <StyledComp style={{ background: background }} />');
	        warningSeen = true;
	        generatedClasses = {};
	      }
	    }
	  };
	};

	module.exports = exports['default'];

/***/ }),
/* 280 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	/* Trying to avoid the unknown-prop errors on styled components
	 by filtering by React's attribute whitelist.
	 */

	/* Logic copied from ReactDOMUnknownPropertyHook */
	var reactProps = {
	  children: true,
	  dangerouslySetInnerHTML: true,
	  key: true,
	  ref: true,
	  autoFocus: true,
	  defaultValue: true,
	  valueLink: true,
	  defaultChecked: true,
	  checkedLink: true,
	  innerHTML: true,
	  suppressContentEditableWarning: true,
	  onFocusIn: true,
	  onFocusOut: true,
	  className: true,

	  /* List copied from https://facebook.github.io/react/docs/events.html */
	  onCopy: true,
	  onCut: true,
	  onPaste: true,
	  onCompositionEnd: true,
	  onCompositionStart: true,
	  onCompositionUpdate: true,
	  onKeyDown: true,
	  onKeyPress: true,
	  onKeyUp: true,
	  onFocus: true,
	  onBlur: true,
	  onChange: true,
	  onInput: true,
	  onSubmit: true,
	  onClick: true,
	  onContextMenu: true,
	  onDoubleClick: true,
	  onDrag: true,
	  onDragEnd: true,
	  onDragEnter: true,
	  onDragExit: true,
	  onDragLeave: true,
	  onDragOver: true,
	  onDragStart: true,
	  onDrop: true,
	  onMouseDown: true,
	  onMouseEnter: true,
	  onMouseLeave: true,
	  onMouseMove: true,
	  onMouseOut: true,
	  onMouseOver: true,
	  onMouseUp: true,
	  onSelect: true,
	  onTouchCancel: true,
	  onTouchEnd: true,
	  onTouchMove: true,
	  onTouchStart: true,
	  onScroll: true,
	  onWheel: true,
	  onAbort: true,
	  onCanPlay: true,
	  onCanPlayThrough: true,
	  onDurationChange: true,
	  onEmptied: true,
	  onEncrypted: true,
	  onEnded: true,
	  onError: true,
	  onLoadedData: true,
	  onLoadedMetadata: true,
	  onLoadStart: true,
	  onPause: true,
	  onPlay: true,
	  onPlaying: true,
	  onProgress: true,
	  onRateChange: true,
	  onSeeked: true,
	  onSeeking: true,
	  onStalled: true,
	  onSuspend: true,
	  onTimeUpdate: true,
	  onVolumeChange: true,
	  onWaiting: true,
	  onLoad: true,
	  onAnimationStart: true,
	  onAnimationEnd: true,
	  onAnimationIteration: true,
	  onTransitionEnd: true,

	  onCopyCapture: true,
	  onCutCapture: true,
	  onPasteCapture: true,
	  onCompositionEndCapture: true,
	  onCompositionStartCapture: true,
	  onCompositionUpdateCapture: true,
	  onKeyDownCapture: true,
	  onKeyPressCapture: true,
	  onKeyUpCapture: true,
	  onFocusCapture: true,
	  onBlurCapture: true,
	  onChangeCapture: true,
	  onInputCapture: true,
	  onSubmitCapture: true,
	  onClickCapture: true,
	  onContextMenuCapture: true,
	  onDoubleClickCapture: true,
	  onDragCapture: true,
	  onDragEndCapture: true,
	  onDragEnterCapture: true,
	  onDragExitCapture: true,
	  onDragLeaveCapture: true,
	  onDragOverCapture: true,
	  onDragStartCapture: true,
	  onDropCapture: true,
	  onMouseDownCapture: true,
	  onMouseEnterCapture: true,
	  onMouseLeaveCapture: true,
	  onMouseMoveCapture: true,
	  onMouseOutCapture: true,
	  onMouseOverCapture: true,
	  onMouseUpCapture: true,
	  onSelectCapture: true,
	  onTouchCancelCapture: true,
	  onTouchEndCapture: true,
	  onTouchMoveCapture: true,
	  onTouchStartCapture: true,
	  onScrollCapture: true,
	  onWheelCapture: true,
	  onAbortCapture: true,
	  onCanPlayCapture: true,
	  onCanPlayThroughCapture: true,
	  onDurationChangeCapture: true,
	  onEmptiedCapture: true,
	  onEncryptedCapture: true,
	  onEndedCapture: true,
	  onErrorCapture: true,
	  onLoadedDataCapture: true,
	  onLoadedMetadataCapture: true,
	  onLoadStartCapture: true,
	  onPauseCapture: true,
	  onPlayCapture: true,
	  onPlayingCapture: true,
	  onProgressCapture: true,
	  onRateChangeCapture: true,
	  onSeekedCapture: true,
	  onSeekingCapture: true,
	  onStalledCapture: true,
	  onSuspendCapture: true,
	  onTimeUpdateCapture: true,
	  onVolumeChangeCapture: true,
	  onWaitingCapture: true,
	  onLoadCapture: true,
	  onAnimationStartCapture: true,
	  onAnimationEndCapture: true,
	  onAnimationIterationCapture: true,
	  onTransitionEndCapture: true
	};

	/* From HTMLDOMPropertyConfig */
	var htmlProps = {
	  /**
	   * Standard Properties
	   */
	  accept: true,
	  acceptCharset: true,
	  accessKey: true,
	  action: true,
	  allowFullScreen: true,
	  allowTransparency: true,
	  alt: true,
	  // specifies target context for links with `preload` type
	  as: true,
	  async: true,
	  autoComplete: true,
	  // autoFocus is polyfilled/normalized by AutoFocusUtils
	  // autoFocus: true,
	  autoPlay: true,
	  capture: true,
	  cellPadding: true,
	  cellSpacing: true,
	  charSet: true,
	  challenge: true,
	  checked: true,
	  cite: true,
	  classID: true,
	  className: true,
	  cols: true,
	  colSpan: true,
	  content: true,
	  contentEditable: true,
	  contextMenu: true,
	  controls: true,
	  coords: true,
	  crossOrigin: true,
	  data: true, // For `<object />` acts as `src`.
	  dateTime: true,
	  default: true,
	  defer: true,
	  dir: true,
	  disabled: true,
	  download: true,
	  draggable: true,
	  encType: true,
	  form: true,
	  formAction: true,
	  formEncType: true,
	  formMethod: true,
	  formNoValidate: true,
	  formTarget: true,
	  frameBorder: true,
	  headers: true,
	  height: true,
	  hidden: true,
	  high: true,
	  href: true,
	  hrefLang: true,
	  htmlFor: true,
	  httpEquiv: true,
	  icon: true,
	  id: true,
	  inputMode: true,
	  integrity: true,
	  is: true,
	  keyParams: true,
	  keyType: true,
	  kind: true,
	  label: true,
	  lang: true,
	  list: true,
	  loop: true,
	  low: true,
	  manifest: true,
	  marginHeight: true,
	  marginWidth: true,
	  max: true,
	  maxLength: true,
	  media: true,
	  mediaGroup: true,
	  method: true,
	  min: true,
	  minLength: true,
	  // Caution; `option.selected` is not updated if `select.multiple` is
	  // disabled with `removeAttribute`.
	  multiple: true,
	  muted: true,
	  name: true,
	  nonce: true,
	  noValidate: true,
	  open: true,
	  optimum: true,
	  pattern: true,
	  placeholder: true,
	  playsInline: true,
	  poster: true,
	  preload: true,
	  profile: true,
	  radioGroup: true,
	  readOnly: true,
	  referrerPolicy: true,
	  rel: true,
	  required: true,
	  reversed: true,
	  role: true,
	  rows: true,
	  rowSpan: true,
	  sandbox: true,
	  scope: true,
	  scoped: true,
	  scrolling: true,
	  seamless: true,
	  selected: true,
	  shape: true,
	  size: true,
	  sizes: true,
	  span: true,
	  spellCheck: true,
	  src: true,
	  srcDoc: true,
	  srcLang: true,
	  srcSet: true,
	  start: true,
	  step: true,
	  style: true,
	  summary: true,
	  tabIndex: true,
	  target: true,
	  title: true,
	  // Setting .type throws on non-<input> tags
	  type: true,
	  useMap: true,
	  value: true,
	  width: true,
	  wmode: true,
	  wrap: true,

	  /**
	   * RDFa Properties
	   */
	  about: true,
	  datatype: true,
	  inlist: true,
	  prefix: true,
	  // property is also supported for OpenGraph in meta tags.
	  property: true,
	  resource: true,
	  typeof: true,
	  vocab: true,

	  /**
	   * Non-standard Properties
	   */
	  // autoCapitalize and autoCorrect are supported in Mobile Safari for
	  // keyboard hints.
	  autoCapitalize: true,
	  autoCorrect: true,
	  // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	  autoSave: true,
	  // color is for Safari mask-icon link
	  color: true,
	  // itemProp, itemScope, itemType are for
	  // Microdata support. See http://schema.org/docs/gs.html
	  itemProp: true,
	  itemScope: true,
	  itemType: true,
	  // itemID and itemRef are for Microdata support as well but
	  // only specified in the WHATWG spec document. See
	  // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	  itemID: true,
	  itemRef: true,
	  // results show looking glass icon and recent searches on input
	  // search fields in WebKit/Blink
	  results: true,
	  // IE-only attribute that specifies security restrictions on an iframe
	  // as an alternative to the sandbox attribute on IE<10
	  security: true,
	  // IE-only attribute that controls focus behavior
	  unselectable: 0
	};

	var svgProps = {
	  accentHeight: true,
	  accumulate: true,
	  additive: true,
	  alignmentBaseline: true,
	  allowReorder: true,
	  alphabetic: true,
	  amplitude: true,
	  arabicForm: true,
	  ascent: true,
	  attributeName: true,
	  attributeType: true,
	  autoReverse: true,
	  azimuth: true,
	  baseFrequency: true,
	  baseProfile: true,
	  baselineShift: true,
	  bbox: true,
	  begin: true,
	  bias: true,
	  by: true,
	  calcMode: true,
	  capHeight: true,
	  clip: true,
	  clipPath: true,
	  clipRule: true,
	  clipPathUnits: true,
	  colorInterpolation: true,
	  colorInterpolationFilters: true,
	  colorProfile: true,
	  colorRendering: true,
	  contentScriptType: true,
	  contentStyleType: true,
	  cursor: true,
	  cx: true,
	  cy: true,
	  d: true,
	  decelerate: true,
	  descent: true,
	  diffuseConstant: true,
	  direction: true,
	  display: true,
	  divisor: true,
	  dominantBaseline: true,
	  dur: true,
	  dx: true,
	  dy: true,
	  edgeMode: true,
	  elevation: true,
	  enableBackground: true,
	  end: true,
	  exponent: true,
	  externalResourcesRequired: true,
	  fill: true,
	  fillOpacity: true,
	  fillRule: true,
	  filter: true,
	  filterRes: true,
	  filterUnits: true,
	  floodColor: true,
	  floodOpacity: true,
	  focusable: true,
	  fontFamily: true,
	  fontSize: true,
	  fontSizeAdjust: true,
	  fontStretch: true,
	  fontStyle: true,
	  fontVariant: true,
	  fontWeight: true,
	  format: true,
	  from: true,
	  fx: true,
	  fy: true,
	  g1: true,
	  g2: true,
	  glyphName: true,
	  glyphOrientationHorizontal: true,
	  glyphOrientationVertical: true,
	  glyphRef: true,
	  gradientTransform: true,
	  gradientUnits: true,
	  hanging: true,
	  horizAdvX: true,
	  horizOriginX: true,
	  ideographic: true,
	  imageRendering: true,
	  in: true,
	  in2: true,
	  intercept: true,
	  k: true,
	  k1: true,
	  k2: true,
	  k3: true,
	  k4: true,
	  kernelMatrix: true,
	  kernelUnitLength: true,
	  kerning: true,
	  keyPoints: true,
	  keySplines: true,
	  keyTimes: true,
	  lengthAdjust: true,
	  letterSpacing: true,
	  lightingColor: true,
	  limitingConeAngle: true,
	  local: true,
	  markerEnd: true,
	  markerMid: true,
	  markerStart: true,
	  markerHeight: true,
	  markerUnits: true,
	  markerWidth: true,
	  mask: true,
	  maskContentUnits: true,
	  maskUnits: true,
	  mathematical: true,
	  mode: true,
	  numOctaves: true,
	  offset: true,
	  opacity: true,
	  operator: true,
	  order: true,
	  orient: true,
	  orientation: true,
	  origin: true,
	  overflow: true,
	  overlinePosition: true,
	  overlineThickness: true,
	  paintOrder: true,
	  panose1: true,
	  pathLength: true,
	  patternContentUnits: true,
	  patternTransform: true,
	  patternUnits: true,
	  pointerEvents: true,
	  points: true,
	  pointsAtX: true,
	  pointsAtY: true,
	  pointsAtZ: true,
	  preserveAlpha: true,
	  preserveAspectRatio: true,
	  primitiveUnits: true,
	  r: true,
	  radius: true,
	  refX: true,
	  refY: true,
	  renderingIntent: true,
	  repeatCount: true,
	  repeatDur: true,
	  requiredExtensions: true,
	  requiredFeatures: true,
	  restart: true,
	  result: true,
	  rotate: true,
	  rx: true,
	  ry: true,
	  scale: true,
	  seed: true,
	  shapeRendering: true,
	  slope: true,
	  spacing: true,
	  specularConstant: true,
	  specularExponent: true,
	  speed: true,
	  spreadMethod: true,
	  startOffset: true,
	  stdDeviation: true,
	  stemh: true,
	  stemv: true,
	  stitchTiles: true,
	  stopColor: true,
	  stopOpacity: true,
	  strikethroughPosition: true,
	  strikethroughThickness: true,
	  string: true,
	  stroke: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeLinecap: true,
	  strokeLinejoin: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true,
	  surfaceScale: true,
	  systemLanguage: true,
	  tableValues: true,
	  targetX: true,
	  targetY: true,
	  textAnchor: true,
	  textDecoration: true,
	  textRendering: true,
	  textLength: true,
	  to: true,
	  transform: true,
	  u1: true,
	  u2: true,
	  underlinePosition: true,
	  underlineThickness: true,
	  unicode: true,
	  unicodeBidi: true,
	  unicodeRange: true,
	  unitsPerEm: true,
	  vAlphabetic: true,
	  vHanging: true,
	  vIdeographic: true,
	  vMathematical: true,
	  values: true,
	  vectorEffect: true,
	  version: true,
	  vertAdvY: true,
	  vertOriginX: true,
	  vertOriginY: true,
	  viewBox: true,
	  viewTarget: true,
	  visibility: true,
	  widths: true,
	  wordSpacing: true,
	  writingMode: true,
	  x: true,
	  xHeight: true,
	  x1: true,
	  x2: true,
	  xChannelSelector: true,
	  xlinkActuate: true,
	  xlinkArcrole: true,
	  xlinkHref: true,
	  xlinkRole: true,
	  xlinkShow: true,
	  xlinkTitle: true,
	  xlinkType: true,
	  xmlBase: true,
	  xmlns: true,
	  xmlnsXlink: true,
	  xmlLang: true,
	  xmlSpace: true,
	  y: true,
	  y1: true,
	  y2: true,
	  yChannelSelector: true,
	  z: true,
	  zoomAndPan: true
	};

	/* From DOMProperty */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
	var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));

	var hasOwnProperty = {}.hasOwnProperty;

	exports.default = function (name) {
	  return hasOwnProperty.call(htmlProps, name) || hasOwnProperty.call(svgProps, name) || isCustomAttribute(name.toLowerCase()) || hasOwnProperty.call(reactProps, name);
	};

	module.exports = exports['default'];

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = isTag;

	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(174).any;

	function isTag(target) /* : %checks */{
	  return typeof target === 'string';
	}
	module.exports = exports['default'];

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = isStyledComponent;

	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(174).any;

	function isStyledComponent(target) /* : %checks */{
	  return typeof target === 'function' && typeof target.styledComponentId === 'string';
	}
	module.exports = exports['default'];

/***/ }),
/* 283 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = getComponentName;


	/* eslint-disable no-undef */
	function getComponentName(target) {
	  return target.displayName || target.name || 'Component';
	}
	module.exports = exports['default'];

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.CONTEXT_CHANNEL_SHAPE = exports.CHANNEL_NEXT = exports.CHANNEL = undefined;

	var _ThemeProvider$childC, _ThemeProvider$contex;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _isFunction = __webpack_require__(285);

	var _isFunction2 = _interopRequireDefault(_isFunction);

	var _isPlainObject = __webpack_require__(264);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _createBroadcast = __webpack_require__(286);

	var _createBroadcast2 = _interopRequireDefault(_createBroadcast);

	var _once = __webpack_require__(287);

	var _once2 = _interopRequireDefault(_once);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	/* globals React$Element */


	var babelPluginFlowReactPropTypes_proptype_Broadcast = __webpack_require__(286).babelPluginFlowReactPropTypes_proptype_Broadcast || __webpack_require__(174).any;

	// NOTE: DO NOT CHANGE, changing this is a semver major change!
	var CHANNEL = exports.CHANNEL = '__styled-components__';
	var CHANNEL_NEXT = exports.CHANNEL_NEXT = CHANNEL + 'next__';

	var CONTEXT_CHANNEL_SHAPE = exports.CONTEXT_CHANNEL_SHAPE = _propTypes2.default.shape({
	  getTheme: _propTypes2.default.func,
	  subscribe: _propTypes2.default.func,
	  unsubscribe: _propTypes2.default.func
	});

	if (true) Object.defineProperty(exports, 'babelPluginFlowReactPropTypes_proptype_Theme', {
	  value: __webpack_require__(174).shape({})
	});


	var warnChannelDeprecated = (0, _once2.default)(function () {
	  // eslint-disable-next-line no-console
	  console.error('Warning: Usage of `context.' + CHANNEL + '` as a function is deprecated. It will be replaced with the object on `.context.' + CHANNEL_NEXT + '` in a future version.');
	});
	/**
	 * Provide a theme to an entire react component tree via context and event listeners (have to do
	 * both context and event emitter as pure components block context updates)
	 */

	var ThemeProvider = function (_Component) {
	  _inherits(ThemeProvider, _Component);

	  function ThemeProvider() {
	    _classCallCheck(this, ThemeProvider);

	    var _this = _possibleConstructorReturn(this, _Component.call(this));

	    _this.unsubscribeToOuterId = -1;

	    _this.getTheme = _this.getTheme.bind(_this);
	    return _this;
	  }

	  ThemeProvider.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;

	    // If there is a ThemeProvider wrapper anywhere around this theme provider, merge this theme
	    // with the outer theme
	    var outerContext = this.context[CHANNEL_NEXT];
	    if (outerContext !== undefined) {
	      this.unsubscribeToOuterId = outerContext.subscribe(function (theme) {
	        _this2.outerTheme = theme;
	      });
	    }
	    this.broadcast = (0, _createBroadcast2.default)(this.getTheme());
	  };

	  ThemeProvider.prototype.getChildContext = function getChildContext() {
	    var _this3 = this,
	        _extends2;

	    return _extends({}, this.context, (_extends2 = {}, _extends2[CHANNEL_NEXT] = {
	      getTheme: this.getTheme,
	      subscribe: this.broadcast.subscribe,
	      unsubscribe: this.broadcast.unsubscribe
	    }, _extends2[CHANNEL] = function (subscriber) {
	      warnChannelDeprecated();

	      // Patch the old `subscribe` provide via `CHANNEL` for older clients.
	      var unsubscribeId = _this3.broadcast.subscribe(subscriber);
	      return function () {
	        return _this3.broadcast.unsubscribe(unsubscribeId);
	      };
	    }, _extends2));
	  };

	  ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (this.props.theme !== nextProps.theme) this.broadcast.publish(this.getTheme(nextProps.theme));
	  };

	  ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this.unsubscribeToOuterId !== -1) {
	      this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeToOuterId);
	    }
	  };

	  // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation


	  ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {
	    var theme = passedTheme || this.props.theme;
	    if ((0, _isFunction2.default)(theme)) {
	      var mergedTheme = theme(this.outerTheme);
	      if (!(0, _isPlainObject2.default)(mergedTheme)) {
	        throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');
	      }
	      return mergedTheme;
	    }
	    if (!(0, _isPlainObject2.default)(theme)) {
	      throw new Error('[ThemeProvider] Please make your theme prop a plain object');
	    }
	    return _extends({}, this.outerTheme, theme);
	  };

	  ThemeProvider.prototype.render = function render() {
	    if (!this.props.children) {
	      return null;
	    }
	    return _react2.default.Children.only(this.props.children);
	  };

	  return ThemeProvider;
	}(_react.Component);

	ThemeProvider.propTypes = {
	  children: __webpack_require__(174).any,
	  theme: __webpack_require__(174).oneOfType([__webpack_require__(174).shape({}), __webpack_require__(174).func]).isRequired
	};


	ThemeProvider.childContextTypes = (_ThemeProvider$childC = {}, _ThemeProvider$childC[CHANNEL] = _propTypes2.default.func, _ThemeProvider$childC[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$childC);
	ThemeProvider.contextTypes = (_ThemeProvider$contex = {}, _ThemeProvider$contex[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$contex);

	exports.default = ThemeProvider;

/***/ }),
/* 285 */
/***/ (function(module, exports) {

	module.exports = isFunction

	var toString = Object.prototype.toString

	function isFunction (fn) {
	  var string = toString.call(fn)
	  return string === '[object Function]' ||
	    (typeof fn === 'function' && string !== '[object RegExp]') ||
	    (typeof window !== 'undefined' &&
	     // IE8 and below
	     (fn === window.setTimeout ||
	      fn === window.alert ||
	      fn === window.confirm ||
	      fn === window.prompt))
	};


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;
	if (true) Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_Broadcast", {
	  value: __webpack_require__(174).shape({
	    publish: __webpack_require__(174).func.isRequired,
	    subscribe: __webpack_require__(174).func.isRequired,
	    unsubscribe: __webpack_require__(174).func.isRequired
	  })
	});
	/**
	 * Creates a broadcast that can be listened to, i.e. simple event emitter
	 *
	 * @see https://github.com/ReactTraining/react-broadcast
	 */

	var createBroadcast = function createBroadcast(initialState) {
	  var listeners = {};
	  var id = 0;
	  var state = initialState;

	  function publish(nextState) {
	    state = nextState;

	    // eslint-disable-next-line guard-for-in, no-restricted-syntax
	    for (var key in listeners) {
	      var _listener = listeners[key];
	      if (_listener === undefined) {
	        // eslint-disable-next-line no-continue
	        continue;
	      }

	      _listener(state);
	    }
	  }

	  function subscribe(listener) {
	    var currentId = id;
	    listeners[currentId] = listener;
	    id += 1;
	    listener(state);
	    return currentId;
	  }

	  function unsubscribe(unsubID) {
	    listeners[unsubID] = undefined;
	  }

	  return { publish: publish, subscribe: subscribe, unsubscribe: unsubscribe };
	};

	exports.default = createBroadcast;
	module.exports = exports["default"];

/***/ }),
/* 287 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	// Helper to call a given function, only once
	exports.default = function (cb) {
	  var called = false;

	  return function () {
	    if (!called) {
	      called = true;
	      cb();
	    }
	  };
	};

	module.exports = exports["default"];

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _hash = __webpack_require__(289);

	var _hash2 = _interopRequireDefault(_hash);

	var _StyleSheet = __webpack_require__(273);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	var _isStyledComponent = __webpack_require__(282);

	var _isStyledComponent2 = _interopRequireDefault(_isStyledComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var babelPluginFlowReactPropTypes_proptype_Stringifier = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Stringifier || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Flattener = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Flattener || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_NameGenerator = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_NameGenerator || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_RuleSet = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_RuleSet || __webpack_require__(174).any;

	var isStaticRules = function isStaticRules(rules) {
	  for (var i = 0; i < rules.length; i += 1) {
	    var rule = rules[i];

	    // recursive case
	    if (Array.isArray(rule) && !isStaticRules(rule)) {
	      return false;
	    } else if (typeof rule === 'function' && !(0, _isStyledComponent2.default)(rule)) {
	      // functions are allowed to be static if they're just being
	      // used to get the classname of a nested styled copmonent
	      return false;
	    }
	  }

	  return true;
	};

	/*
	 ComponentStyle is all the CSS-specific stuff, not
	 the React-specific stuff.
	 */

	exports.default = function (nameGenerator, flatten, stringifyRules) {
	  var ComponentStyle = function () {
	    function ComponentStyle(rules, componentId) {
	      _classCallCheck(this, ComponentStyle);

	      this.rules = rules;
	      this.isStatic = isStaticRules(rules);
	      this.componentId = componentId;
	      if (!_StyleSheet2.default.instance.hasInjectedComponent(this.componentId)) {
	        var placeholder =  false ? '.' + componentId + ' {}' : '';
	        _StyleSheet2.default.instance.deferredInject(componentId, true, placeholder);
	      }
	    }

	    /*
	     * Flattens a rule set into valid CSS
	     * Hashes it, wraps the whole chunk in a .hash1234 {}
	     * Returns the hash to be injected on render()
	     * */


	    ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {
	      var isStatic = this.isStatic,
	          lastClassName = this.lastClassName;

	      if (isStatic && lastClassName !== undefined) {
	        return lastClassName;
	      }

	      var flatCSS = flatten(this.rules, executionContext);
	      var hash = (0, _hash2.default)(this.componentId + flatCSS.join(''));

	      var existingName = styleSheet.getName(hash);
	      if (existingName !== undefined) {
	        if (styleSheet.stylesCacheable) {
	          this.lastClassName = existingName;
	        }
	        return existingName;
	      }

	      var name = nameGenerator(hash);
	      if (styleSheet.stylesCacheable) {
	        this.lastClassName = existingName;
	      }
	      if (styleSheet.alreadyInjected(hash, name)) {
	        return name;
	      }

	      var css = '\n' + stringifyRules(flatCSS, '.' + name);
	      // NOTE: this can only be set when we inject the class-name.
	      // For some reason, presumably due to how css is stringifyRules behaves in
	      // differently between client and server, styles break.
	      styleSheet.inject(this.componentId, true, css, hash, name);
	      return name;
	    };

	    ComponentStyle.generateName = function generateName(str) {
	      return nameGenerator((0, _hash2.default)(str));
	    };

	    return ComponentStyle;
	  }();

	  return ComponentStyle;
	};

	module.exports = exports['default'];

/***/ }),
/* 289 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.default = doHash;
	// murmurhash2 via https://gist.github.com/raycmorgan/588423

	function doHash(str, seed) {
	  var m = 0x5bd1e995;
	  var r = 24;
	  var h = seed ^ str.length;
	  var length = str.length;
	  var currentIndex = 0;

	  while (length >= 4) {
	    var k = UInt32(str, currentIndex);

	    k = Umul32(k, m);
	    k ^= k >>> r;
	    k = Umul32(k, m);

	    h = Umul32(h, m);
	    h ^= k;

	    currentIndex += 4;
	    length -= 4;
	  }

	  switch (length) {
	    case 3:
	      h ^= UInt16(str, currentIndex);
	      h ^= str.charCodeAt(currentIndex + 2) << 16;
	      h = Umul32(h, m);
	      break;

	    case 2:
	      h ^= UInt16(str, currentIndex);
	      h = Umul32(h, m);
	      break;

	    case 1:
	      h ^= str.charCodeAt(currentIndex);
	      h = Umul32(h, m);
	      break;
	  }

	  h ^= h >>> 13;
	  h = Umul32(h, m);
	  h ^= h >>> 15;

	  return h >>> 0;
	}

	function UInt32(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
	}

	function UInt16(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
	}

	function Umul32(n, m) {
	  n = n | 0;
	  m = m | 0;
	  var nlo = n & 0xffff;
	  var nhi = n >>> 16;
	  var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
	  return res;
	}
	module.exports = exports["default"];

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _domElements = __webpack_require__(291);

	var _domElements2 = _interopRequireDefault(_domElements);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(174).any;

	exports.default = function (styledComponent, constructWithOptions) {
	  var styled = function styled(tag) {
	    return constructWithOptions(styledComponent, tag);
	  };

	  // Shorthands for all valid HTML Elements
	  _domElements2.default.forEach(function (domElement) {
	    styled[domElement] = styled(domElement);
	  });

	  return styled;
	};

	module.exports = exports['default'];

/***/ }),
/* 291 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	// Thanks to ReactDOMFactories for this handy list!

	exports.default = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',

	// SVG
	'circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];
	module.exports = exports['default'];

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _hash = __webpack_require__(289);

	var _hash2 = _interopRequireDefault(_hash);

	var _StyleSheet = __webpack_require__(273);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Stringifier = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Stringifier || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_NameGenerator = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_NameGenerator || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(174).any;

	var replaceWhitespace = function replaceWhitespace(str) {
	  return str.replace(/\s|\\n/g, '');
	};

	exports.default = function (nameGenerator, stringifyRules, css) {
	  return function (strings) {
	    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      interpolations[_key - 1] = arguments[_key];
	    }

	    var rules = css.apply(undefined, [strings].concat(interpolations));
	    var hash = (0, _hash2.default)(replaceWhitespace(JSON.stringify(rules)));

	    var existingName = _StyleSheet2.default.instance.getName(hash);
	    if (existingName) return existingName;

	    var name = nameGenerator(hash);
	    if (_StyleSheet2.default.instance.alreadyInjected(hash, name)) return name;

	    var generatedCSS = stringifyRules(rules, name, '@keyframes');
	    _StyleSheet2.default.instance.inject('sc-keyframes-' + name, true, generatedCSS, hash, name);
	    return name;
	  };
	};

	module.exports = exports['default'];

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _hash = __webpack_require__(289);

	var _hash2 = _interopRequireDefault(_hash);

	var _StyleSheet = __webpack_require__(273);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Stringifier = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Stringifier || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(174).any;

	exports.default = function (stringifyRules, css) {
	  var injectGlobal = function injectGlobal(strings) {
	    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      interpolations[_key - 1] = arguments[_key];
	    }

	    var rules = css.apply(undefined, [strings].concat(interpolations));
	    var hash = (0, _hash2.default)(JSON.stringify(rules));

	    var componentId = 'sc-global-' + hash;
	    if (_StyleSheet2.default.instance.hasInjectedComponent(componentId)) return;

	    _StyleSheet2.default.instance.inject(componentId, false, stringifyRules(rules));
	  };

	  return injectGlobal;
	};

	module.exports = exports['default'];

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(266).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(174).any;

	exports.default = function (css) {
	  var constructWithOptions = function constructWithOptions(componentConstructor, tag) {
	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	    if (typeof tag !== 'string' && typeof tag !== 'function') {
	      // $FlowInvalidInputTest
	      throw new Error('Cannot create styled-component for component: ' + tag);
	    }

	    /* This is callable directly as a template function */
	    var templateFunction = function templateFunction(strings) {
	      for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        interpolations[_key - 1] = arguments[_key];
	      }

	      return componentConstructor(tag, options, css.apply(undefined, [strings].concat(interpolations)));
	    };

	    /* If config methods are called, wrap up a new template function and merge options */
	    templateFunction.withConfig = function (config) {
	      return constructWithOptions(componentConstructor, tag, _extends({}, options, config));
	    };
	    templateFunction.attrs = function (attrs) {
	      return constructWithOptions(componentConstructor, tag, _extends({}, options, {
	        attrs: _extends({}, options.attrs || {}, attrs) }));
	    };

	    return templateFunction;
	  };

	  return constructWithOptions;
	};

	module.exports = exports['default'];

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _hoistNonReactStatics = __webpack_require__(296);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _ThemeProvider = __webpack_require__(284);

	var _isStyledComponent2 = __webpack_require__(282);

	var _isStyledComponent3 = _interopRequireDefault(_isStyledComponent2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	/* globals ReactClass */

	var wrapWithTheme = function wrapWithTheme(Component) {
	  var _WithTheme$contextTyp;

	  var componentName = Component.displayName || Component.name || 'Component';

	  var isStyledComponent = (0, _isStyledComponent3.default)(Component);

	  var WithTheme = function (_React$Component) {
	    _inherits(WithTheme, _React$Component);

	    function WithTheme() {
	      var _temp, _this, _ret;

	      _classCallCheck(this, WithTheme);

	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.unsubscribeId = -1, _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    // NOTE: This is so that isStyledComponent passes for the innerRef unwrapping


	    WithTheme.prototype.componentWillMount = function componentWillMount() {
	      var _this2 = this;

	      var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];
	      if (styledContext === undefined) {
	        // eslint-disable-next-line no-console
	        console.error('[withTheme] Please use ThemeProvider to be able to use withTheme');
	        return;
	      }

	      var subscribe = styledContext.subscribe;

	      this.unsubscribeId = subscribe(function (theme) {
	        _this2.setState({ theme: theme });
	      });
	    };

	    WithTheme.prototype.componentWillUnmount = function componentWillUnmount() {
	      if (this.unsubscribeId !== -1) {
	        this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
	      }
	    };

	    WithTheme.prototype.render = function render() {
	      // eslint-disable-next-line react/prop-types
	      var innerRef = this.props.innerRef;
	      var theme = this.state.theme;


	      return _react2.default.createElement(Component, _extends({
	        theme: theme
	      }, this.props, {
	        innerRef: isStyledComponent ? innerRef : undefined,
	        ref: isStyledComponent ? undefined : innerRef
	      }));
	    };

	    return WithTheme;
	  }(_react2.default.Component);

	  WithTheme.displayName = 'WithTheme(' + componentName + ')';
	  WithTheme.styledComponentId = 'withTheme';
	  WithTheme.contextTypes = (_WithTheme$contextTyp = {}, _WithTheme$contextTyp[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _WithTheme$contextTyp[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _WithTheme$contextTyp);


	  return (0, _hoistNonReactStatics2.default)(WithTheme, Component);
	};

	exports.default = wrapWithTheme;
	module.exports = exports['default'];

/***/ }),
/* 296 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);

	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {

	                }
	            }
	        }
	    }

	    return targetComponent;
	};


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

	// Adapted from ReactART:
	// https://github.com/reactjs/react-art

	var Konva = __webpack_require__(298);
	var React = __webpack_require__(4);

	var PropTypes = __webpack_require__(174);
	var createClass = __webpack_require__(299);

	var ReactInstanceMap = __webpack_require__(113);
	var ReactMultiChild = __webpack_require__(111);
	var ReactUpdates = __webpack_require__(57);

	var assign = __webpack_require__(5);
	var emptyObject = __webpack_require__(12);

	// some patching to make Konva.Node looks like DOM nodes
	var oldAdd = Konva.Container.prototype.add;
	Konva.Container.prototype.add = function(child) {
	  child.parentNode = this;
	  oldAdd.apply(this, arguments);
	};

	Konva.Container.prototype.replaceChild = function(newChild, oldChild) {
	  var index = oldChild.index;
	  var parent = oldChild.parent;
	  oldChild.destroy();
	  oldChild.parentNode = null;
	  parent.add(newChild);
	  if (newChild.index !== index) {
	    newChild.setZIndex(index);
	  }
	  parent.getLayer().batchDraw();
	};

	function createComponent(name) {
	  var ReactKonvaComponent = function(element) {
	    this.node = null;
	    this.subscriptions = null;
	    this.listeners = null;
	    this._mountImage = null;
	    this._renderedChildren = null;
	    this._mostRecentlyPlacedChild = null;
	    this._nativeContainerInfo = null;
	    this._initialProps = element.props;
	    this._currentElement = element;
	  };

	  ReactKonvaComponent.displayName = name;

	  for (var i = 1, l = arguments.length; i < l; i++) {
	    assign(ReactKonvaComponent.prototype, arguments[i]);
	  }

	  return ReactKonvaComponent;
	}

	var ContainerMixin = assign({}, ReactMultiChild.Mixin, {
	  moveChild: function(prevChild, lastPlacedNode, nextIndex, lastIndex) {
	    var childNode = prevChild._mountImage.node;
	    if (childNode.index !== nextIndex) {
	      childNode.setZIndex(nextIndex);
	      var layer = childNode.getLayer();
	      layer && layer.batchDraw();
	    }
	  },
	  createChild: function(child, afterNode, mountImage) {
	    child._mountImage = mountImage;
	    var childNode = mountImage.node;
	    childNode.moveTo(this.node);
	    childNode.parentNode = this.node;
	    if (child._mountIndex !== childNode.index) {
	      childNode.setZIndex(child._mountIndex);
	    }
	    this._mostRecentlyPlacedChild = childNode;
	    var layer = childNode.getLayer();
	    layer && layer.batchDraw();
	  },
	  removeChild: function(child, node) {
	    var layer = child._mountImage.node.getLayer();
	    child._mountImage.node.destroy();
	    child._mountImage.node.parentNode = null;
	    layer && layer.batchDraw();
	    child._mountImage = null;
	  },
	  updateChildrenAtRoot: function(nextChildren, transaction) {
	    this.updateChildren(nextChildren, transaction, emptyObject);
	  },
	  mountAndInjectChildrenAtRoot: function(children, transaction) {
	    this.mountAndInjectChildren(children, transaction, emptyObject);
	  },
	  updateChildren: function(nextChildren, transaction, context) {
	    this._mostRecentlyPlacedChild = null;
	    this._updateChildren(nextChildren, transaction, context);
	  },
	  mountAndInjectChildren: function(children, transaction, context) {
	    var mountedImages = this.mountChildren(children, transaction, context);
	    // Each mount image corresponds to one of the flattened children
	    var i = 0;
	    for (var key in this._renderedChildren) {
	      if (this._renderedChildren.hasOwnProperty(key)) {
	        var child = this._renderedChildren[key];
	        child._mountImage = mountedImages[i];
	        // runtime check for moveTo method
	        // it is possible that child component with be not Konva.Node instance
	        // for instance <noscript> for null element
	        var node = mountedImages[i].node;
	        if (!node instanceof Konva.Node) {
	          var message = 'Looks like one of child element is not Konva.Node.' +
	            'react-konva do not support in for now.';
	          ('if you have empty(null) child, replace it with <Group/>');
	          console.error(message, this);
	          continue;
	        }
	        if (node.parent !== this.node) {
	          node.moveTo(this.node);
	        }
	        i++;
	      }
	    }
	  },
	  mountAndAddChildren: function() {
	    console.log('mountAndAddChildren');
	  }
	});

	var propsToSkip = { children: true, ref: true, key: true, style: true };

	var NodeMixin = {
	  construct: function(element) {
	    this._currentElement = element;
	  },
	  receiveComponent: function(nextComponent, transaction, context) {
	    var props = nextComponent.props;
	    var oldProps = this._currentElement.props || this._initialProps;
	    this.applyNodeProps(oldProps, props);
	    this.updateChildren(props.children, transaction, context);
	    this._currentElement = nextComponent;
	  },
	  getPublicInstance: function() {
	    return this.node;
	  },
	  putEventListener: function(type, listener) {
	    // NOPE...
	  },
	  handleEvent: function(event) {
	    // NOPE...
	  },
	  getNativeNode: function() {
	    return this.node;
	  },
	  applyNodeProps: function(oldProps, props) {
	    var updatedProps = {};
	    var hasUpdates = false;
	    for (var key in oldProps) {
	      if (propsToSkip[key]) {
	        continue;
	      }
	      var isEvent = key.slice(0, 2) === 'on';
	      var propChanged = oldProps[key] !== props[key];
	      if (isEvent && propChanged) {
	        var eventName = key.substr(2).toLowerCase();
	        if (eventName.substr(0, 7) === 'content') {
	          eventName = 'content' +
	            eventName.substr(7, 1).toUpperCase() +
	            eventName.substr(8);
	        }
	        this.node.off(eventName, oldProps[key]);
	      }
	      var toRemove = !props.hasOwnProperty(key);
	      if (toRemove) {
	        this.node.setAttr(key, undefined);
	      }
	    }
	    for (var key in props) {
	      if (propsToSkip[key]) {
	        continue;
	      }
	      var isEvent = key.slice(0, 2) === 'on';
	      var toAdd = oldProps[key] !== props[key];
	      if (isEvent && toAdd) {
	        var eventName = key.substr(2).toLowerCase();
	        if (eventName.substr(0, 7) === 'content') {
	          eventName = 'content' +
	            eventName.substr(7, 1).toUpperCase() +
	            eventName.substr(8);
	        }
	        this.node.on(eventName, props[key]);
	      }
	      if (
	        !isEvent &&
	        (props[key] !== oldProps[key] || props[key] !== this.node.getAttr(key))
	      ) {
	        hasUpdates = true;
	        updatedProps[key] = props[key];
	      }
	    }

	    if (hasUpdates) {
	      this.node.setAttrs(updatedProps);
	      var drawingNode = this.node.getLayer() || this.node.getStage();
	      drawingNode && drawingNode.batchDraw();
	      var val, prop;
	      for (prop in updatedProps) {
	        val = updatedProps[prop];
	        if (val instanceof window.Image && !val.complete) {
	          var node = this.node;
	          val.addEventListener('load', function() {
	            var layer = node.getLayer();
	            layer && layer.batchDraw();
	          });
	        }
	      }
	    }
	  },
	  unmountComponent: function() {},
	  mountComponentIntoNode: function(rootID, container) {
	    throw new Error(
	      'You cannot render an ART component standalone. ' +
	        'You need to wrap it in a Stage.'
	    );
	  }
	};

	var Stage = createClass({
	  propTypes: {
	    width: PropTypes.oneOfType([
	      PropTypes.number,
	      PropTypes.string
	    ]),
	    height: PropTypes.oneOfType([
	      PropTypes.number,
	      PropTypes.string
	    ])
	  },
	  displayName: 'Stage',
	  mixins: [ContainerMixin],
	  componentDidMount: function() {
	    this.node = new Konva.Stage({
	      container: this.domNode,
	      width: this.props.width,
	      height: this.props.height
	    });
	    this.applyNodeProps(emptyObject, this.props);
	    this._debugID = this._reactInternalInstance._debugID;
	    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();

	    transaction.perform(
	      this.mountAndInjectChildren,
	      this,
	      this.props.children,
	      transaction,
	      ReactInstanceMap.get(this)._context
	    );
	    ReactUpdates.ReactReconcileTransaction.release(transaction);

	    this.node.draw();
	  },
	  getStage: function() {
	    return this.node;
	  },
	  componentDidUpdate: function(oldProps) {
	    var node = this.node;

	    this.applyNodeProps(oldProps, this.props);

	    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
	    transaction.perform(
	      this.updateChildren,
	      this,
	      this.props.children,
	      transaction,
	      ReactInstanceMap.get(this)._context
	    );
	    ReactUpdates.ReactReconcileTransaction.release(transaction);
	  },
	  componentWillUnmount: function() {
	    this.unmountChildren();
	    this.node.destroy();
	    this.node.parentNode = null;
	  },
	  applyNodeProps: NodeMixin.applyNodeProps,
	  render: function() {
	    var props = this.props;

	    return React.createElement('div', {
	      ref: (function(c) {
	        return (this.domNode = c);
	      }).bind(this),
	      className: props.className,
	      role: props.role,
	      style: props.style,
	      tabIndex: props.tabIndex,
	      title: props.title
	    });
	  }
	});

	var GroupMixin = {
	  mountComponent: function(
	    transaction,
	    nativeParent,
	    nativeContainerInfo,
	    context
	  ) {
	    this._nativeContainerInfo = nativeContainerInfo;
	    this.node = new Konva[this.constructor.displayName]();
	    nativeParent.node.add(this.node);
	    var props = this._initialProps;
	    this.applyNodeProps(emptyObject, props);
	    this.mountAndInjectChildren(props.children, transaction, context);
	    return { children: [], node: this.node, html: null, text: null };
	  },
	  unmountComponent: function() {
	    this.unmountChildren();
	  }
	};

	var ShapeMixin = {
	  construct: function(element) {
	    this._currentElement = element;
	    this._oldPath = null;
	  },
	  mountComponent: function(
	    transaction,
	    nativeParent,
	    nativeContainerInfo,
	    context
	  ) {
	    this._nativeContainerInfo = nativeContainerInfo;
	    this.node = new Konva[this.constructor.displayName]();
	    if (nativeParent) {
	      nativeParent.node.add(this.node);
	    }
	    this.applyNodeProps(emptyObject, this._initialProps);
	    return { children: [], node: this.node, html: null, text: null };
	  },
	  receiveComponent: function(nextComponent, transaction, context) {
	    var props = nextComponent.props;
	    var oldProps = this._currentElement.props || this._initialProps;
	    this.applyNodeProps(oldProps, props);
	    this._currentElement = nextComponent;
	  }
	};

	var Group = createComponent('Group', NodeMixin, ContainerMixin, GroupMixin);
	var Layer = createComponent('Layer', NodeMixin, ContainerMixin, GroupMixin);
	var FastLayer = createComponent(
	  'FastLayer',
	  NodeMixin,
	  ContainerMixin,
	  GroupMixin
	);

	var Label = createComponent('Label', NodeMixin, ContainerMixin, GroupMixin);

	var ReactKonva = {
	  Stage: Stage,
	  Group: Group,
	  Layer: Layer,
	  FastLayer: FastLayer,
	  Label: Label
	};

	var shapes = [
	  'Rect',
	  'Circle',
	  'Ellipse',
	  'Wedge',
	  'Line',
	  'Sprite',
	  'Image',
	  'Text',
	  'TextPath',
	  'Star',
	  'Ring',
	  'Arc',
	  'Tag',
	  'Path',
	  'RegularPolygon',
	  'Arrow',
	  'Shape'
	];

	shapes.forEach(function(shapeName) {
	  ReactKonva[shapeName] = createComponent(shapeName, NodeMixin, ShapeMixin);
	});

	module.exports = ReactKonva;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*
	 * Konva JavaScript Framework v1.7.3
	 * http://konvajs.github.io/
	 * Licensed under the MIT or GPL Version 2 licenses.
	 * Date: Thu Oct 19 2017
	 *
	 * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)
	 * Modified work Copyright (C) 2014 - 2017 by Anton Lavrenov (Konva)
	 *
	 * @license
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	// runtime check for already included Konva
	(function() {
	  'use strict';
	  /**
	     * @namespace Konva
	     */

	  var PI_OVER_180 = Math.PI / 180;

	  var Konva = {
	    // public
	    version: '1.7.3',

	    // private
	    stages: [],
	    idCounter: 0,
	    ids: {},
	    names: {},
	    shapes: {},
	    listenClickTap: false,
	    inDblClickWindow: false,

	    isBrowser:
	      typeof window !== 'undefined' &&
	      {}.toString.call(window) === '[object Window]',

	    // configurations
	    enableTrace: false,
	    traceArrMax: 100,
	    dblClickWindow: 400,
	    /**
	         * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.
	         * But you may override such property, if you want to use your value.
	         * @property pixelRatio
	         * @default undefined
	         * @memberof Konva
	         * @example
	         * Konva.pixelRatio = 1;
	         */
	    pixelRatio: undefined,
	    /**
	         * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,
	         * only then start dragging. Default is 3px.
	         * @property dragDistance
	         * @default 0
	         * @memberof Konva
	         * @example
	         * Konva.dragDistance = 10;
	         */
	    dragDistance: 3,
	    /**
	         * Use degree values for angle properties. You may set this property to false if you want to use radiant values.
	         * @property angleDeg
	         * @default true
	         * @memberof Konva
	         * @example
	         * node.rotation(45); // 45 degrees
	         * Konva.angleDeg = false;
	         * node.rotation(Math.PI / 2); // PI/2 radian
	         */
	    angleDeg: true,
	    /**
	         * Show different warnings about errors or wrong API usage
	         * @property showWarnings
	         * @default true
	         * @memberof Konva
	         * @example
	         * Konva.showWarnings = false;
	         */
	    showWarnings: true,

	    /**
	         * @namespace Filters
	         * @memberof Konva
	         */
	    Filters: {},

	    /**
	         * returns whether or not drag and drop is currently active
	         * @method
	         * @memberof Konva
	         */
	    isDragging: function() {
	      var dd = Konva.DD;

	      // if DD is not included with the build, then
	      // drag and drop is not even possible
	      if (dd) {
	        return dd.isDragging;
	      }
	      return false;
	    },
	    /**
	        * returns whether or not a drag and drop operation is ready, but may
	        *  not necessarily have started
	        * @method
	        * @memberof Konva
	        */
	    isDragReady: function() {
	      var dd = Konva.DD;

	      // if DD is not included with the build, then
	      // drag and drop is not even possible
	      if (dd) {
	        return !!dd.node;
	      }
	      return false;
	    },
	    _addId: function(node, id) {
	      if (id !== undefined) {
	        this.ids[id] = node;
	      }
	    },
	    _removeId: function(id) {
	      if (id !== undefined) {
	        delete this.ids[id];
	      }
	    },
	    _addName: function(node, name) {
	      if (name) {
	        if (!this.names[name]) {
	          this.names[name] = [];
	        }
	        this.names[name].push(node);
	      }
	    },
	    _removeName: function(name, _id) {
	      if (!name) {
	        return;
	      }
	      var nodes = this.names[name];
	      if (!nodes) {
	        return;
	      }
	      for (var n = 0; n < nodes.length; n++) {
	        var no = nodes[n];
	        if (no._id === _id) {
	          nodes.splice(n, 1);
	        }
	      }
	      if (nodes.length === 0) {
	        delete this.names[name];
	      }
	    },
	    getAngle: function(angle) {
	      return this.angleDeg ? angle * PI_OVER_180 : angle;
	    },
	    _detectIE: function(ua) {
	      var msie = ua.indexOf('msie ');
	      if (msie > 0) {
	        // IE 10 or older => return version number
	        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
	      }

	      var trident = ua.indexOf('trident/');
	      if (trident > 0) {
	        // IE 11 => return version number
	        var rv = ua.indexOf('rv:');
	        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
	      }

	      var edge = ua.indexOf('edge/');
	      if (edge > 0) {
	        // Edge (IE 12+) => return version number
	        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
	      }

	      // other browser
	      return false;
	    },
	    _parseUA: function(userAgent) {
	      var ua = userAgent.toLowerCase(),
	        // jQuery UA regex
	        match =
	          /(chrome)[ /]([\w.]+)/.exec(ua) ||
	          /(webkit)[ /]([\w.]+)/.exec(ua) ||
	          /(opera)(?:.*version|)[ /]([\w.]+)/.exec(ua) ||
	          /(msie) ([\w.]+)/.exec(ua) ||
	          (ua.indexOf('compatible') < 0 &&
	            /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua)) ||
	          [],
	        // adding mobile flag as well
	        mobile = !!userAgent.match(
	          /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i
	        ),
	        ieMobile = !!userAgent.match(/IEMobile/i);

	      return {
	        browser: match[1] || '',
	        version: match[2] || '0',
	        isIE: Konva._detectIE(ua),
	        // adding mobile flab
	        mobile: mobile,
	        ieMobile: ieMobile // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events
	      };
	    },
	    // user agent
	    UA: undefined
	  };

	  var glob =
	    typeof global !== 'undefined'
	      ? global
	      : typeof window !== 'undefined'
	        ? window
	        : typeof WorkerGlobalScope !== 'undefined' ? self : {};

	  Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');

	  if (glob.Konva) {
	    console.error(
	      'Konva instance is already exist in current eviroment. ' +
	        'Please use only one instance.'
	    );
	  }
	  glob.Konva = Konva;
	  Konva.global = glob;
	  Konva.window = glob;
	  Konva.document = glob.document;

	  if (true) {
	    module.exports = Konva;
	  } else if (typeof define === 'function' && define.amd) {
	    // AMD. Register as an anonymous module.
	    define(function() {
	      return Konva;
	    });
	  }
	})();

	/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/
	(function() {
	  'use strict';
	  /**
	     * Collection constructor.  Collection extends
	     *  Array.  This class is used in conjunction with {@link Konva.Container#get}
	     * @constructor
	     * @memberof Konva
	     */
	  Konva.Collection = function() {
	    var args = [].slice.call(arguments),
	      length = args.length,
	      i = 0;

	    this.length = length;
	    for (; i < length; i++) {
	      this[i] = args[i];
	    }
	    return this;
	  };
	  Konva.Collection.prototype = [];
	  /**
	     * iterate through node array and run a function for each node.
	     *  The node and index is passed into the function
	     * @method
	     * @memberof Konva.Collection.prototype
	     * @param {Function} func
	     * @example
	     * // get all nodes with name foo inside layer, and set x to 10 for each
	     * layer.get('.foo').each(function(shape, n) {
	     *   shape.setX(10);
	     * });
	     */
	  Konva.Collection.prototype.each = function(func) {
	    for (var n = 0; n < this.length; n++) {
	      func(this[n], n);
	    }
	  };
	  /**
	     * convert collection into an array
	     * @method
	     * @memberof Konva.Collection.prototype
	     */
	  Konva.Collection.prototype.toArray = function() {
	    var arr = [],
	      len = this.length,
	      n;

	    for (n = 0; n < len; n++) {
	      arr.push(this[n]);
	    }
	    return arr;
	  };
	  /**
	     * convert array into a collection
	     * @method
	     * @memberof Konva.Collection
	     * @param {Array} arr
	     */
	  Konva.Collection.toCollection = function(arr) {
	    var collection = new Konva.Collection(),
	      len = arr.length,
	      n;

	    for (n = 0; n < len; n++) {
	      collection.push(arr[n]);
	    }
	    return collection;
	  };

	  // map one method by it's name
	  Konva.Collection._mapMethod = function(methodName) {
	    Konva.Collection.prototype[methodName] = function() {
	      var len = this.length,
	        i;

	      var args = [].slice.call(arguments);
	      for (i = 0; i < len; i++) {
	        this[i][methodName].apply(this[i], args);
	      }

	      return this;
	    };
	  };

	  Konva.Collection.mapMethods = function(constructor) {
	    var prot = constructor.prototype;
	    for (var methodName in prot) {
	      Konva.Collection._mapMethod(methodName);
	    }
	  };

	  /*
	    * Last updated November 2011
	    * By Simon Sarris
	    * www.simonsarris.com
	    * sarris@acm.org
	    *
	    * Free to use and distribute at will
	    * So long as you are nice to people, etc
	    */

	  /*
	    * The usage of this class was inspired by some of the work done by a forked
	    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform
	    * class.  Modified by Eric Rowell
	    */

	  /**
	     * Transform constructor
	     * @constructor
	     * @param {Array} [m] Optional six-element matrix
	     * @memberof Konva
	     */
	  Konva.Transform = function(m) {
	    this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];
	  };

	  Konva.Transform.prototype = {
	    /**
	         * Copy Konva.Transform object
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @returns {Konva.Transform}
	         */
	    copy: function() {
	      return new Konva.Transform(this.m);
	    },
	    /**
	         * Transform point
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @param {Object} point 2D point(x, y)
	         * @returns {Object} 2D point(x, y)
	         */
	    point: function(point) {
	      var m = this.m;
	      return {
	        x: m[0] * point.x + m[2] * point.y + m[4],
	        y: m[1] * point.x + m[3] * point.y + m[5]
	      };
	    },
	    /**
	         * Apply translation
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @param {Number} x
	         * @param {Number} y
	         * @returns {Konva.Transform}
	         */
	    translate: function(x, y) {
	      this.m[4] += this.m[0] * x + this.m[2] * y;
	      this.m[5] += this.m[1] * x + this.m[3] * y;
	      return this;
	    },
	    /**
	         * Apply scale
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @param {Number} sx
	         * @param {Number} sy
	         * @returns {Konva.Transform}
	         */
	    scale: function(sx, sy) {
	      this.m[0] *= sx;
	      this.m[1] *= sx;
	      this.m[2] *= sy;
	      this.m[3] *= sy;
	      return this;
	    },
	    /**
	         * Apply rotation
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @param {Number} rad  Angle in radians
	         * @returns {Konva.Transform}
	         */
	    rotate: function(rad) {
	      var c = Math.cos(rad);
	      var s = Math.sin(rad);
	      var m11 = this.m[0] * c + this.m[2] * s;
	      var m12 = this.m[1] * c + this.m[3] * s;
	      var m21 = this.m[0] * -s + this.m[2] * c;
	      var m22 = this.m[1] * -s + this.m[3] * c;
	      this.m[0] = m11;
	      this.m[1] = m12;
	      this.m[2] = m21;
	      this.m[3] = m22;
	      return this;
	    },
	    /**
	         * Returns the translation
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @returns {Object} 2D point(x, y)
	         */
	    getTranslation: function() {
	      return {
	        x: this.m[4],
	        y: this.m[5]
	      };
	    },
	    /**
	         * Apply skew
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @param {Number} sx
	         * @param {Number} sy
	         * @returns {Konva.Transform}
	         */
	    skew: function(sx, sy) {
	      var m11 = this.m[0] + this.m[2] * sy;
	      var m12 = this.m[1] + this.m[3] * sy;
	      var m21 = this.m[2] + this.m[0] * sx;
	      var m22 = this.m[3] + this.m[1] * sx;
	      this.m[0] = m11;
	      this.m[1] = m12;
	      this.m[2] = m21;
	      this.m[3] = m22;
	      return this;
	    },
	    /**
	         * Transform multiplication
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @param {Konva.Transform} matrix
	         * @returns {Konva.Transform}
	         */
	    multiply: function(matrix) {
	      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];
	      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];

	      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];
	      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];

	      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];
	      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];

	      this.m[0] = m11;
	      this.m[1] = m12;
	      this.m[2] = m21;
	      this.m[3] = m22;
	      this.m[4] = dx;
	      this.m[5] = dy;
	      return this;
	    },
	    /**
	         * Invert the matrix
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @returns {Konva.Transform}
	         */
	    invert: function() {
	      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);
	      var m0 = this.m[3] * d;
	      var m1 = -this.m[1] * d;
	      var m2 = -this.m[2] * d;
	      var m3 = this.m[0] * d;
	      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);
	      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);
	      this.m[0] = m0;
	      this.m[1] = m1;
	      this.m[2] = m2;
	      this.m[3] = m3;
	      this.m[4] = m4;
	      this.m[5] = m5;
	      return this;
	    },
	    /**
	         * return matrix
	         * @method
	         * @memberof Konva.Transform.prototype
	         */
	    getMatrix: function() {
	      return this.m;
	    },
	    /**
	         * set to absolute position via translation
	         * @method
	         * @memberof Konva.Transform.prototype
	         * @returns {Konva.Transform}
	         * @author ericdrowell
	         */
	    setAbsolutePosition: function(x, y) {
	      var m0 = this.m[0],
	        m1 = this.m[1],
	        m2 = this.m[2],
	        m3 = this.m[3],
	        m4 = this.m[4],
	        m5 = this.m[5],
	        yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2),
	        xt = (x - m4 - m2 * yt) / m0;

	      return this.translate(xt, yt);
	    }
	  };

	  // CONSTANTS
	  var CONTEXT_2D = '2d',
	    OBJECT_ARRAY = '[object Array]',
	    OBJECT_NUMBER = '[object Number]',
	    OBJECT_STRING = '[object String]',
	    PI_OVER_DEG180 = Math.PI / 180,
	    DEG180_OVER_PI = 180 / Math.PI,
	    HASH = '#',
	    EMPTY_STRING = '',
	    ZERO = '0',
	    KONVA_WARNING = 'Konva warning: ',
	    KONVA_ERROR = 'Konva error: ',
	    RGB_PAREN = 'rgb(',
	    COLORS = {
	      aliceblue: [240, 248, 255],
	      antiquewhite: [250, 235, 215],
	      aqua: [0, 255, 255],
	      aquamarine: [127, 255, 212],
	      azure: [240, 255, 255],
	      beige: [245, 245, 220],
	      bisque: [255, 228, 196],
	      black: [0, 0, 0],
	      blanchedalmond: [255, 235, 205],
	      blue: [0, 0, 255],
	      blueviolet: [138, 43, 226],
	      brown: [165, 42, 42],
	      burlywood: [222, 184, 135],
	      cadetblue: [95, 158, 160],
	      chartreuse: [127, 255, 0],
	      chocolate: [210, 105, 30],
	      coral: [255, 127, 80],
	      cornflowerblue: [100, 149, 237],
	      cornsilk: [255, 248, 220],
	      crimson: [220, 20, 60],
	      cyan: [0, 255, 255],
	      darkblue: [0, 0, 139],
	      darkcyan: [0, 139, 139],
	      darkgoldenrod: [184, 132, 11],
	      darkgray: [169, 169, 169],
	      darkgreen: [0, 100, 0],
	      darkgrey: [169, 169, 169],
	      darkkhaki: [189, 183, 107],
	      darkmagenta: [139, 0, 139],
	      darkolivegreen: [85, 107, 47],
	      darkorange: [255, 140, 0],
	      darkorchid: [153, 50, 204],
	      darkred: [139, 0, 0],
	      darksalmon: [233, 150, 122],
	      darkseagreen: [143, 188, 143],
	      darkslateblue: [72, 61, 139],
	      darkslategray: [47, 79, 79],
	      darkslategrey: [47, 79, 79],
	      darkturquoise: [0, 206, 209],
	      darkviolet: [148, 0, 211],
	      deeppink: [255, 20, 147],
	      deepskyblue: [0, 191, 255],
	      dimgray: [105, 105, 105],
	      dimgrey: [105, 105, 105],
	      dodgerblue: [30, 144, 255],
	      firebrick: [178, 34, 34],
	      floralwhite: [255, 255, 240],
	      forestgreen: [34, 139, 34],
	      fuchsia: [255, 0, 255],
	      gainsboro: [220, 220, 220],
	      ghostwhite: [248, 248, 255],
	      gold: [255, 215, 0],
	      goldenrod: [218, 165, 32],
	      gray: [128, 128, 128],
	      green: [0, 128, 0],
	      greenyellow: [173, 255, 47],
	      grey: [128, 128, 128],
	      honeydew: [240, 255, 240],
	      hotpink: [255, 105, 180],
	      indianred: [205, 92, 92],
	      indigo: [75, 0, 130],
	      ivory: [255, 255, 240],
	      khaki: [240, 230, 140],
	      lavender: [230, 230, 250],
	      lavenderblush: [255, 240, 245],
	      lawngreen: [124, 252, 0],
	      lemonchiffon: [255, 250, 205],
	      lightblue: [173, 216, 230],
	      lightcoral: [240, 128, 128],
	      lightcyan: [224, 255, 255],
	      lightgoldenrodyellow: [250, 250, 210],
	      lightgray: [211, 211, 211],
	      lightgreen: [144, 238, 144],
	      lightgrey: [211, 211, 211],
	      lightpink: [255, 182, 193],
	      lightsalmon: [255, 160, 122],
	      lightseagreen: [32, 178, 170],
	      lightskyblue: [135, 206, 250],
	      lightslategray: [119, 136, 153],
	      lightslategrey: [119, 136, 153],
	      lightsteelblue: [176, 196, 222],
	      lightyellow: [255, 255, 224],
	      lime: [0, 255, 0],
	      limegreen: [50, 205, 50],
	      linen: [250, 240, 230],
	      magenta: [255, 0, 255],
	      maroon: [128, 0, 0],
	      mediumaquamarine: [102, 205, 170],
	      mediumblue: [0, 0, 205],
	      mediumorchid: [186, 85, 211],
	      mediumpurple: [147, 112, 219],
	      mediumseagreen: [60, 179, 113],
	      mediumslateblue: [123, 104, 238],
	      mediumspringgreen: [0, 250, 154],
	      mediumturquoise: [72, 209, 204],
	      mediumvioletred: [199, 21, 133],
	      midnightblue: [25, 25, 112],
	      mintcream: [245, 255, 250],
	      mistyrose: [255, 228, 225],
	      moccasin: [255, 228, 181],
	      navajowhite: [255, 222, 173],
	      navy: [0, 0, 128],
	      oldlace: [253, 245, 230],
	      olive: [128, 128, 0],
	      olivedrab: [107, 142, 35],
	      orange: [255, 165, 0],
	      orangered: [255, 69, 0],
	      orchid: [218, 112, 214],
	      palegoldenrod: [238, 232, 170],
	      palegreen: [152, 251, 152],
	      paleturquoise: [175, 238, 238],
	      palevioletred: [219, 112, 147],
	      papayawhip: [255, 239, 213],
	      peachpuff: [255, 218, 185],
	      peru: [205, 133, 63],
	      pink: [255, 192, 203],
	      plum: [221, 160, 203],
	      powderblue: [176, 224, 230],
	      purple: [128, 0, 128],
	      rebeccapurple: [102, 51, 153],
	      red: [255, 0, 0],
	      rosybrown: [188, 143, 143],
	      royalblue: [65, 105, 225],
	      saddlebrown: [139, 69, 19],
	      salmon: [250, 128, 114],
	      sandybrown: [244, 164, 96],
	      seagreen: [46, 139, 87],
	      seashell: [255, 245, 238],
	      sienna: [160, 82, 45],
	      silver: [192, 192, 192],
	      skyblue: [135, 206, 235],
	      slateblue: [106, 90, 205],
	      slategray: [119, 128, 144],
	      slategrey: [119, 128, 144],
	      snow: [255, 255, 250],
	      springgreen: [0, 255, 127],
	      steelblue: [70, 130, 180],
	      tan: [210, 180, 140],
	      teal: [0, 128, 128],
	      thistle: [216, 191, 216],
	      transparent: [255, 255, 255, 0],
	      tomato: [255, 99, 71],
	      turquoise: [64, 224, 208],
	      violet: [238, 130, 238],
	      wheat: [245, 222, 179],
	      white: [255, 255, 255],
	      whitesmoke: [245, 245, 245],
	      yellow: [255, 255, 0],
	      yellowgreen: [154, 205, 5]
	    },
	    RGB_REGEX = /rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/;

	  /**
	     * @namespace Util
	     * @memberof Konva
	     */
	  Konva.Util = {
	    /*
	         * cherry-picked utilities from underscore.js
	         */
	    _isElement: function(obj) {
	      return !!(obj && obj.nodeType == 1);
	    },
	    _isFunction: function(obj) {
	      return !!(obj && obj.constructor && obj.call && obj.apply);
	    },
	    _isObject: function(obj) {
	      return !!obj && obj.constructor === Object;
	    },
	    _isArray: function(obj) {
	      return Object.prototype.toString.call(obj) === OBJECT_ARRAY;
	    },
	    _isNumber: function(obj) {
	      return Object.prototype.toString.call(obj) === OBJECT_NUMBER;
	    },
	    _isString: function(obj) {
	      return Object.prototype.toString.call(obj) === OBJECT_STRING;
	    },
	    // Returns a function, that, when invoked, will only be triggered at most once
	    // during a given window of time. Normally, the throttled function will run
	    // as much as it can, without ever going more than once per `wait` duration;
	    // but if you'd like to disable the execution on the leading edge, pass
	    // `{leading: false}`. To disable execution on the trailing edge, ditto.
	    _throttle: function(func, wait, opts) {
	      var context, args, result;
	      var timeout = null;
	      var previous = 0;
	      var options = opts || {};
	      var later = function() {
	        previous = options.leading === false ? 0 : new Date().getTime();
	        timeout = null;
	        result = func.apply(context, args);
	        context = args = null;
	      };
	      return function() {
	        var now = new Date().getTime();
	        if (!previous && options.leading === false) {
	          previous = now;
	        }
	        var remaining = wait - (now - previous);
	        context = this;
	        args = arguments;
	        if (remaining <= 0) {
	          clearTimeout(timeout);
	          timeout = null;
	          previous = now;
	          result = func.apply(context, args);
	          context = args = null;
	        } else if (!timeout && options.trailing !== false) {
	          timeout = setTimeout(later, remaining);
	        }
	        return result;
	      };
	    },
	    /*
	         * other utils
	         */
	    _hasMethods: function(obj) {
	      var names = [],
	        key;

	      for (key in obj) {
	        if (!obj.hasOwnProperty(key)) {
	          continue;
	        }
	        if (this._isFunction(obj[key])) {
	          names.push(key);
	        }
	      }
	      return names.length > 0;
	    },
	    isValidSelector: function(selector) {
	      if (typeof selector !== 'string') {
	        return false;
	      }
	      var firstChar = selector[0];
	      return (
	        firstChar === '#' ||
	        firstChar === '.' ||
	        firstChar === firstChar.toUpperCase()
	      );
	    },
	    createCanvasElement: function() {
	      var canvas = Konva.isBrowser
	        ? Konva.document.createElement('canvas')
	        : new Konva._nodeCanvas();
	      // on some environments canvas.style is readonly
	      try {
	        canvas.style = canvas.style || {};
	      } catch (e) {}
	      return canvas;
	    },
	    _isInDocument: function(el) {
	      while ((el = el.parentNode)) {
	        if (el == Konva.document) {
	          return true;
	        }
	      }
	      return false;
	    },
	    _simplifyArray: function(arr) {
	      var retArr = [],
	        len = arr.length,
	        util = Konva.Util,
	        n,
	        val;

	      for (n = 0; n < len; n++) {
	        val = arr[n];
	        if (util._isNumber(val)) {
	          val = Math.round(val * 1000) / 1000;
	        } else if (!util._isString(val)) {
	          val = val.toString();
	        }

	        retArr.push(val);
	      }

	      return retArr;
	    },
	    /*
	         * arg can be an image object or image data
	         */
	    _getImage: function(arg, callback) {
	      var imageObj, canvas;

	      // if arg is null or undefined
	      if (!arg) {
	        callback(null);
	      } else if (this._isElement(arg)) {
	        // if arg is already an image object
	        callback(arg);
	      } else if (this._isString(arg)) {
	        // if arg is a string, then it's a data url
	        imageObj = new Konva.window.Image();
	        imageObj.onload = function() {
	          callback(imageObj);
	        };
	        imageObj.src = arg;
	      } else if (arg.data) {
	        //if arg is an object that contains the data property, it's an image object
	        canvas = Konva.Util.createCanvasElement();
	        canvas.width = arg.width;
	        canvas.height = arg.height;
	        var _context = canvas.getContext(CONTEXT_2D);
	        _context.putImageData(arg, 0, 0);
	        this._getImage(canvas.toDataURL(), callback);
	      } else {
	        callback(null);
	      }
	    },
	    _getRGBAString: function(obj) {
	      var red = obj.red || 0,
	        green = obj.green || 0,
	        blue = obj.blue || 0,
	        alpha = obj.alpha || 1;

	      return ['rgba(', red, ',', green, ',', blue, ',', alpha, ')'].join(
	        EMPTY_STRING
	      );
	    },
	    _rgbToHex: function(r, g, b) {
	      return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
	    },
	    _hexToRgb: function(hex) {
	      hex = hex.replace(HASH, EMPTY_STRING);
	      var bigint = parseInt(hex, 16);
	      return {
	        r: (bigint >> 16) & 255,
	        g: (bigint >> 8) & 255,
	        b: bigint & 255
	      };
	    },
	    /**
	         * return random hex color
	         * @method
	         * @memberof Konva.Util.prototype
	         */
	    getRandomColor: function() {
	      var randColor = ((Math.random() * 0xffffff) << 0).toString(16);
	      while (randColor.length < 6) {
	        randColor = ZERO + randColor;
	      }
	      return HASH + randColor;
	    },
	    /**
	         * return value with default fallback
	         * @method
	         * @memberof Konva.Util.prototype
	         */
	    get: function(val, def) {
	      if (val === undefined) {
	        return def;
	      } else {
	        return val;
	      }
	    },
	    /**
	         * get RGB components of a color
	         * @method
	         * @memberof Konva.Util.prototype
	         * @param {String} color
	         * @example
	         * // each of the following examples return {r:0, g:0, b:255}
	         * var rgb = Konva.Util.getRGB('blue');
	         * var rgb = Konva.Util.getRGB('#0000ff');
	         * var rgb = Konva.Util.getRGB('rgb(0,0,255)');
	         */
	    getRGB: function(color) {
	      var rgb;
	      // color string
	      if (color in COLORS) {
	        rgb = COLORS[color];
	        return {
	          r: rgb[0],
	          g: rgb[1],
	          b: rgb[2]
	        };
	      } else if (color[0] === HASH) {
	        // hex
	        return this._hexToRgb(color.substring(1));
	      } else if (color.substr(0, 4) === RGB_PAREN) {
	        // rgb string
	        rgb = RGB_REGEX.exec(color.replace(/ /g, ''));
	        return {
	          r: parseInt(rgb[1], 10),
	          g: parseInt(rgb[2], 10),
	          b: parseInt(rgb[3], 10)
	        };
	      } else {
	        // default
	        return {
	          r: 0,
	          g: 0,
	          b: 0
	        };
	      }
	    },
	    // convert any color string to RGBA object
	    // from https://github.com/component/color-parser
	    colorToRGBA: function(str) {
	      str = str || 'black';
	      return (
	        Konva.Util._namedColorToRBA(str) ||
	        Konva.Util._hex3ColorToRGBA(str) ||
	        Konva.Util._hex6ColorToRGBA(str) ||
	        Konva.Util._rgbColorToRGBA(str) ||
	        Konva.Util._rgbaColorToRGBA(str)
	      );
	    },
	    // Parse named css color. Like "green"
	    _namedColorToRBA: function(str) {
	      var c = COLORS[str.toLowerCase()];
	      if (!c) {
	        return null;
	      }
	      return {
	        r: c[0],
	        g: c[1],
	        b: c[2],
	        a: 1
	      };
	    },
	    // Parse rgb(n, n, n)
	    _rgbColorToRGBA: function(str) {
	      if (str.indexOf('rgb(') === 0) {
	        str = str.match(/rgb\(([^)]+)\)/)[1];
	        var parts = str.split(/ *, */).map(Number);
	        return {
	          r: parts[0],
	          g: parts[1],
	          b: parts[2],
	          a: 1
	        };
	      }
	    },
	    // Parse rgba(n, n, n, n)
	    _rgbaColorToRGBA: function(str) {
	      if (str.indexOf('rgba(') === 0) {
	        str = str.match(/rgba\(([^)]+)\)/)[1];
	        var parts = str.split(/ *, */).map(Number);
	        return {
	          r: parts[0],
	          g: parts[1],
	          b: parts[2],
	          a: parts[3]
	        };
	      }
	    },
	    // Parse #nnnnnn
	    _hex6ColorToRGBA: function(str) {
	      if (str[0] === '#' && str.length === 7) {
	        return {
	          r: parseInt(str.slice(1, 3), 16),
	          g: parseInt(str.slice(3, 5), 16),
	          b: parseInt(str.slice(5, 7), 16),
	          a: 1
	        };
	      }
	    },
	    // Parse #nnn
	    _hex3ColorToRGBA: function(str) {
	      if (str[0] === '#' && str.length === 4) {
	        return {
	          r: parseInt(str[1] + str[1], 16),
	          g: parseInt(str[2] + str[2], 16),
	          b: parseInt(str[3] + str[3], 16),
	          a: 1
	        };
	      }
	    },
	    // o1 takes precedence over o2
	    _merge: function(o1, o2) {
	      var retObj = this._clone(o2);
	      for (var key in o1) {
	        if (this._isObject(o1[key])) {
	          retObj[key] = this._merge(o1[key], retObj[key]);
	        } else {
	          retObj[key] = o1[key];
	        }
	      }
	      return retObj;
	    },
	    cloneObject: function(obj) {
	      var retObj = {};
	      for (var key in obj) {
	        if (this._isObject(obj[key])) {
	          retObj[key] = this.cloneObject(obj[key]);
	        } else if (this._isArray(obj[key])) {
	          retObj[key] = this.cloneArray(obj[key]);
	        } else {
	          retObj[key] = obj[key];
	        }
	      }
	      return retObj;
	    },
	    cloneArray: function(arr) {
	      return arr.slice(0);
	    },
	    _degToRad: function(deg) {
	      return deg * PI_OVER_DEG180;
	    },
	    _radToDeg: function(rad) {
	      return rad * DEG180_OVER_PI;
	    },
	    _capitalize: function(str) {
	      return str.charAt(0).toUpperCase() + str.slice(1);
	    },
	    throw: function(str) {
	      throw new Error(KONVA_ERROR + str);
	    },
	    error: function(str) {
	      console.error(KONVA_ERROR + str);
	    },
	    warn: function(str) {
	      /*
	             * IE9 on Windows7 64bit will throw a JS error
	             * if we don't use window.console in the conditional
	             */
	      if (Konva.global.console && console.warn && Konva.showWarnings) {
	        console.warn(KONVA_WARNING + str);
	      }
	    },
	    extend: function(child, parent) {
	      function Ctor() {
	        this.constructor = child;
	      }
	      Ctor.prototype = parent.prototype;
	      var oldProto = child.prototype;
	      child.prototype = new Ctor();
	      for (var key in oldProto) {
	        if (oldProto.hasOwnProperty(key)) {
	          child.prototype[key] = oldProto[key];
	        }
	      }
	      child.__super__ = parent.prototype;
	      // create reference to parent
	      child.super = parent;
	    },
	    /**
	         * adds methods to a constructor prototype
	         * @method
	         * @memberof Konva.Util.prototype
	         * @param {Function} constructor
	         * @param {Object} methods
	         */
	    addMethods: function(constructor, methods) {
	      var key;

	      for (key in methods) {
	        constructor.prototype[key] = methods[key];
	      }
	    },
	    _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {
	      var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),
	        d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),
	        fa = t * d01 / (d01 + d12),
	        fb = t * d12 / (d01 + d12),
	        p1x = x1 - fa * (x2 - x0),
	        p1y = y1 - fa * (y2 - y0),
	        p2x = x1 + fb * (x2 - x0),
	        p2y = y1 + fb * (y2 - y0);

	      return [p1x, p1y, p2x, p2y];
	    },
	    _expandPoints: function(p, tension) {
	      var len = p.length,
	        allPoints = [],
	        n,
	        cp;

	      for (n = 2; n < len - 2; n += 2) {
	        cp = Konva.Util._getControlPoints(
	          p[n - 2],
	          p[n - 1],
	          p[n],
	          p[n + 1],
	          p[n + 2],
	          p[n + 3],
	          tension
	        );
	        allPoints.push(cp[0]);
	        allPoints.push(cp[1]);
	        allPoints.push(p[n]);
	        allPoints.push(p[n + 1]);
	        allPoints.push(cp[2]);
	        allPoints.push(cp[3]);
	      }

	      return allPoints;
	    },
	    _removeLastLetter: function(str) {
	      return str.substring(0, str.length - 1);
	    },
	    each: function(obj, func) {
	      for (var key in obj) {
	        func(key, obj[key]);
	      }
	    },
	    _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {
	      var x, y, dist;

	      var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);
	      if (pd2 == 0) {
	        x = x1;
	        y = y1;
	        dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
	      } else {
	        var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;
	        if (u < 0) {
	          x = x1;
	          y = y1;
	          dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);
	        } else if (u > 1.0) {
	          x = x2;
	          y = y2;
	          dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);
	        } else {
	          x = x1 + u * (x2 - x1);
	          y = y1 + u * (y2 - y1);
	          dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);
	        }
	      }
	      return [x, y, dist];
	    },
	    // line as array of points.
	    // line might be closed
	    _getProjectionToLine: function(pt, line, isClosed) {
	      var pc = Konva.Util.cloneObject(pt);
	      var dist = Number.MAX_VALUE;
	      line.forEach(function(p1, i) {
	        if (!isClosed && i === line.length - 1) {
	          return;
	        }
	        var p2 = line[(i + 1) % line.length];
	        var proj = Konva.Util._getProjectionToSegment(
	          p1.x,
	          p1.y,
	          p2.x,
	          p2.y,
	          pt.x,
	          pt.y
	        );
	        var px = proj[0],
	          py = proj[1],
	          pdist = proj[2];
	        if (pdist < dist) {
	          pc.x = px;
	          pc.y = py;
	          dist = pdist;
	        }
	      });
	      return pc;
	    },
	    _prepareArrayForTween: function(startArray, endArray, isClosed) {
	      var n,
	        start = [],
	        end = [];
	      if (startArray.length > endArray.length) {
	        var temp = endArray;
	        endArray = startArray;
	        startArray = temp;
	      }
	      for (n = 0; n < startArray.length; n += 2) {
	        start.push({
	          x: startArray[n],
	          y: startArray[n + 1]
	        });
	      }
	      for (n = 0; n < endArray.length; n += 2) {
	        end.push({
	          x: endArray[n],
	          y: endArray[n + 1]
	        });
	      }

	      var newStart = [];
	      end.forEach(function(point) {
	        var pr = Konva.Util._getProjectionToLine(point, start, isClosed);
	        newStart.push(pr.x);
	        newStart.push(pr.y);
	      });
	      return newStart;
	    },
	    _prepareToStringify: function(obj) {
	      var desc;

	      obj.visitedByCircularReferenceRemoval = true;

	      for (var key in obj) {
	        if (
	          !(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')
	        ) {
	          continue;
	        }
	        desc = Object.getOwnPropertyDescriptor(obj, key);
	        if (
	          obj[key].visitedByCircularReferenceRemoval ||
	          Konva.Util._isElement(obj[key])
	        ) {
	          if (desc.configurable) {
	            delete obj[key];
	          } else {
	            return null;
	          }
	        } else if (Konva.Util._prepareToStringify(obj[key]) === null) {
	          if (desc.configurable) {
	            delete obj[key];
	          } else {
	            return null;
	          }
	        }
	      }

	      delete obj.visitedByCircularReferenceRemoval;

	      return obj;
	    }
	  };
	})();

	(function() {
	  'use strict';
	  // calculate pixel ratio

	  var _pixelRatio;
	  function getDevicePixelRatio() {
	    if (_pixelRatio) {
	      return _pixelRatio;
	    }
	    var canvas = Konva.Util.createCanvasElement();
	    var context = canvas.getContext('2d');
	    _pixelRatio = (function() {
	      var devicePixelRatio = Konva.window.devicePixelRatio || 1,
	        backingStoreRatio =
	          context.webkitBackingStorePixelRatio ||
	          context.mozBackingStorePixelRatio ||
	          context.msBackingStorePixelRatio ||
	          context.oBackingStorePixelRatio ||
	          context.backingStorePixelRatio ||
	          1;
	      return devicePixelRatio / backingStoreRatio;
	    })();
	    return _pixelRatio;
	  }

	  /**
	     * Canvas Renderer constructor
	     * @constructor
	     * @abstract
	     * @memberof Konva
	     * @param {Object} config
	     * @param {Number} config.width
	     * @param {Number} config.height
	     * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings
	     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios
	     *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio
	     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel
	     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise
	     *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel
	     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.
	     */
	  Konva.Canvas = function(config) {
	    this.init(config);
	  };

	  Konva.Canvas.prototype = {
	    init: function(config) {
	      var conf = config || {};

	      var pixelRatio =
	        conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();

	      this.pixelRatio = pixelRatio;
	      this._canvas = Konva.Util.createCanvasElement();

	      // set inline styles
	      this._canvas.style.padding = 0;
	      this._canvas.style.margin = 0;
	      this._canvas.style.border = 0;
	      this._canvas.style.background = 'transparent';
	      this._canvas.style.position = 'absolute';
	      this._canvas.style.top = 0;
	      this._canvas.style.left = 0;
	    },
	    /**
	         * get canvas context
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @returns {CanvasContext} context
	         */
	    getContext: function() {
	      return this.context;
	    },
	    /**
	         * get pixel ratio
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @returns {Number} pixel ratio
	         */
	    getPixelRatio: function() {
	      return this.pixelRatio;
	    },
	    /**
	         * get pixel ratio
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings
	         *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios
	         *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio
	         *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel
	         *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise
	         *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel
	         *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.
	         */
	    setPixelRatio: function(pixelRatio) {
	      var previousRatio = this.pixelRatio;
	      this.pixelRatio = pixelRatio;
	      this.setSize(
	        this.getWidth() / previousRatio,
	        this.getHeight() / previousRatio
	      );
	    },
	    /**
	         * set width
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @param {Number} width
	         */
	    setWidth: function(width) {
	      // take into account pixel ratio
	      this.width = this._canvas.width = width * this.pixelRatio;
	      this._canvas.style.width = width + 'px';

	      var pixelRatio = this.pixelRatio,
	        _context = this.getContext()._context;
	      _context.scale(pixelRatio, pixelRatio);
	    },
	    /**
	         * set height
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @param {Number} height
	         */
	    setHeight: function(height) {
	      // take into account pixel ratio
	      this.height = this._canvas.height = height * this.pixelRatio;
	      this._canvas.style.height = height + 'px';
	      var pixelRatio = this.pixelRatio,
	        _context = this.getContext()._context;
	      _context.scale(pixelRatio, pixelRatio);
	    },
	    /**
	         * get width
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @returns {Number} width
	         */
	    getWidth: function() {
	      return this.width;
	    },
	    /**
	         * get height
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @returns {Number} height
	         */
	    getHeight: function() {
	      return this.height;
	    },
	    /**
	         * set size
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @param {Number} width
	         * @param {Number} height
	         */
	    setSize: function(width, height) {
	      this.setWidth(width);
	      this.setHeight(height);
	    },
	    /**
	         * to data url
	         * @method
	         * @memberof Konva.Canvas.prototype
	         * @param {String} mimeType
	         * @param {Number} quality between 0 and 1 for jpg mime types
	         * @returns {String} data url string
	         */
	    toDataURL: function(mimeType, quality) {
	      try {
	        // If this call fails (due to browser bug, like in Firefox 3.6),
	        // then revert to previous no-parameter image/png behavior
	        return this._canvas.toDataURL(mimeType, quality);
	      } catch (e) {
	        try {
	          return this._canvas.toDataURL();
	        } catch (err) {
	          Konva.Util.warn('Unable to get data URL. ' + err.message);
	          return '';
	        }
	      }
	    }
	  };

	  Konva.SceneCanvas = function(config) {
	    var conf = config || {};
	    var width = conf.width || 0,
	      height = conf.height || 0;

	    Konva.Canvas.call(this, conf);
	    this.context = new Konva.SceneContext(this);
	    this.setSize(width, height);
	  };

	  Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);

	  Konva.HitCanvas = function(config) {
	    var conf = config || {};
	    var width = conf.width || 0,
	      height = conf.height || 0;

	    Konva.Canvas.call(this, conf);
	    this.context = new Konva.HitContext(this);
	    this.setSize(width, height);
	    this.hitCanvas = true;
	  };
	  Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);
	})();

	(function() {
	  'use strict';
	  var COMMA = ',',
	    OPEN_PAREN = '(',
	    CLOSE_PAREN = ')',
	    OPEN_PAREN_BRACKET = '([',
	    CLOSE_BRACKET_PAREN = '])',
	    SEMICOLON = ';',
	    DOUBLE_PAREN = '()',
	    // EMPTY_STRING = '',
	    EQUALS = '=',
	    // SET = 'set',
	    CONTEXT_METHODS = [
	      'arc',
	      'arcTo',
	      'beginPath',
	      'bezierCurveTo',
	      'clearRect',
	      'clip',
	      'closePath',
	      'createLinearGradient',
	      'createPattern',
	      'createRadialGradient',
	      'drawImage',
	      'fill',
	      'fillText',
	      'getImageData',
	      'createImageData',
	      'lineTo',
	      'moveTo',
	      'putImageData',
	      'quadraticCurveTo',
	      'rect',
	      'restore',
	      'rotate',
	      'save',
	      'scale',
	      'setLineDash',
	      'setTransform',
	      'stroke',
	      'strokeText',
	      'transform',
	      'translate'
	    ];

	  var CONTEXT_PROPERTIES = [
	    'fillStyle',
	    'strokeStyle',
	    'shadowColor',
	    'shadowBlur',
	    'shadowOffsetX',
	    'shadowOffsetY',
	    'lineCap',
	    'lineDashOffset',
	    'lineJoin',
	    'lineWidth',
	    'miterLimit',
	    'font',
	    'textAlign',
	    'textBaseline',
	    'globalAlpha',
	    'globalCompositeOperation'
	  ];

	  /**
	     * Canvas Context constructor
	     * @constructor
	     * @abstract
	     * @memberof Konva
	     */
	  Konva.Context = function(canvas) {
	    this.init(canvas);
	  };

	  Konva.Context.prototype = {
	    init: function(canvas) {
	      this.canvas = canvas;
	      this._context = canvas._canvas.getContext('2d');

	      if (Konva.enableTrace) {
	        this.traceArr = [];
	        this._enableTrace();
	      }
	    },
	    /**
	         * fill shape
	         * @method
	         * @memberof Konva.Context.prototype
	         * @param {Konva.Shape} shape
	         */
	    fillShape: function(shape) {
	      if (shape.getFillEnabled()) {
	        this._fill(shape);
	      }
	    },
	    /**
	         * stroke shape
	         * @method
	         * @memberof Konva.Context.prototype
	         * @param {Konva.Shape} shape
	         */
	    strokeShape: function(shape) {
	      if (shape.getStrokeEnabled()) {
	        this._stroke(shape);
	      }
	    },
	    /**
	         * fill then stroke
	         * @method
	         * @memberof Konva.Context.prototype
	         * @param {Konva.Shape} shape
	         */
	    fillStrokeShape: function(shape) {
	      var fillEnabled = shape.getFillEnabled();
	      if (fillEnabled) {
	        this._fill(shape);
	      }
	      if (shape.getStrokeEnabled()) {
	        this._stroke(shape);
	      }
	    },
	    /**
	         * get context trace if trace is enabled
	         * @method
	         * @memberof Konva.Context.prototype
	         * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters
	         *  properties, and property values.  If true, return relaxed context trace, which only returns method names and
	         *  properites.
	         * @returns {String}
	         */
	    getTrace: function(relaxed) {
	      var traceArr = this.traceArr,
	        len = traceArr.length,
	        str = '',
	        n,
	        trace,
	        method,
	        args;

	      for (n = 0; n < len; n++) {
	        trace = traceArr[n];
	        method = trace.method;

	        // methods
	        if (method) {
	          args = trace.args;
	          str += method;
	          if (relaxed) {
	            str += DOUBLE_PAREN;
	          } else {
	            if (Konva.Util._isArray(args[0])) {
	              str +=
	                OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;
	            } else {
	              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;
	            }
	          }
	        } else {
	          // properties
	          str += trace.property;
	          if (!relaxed) {
	            str += EQUALS + trace.val;
	          }
	        }

	        str += SEMICOLON;
	      }

	      return str;
	    },
	    /**
	         * clear trace if trace is enabled
	         * @method
	         * @memberof Konva.Context.prototype
	         */
	    clearTrace: function() {
	      this.traceArr = [];
	    },
	    _trace: function(str) {
	      var traceArr = this.traceArr, len;

	      traceArr.push(str);
	      len = traceArr.length;

	      if (len >= Konva.traceArrMax) {
	        traceArr.shift();
	      }
	    },
	    /**
	         * reset canvas context transform
	         * @method
	         * @memberof Konva.Context.prototype
	         */
	    reset: function() {
	      var pixelRatio = this.getCanvas().getPixelRatio();
	      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);
	    },
	    /**
	         * get canvas
	         * @method
	         * @memberof Konva.Context.prototype
	         * @returns {Konva.Canvas}
	         */
	    getCanvas: function() {
	      return this.canvas;
	    },
	    /**
	         * clear canvas
	         * @method
	         * @memberof Konva.Context.prototype
	         * @param {Object} [bounds]
	         * @param {Number} [bounds.x]
	         * @param {Number} [bounds.y]
	         * @param {Number} [bounds.width]
	         * @param {Number} [bounds.height]
	         */
	    clear: function(bounds) {
	      var canvas = this.getCanvas();

	      if (bounds) {
	        this.clearRect(
	          bounds.x || 0,
	          bounds.y || 0,
	          bounds.width || 0,
	          bounds.height || 0
	        );
	      } else {
	        this.clearRect(
	          0,
	          0,
	          canvas.getWidth() / canvas.pixelRatio,
	          canvas.getHeight() / canvas.pixelRatio
	        );
	      }
	    },
	    _applyLineCap: function(shape) {
	      var lineCap = shape.getLineCap();
	      if (lineCap) {
	        this.setAttr('lineCap', lineCap);
	      }
	    },
	    _applyOpacity: function(shape) {
	      var absOpacity = shape.getAbsoluteOpacity();
	      if (absOpacity !== 1) {
	        this.setAttr('globalAlpha', absOpacity);
	      }
	    },
	    _applyLineJoin: function(shape) {
	      var lineJoin = shape.getLineJoin();
	      if (lineJoin) {
	        this.setAttr('lineJoin', lineJoin);
	      }
	    },
	    setAttr: function(attr, val) {
	      this._context[attr] = val;
	    },

	    // context pass through methods
	    arc: function() {
	      var a = arguments;
	      this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);
	    },
	    beginPath: function() {
	      this._context.beginPath();
	    },
	    bezierCurveTo: function() {
	      var a = arguments;
	      this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);
	    },
	    clearRect: function() {
	      var a = arguments;
	      this._context.clearRect(a[0], a[1], a[2], a[3]);
	    },
	    clip: function() {
	      this._context.clip();
	    },
	    closePath: function() {
	      this._context.closePath();
	    },
	    createImageData: function() {
	      var a = arguments;
	      if (a.length === 2) {
	        return this._context.createImageData(a[0], a[1]);
	      } else if (a.length === 1) {
	        return this._context.createImageData(a[0]);
	      }
	    },
	    createLinearGradient: function() {
	      var a = arguments;
	      return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);
	    },
	    createPattern: function() {
	      var a = arguments;
	      return this._context.createPattern(a[0], a[1]);
	    },
	    createRadialGradient: function() {
	      var a = arguments;
	      return this._context.createRadialGradient(
	        a[0],
	        a[1],
	        a[2],
	        a[3],
	        a[4],
	        a[5]
	      );
	    },
	    drawImage: function() {
	      var a = arguments, _context = this._context;

	      if (a.length === 3) {
	        _context.drawImage(a[0], a[1], a[2]);
	      } else if (a.length === 5) {
	        _context.drawImage(a[0], a[1], a[2], a[3], a[4]);
	      } else if (a.length === 9) {
	        _context.drawImage(
	          a[0],
	          a[1],
	          a[2],
	          a[3],
	          a[4],
	          a[5],
	          a[6],
	          a[7],
	          a[8]
	        );
	      }
	    },
	    isPointInPath: function(x, y) {
	      return this._context.isPointInPath(x, y);
	    },
	    fill: function() {
	      this._context.fill();
	    },
	    fillRect: function(x, y, width, height) {
	      this._context.fillRect(x, y, width, height);
	    },
	    strokeRect: function(x, y, width, height) {
	      this._context.strokeRect(x, y, width, height);
	    },
	    fillText: function() {
	      var a = arguments;
	      this._context.fillText(a[0], a[1], a[2]);
	    },
	    measureText: function(text) {
	      return this._context.measureText(text);
	    },
	    getImageData: function() {
	      var a = arguments;
	      return this._context.getImageData(a[0], a[1], a[2], a[3]);
	    },
	    lineTo: function() {
	      var a = arguments;
	      this._context.lineTo(a[0], a[1]);
	    },
	    moveTo: function() {
	      var a = arguments;
	      this._context.moveTo(a[0], a[1]);
	    },
	    rect: function() {
	      var a = arguments;
	      this._context.rect(a[0], a[1], a[2], a[3]);
	    },
	    putImageData: function() {
	      var a = arguments;
	      this._context.putImageData(a[0], a[1], a[2]);
	    },
	    quadraticCurveTo: function() {
	      var a = arguments;
	      this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);
	    },
	    restore: function() {
	      this._context.restore();
	    },
	    rotate: function() {
	      var a = arguments;
	      this._context.rotate(a[0]);
	    },
	    save: function() {
	      this._context.save();
	    },
	    scale: function() {
	      var a = arguments;
	      this._context.scale(a[0], a[1]);
	    },
	    setLineDash: function() {
	      var a = arguments, _context = this._context;

	      // works for Chrome and IE11
	      if (this._context.setLineDash) {
	        _context.setLineDash(a[0]);
	      } else if ('mozDash' in _context) {
	        // verified that this works in firefox
	        _context.mozDash = a[0];
	      } else if ('webkitLineDash' in _context) {
	        // does not currently work for Safari
	        _context.webkitLineDash = a[0];
	      }

	      // no support for IE9 and IE10
	    },
	    getLineDash: function() {
	      return this._context.getLineDash();
	    },
	    setTransform: function() {
	      var a = arguments;
	      this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);
	    },
	    stroke: function() {
	      this._context.stroke();
	    },
	    strokeText: function() {
	      var a = arguments;
	      this._context.strokeText(a[0], a[1], a[2]);
	    },
	    transform: function() {
	      var a = arguments;
	      this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);
	    },
	    translate: function() {
	      var a = arguments;
	      this._context.translate(a[0], a[1]);
	    },
	    _enableTrace: function() {
	      var that = this,
	        len = CONTEXT_METHODS.length,
	        _simplifyArray = Konva.Util._simplifyArray,
	        origSetter = this.setAttr,
	        n,
	        args;

	      // to prevent creating scope function at each loop
	      var func = function(methodName) {
	        var origMethod = that[methodName], ret;

	        that[methodName] = function() {
	          args = _simplifyArray(Array.prototype.slice.call(arguments, 0));
	          ret = origMethod.apply(that, arguments);

	          that._trace({
	            method: methodName,
	            args: args
	          });

	          return ret;
	        };
	      };
	      // methods
	      for (n = 0; n < len; n++) {
	        func(CONTEXT_METHODS[n]);
	      }

	      // attrs
	      that.setAttr = function() {
	        origSetter.apply(that, arguments);
	        var prop = arguments[0];
	        var val = arguments[1];
	        if (
	          prop === 'shadowOffsetX' ||
	          prop === 'shadowOffsetY' ||
	          prop === 'shadowBlur'
	        ) {
	          val = val / this.canvas.getPixelRatio();
	        }
	        that._trace({
	          property: prop,
	          val: val
	        });
	      };
	    }
	  };

	  CONTEXT_PROPERTIES.forEach(function(prop) {
	    Object.defineProperty(Konva.Context.prototype, prop, {
	      get: function() {
	        return this._context[prop];
	      },
	      set: function(val) {
	        this._context[prop] = val;
	      }
	    });
	  });

	  Konva.SceneContext = function(canvas) {
	    Konva.Context.call(this, canvas);
	  };

	  Konva.SceneContext.prototype = {
	    _fillColor: function(shape) {
	      var fill = shape.fill();

	      this.setAttr('fillStyle', fill);
	      shape._fillFunc(this);
	    },
	    _fillPattern: function(shape) {
	      var fillPatternX = shape.getFillPatternX(),
	        fillPatternY = shape.getFillPatternY(),
	        fillPatternScale = shape.getFillPatternScale(),
	        fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),
	        fillPatternOffset = shape.getFillPatternOffset();

	      if (fillPatternX || fillPatternY) {
	        this.translate(fillPatternX || 0, fillPatternY || 0);
	      }
	      if (fillPatternRotation) {
	        this.rotate(fillPatternRotation);
	      }
	      if (fillPatternScale) {
	        this.scale(fillPatternScale.x, fillPatternScale.y);
	      }
	      if (fillPatternOffset) {
	        this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);
	      }

	      this.setAttr(
	        'fillStyle',
	        this.createPattern(
	          shape.getFillPatternImage(),
	          shape.getFillPatternRepeat() || 'repeat'
	        )
	      );
	      this.fill();
	    },
	    _fillLinearGradient: function(shape) {
	      var start = shape.getFillLinearGradientStartPoint(),
	        end = shape.getFillLinearGradientEndPoint(),
	        colorStops = shape.getFillLinearGradientColorStops(),
	        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);

	      if (colorStops) {
	        // build color stops
	        for (var n = 0; n < colorStops.length; n += 2) {
	          grd.addColorStop(colorStops[n], colorStops[n + 1]);
	        }
	        this.setAttr('fillStyle', grd);
	        shape._fillFunc(this);
	      }
	    },
	    _fillRadialGradient: function(shape) {
	      var start = shape.getFillRadialGradientStartPoint(),
	        end = shape.getFillRadialGradientEndPoint(),
	        startRadius = shape.getFillRadialGradientStartRadius(),
	        endRadius = shape.getFillRadialGradientEndRadius(),
	        colorStops = shape.getFillRadialGradientColorStops(),
	        grd = this.createRadialGradient(
	          start.x,
	          start.y,
	          startRadius,
	          end.x,
	          end.y,
	          endRadius
	        );

	      // build color stops
	      for (var n = 0; n < colorStops.length; n += 2) {
	        grd.addColorStop(colorStops[n], colorStops[n + 1]);
	      }
	      this.setAttr('fillStyle', grd);
	      this.fill();
	    },
	    _fill: function(shape) {
	      var hasColor = shape.fill(),
	        hasPattern = shape.getFillPatternImage(),
	        hasLinearGradient = shape.getFillLinearGradientColorStops(),
	        hasRadialGradient = shape.getFillRadialGradientColorStops(),
	        fillPriority = shape.getFillPriority();

	      // priority fills
	      if (hasColor && fillPriority === 'color') {
	        this._fillColor(shape);
	      } else if (hasPattern && fillPriority === 'pattern') {
	        this._fillPattern(shape);
	      } else if (hasLinearGradient && fillPriority === 'linear-gradient') {
	        this._fillLinearGradient(shape);
	      } else if (hasRadialGradient && fillPriority === 'radial-gradient') {
	        this._fillRadialGradient(shape);
	      } else if (hasColor) {
	        // now just try and fill with whatever is available
	        this._fillColor(shape);
	      } else if (hasPattern) {
	        this._fillPattern(shape);
	      } else if (hasLinearGradient) {
	        this._fillLinearGradient(shape);
	      } else if (hasRadialGradient) {
	        this._fillRadialGradient(shape);
	      }
	    },
	    _stroke: function(shape) {
	      var dash = shape.dash(),
	        // ignore strokeScaleEnabled for Text
	        strokeScaleEnabled =
	          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;

	      if (shape.hasStroke()) {
	        if (!strokeScaleEnabled) {
	          this.save();
	          this.setTransform(1, 0, 0, 1, 0, 0);
	        }

	        this._applyLineCap(shape);
	        if (dash && shape.dashEnabled()) {
	          this.setLineDash(dash);
	          this.setAttr('lineDashOffset', shape.dashOffset());
	        }

	        this.setAttr('lineWidth', shape.strokeWidth());
	        this.setAttr('strokeStyle', shape.stroke());

	        if (!shape.getShadowForStrokeEnabled()) {
	          this.setAttr('shadowColor', 'rgba(0,0,0,0)');
	        }
	        shape._strokeFunc(this);

	        if (!strokeScaleEnabled) {
	          this.restore();
	        }
	      }
	    },
	    _applyShadow: function(shape) {
	      var util = Konva.Util,
	        color = util.get(shape.getShadowRGBA(), 'black'),
	        blur = util.get(shape.getShadowBlur(), 5),
	        offset = util.get(shape.getShadowOffset(), {
	          x: 0,
	          y: 0
	        }),
	        // TODO: get this info from transform??
	        scale = shape.getAbsoluteScale(),
	        ratio = this.canvas.getPixelRatio(),
	        scaleX = scale.x * ratio,
	        scaleY = scale.y * ratio;

	      this.setAttr('shadowColor', color);
	      this.setAttr(
	        'shadowBlur',
	        blur * ratio * Math.min(Math.abs(scaleX), Math.abs(scaleY))
	      );
	      this.setAttr('shadowOffsetX', offset.x * scaleX);
	      this.setAttr('shadowOffsetY', offset.y * scaleY);
	    },
	    _applyGlobalCompositeOperation: function(shape) {
	      var globalCompositeOperation = shape.getGlobalCompositeOperation();
	      if (globalCompositeOperation !== 'source-over') {
	        this.setAttr('globalCompositeOperation', globalCompositeOperation);
	      }
	    }
	  };
	  Konva.Util.extend(Konva.SceneContext, Konva.Context);

	  Konva.HitContext = function(canvas) {
	    Konva.Context.call(this, canvas);
	  };

	  Konva.HitContext.prototype = {
	    _fill: function(shape) {
	      this.save();
	      this.setAttr('fillStyle', shape.colorKey);
	      shape._fillFuncHit(this);
	      this.restore();
	    },
	    _stroke: function(shape) {
	      if (shape.hasStroke() && shape.strokeHitEnabled()) {
	        // ignore strokeScaleEnabled for Text
	        var strokeScaleEnabled =
	          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;
	        if (!strokeScaleEnabled) {
	          this.save();
	          this.setTransform(1, 0, 0, 1, 0, 0);
	        }
	        this._applyLineCap(shape);
	        this.setAttr('lineWidth', shape.strokeWidth());
	        this.setAttr('strokeStyle', shape.colorKey);
	        shape._strokeFuncHit(this);
	        if (!strokeScaleEnabled) {
	          this.restore();
	        }
	      }
	    }
	  };
	  Konva.Util.extend(Konva.HitContext, Konva.Context);
	})();

	(function() {
	  'use strict';
	  // CONSTANTS
	  var GET = 'get', SET = 'set';

	  Konva.Factory = {
	    addGetterSetter: function(constructor, attr, def, validator, after) {
	      this.addGetter(constructor, attr, def);
	      this.addSetter(constructor, attr, validator, after);
	      this.addOverloadedGetterSetter(constructor, attr);
	    },
	    addGetter: function(constructor, attr, def) {
	      var method = GET + Konva.Util._capitalize(attr);

	      constructor.prototype[method] = function() {
	        var val = this.attrs[attr];
	        return val === undefined ? def : val;
	      };
	    },
	    addSetter: function(constructor, attr, validator, after) {
	      var method = SET + Konva.Util._capitalize(attr);

	      constructor.prototype[method] = function(val) {
	        if (validator) {
	          val = validator.call(this, val);
	        }

	        this._setAttr(attr, val);

	        if (after) {
	          after.call(this);
	        }

	        return this;
	      };
	    },
	    addComponentsGetterSetter: function(
	      constructor,
	      attr,
	      components,
	      validator,
	      after
	    ) {
	      var len = components.length,
	        capitalize = Konva.Util._capitalize,
	        getter = GET + capitalize(attr),
	        setter = SET + capitalize(attr),
	        n,
	        component;

	      // getter
	      constructor.prototype[getter] = function() {
	        var ret = {};

	        for (n = 0; n < len; n++) {
	          component = components[n];
	          ret[component] = this.getAttr(attr + capitalize(component));
	        }

	        return ret;
	      };

	      // setter
	      constructor.prototype[setter] = function(val) {
	        var oldVal = this.attrs[attr], key;

	        if (validator) {
	          val = validator.call(this, val);
	        }

	        for (key in val) {
	          if (!val.hasOwnProperty(key)) {
	            continue;
	          }
	          this._setAttr(attr + capitalize(key), val[key]);
	        }

	        this._fireChangeEvent(attr, oldVal, val);

	        if (after) {
	          after.call(this);
	        }

	        return this;
	      };

	      this.addOverloadedGetterSetter(constructor, attr);
	    },
	    addOverloadedGetterSetter: function(constructor, attr) {
	      var capitalizedAttr = Konva.Util._capitalize(attr),
	        setter = SET + capitalizedAttr,
	        getter = GET + capitalizedAttr;

	      constructor.prototype[attr] = function() {
	        // setting
	        if (arguments.length) {
	          this[setter](arguments[0]);
	          return this;
	        }
	        // getting
	        return this[getter]();
	      };
	    },
	    addDeprecatedGetterSetter: function(constructor, attr, def, validator) {
	      var method = GET + Konva.Util._capitalize(attr);
	      var message =
	        attr +
	        ' property is deprecated and will be removed soon. Look at Konva change log for more information.';
	      constructor.prototype[method] = function() {
	        Konva.Util.error(message);
	        var val = this.attrs[attr];
	        return val === undefined ? def : val;
	      };
	      this.addSetter(constructor, attr, validator, function() {
	        Konva.Util.error(message);
	      });
	      this.addOverloadedGetterSetter(constructor, attr);
	    },
	    backCompat: function(constructor, methods) {
	      Konva.Util.each(methods, function(oldMethodName, newMethodName) {
	        var method = constructor.prototype[newMethodName];
	        constructor.prototype[oldMethodName] = function() {
	          method.apply(this, arguments);
	          Konva.Util.error(
	            oldMethodName +
	              ' method is deprecated and will be removed soon. Use ' +
	              newMethodName +
	              ' instead'
	          );
	        };
	      });
	    },
	    afterSetFilter: function() {
	      this._filterUpToDate = false;
	    }
	  };

	  Konva.Validators = {
	    /**
	         * @return {number}
	         */
	    RGBComponent: function(val) {
	      if (val > 255) {
	        return 255;
	      } else if (val < 0) {
	        return 0;
	      }
	      return Math.round(val);
	    },
	    alphaComponent: function(val) {
	      if (val > 1) {
	        return 1;
	      } else if (val < 0.0001) {
	        // chrome does not honor alpha values of 0
	        return 0.0001;
	      }

	      return val;
	    }
	  };
	})();

	(function(Konva) {
	  'use strict';
	  // CONSTANTS
	  var ABSOLUTE_OPACITY = 'absoluteOpacity',
	    ABSOLUTE_TRANSFORM = 'absoluteTransform',
	    ABSOLUTE_SCALE = 'absoluteScale',
	    CHANGE = 'Change',
	    CHILDREN = 'children',
	    DOT = '.',
	    EMPTY_STRING = '',
	    GET = 'get',
	    ID = 'id',
	    KONVA = 'konva',
	    LISTENING = 'listening',
	    MOUSEENTER = 'mouseenter',
	    MOUSELEAVE = 'mouseleave',
	    NAME = 'name',
	    SET = 'set',
	    SHAPE = 'Shape',
	    SPACE = ' ',
	    STAGE = 'stage',
	    TRANSFORM = 'transform',
	    UPPER_STAGE = 'Stage',
	    VISIBLE = 'visible',
	    CLONE_BLACK_LIST = ['id'],
	    TRANSFORM_CHANGE_STR = [
	      'xChange.konva',
	      'yChange.konva',
	      'scaleXChange.konva',
	      'scaleYChange.konva',
	      'skewXChange.konva',
	      'skewYChange.konva',
	      'rotationChange.konva',
	      'offsetXChange.konva',
	      'offsetYChange.konva',
	      'transformsEnabledChange.konva'
	    ].join(SPACE),
	    SCALE_CHANGE_STR = ['scaleXChange.konva', 'scaleYChange.konva'].join(SPACE);

	  /**
	     * Node constructor. Nodes are entities that can be transformed, layered,
	     * and have bound events. The stage, layers, groups, and shapes all extend Node.
	     * @constructor
	     * @memberof Konva
	     * @abstract
	     * @param {Object} config
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     */
	  Konva.Node = function(config) {
	    this._init(config);
	  };

	  Konva.Util.addMethods(Konva.Node, {
	    _init: function(config) {
	      var that = this;
	      this._id = Konva.idCounter++;
	      this.eventListeners = {};
	      this.attrs = {};
	      this._cache = {};
	      this._filterUpToDate = false;
	      this._isUnderCache = false;
	      this.setAttrs(config);

	      // event bindings for cache handling
	      this.on(TRANSFORM_CHANGE_STR, function() {
	        this._clearCache(TRANSFORM);
	        that._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);
	      });

	      this.on(SCALE_CHANGE_STR, function() {
	        that._clearSelfAndDescendantCache(ABSOLUTE_SCALE);
	      });

	      this.on('visibleChange.konva', function() {
	        that._clearSelfAndDescendantCache(VISIBLE);
	      });
	      this.on('listeningChange.konva', function() {
	        that._clearSelfAndDescendantCache(LISTENING);
	      });
	      this.on('opacityChange.konva', function() {
	        that._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);
	      });
	    },
	    _clearCache: function(attr) {
	      if (attr) {
	        delete this._cache[attr];
	      } else {
	        this._cache = {};
	      }
	    },
	    _getCache: function(attr, privateGetter) {
	      var cache = this._cache[attr];

	      // if not cached, we need to set it using the private getter method.
	      if (cache === undefined) {
	        this._cache[attr] = privateGetter.call(this);
	      }

	      return this._cache[attr];
	    },
	    /*
	         * when the logic for a cached result depends on ancestor propagation, use this
	         * method to clear self and children cache
	         */
	    _clearSelfAndDescendantCache: function(attr) {
	      this._clearCache(attr);

	      if (this.children) {
	        this.getChildren().each(function(node) {
	          node._clearSelfAndDescendantCache(attr);
	        });
	      }
	    },
	    /**
	        * clear cached canvas
	        * @method
	        * @memberof Konva.Node.prototype
	        * @returns {Konva.Node}
	        * @example
	        * node.clearCache();
	        */
	    clearCache: function() {
	      delete this._cache.canvas;
	      this._filterUpToDate = false;
	      return this;
	    },
	    /**
	        *  cache node to improve drawing performance, apply filters, or create more accurate
	        *  hit regions. For all basic shapes size of cache canvas will be automatically detected.
	        *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box
	        *  properties. Look at [link to demo page](link to demo page) for more information.
	        * @method
	        * @memberof Konva.Node.prototype
	        * @param {Object} [config]
	        * @param {Number} [config.x]
	        * @param {Number} [config.y]
	        * @param {Number} [config.width]
	        * @param {Number} [config.height]
	        * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.
	        * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached
	        *  region for debugging purposes
	        * @param {Number} [config.pixelRatio] change quality (or pixel ratio) of cached image. pixelRatio = 2 will produce 2x sized cache.
	        * @returns {Konva.Node}
	        * @example
	        * // cache a shape with the x,y position of the bounding box at the center and
	        * // the width and height of the bounding box equal to the width and height of
	        * // the shape obtained from shape.width() and shape.height()
	        * image.cache();
	        *
	        * // cache a node and define the bounding box position and size
	        * node.cache({
	        *   x: -30,
	        *   y: -30,
	        *   width: 100,
	        *   height: 200
	        * });
	        *
	        * // cache a node and draw a red border around the bounding box
	        * // for debugging purposes
	        * node.cache({
	        *   x: -30,
	        *   y: -30,
	        *   width: 100,
	        *   height: 200,
	        *   offset : 10,
	        *   drawBorder: true
	        * });
	        */
	    cache: function(config) {
	      var conf = config || {},
	        rect = this.getClientRect({
	          skipTransform: true,
	          relativeTo: this.getParent()
	        }),
	        width = conf.width || rect.width,
	        height = conf.height || rect.height,
	        pixelRatio = conf.pixelRatio,
	        x = conf.x || rect.x,
	        y = conf.y || rect.y,
	        offset = conf.offset || 0,
	        drawBorder = conf.drawBorder || false;

	      if (!width || !height) {
	        // make throw async, because we don't need to stop funcion
	        setTimeout(function() {
	          Konva.Util.throw(
	            'Width or height of caching configuration equals 0. Caching is ignored.'
	          );
	        });
	        return;
	      }

	      width += offset * 2;
	      height += offset * 2;

	      x -= offset;
	      y -= offset;

	      var cachedSceneCanvas = new Konva.SceneCanvas({
	          pixelRatio: pixelRatio,
	          width: width,
	          height: height
	        }),
	        cachedFilterCanvas = new Konva.SceneCanvas({
	          pixelRatio: pixelRatio,
	          width: width,
	          height: height
	        }),
	        cachedHitCanvas = new Konva.HitCanvas({
	          pixelRatio: 1,
	          width: width,
	          height: height
	        }),
	        sceneContext = cachedSceneCanvas.getContext(),
	        hitContext = cachedHitCanvas.getContext();

	      cachedHitCanvas.isCache = true;

	      this.clearCache();

	      sceneContext.save();
	      hitContext.save();

	      sceneContext.translate(-x, -y);
	      hitContext.translate(-x, -y);

	      // extra flag to skip on getAbsolute opacity calc
	      this._isUnderCache = true;
	      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);
	      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);

	      this.drawScene(cachedSceneCanvas, this, true);
	      this.drawHit(cachedHitCanvas, this, true);
	      this._isUnderCache = false;

	      sceneContext.restore();
	      hitContext.restore();

	      // this will draw a red border around the cached box for
	      // debugging purposes
	      if (drawBorder) {
	        sceneContext.save();
	        sceneContext.beginPath();
	        sceneContext.rect(0, 0, width, height);
	        sceneContext.closePath();
	        sceneContext.setAttr('strokeStyle', 'red');
	        sceneContext.setAttr('lineWidth', 5);
	        sceneContext.stroke();
	        sceneContext.restore();
	      }

	      this._cache.canvas = {
	        scene: cachedSceneCanvas,
	        filter: cachedFilterCanvas,
	        hit: cachedHitCanvas,
	        x: x,
	        y: y
	      };

	      return this;
	    },
	    /**
	         * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).
	         * The rectangle position is relative to parent container.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} config
	         * @param {Boolean} [config.skipTransform] should we apply transform to node for calculating rect?
	         * @param {Object} [config.relativeTo] calculate client rect relative to one of the parents
	         * @returns {Object} rect with {x, y, width, height} properties
	         * @example
	         * var rect = new Konva.Rect({
	         *      width : 100,
	         *      height : 100,
	         *      x : 50,
	         *      y : 50,
	         *      strokeWidth : 4,
	         *      stroke : 'black',
	         *      offsetX : 50,
	         *      scaleY : 2
	         * });
	         *
	         * // get client rect without think off transformations (position, rotation, scale, offset, etc)
	         * rect.getClientRect({ skipTransform: true});
	         * // returns {
	         * //     x : -2,   // two pixels for stroke / 2
	         * //     y : -2,
	         * //     width : 104, // increased by 4 for stroke
	         * //     height : 104
	         * //}
	         *
	         * // get client rect with transformation applied
	         * rect.getClientRect();
	         * // returns Object {x: -2, y: 46, width: 104, height: 208}
	         */
	    getClientRect: function() {
	      // abstract method
	      // redefine in Container and Shape
	      throw new Error('abstract "getClientRect" method call');
	    },
	    _transformedRect: function(rect, top) {
	      var points = [
	        { x: rect.x, y: rect.y },
	        { x: rect.x + rect.width, y: rect.y },
	        { x: rect.x + rect.width, y: rect.y + rect.height },
	        { x: rect.x, y: rect.y + rect.height }
	      ];
	      var minX, minY, maxX, maxY;
	      var trans = this.getAbsoluteTransform(top);
	      points.forEach(function(point) {
	        var transformed = trans.point(point);
	        if (minX === undefined) {
	          minX = maxX = transformed.x;
	          minY = maxY = transformed.y;
	        }
	        minX = Math.min(minX, transformed.x);
	        minY = Math.min(minY, transformed.y);
	        maxX = Math.max(maxX, transformed.x);
	        maxY = Math.max(maxY, transformed.y);
	      });
	      return {
	        x: minX,
	        y: minY,
	        width: maxX - minX,
	        height: maxY - minY
	      };
	    },
	    _drawCachedSceneCanvas: function(context) {
	      context.save();
	      context._applyOpacity(this);
	      context._applyGlobalCompositeOperation(this);
	      context.translate(this._cache.canvas.x, this._cache.canvas.y);

	      var cacheCanvas = this._getCachedSceneCanvas();
	      var ratio = cacheCanvas.pixelRatio;

	      context.drawImage(
	        cacheCanvas._canvas,
	        0,
	        0,
	        cacheCanvas.width / ratio,
	        cacheCanvas.height / ratio
	      );
	      context.restore();
	    },
	    _drawCachedHitCanvas: function(context) {
	      var cachedCanvas = this._cache.canvas,
	        hitCanvas = cachedCanvas.hit;
	      context.save();
	      context.translate(this._cache.canvas.x, this._cache.canvas.y);
	      context.drawImage(hitCanvas._canvas, 0, 0);
	      context.restore();
	    },
	    _getCachedSceneCanvas: function() {
	      var filters = this.filters(),
	        cachedCanvas = this._cache.canvas,
	        sceneCanvas = cachedCanvas.scene,
	        filterCanvas = cachedCanvas.filter,
	        filterContext = filterCanvas.getContext(),
	        len,
	        imageData,
	        n,
	        filter;

	      if (filters) {
	        if (!this._filterUpToDate) {
	          var ratio = sceneCanvas.pixelRatio;

	          try {
	            len = filters.length;
	            filterContext.clear();

	            // copy cached canvas onto filter context
	            filterContext.drawImage(
	              sceneCanvas._canvas,
	              0,
	              0,
	              sceneCanvas.getWidth() / ratio,
	              sceneCanvas.getHeight() / ratio
	            );
	            imageData = filterContext.getImageData(
	              0,
	              0,
	              filterCanvas.getWidth(),
	              filterCanvas.getHeight()
	            );

	            // apply filters to filter context
	            for (n = 0; n < len; n++) {
	              filter = filters[n];
	              if (typeof filter !== 'function') {
	                Konva.Util.error(
	                  'Filter should be type of function, but got ' +
	                    typeof filter +
	                    ' insted. Please check correct filters'
	                );
	                continue;
	              }
	              filter.call(this, imageData);
	              filterContext.putImageData(imageData, 0, 0);
	            }
	          } catch (e) {
	            Konva.Util.error('Unable to apply filter. ' + e.message);
	          }

	          this._filterUpToDate = true;
	        }

	        return filterCanvas;
	      }
	      return sceneCanvas;
	    },
	    /**
	         * bind events to the node. KonvaJS supports mouseover, mousemove,
	         *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, click, dblclick, touchstart, touchmove,
	         *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports
	         *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel, contentContextmenu
	         *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,
	         *  and contentDblTap.  Pass in a string of events delimmited by a space to bind multiple events at once
	         *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an
	         *  event by name such as 'click.foobar'.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'
	         * @param {Function} handler The handler function is passed an event object
	         * @returns {Konva.Node}
	         * @example
	         * // add click listener
	         * node.on('click', function() {
	         *   console.log('you clicked me!');
	         * });
	         *
	         * // get the target node
	         * node.on('click', function(evt) {
	         *   console.log(evt.target);
	         * });
	         *
	         * // stop event propagation
	         * node.on('click', function(evt) {
	         *   evt.cancelBubble = true;
	         * });
	         *
	         * // bind multiple listeners
	         * node.on('click touchstart', function() {
	         *   console.log('you clicked/touched me!');
	         * });
	         *
	         * // namespace listener
	         * node.on('click.foo', function() {
	         *   console.log('you clicked/touched me!');
	         * });
	         *
	         * // get the event type
	         * node.on('click tap', function(evt) {
	         *   var eventType = evt.type;
	         * });
	         *
	         * // get native event object
	         * node.on('click tap', function(evt) {
	         *   var nativeEvent = evt.evt;
	         * });
	         *
	         * // for change events, get the old and new val
	         * node.on('xChange', function(evt) {
	         *   var oldVal = evt.oldVal;
	         *   var newVal = evt.newVal;
	         * });
	         *
	         * // get event targets
	         * // with event delegations
	         * layer.on('click', 'Group', function(evt) {
	         *   var shape = evt.target;
	         *   var group = evtn.currentTarger;
	         * });
	         */
	    on: function(evtStr, handler) {
	      if (arguments.length === 3) {
	        return this._delegate.apply(this, arguments);
	      }
	      var events = evtStr.split(SPACE),
	        len = events.length,
	        n,
	        event,
	        parts,
	        baseEvent,
	        name;

	      /*
	             * loop through types and attach event listeners to
	             * each one.  eg. 'click mouseover.namespace mouseout'
	             * will create three event bindings
	             */
	      for (n = 0; n < len; n++) {
	        event = events[n];
	        parts = event.split(DOT);
	        baseEvent = parts[0];
	        name = parts[1] || EMPTY_STRING;

	        // create events array if it doesn't exist
	        if (!this.eventListeners[baseEvent]) {
	          this.eventListeners[baseEvent] = [];
	        }

	        this.eventListeners[baseEvent].push({
	          name: name,
	          handler: handler
	        });
	      }

	      return this;
	    },
	    /**
	         * remove event bindings from the node. Pass in a string of
	         *  event types delimmited by a space to remove multiple event
	         *  bindings at once such as 'mousedown mouseup mousemove'.
	         *  include a namespace to remove an event binding by name
	         *  such as 'click.foobar'. If you only give a name like '.foobar',
	         *  all events in that namespace will be removed.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'
	         * @returns {Konva.Node}
	         * @example
	         * // remove listener
	         * node.off('click');
	         *
	         * // remove multiple listeners
	         * node.off('click touchstart');
	         *
	         * // remove listener by name
	         * node.off('click.foo');
	         */
	    off: function(evtStr) {
	      var events = (evtStr || '').split(SPACE),
	        len = events.length,
	        n,
	        t,
	        event,
	        parts,
	        baseEvent,
	        name;

	      if (!evtStr) {
	        // remove all events
	        for (t in this.eventListeners) {
	          this._off(t);
	        }
	      }
	      for (n = 0; n < len; n++) {
	        event = events[n];
	        parts = event.split(DOT);
	        baseEvent = parts[0];
	        name = parts[1];

	        if (baseEvent) {
	          if (this.eventListeners[baseEvent]) {
	            this._off(baseEvent, name);
	          }
	        } else {
	          for (t in this.eventListeners) {
	            this._off(t, name);
	          }
	        }
	      }
	      return this;
	    },
	    // some event aliases for third party integration like HammerJS
	    dispatchEvent: function(evt) {
	      var e = {
	        target: this,
	        type: evt.type,
	        evt: evt
	      };
	      this.fire(evt.type, e);
	      return this;
	    },
	    addEventListener: function(type, handler) {
	      // we have to pass native event to handler
	      this.on(type, function(evt) {
	        handler.call(this, evt.evt);
	      });
	      return this;
	    },
	    removeEventListener: function(type) {
	      this.off(type);
	      return this;
	    },
	    // like node.on
	    _delegate: function(event, selector, handler) {
	      var stopNode = this;
	      this.on(event, function(evt) {
	        var targets = evt.target.findAncestors(selector, true, stopNode);
	        for (var i = 0; i < targets.length; i++) {
	          evt = Konva.Util.cloneObject(evt);
	          evt.currentTarget = targets[i];
	          handler.call(targets[i], evt);
	        }
	      });
	    },
	    /**
	         * remove self from parent, but don't destroy
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Node}
	         * @example
	         * node.remove();
	         */
	    remove: function() {
	      var parent = this.getParent();

	      if (parent && parent.children) {
	        parent.children.splice(this.index, 1);
	        parent._setChildrenIndices();
	        delete this.parent;
	      }

	      // every cached attr that is calculated via node tree
	      // traversal must be cleared when removing a node
	      this._clearSelfAndDescendantCache(STAGE);
	      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);
	      this._clearSelfAndDescendantCache(VISIBLE);
	      this._clearSelfAndDescendantCache(LISTENING);
	      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);

	      return this;
	    },
	    /**
	         * remove and destroy self
	         * @method
	         * @memberof Konva.Node.prototype
	         * @example
	         * node.destroy();
	         */
	    destroy: function() {
	      // remove from ids and names hashes
	      Konva._removeId(this.getId());

	      // remove all names
	      var names = (this.getName() || '').split(/\s/g);
	      for (var i = 0; i < names.length; i++) {
	        var subname = names[i];
	        Konva._removeName(subname, this._id);
	      }

	      this.remove();
	      return this;
	    },
	    /**
	         * get attr
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} attr
	         * @returns {Integer|String|Object|Array}
	         * @example
	         * var x = node.getAttr('x');
	         */
	    getAttr: function(attr) {
	      var method = GET + Konva.Util._capitalize(attr);
	      if (Konva.Util._isFunction(this[method])) {
	        return this[method]();
	      }
	      // otherwise get directly
	      return this.attrs[attr];
	    },
	    /**
	        * get ancestors
	        * @method
	        * @memberof Konva.Node.prototype
	        * @returns {Konva.Collection}
	        * @example
	        * shape.getAncestors().each(function(node) {
	        *   console.log(node.getId());
	        * })
	        */
	    getAncestors: function() {
	      var parent = this.getParent(),
	        ancestors = new Konva.Collection();

	      while (parent) {
	        ancestors.push(parent);
	        parent = parent.getParent();
	      }

	      return ancestors;
	    },
	    /**
	         * get attrs object literal
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Object}
	         */
	    getAttrs: function() {
	      return this.attrs || {};
	    },
	    /**
	         * set multiple attrs at once using an object literal
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} config object containing key value pairs
	         * @returns {Konva.Node}
	         * @example
	         * node.setAttrs({
	         *   x: 5,
	         *   fill: 'red'
	         * });
	         */
	    setAttrs: function(config) {
	      var key, method;

	      if (!config) {
	        return this;
	      }
	      for (key in config) {
	        if (key === CHILDREN) {
	          continue;
	        }
	        method = SET + Konva.Util._capitalize(key);
	        // use setter if available
	        if (Konva.Util._isFunction(this[method])) {
	          this[method](config[key]);
	        } else {
	          // otherwise set directly
	          this._setAttr(key, config[key]);
	        }
	      }
	      return this;
	    },
	    /**
	         * determine if node is listening for events by taking into account ancestors.
	         *
	         * Parent    | Self      | isListening
	         * listening | listening |
	         * ----------+-----------+------------
	         * T         | T         | T
	         * T         | F         | F
	         * F         | T         | T
	         * F         | F         | F
	         * ----------+-----------+------------
	         * T         | I         | T
	         * F         | I         | F
	         * I         | I         | T
	         *
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Boolean}
	         */
	    isListening: function() {
	      return this._getCache(LISTENING, this._isListening);
	    },
	    _isListening: function() {
	      var listening = this.getListening(),
	        parent = this.getParent();

	      // the following conditions are a simplification of the truth table above.
	      // please modify carefully
	      if (listening === 'inherit') {
	        if (parent) {
	          return parent.isListening();
	        } else {
	          return true;
	        }
	      } else {
	        return listening;
	      }
	    },
	    /**
	         * determine if node is visible by taking into account ancestors.
	         *
	         * Parent    | Self      | isVisible
	         * visible   | visible   |
	         * ----------+-----------+------------
	         * T         | T         | T
	         * T         | F         | F
	         * F         | T         | T
	         * F         | F         | F
	         * ----------+-----------+------------
	         * T         | I         | T
	         * F         | I         | F
	         * I         | I         | T

	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Boolean}
	         */
	    isVisible: function() {
	      return this._getCache(VISIBLE, this._isVisible);
	    },
	    _isVisible: function() {
	      var visible = this.getVisible(),
	        parent = this.getParent();

	      // the following conditions are a simplification of the truth table above.
	      // please modify carefully
	      if (visible === 'inherit') {
	        if (parent) {
	          return parent.isVisible();
	        } else {
	          return true;
	        }
	      } else {
	        return visible;
	      }
	    },
	    /**
	         * determine if listening is enabled by taking into account descendants.  If self or any children
	         * have _isListeningEnabled set to true, then self also has listening enabled.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Boolean}
	         */
	    shouldDrawHit: function(canvas) {
	      var layer = this.getLayer();
	      return (
	        (canvas && canvas.isCache) ||
	        (layer &&
	          layer.hitGraphEnabled() &&
	          this.isListening() &&
	          this.isVisible())
	      );
	    },
	    /**
	         * show node
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Node}
	         */
	    show: function() {
	      this.setVisible(true);
	      return this;
	    },
	    /**
	         * hide node.  Hidden nodes are no longer detectable
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Node}
	         */
	    hide: function() {
	      this.setVisible(false);
	      return this;
	    },
	    /**
	         * get zIndex relative to the node's siblings who share the same parent
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Integer}
	         */
	    getZIndex: function() {
	      return this.index || 0;
	    },
	    /**
	         * get absolute z-index which takes into account sibling
	         *  and ancestor indices
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Integer}
	         */
	    getAbsoluteZIndex: function() {
	      var depth = this.getDepth(),
	        that = this,
	        index = 0,
	        nodes,
	        len,
	        n,
	        child;

	      function addChildren(children) {
	        nodes = [];
	        len = children.length;
	        for (n = 0; n < len; n++) {
	          child = children[n];
	          index++;

	          if (child.nodeType !== SHAPE) {
	            nodes = nodes.concat(child.getChildren().toArray());
	          }

	          if (child._id === that._id) {
	            n = len;
	          }
	        }

	        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {
	          addChildren(nodes);
	        }
	      }
	      if (that.nodeType !== UPPER_STAGE) {
	        addChildren(that.getStage().getChildren());
	      }

	      return index;
	    },
	    /**
	         * get node depth in node tree.  Returns an integer.
	         *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always
	         *  be >= 2
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Integer}
	         */
	    getDepth: function() {
	      var depth = 0,
	        parent = this.parent;

	      while (parent) {
	        depth++;
	        parent = parent.parent;
	      }
	      return depth;
	    },
	    setPosition: function(pos) {
	      this.setX(pos.x);
	      this.setY(pos.y);
	      return this;
	    },
	    getPosition: function() {
	      return {
	        x: this.getX(),
	        y: this.getY()
	      };
	    },
	    /**
	         * get absolute position relative to the top left corner of the stage container div
	         * or relative to passed node
	         * @method
	         * @param {Object} [top] optional parent node
	         * @memberof Konva.Node.prototype
	         * @returns {Object}
	         */
	    getAbsolutePosition: function(top) {
	      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),
	        absoluteTransform = new Konva.Transform(),
	        offset = this.offset();

	      // clone the matrix array
	      absoluteTransform.m = absoluteMatrix.slice();
	      absoluteTransform.translate(offset.x, offset.y);

	      return absoluteTransform.getTranslation();
	    },
	    /**
	         * set absolute position
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @returns {Konva.Node}
	         */
	    setAbsolutePosition: function(pos) {
	      var origTrans = this._clearTransform(),
	        it;

	      // don't clear translation
	      this.attrs.x = origTrans.x;
	      this.attrs.y = origTrans.y;
	      delete origTrans.x;
	      delete origTrans.y;

	      // unravel transform
	      it = this.getAbsoluteTransform();

	      it.invert();
	      it.translate(pos.x, pos.y);
	      pos = {
	        x: this.attrs.x + it.getTranslation().x,
	        y: this.attrs.y + it.getTranslation().y
	      };

	      this.setPosition({ x: pos.x, y: pos.y });
	      this._setTransform(origTrans);

	      return this;
	    },
	    _setTransform: function(trans) {
	      var key;

	      for (key in trans) {
	        this.attrs[key] = trans[key];
	      }

	      this._clearCache(TRANSFORM);
	      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);
	    },
	    _clearTransform: function() {
	      var trans = {
	        x: this.getX(),
	        y: this.getY(),
	        rotation: this.getRotation(),
	        scaleX: this.getScaleX(),
	        scaleY: this.getScaleY(),
	        offsetX: this.getOffsetX(),
	        offsetY: this.getOffsetY(),
	        skewX: this.getSkewX(),
	        skewY: this.getSkewY()
	      };

	      this.attrs.x = 0;
	      this.attrs.y = 0;
	      this.attrs.rotation = 0;
	      this.attrs.scaleX = 1;
	      this.attrs.scaleY = 1;
	      this.attrs.offsetX = 0;
	      this.attrs.offsetY = 0;
	      this.attrs.skewX = 0;
	      this.attrs.skewY = 0;

	      this._clearCache(TRANSFORM);
	      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);

	      // return original transform
	      return trans;
	    },
	    /**
	         * move node by an amount relative to its current position
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} change
	         * @param {Number} change.x
	         * @param {Number} change.y
	         * @returns {Konva.Node}
	         * @example
	         * // move node in x direction by 1px and y direction by 2px
	         * node.move({
	         *   x: 1,
	         *   y: 2)
	         * });
	         */
	    move: function(change) {
	      var changeX = change.x,
	        changeY = change.y,
	        x = this.getX(),
	        y = this.getY();

	      if (changeX !== undefined) {
	        x += changeX;
	      }

	      if (changeY !== undefined) {
	        y += changeY;
	      }

	      this.setPosition({ x: x, y: y });
	      return this;
	    },
	    _eachAncestorReverse: function(func, top) {
	      var family = [],
	        parent = this.getParent(),
	        len,
	        n;

	      // if top node is defined, and this node is top node,
	      // there's no need to build a family tree.  just execute
	      // func with this because it will be the only node
	      if (top && top._id === this._id) {
	        func(this);
	        return true;
	      }

	      family.unshift(this);

	      while (parent && (!top || parent._id !== top._id)) {
	        family.unshift(parent);
	        parent = parent.parent;
	      }

	      len = family.length;
	      for (n = 0; n < len; n++) {
	        func(family[n]);
	      }
	    },
	    /**
	         * rotate node by an amount in degrees relative to its current rotation
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Number} theta
	         * @returns {Konva.Node}
	         */
	    rotate: function(theta) {
	      this.setRotation(this.getRotation() + theta);
	      return this;
	    },
	    /**
	         * move node to the top of its siblings
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Boolean}
	         */
	    moveToTop: function() {
	      if (!this.parent) {
	        Konva.Util.warn('Node has no parent. moveToTop function is ignored.');
	        return false;
	      }
	      var index = this.index;
	      this.parent.children.splice(index, 1);
	      this.parent.children.push(this);
	      this.parent._setChildrenIndices();
	      return true;
	    },
	    /**
	         * move node up
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Boolean} flag is moved or not
	         */
	    moveUp: function() {
	      if (!this.parent) {
	        Konva.Util.warn('Node has no parent. moveUp function is ignored.');
	        return false;
	      }
	      var index = this.index,
	        len = this.parent.getChildren().length;
	      if (index < len - 1) {
	        this.parent.children.splice(index, 1);
	        this.parent.children.splice(index + 1, 0, this);
	        this.parent._setChildrenIndices();
	        return true;
	      }
	      return false;
	    },
	    /**
	         * move node down
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Boolean}
	         */
	    moveDown: function() {
	      if (!this.parent) {
	        Konva.Util.warn('Node has no parent. moveDown function is ignored.');
	        return false;
	      }
	      var index = this.index;
	      if (index > 0) {
	        this.parent.children.splice(index, 1);
	        this.parent.children.splice(index - 1, 0, this);
	        this.parent._setChildrenIndices();
	        return true;
	      }
	      return false;
	    },
	    /**
	         * move node to the bottom of its siblings
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Boolean}
	         */
	    moveToBottom: function() {
	      if (!this.parent) {
	        Konva.Util.warn(
	          'Node has no parent. moveToBottom function is ignored.'
	        );
	        return false;
	      }
	      var index = this.index;
	      if (index > 0) {
	        this.parent.children.splice(index, 1);
	        this.parent.children.unshift(this);
	        this.parent._setChildrenIndices();
	        return true;
	      }
	      return false;
	    },
	    /**
	         * set zIndex relative to siblings
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Integer} zIndex
	         * @returns {Konva.Node}
	         */
	    setZIndex: function(zIndex) {
	      if (!this.parent) {
	        Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');
	        return false;
	      }
	      var index = this.index;
	      this.parent.children.splice(index, 1);
	      this.parent.children.splice(zIndex, 0, this);
	      this.parent._setChildrenIndices();
	      return this;
	    },
	    /**
	         * get absolute opacity
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Number}
	         */
	    getAbsoluteOpacity: function() {
	      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);
	    },
	    _getAbsoluteOpacity: function() {
	      var absOpacity = this.getOpacity();
	      var parent = this.getParent();
	      if (parent && !parent._isUnderCache) {
	        absOpacity *= this.getParent().getAbsoluteOpacity();
	      }
	      return absOpacity;
	    },
	    /**
	         * move node to another container
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Container} newContainer
	         * @returns {Konva.Node}
	         * @example
	         * // move node from current layer into layer2
	         * node.moveTo(layer2);
	         */
	    moveTo: function(newContainer) {
	      // do nothing if new container is already parent
	      if (this.getParent() !== newContainer) {
	        // this.remove my be overrided by drag and drop
	        // buy we need original
	        (this.__originalRemove || this.remove).call(this);
	        newContainer.add(this);
	      }
	      return this;
	    },
	    /**
	         * convert Node into an object for serialization.  Returns an object.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Object}
	         */
	    toObject: function() {
	      var obj = {},
	        attrs = this.getAttrs(),
	        key,
	        val,
	        getter,
	        defaultValue;

	      obj.attrs = {};

	      for (key in attrs) {
	        val = attrs[key];
	        getter = this[key];
	        // remove attr value so that we can extract the default value from the getter
	        delete attrs[key];
	        defaultValue = getter ? getter.call(this) : null;
	        // restore attr value
	        attrs[key] = val;
	        if (defaultValue !== val) {
	          obj.attrs[key] = val;
	        }
	      }

	      obj.className = this.getClassName();
	      return Konva.Util._prepareToStringify(obj);
	    },
	    /**
	         * convert Node into a JSON string.  Returns a JSON string.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {String}}
	         */
	    toJSON: function() {
	      return JSON.stringify(this.toObject());
	    },
	    /**
	         * get parent container
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Node}
	         */
	    getParent: function() {
	      return this.parent;
	    },
	    /**
	         * get all ancestros (parent then parent of the parent, etc) of the node
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} [selector] selector for search
	         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?
	         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)
	         * @returns {Array} [ancestors]
	         * @example
	         * // get one of the parent group
	         * var parentGroups = node.findAncestors('Group');
	         */
	    findAncestors: function(selector, includeSelf, stopNode) {
	      var res = [];

	      if (includeSelf && this._isMatch(selector)) {
	        res.push(this);
	      }
	      var ancestor = this.parent;
	      while (ancestor) {
	        if (ancestor === stopNode) {
	          return res;
	        }
	        if (ancestor._isMatch(selector)) {
	          res.push(ancestor);
	        }
	        ancestor = ancestor.parent;
	      }
	      return res;
	    },
	    /**
	         * get ancestor (parent or parent of the parent, etc) of the node that match passed selector
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} [selector] selector for search
	         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?
	         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)
	         * @returns {Konva.Node} ancestor
	         * @example
	         * // get one of the parent group
	         * var group = node.findAncestors('.mygroup');
	         */
	    findAncestor: function(selector, includeSelf, stopNode) {
	      return this.findAncestors(selector, includeSelf, stopNode)[0];
	    },
	    // is current node match passed selector?
	    _isMatch: function(selector) {
	      if (!selector) {
	        return false;
	      }
	      var selectorArr = selector.replace(/ /g, '').split(','),
	        len = selectorArr.length,
	        n,
	        sel;

	      for (n = 0; n < len; n++) {
	        sel = selectorArr[n];
	        if (!Konva.Util.isValidSelector(sel)) {
	          Konva.Util.warn(
	            'Selector "' +
	              sel +
	              '" is invalid. Allowed selectors examples are "#foo", ".bar" or "Group".'
	          );
	          Konva.Util.warn(
	            'If you have a custom shape with such className, please change it to start with upper letter like "Triangle".'
	          );
	          Konva.Util.warn('Konva is awesome, right?');
	        }
	        // id selector
	        if (sel.charAt(0) === '#') {
	          if (this.id() === sel.slice(1)) {
	            return true;
	          }
	        } else if (sel.charAt(0) === '.') {
	          // name selector
	          if (this.hasName(sel.slice(1))) {
	            return true;
	          }
	        } else if (this._get(sel).length !== 0) {
	          return true;
	        }
	      }
	      return false;
	    },
	    /**
	         * get layer ancestor
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Layer}
	         */
	    getLayer: function() {
	      var parent = this.getParent();
	      return parent ? parent.getLayer() : null;
	    },
	    /**
	         * get stage ancestor
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Stage}
	         */
	    getStage: function() {
	      return this._getCache(STAGE, this._getStage);
	    },
	    _getStage: function() {
	      var parent = this.getParent();
	      if (parent) {
	        return parent.getStage();
	      } else {
	        return undefined;
	      }
	    },
	    /**
	         * fire event
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent
	         * @param {Event} [evt] event object
	         * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event
	         *  not bubbling.  Setting the value to true will result in the event bubbling.
	         * @returns {Konva.Node}
	         * @example
	         * // manually fire click event
	         * node.fire('click');
	         *
	         * // fire custom event
	         * node.fire('foo');
	         *
	         * // fire custom event with custom event object
	         * node.fire('foo', {
	         *   bar: 10
	         * });
	         *
	         * // fire click event that bubbles
	         * node.fire('click', null, true);
	         */
	    fire: function(eventType, evt, bubble) {
	      evt = evt || {};
	      evt.target = evt.target || this;
	      // bubble
	      if (bubble) {
	        this._fireAndBubble(eventType, evt);
	      } else {
	        // no bubble
	        this._fire(eventType, evt);
	      }
	      return this;
	    },
	    /**
	         * get absolute transform of the node which takes into
	         *  account its ancestor transforms
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Transform}
	         */
	    getAbsoluteTransform: function(top) {
	      // if using an argument, we can't cache the result.
	      if (top) {
	        return this._getAbsoluteTransform(top);
	      } else {
	        // if no argument, we can cache the result
	        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);
	      }
	    },
	    _getAbsoluteTransform: function(top) {
	      var at = new Konva.Transform(),
	        transformsEnabled,
	        trans;

	      // start with stage and traverse downwards to self
	      this._eachAncestorReverse(function(node) {
	        transformsEnabled = node.transformsEnabled();
	        trans = node.getTransform();

	        if (transformsEnabled === 'all') {
	          at.multiply(trans);
	        } else if (transformsEnabled === 'position') {
	          at.translate(node.x(), node.y());
	        }
	      }, top);
	      return at;
	    },
	    /**
	         * get absolute scale of the node which takes into
	         *  account its ancestor scales
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Transform}
	         */
	    getAbsoluteScale: function(top) {
	      // if using an argument, we can't cache the result.
	      if (top) {
	        return this._getAbsoluteScale(top);
	      } else {
	        // if no argument, we can cache the result
	        return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);
	      }
	    },
	    _getAbsoluteScale: function(top) {
	      // this is special logic for caching with some shapes with shadow
	      var parent = this;
	      while (parent) {
	        if (parent._isUnderCache) {
	          top = parent;
	        }
	        parent = parent.getParent();
	      }

	      var scaleX = 1,
	        scaleY = 1;

	      // start with stage and traverse downwards to self
	      this._eachAncestorReverse(function(node) {
	        scaleX *= node.scaleX();
	        scaleY *= node.scaleY();
	      }, top);
	      return {
	        x: scaleX,
	        y: scaleY
	      };
	    },
	    /**
	         * get transform of the node
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Transform}
	         */
	    getTransform: function() {
	      return this._getCache(TRANSFORM, this._getTransform);
	    },
	    _getTransform: function() {
	      var m = new Konva.Transform(),
	        x = this.getX(),
	        y = this.getY(),
	        rotation = Konva.getAngle(this.getRotation()),
	        scaleX = this.getScaleX(),
	        scaleY = this.getScaleY(),
	        skewX = this.getSkewX(),
	        skewY = this.getSkewY(),
	        offsetX = this.getOffsetX(),
	        offsetY = this.getOffsetY();

	      if (x !== 0 || y !== 0) {
	        m.translate(x, y);
	      }
	      if (rotation !== 0) {
	        m.rotate(rotation);
	      }
	      if (skewX !== 0 || skewY !== 0) {
	        m.skew(skewX, skewY);
	      }
	      if (scaleX !== 1 || scaleY !== 1) {
	        m.scale(scaleX, scaleY);
	      }
	      if (offsetX !== 0 || offsetY !== 0) {
	        m.translate(-1 * offsetX, -1 * offsetY);
	      }

	      return m;
	    },
	    /**
	         * clone node.  Returns a new Node instance with identical attributes.  You can also override
	         *  the node properties with an object literal, enabling you to use an existing node as a template
	         *  for another node
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} obj override attrs
	         * @returns {Konva.Node}
	         * @example
	         * // simple clone
	         * var clone = node.clone();
	         *
	         * // clone a node and override the x position
	         * var clone = rect.clone({
	         *   x: 5
	         * });
	         */
	    clone: function(obj) {
	      // instantiate new node
	      var attrs = Konva.Util.cloneObject(this.attrs),
	        key,
	        allListeners,
	        len,
	        n,
	        listener;
	      // filter black attrs
	      for (var i in CLONE_BLACK_LIST) {
	        var blockAttr = CLONE_BLACK_LIST[i];
	        delete attrs[blockAttr];
	      }
	      // apply attr overrides
	      for (key in obj) {
	        attrs[key] = obj[key];
	      }

	      var node = new this.constructor(attrs);
	      // copy over listeners
	      for (key in this.eventListeners) {
	        allListeners = this.eventListeners[key];
	        len = allListeners.length;
	        for (n = 0; n < len; n++) {
	          listener = allListeners[n];
	          /*
	                     * don't include konva namespaced listeners because
	                     *  these are generated by the constructors
	                     */
	          if (listener.name.indexOf(KONVA) < 0) {
	            // if listeners array doesn't exist, then create it
	            if (!node.eventListeners[key]) {
	              node.eventListeners[key] = [];
	            }
	            node.eventListeners[key].push(listener);
	          }
	        }
	      }
	      return node;
	    },
	    _toKonvaCanvas: function(config) {
	      config = config || {};

	      var stage = this.getStage(),
	        x = config.x || 0,
	        y = config.y || 0,
	        pixelRatio = config.pixelRatio || 1,
	        canvas = new Konva.SceneCanvas({
	          width:
	            config.width || this.getWidth() || (stage ? stage.getWidth() : 0),
	          height:
	            config.height ||
	            this.getHeight() ||
	            (stage ? stage.getHeight() : 0),
	          pixelRatio: pixelRatio
	        }),
	        context = canvas.getContext();

	      context.save();

	      if (x || y) {
	        context.translate(-1 * x, -1 * y);
	      }

	      this.drawScene(canvas);
	      context.restore();

	      return canvas;
	    },
	    /**
	         * converts node into an canvas element.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} config
	         * @param {Function} config.callback function executed when the composite has completed
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.
	         * @example
	         * var canvas = node.toCanvas();
	         */
	    toCanvas: function(config) {
	      return this._toKonvaCanvas(config)._canvas;
	    },
	    /**
	         * Creates a composite data URL. If MIME type is not
	         * specified, then "image/png" will result. For "image/jpeg", specify a quality
	         * level as quality (range 0.0 - 1.0)
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} config
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image url. Default is 1
	         * @returns {String}
	         */
	    toDataURL: function(config) {
	      config = config || {};
	      var mimeType = config.mimeType || null,
	        quality = config.quality || null;
	      return this._toKonvaCanvas(config).toDataURL(mimeType, quality);
	    },
	    /**
	         * converts node into an image.  Since the toImage
	         *  method is asynchronous, a callback is required.  toImage is most commonly used
	         *  to cache complex drawings as an image so that they don't have to constantly be redrawn
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {Object} config
	         * @param {Function} config.callback function executed when the composite has completed
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.
	         * @example
	         * var image = node.toImage({
	         *   callback: function(img) {
	         *     // do stuff with img
	         *   }
	         * });
	         */
	    toImage: function(config) {
	      if (!config || !config.callback) {
	        throw 'callback required for toImage method config argument';
	      }
	      Konva.Util._getImage(this.toDataURL(config), function(img) {
	        config.callback(img);
	      });
	    },
	    setSize: function(size) {
	      this.setWidth(size.width);
	      this.setHeight(size.height);
	      return this;
	    },
	    getSize: function() {
	      return {
	        width: this.getWidth(),
	        height: this.getHeight()
	      };
	    },
	    getWidth: function() {
	      return this.attrs.width || 0;
	    },
	    getHeight: function() {
	      return this.attrs.height || 0;
	    },
	    /**
	         * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {String}
	         */
	    getClassName: function() {
	      return this.className || this.nodeType;
	    },
	    /**
	         * get the node type, which may return Stage, Layer, Group, or Node
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {String}
	         */
	    getType: function() {
	      return this.nodeType;
	    },
	    getDragDistance: function() {
	      // compare with undefined because we need to track 0 value
	      if (this.attrs.dragDistance !== undefined) {
	        return this.attrs.dragDistance;
	      } else if (this.parent) {
	        return this.parent.getDragDistance();
	      } else {
	        return Konva.dragDistance;
	      }
	    },
	    _get: function(selector) {
	      return this.className === selector || this.nodeType === selector
	        ? [this]
	        : [];
	    },
	    _off: function(type, name) {
	      var evtListeners = this.eventListeners[type],
	        i,
	        evtName;

	      for (i = 0; i < evtListeners.length; i++) {
	        evtName = evtListeners[i].name;
	        // the following two conditions must be true in order to remove a handler:
	        // 1) the current event name cannot be konva unless the event name is konva
	        //    this enables developers to force remove a konva specific listener for whatever reason
	        // 2) an event name is not specified, or if one is specified, it matches the current event name
	        if (
	          (evtName !== 'konva' || name === 'konva') &&
	          (!name || evtName === name)
	        ) {
	          evtListeners.splice(i, 1);
	          if (evtListeners.length === 0) {
	            delete this.eventListeners[type];
	            break;
	          }
	          i--;
	        }
	      }
	    },
	    _fireChangeEvent: function(attr, oldVal, newVal) {
	      this._fire(attr + CHANGE, {
	        oldVal: oldVal,
	        newVal: newVal
	      });
	    },
	    setId: function(id) {
	      var oldId = this.getId();

	      Konva._removeId(oldId);
	      Konva._addId(this, id);
	      this._setAttr(ID, id);
	      return this;
	    },
	    setName: function(name) {
	      var oldNames = (this.getName() || '').split(/\s/g);
	      var newNames = (name || '').split(/\s/g);
	      var subname, i;
	      // remove all subnames
	      for (i = 0; i < oldNames.length; i++) {
	        subname = oldNames[i];
	        if (newNames.indexOf(subname) === -1 && subname) {
	          Konva._removeName(subname, this._id);
	        }
	      }

	      // add new names
	      for (i = 0; i < newNames.length; i++) {
	        subname = newNames[i];
	        if (oldNames.indexOf(subname) === -1 && subname) {
	          Konva._addName(this, subname);
	        }
	      }

	      this._setAttr(NAME, name);
	      return this;
	    },
	    // naming methods
	    /**
	         * add name to node
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} name
	         * @returns {Konva.Node}
	         * @example
	         * node.name('red');
	         * node.addName('selected');
	         * node.name(); // return 'red selected'
	         */
	    addName: function(name) {
	      if (!this.hasName(name)) {
	        var oldName = this.name();
	        var newName = oldName ? oldName + ' ' + name : name;
	        this.setName(newName);
	      }
	      return this;
	    },
	    /**
	         * check is node has name
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} name
	         * @returns {Boolean}
	         * @example
	         * node.name('red');
	         * node.hasName('red');   // return true
	         * node.hasName('selected'); // return false
	         */
	    hasName: function(name) {
	      var names = (this.name() || '').split(/\s/g);
	      return names.indexOf(name) !== -1;
	    },
	    /**
	         * remove name from node
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} name
	         * @returns {Konva.Node}
	         * @example
	         * node.name('red selected');
	         * node.removeName('selected');
	         * node.hasName('selected'); // return false
	         * node.name(); // return 'red'
	         */
	    removeName: function(name) {
	      var names = (this.name() || '').split(/\s/g);
	      var index = names.indexOf(name);
	      if (index !== -1) {
	        names.splice(index, 1);
	        this.setName(names.join(' '));
	      }
	      return this;
	    },
	    /**
	         * set attr
	         * @method
	         * @memberof Konva.Node.prototype
	         * @param {String} attr
	         * @param {*} val
	         * @returns {Konva.Node}
	         * @example
	         * node.setAttr('x', 5);
	         */
	    setAttr: function(attr, val) {
	      var method = SET + Konva.Util._capitalize(attr),
	        func = this[method];

	      if (Konva.Util._isFunction(func)) {
	        func.call(this, val);
	      } else {
	        // otherwise set directly
	        this._setAttr(attr, val);
	      }
	      return this;
	    },
	    _setAttr: function(key, val) {
	      var oldVal;
	      oldVal = this.attrs[key];
	      if (oldVal === val) {
	        return;
	      }
	      if (val === undefined || val === null) {
	        delete this.attrs[key];
	      } else {
	        this.attrs[key] = val;
	      }
	      this._fireChangeEvent(key, oldVal, val);
	    },
	    _setComponentAttr: function(key, component, val) {
	      var oldVal;
	      if (val !== undefined) {
	        oldVal = this.attrs[key];

	        if (!oldVal) {
	          // set value to default value using getAttr
	          this.attrs[key] = this.getAttr(key);
	        }

	        this.attrs[key][component] = val;
	        this._fireChangeEvent(key, oldVal, val);
	      }
	    },
	    _fireAndBubble: function(eventType, evt, compareShape) {
	      var okayToRun = true;

	      if (evt && this.nodeType === SHAPE) {
	        evt.target = this;
	      }

	      if (
	        eventType === MOUSEENTER &&
	        compareShape &&
	        (this._id === compareShape._id ||
	          (this.isAncestorOf && this.isAncestorOf(compareShape)))
	      ) {
	        okayToRun = false;
	      } else if (
	        eventType === MOUSELEAVE &&
	        compareShape &&
	        (this._id === compareShape._id ||
	          (this.isAncestorOf && this.isAncestorOf(compareShape)))
	      ) {
	        okayToRun = false;
	      }
	      if (okayToRun) {
	        this._fire(eventType, evt);

	        // simulate event bubbling
	        var stopBubble =
	          (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&
	          (compareShape &&
	            compareShape.isAncestorOf &&
	            compareShape.isAncestorOf(this) &&
	            !compareShape.isAncestorOf(this.parent));
	        if (
	          ((evt && !evt.cancelBubble) || !evt) &&
	          this.parent &&
	          this.parent.isListening() &&
	          !stopBubble
	        ) {
	          if (compareShape && compareShape.parent) {
	            this._fireAndBubble.call(
	              this.parent,
	              eventType,
	              evt,
	              compareShape.parent
	            );
	          } else {
	            this._fireAndBubble.call(this.parent, eventType, evt);
	          }
	        }
	      }
	    },
	    _fire: function(eventType, evt) {
	      var events = this.eventListeners[eventType],
	        i;

	      evt = evt || {};
	      evt.currentTarget = this;
	      evt.type = eventType;

	      if (events) {
	        for (i = 0; i < events.length; i++) {
	          events[i].handler.call(this, evt);
	        }
	      }
	    },
	    /**
	         * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn
	         * @method
	         * @memberof Konva.Node.prototype
	         * @returns {Konva.Node}
	         */
	    draw: function() {
	      this.drawScene();
	      this.drawHit();
	      return this;
	    }
	  });

	  /**
	     * create node with JSON string or an Object.  De-serializtion does not generate custom
	     *  shape drawing functions, images, or event handlers (this would make the
	     *  serialized object huge).  If your app uses custom shapes, images, and
	     *  event handlers (it probably does), then you need to select the appropriate
	     *  shapes after loading the stage and set these properties via on(), setDrawFunc(),
	     *  and setImage() methods
	     * @method
	     * @memberof Konva.Node
	     * @param {String|Object} json string or object
	     * @param {Element} [container] optional container dom element used only if you're
	     *  creating a stage node
	     */
	  Konva.Node.create = function(data, container) {
	    if (Konva.Util._isString(data)) {
	      data = JSON.parse(data);
	    }
	    return this._createNode(data, container);
	  };
	  Konva.Node._createNode = function(obj, container) {
	    var className = Konva.Node.prototype.getClassName.call(obj),
	      children = obj.children,
	      no,
	      len,
	      n;

	    // if container was passed in, add it to attrs
	    if (container) {
	      obj.attrs.container = container;
	    }

	    no = new Konva[className](obj.attrs);
	    if (children) {
	      len = children.length;
	      for (n = 0; n < len; n++) {
	        no.add(this._createNode(children[n]));
	      }
	    }

	    return no;
	  };

	  // =========================== add getters setters ===========================

	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');
	  /**
	     * get/set node position relative to parent
	     * @name position
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Object} pos
	     * @param {Number} pos.x
	     * @param {Number} pos.y
	     * @returns {Object}
	     * @example
	     * // get position
	     * var position = node.position();
	     *
	     * // set position
	     * node.position({
	     *   x: 5
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'x', 0);

	  /**
	     * get/set x position
	     * @name x
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} x
	     * @returns {Object}
	     * @example
	     * // get x
	     * var x = node.x();
	     *
	     * // set x
	     * node.x(5);
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'y', 0);

	  /**
	     * get/set y position
	     * @name y
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} y
	     * @returns {Integer}
	     * @example
	     * // get y
	     * var y = node.y();
	     *
	     * // set y
	     * node.y(5);
	     */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'globalCompositeOperation',
	    'source-over'
	  );

	  /**
	     * get/set globalCompositeOperation of a shape
	     * @name globalCompositeOperation
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} blur
	     * @returns {Number}
	     * @example
	     * // get shadow blur
	     * var globalCompositeOperation = shape.globalCompositeOperation();
	     *
	     * // set shadow blur
	     * shape.globalCompositeOperation('source-in');
	     */
	  Konva.Factory.addGetterSetter(Konva.Node, 'opacity', 1);

	  /**
	     * get/set opacity.  Opacity values range from 0 to 1.
	     *  A node with an opacity of 0 is fully transparent, and a node
	     *  with an opacity of 1 is fully opaque
	     * @name opacity
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Object} opacity
	     * @returns {Number}
	     * @example
	     * // get opacity
	     * var opacity = node.opacity();
	     *
	     * // set opacity
	     * node.opacity(0.5);
	     */

	  Konva.Factory.addGetter(Konva.Node, 'name');
	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');

	  /**
	     * get/set name
	     * @name name
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {String} name
	     * @returns {String}
	     * @example
	     * // get name
	     * var name = node.name();
	     *
	     * // set name
	     * node.name('foo');
	     *
	     * // also node may have multiple names (as css classes)
	     * node.name('foo bar');
	     */

	  Konva.Factory.addGetter(Konva.Node, 'id');
	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');

	  /**
	     * get/set id. Id is global for whole page.
	     * @name id
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {String} id
	     * @returns {String}
	     * @example
	     * // get id
	     * var name = node.id();
	     *
	     * // set id
	     * node.id('foo');
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'rotation', 0);

	  /**
	     * get/set rotation in degrees
	     * @name rotation
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} rotation
	     * @returns {Number}
	     * @example
	     * // get rotation in degrees
	     * var rotation = node.rotation();
	     *
	     * // set rotation in degrees
	     * node.rotation(45);
	     */

	  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);

	  /**
	     * get/set scale
	     * @name scale
	     * @param {Object} scale
	     * @param {Number} scale.x
	     * @param {Number} scale.y
	     * @method
	     * @memberof Konva.Node.prototype
	     * @returns {Object}
	     * @example
	     * // get scale
	     * var scale = node.scale();
	     *
	     * // set scale
	     * shape.scale({
	     *   x: 2
	     *   y: 3
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'scaleX', 1);

	  /**
	     * get/set scale x
	     * @name scaleX
	     * @param {Number} x
	     * @method
	     * @memberof Konva.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get scale x
	     * var scaleX = node.scaleX();
	     *
	     * // set scale x
	     * node.scaleX(2);
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'scaleY', 1);

	  /**
	     * get/set scale y
	     * @name scaleY
	     * @param {Number} y
	     * @method
	     * @memberof Konva.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get scale y
	     * var scaleY = node.scaleY();
	     *
	     * // set scale y
	     * node.scaleY(2);
	     */

	  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);

	  /**
	     * get/set skew
	     * @name skew
	     * @param {Object} skew
	     * @param {Number} skew.x
	     * @param {Number} skew.y
	     * @method
	     * @memberof Konva.Node.prototype
	     * @returns {Object}
	     * @example
	     * // get skew
	     * var skew = node.skew();
	     *
	     * // set skew
	     * node.skew({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'skewX', 0);

	  /**
	     * get/set skew x
	     * @name skewX
	     * @param {Number} x
	     * @method
	     * @memberof Konva.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get skew x
	     * var skewX = node.skewX();
	     *
	     * // set skew x
	     * node.skewX(3);
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'skewY', 0);

	  /**
	     * get/set skew y
	     * @name skewY
	     * @param {Number} y
	     * @method
	     * @memberof Konva.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get skew y
	     * var skewY = node.skewY();
	     *
	     * // set skew y
	     * node.skewY(3);
	     */

	  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);

	  /**
	     * get/set offset.  Offsets the default position and rotation point
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Object} offset
	     * @param {Number} offset.x
	     * @param {Number} offset.y
	     * @returns {Object}
	     * @example
	     * // get offset
	     * var offset = node.offset();
	     *
	     * // set offset
	     * node.offset({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'offsetX', 0);

	  /**
	     * get/set offset x
	     * @name offsetX
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get offset x
	     * var offsetX = node.offsetX();
	     *
	     * // set offset x
	     * node.offsetX(3);
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'offsetY', 0);

	  /**
	     * get/set offset y
	     * @name offsetY
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get offset y
	     * var offsetY = node.offsetY();
	     *
	     * // set offset y
	     * node.offsetY(3);
	     */

	  Konva.Factory.addSetter(Konva.Node, 'dragDistance');
	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');

	  /**
	     * get/set drag distance
	     * @name dragDistance
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} distance
	     * @returns {Number}
	     * @example
	     * // get drag distance
	     * var dragDistance = node.dragDistance();
	     *
	     * // set distance
	     * // node starts dragging only if pointer moved more then 3 pixels
	     * node.dragDistance(3);
	     * // or set globally
	     * Konva.dragDistance = 3;
	     */

	  Konva.Factory.addSetter(Konva.Node, 'width', 0);
	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');
	  /**
	     * get/set width
	     * @name width
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} width
	     * @returns {Number}
	     * @example
	     * // get width
	     * var width = node.width();
	     *
	     * // set width
	     * node.width(100);
	     */

	  Konva.Factory.addSetter(Konva.Node, 'height', 0);
	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');
	  /**
	     * get/set height
	     * @name height
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Number} height
	     * @returns {Number}
	     * @example
	     * // get height
	     * var height = node.height();
	     *
	     * // set height
	     * node.height(100);
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit');
	  /**
	     * get/set listenig attr.  If you need to determine if a node is listening or not
	     *   by taking into account its parents, use the isListening() method
	     * @name listening
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Boolean|String} listening Can be "inherit", true, or false.  The default is "inherit".
	     * @returns {Boolean|String}
	     * @example
	     * // get listening attr
	     * var listening = node.listening();
	     *
	     * // stop listening for events
	     * node.listening(false);
	     *
	     * // listen for events
	     * node.listening(true);
	     *
	     * // listen to events according to the parent
	     * node.listening('inherit');
	     */

	  /**
	      * get/set preventDefault
	      * By default all shapes will prevent default behaviour
	      * of a browser on a pointer move or tap.
	      * that will prevent native scrolling when you are trying to drag&drop a node
	      * but sometimes you may need to enable default actions
	      * in that case you can set the property to false
	      * @name preventDefault
	      * @method
	      * @memberof Konva.Node.prototype
	      * @param {Number} preventDefault
	      * @returns {Number}
	      * @example
	      * // get preventDefault
	      * var shouldPrevent = shape.preventDefault();
	      *
	      * // set preventDefault
	      * shape.preventDefault(false);
	      */

	  Konva.Factory.addGetterSetter(Konva.Node, 'preventDefault', true);

	  Konva.Factory.addGetterSetter(Konva.Node, 'filters', undefined, function(
	    val
	  ) {
	    this._filterUpToDate = false;
	    return val;
	  });
	  /**
	     * get/set filters.  Filters are applied to cached canvases
	     * @name filters
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Array} filters array of filters
	     * @returns {Array}
	     * @example
	     * // get filters
	     * var filters = node.filters();
	     *
	     * // set a single filter
	     * node.cache();
	     * node.filters([Konva.Filters.Blur]);
	     *
	     * // set multiple filters
	     * node.cache();
	     * node.filters([
	     *   Konva.Filters.Blur,
	     *   Konva.Filters.Sepia,
	     *   Konva.Filters.Invert
	     * ]);
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit');
	  /**
	     * get/set visible attr.  Can be "inherit", true, or false.  The default is "inherit".
	     *   If you need to determine if a node is visible or not
	     *   by taking into account its parents, use the isVisible() method
	     * @name visible
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Boolean|String} visible
	     * @returns {Boolean|String}
	     * @example
	     * // get visible attr
	     * var visible = node.visible();
	     *
	     * // make invisible
	     * node.visible(false);
	     *
	     * // make visible
	     * node.visible(true);
	     *
	     * // make visible according to the parent
	     * node.visible('inherit');
	     */

	  Konva.Factory.addGetterSetter(Konva.Node, 'transformsEnabled', 'all');

	  /**
	     * get/set transforms that are enabled.  Can be "all", "none", or "position".  The default
	     *  is "all"
	     * @name transformsEnabled
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {String} enabled
	     * @returns {String}
	     * @example
	     * // enable position transform only to improve draw performance
	     * node.transformsEnabled('position');
	     *
	     * // enable all transforms
	     * node.transformsEnabled('all');
	     */

	  /**
	     * get/set node size
	     * @name size
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Object} size
	     * @param {Number} size.width
	     * @param {Number} size.height
	     * @returns {Object}
	     * @example
	     * // get node size
	     * var size = node.size();
	     * var x = size.x;
	     * var y = size.y;
	     *
	     * // set size
	     * node.size({
	     *   width: 100,
	     *   height: 200
	     * });
	     */
	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');

	  Konva.Factory.backCompat(Konva.Node, {
	    rotateDeg: 'rotate',
	    setRotationDeg: 'setRotation',
	    getRotationDeg: 'getRotation'
	  });

	  Konva.Collection.mapMethods(Konva.Node);
	})(Konva);

	(function() {
	  'use strict';
	  /**
	    * Grayscale Filter
	    * @function
	    * @memberof Konva.Filters
	    * @param {Object} imageData
	    * @example
	    * node.cache();
	    * node.filters([Konva.Filters.Grayscale]);
	    */
	  Konva.Filters.Grayscale = function(imageData) {
	    var data = imageData.data, len = data.length, i, brightness;

	    for (i = 0; i < len; i += 4) {
	      brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];
	      // red
	      data[i] = brightness;
	      // green
	      data[i + 1] = brightness;
	      // blue
	      data[i + 2] = brightness;
	    }
	  };
	})();

	(function(Konva) {
	  'use strict';
	  /**
	     * Brighten Filter.
	     * @function
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Brighten]);
	     * node.brightness(0.8);
	     */
	  Konva.Filters.Brighten = function(imageData) {
	    var brightness = this.brightness() * 255,
	      data = imageData.data,
	      len = data.length,
	      i;

	    for (i = 0; i < len; i += 4) {
	      // red
	      data[i] += brightness;
	      // green
	      data[i + 1] += brightness;
	      // blue
	      data[i + 2] += brightness;
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'brightness',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values
	    *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.
	    * @name brightness
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} brightness value between -1 and 1
	    * @returns {Number}
	    */
	})(Konva);

	(function() {
	  'use strict';
	  /**
	    * Invert Filter
	    * @function
	    * @memberof Konva.Filters
	    * @param {Object} imageData
	    * @example
	    * node.cache();
	    * node.filters([Konva.Filters.Invert]);
	    */
	  Konva.Filters.Invert = function(imageData) {
	    var data = imageData.data, len = data.length, i;

	    for (i = 0; i < len; i += 4) {
	      // red
	      data[i] = 255 - data[i];
	      // green
	      data[i + 1] = 255 - data[i + 1];
	      // blue
	      data[i + 2] = 255 - data[i + 2];
	    }
	  };
	})();

	/*
	 the Gauss filter
	 master repo: https://github.com/pavelpower/kineticjsGaussFilter
	*/
	(function(Konva) {
	  'use strict';
	  /*

	     StackBlur - a fast almost Gaussian Blur For Canvas

	     Version:   0.5
	     Author:    Mario Klingemann
	     Contact:   mario@quasimondo.com
	     Website:   http://www.quasimondo.com/StackBlurForCanvas
	     Twitter:   @quasimondo

	     In case you find this class useful - especially in commercial projects -
	     I am not totally unhappy for a small donation to my PayPal account
	     mario@quasimondo.de

	     Or support me on flattr:
	     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript

	     Copyright (c) 2010 Mario Klingemann

	     Permission is hereby granted, free of charge, to any person
	     obtaining a copy of this software and associated documentation
	     files (the "Software"), to deal in the Software without
	     restriction, including without limitation the rights to use,
	     copy, modify, merge, publish, distribute, sublicense, and/or sell
	     copies of the Software, and to permit persons to whom the
	     Software is furnished to do so, subject to the following
	     conditions:

	     The above copyright notice and this permission notice shall be
	     included in all copies or substantial portions of the Software.

	     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
	     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
	     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
	     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
	     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
	     OTHER DEALINGS IN THE SOFTWARE.
	     */

	  function BlurStack() {
	    this.r = 0;
	    this.g = 0;
	    this.b = 0;
	    this.a = 0;
	    this.next = null;
	  }

	  var mul_table = [
	    512,
	    512,
	    456,
	    512,
	    328,
	    456,
	    335,
	    512,
	    405,
	    328,
	    271,
	    456,
	    388,
	    335,
	    292,
	    512,
	    454,
	    405,
	    364,
	    328,
	    298,
	    271,
	    496,
	    456,
	    420,
	    388,
	    360,
	    335,
	    312,
	    292,
	    273,
	    512,
	    482,
	    454,
	    428,
	    405,
	    383,
	    364,
	    345,
	    328,
	    312,
	    298,
	    284,
	    271,
	    259,
	    496,
	    475,
	    456,
	    437,
	    420,
	    404,
	    388,
	    374,
	    360,
	    347,
	    335,
	    323,
	    312,
	    302,
	    292,
	    282,
	    273,
	    265,
	    512,
	    497,
	    482,
	    468,
	    454,
	    441,
	    428,
	    417,
	    405,
	    394,
	    383,
	    373,
	    364,
	    354,
	    345,
	    337,
	    328,
	    320,
	    312,
	    305,
	    298,
	    291,
	    284,
	    278,
	    271,
	    265,
	    259,
	    507,
	    496,
	    485,
	    475,
	    465,
	    456,
	    446,
	    437,
	    428,
	    420,
	    412,
	    404,
	    396,
	    388,
	    381,
	    374,
	    367,
	    360,
	    354,
	    347,
	    341,
	    335,
	    329,
	    323,
	    318,
	    312,
	    307,
	    302,
	    297,
	    292,
	    287,
	    282,
	    278,
	    273,
	    269,
	    265,
	    261,
	    512,
	    505,
	    497,
	    489,
	    482,
	    475,
	    468,
	    461,
	    454,
	    447,
	    441,
	    435,
	    428,
	    422,
	    417,
	    411,
	    405,
	    399,
	    394,
	    389,
	    383,
	    378,
	    373,
	    368,
	    364,
	    359,
	    354,
	    350,
	    345,
	    341,
	    337,
	    332,
	    328,
	    324,
	    320,
	    316,
	    312,
	    309,
	    305,
	    301,
	    298,
	    294,
	    291,
	    287,
	    284,
	    281,
	    278,
	    274,
	    271,
	    268,
	    265,
	    262,
	    259,
	    257,
	    507,
	    501,
	    496,
	    491,
	    485,
	    480,
	    475,
	    470,
	    465,
	    460,
	    456,
	    451,
	    446,
	    442,
	    437,
	    433,
	    428,
	    424,
	    420,
	    416,
	    412,
	    408,
	    404,
	    400,
	    396,
	    392,
	    388,
	    385,
	    381,
	    377,
	    374,
	    370,
	    367,
	    363,
	    360,
	    357,
	    354,
	    350,
	    347,
	    344,
	    341,
	    338,
	    335,
	    332,
	    329,
	    326,
	    323,
	    320,
	    318,
	    315,
	    312,
	    310,
	    307,
	    304,
	    302,
	    299,
	    297,
	    294,
	    292,
	    289,
	    287,
	    285,
	    282,
	    280,
	    278,
	    275,
	    273,
	    271,
	    269,
	    267,
	    265,
	    263,
	    261,
	    259
	  ];

	  var shg_table = [
	    9,
	    11,
	    12,
	    13,
	    13,
	    14,
	    14,
	    15,
	    15,
	    15,
	    15,
	    16,
	    16,
	    16,
	    16,
	    17,
	    17,
	    17,
	    17,
	    17,
	    17,
	    17,
	    18,
	    18,
	    18,
	    18,
	    18,
	    18,
	    18,
	    18,
	    18,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    19,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    20,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    21,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    22,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    23,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24,
	    24
	  ];

	  function filterGaussBlurRGBA(imageData, radius) {
	    var pixels = imageData.data,
	      width = imageData.width,
	      height = imageData.height;

	    var x,
	      y,
	      i,
	      p,
	      yp,
	      yi,
	      yw,
	      r_sum,
	      g_sum,
	      b_sum,
	      a_sum,
	      r_out_sum,
	      g_out_sum,
	      b_out_sum,
	      a_out_sum,
	      r_in_sum,
	      g_in_sum,
	      b_in_sum,
	      a_in_sum,
	      pr,
	      pg,
	      pb,
	      pa,
	      rbs;

	    var div = radius + radius + 1,
	      widthMinus1 = width - 1,
	      heightMinus1 = height - 1,
	      radiusPlus1 = radius + 1,
	      sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,
	      stackStart = new BlurStack(),
	      stackEnd = null,
	      stack = stackStart,
	      stackIn = null,
	      stackOut = null,
	      mul_sum = mul_table[radius],
	      shg_sum = shg_table[radius];

	    for (i = 1; i < div; i++) {
	      stack = stack.next = new BlurStack();
	      if (i === radiusPlus1) {
	        stackEnd = stack;
	      }
	    }

	    stack.next = stackStart;

	    yw = yi = 0;

	    for (y = 0; y < height; y++) {
	      r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;

	      r_out_sum = radiusPlus1 * (pr = pixels[yi]);
	      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);
	      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);
	      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);

	      r_sum += sumFactor * pr;
	      g_sum += sumFactor * pg;
	      b_sum += sumFactor * pb;
	      a_sum += sumFactor * pa;

	      stack = stackStart;

	      for (i = 0; i < radiusPlus1; i++) {
	        stack.r = pr;
	        stack.g = pg;
	        stack.b = pb;
	        stack.a = pa;
	        stack = stack.next;
	      }

	      for (i = 1; i < radiusPlus1; i++) {
	        p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);
	        r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);
	        g_sum += (stack.g = pg = pixels[p + 1]) * rbs;
	        b_sum += (stack.b = pb = pixels[p + 2]) * rbs;
	        a_sum += (stack.a = pa = pixels[p + 3]) * rbs;

	        r_in_sum += pr;
	        g_in_sum += pg;
	        b_in_sum += pb;
	        a_in_sum += pa;

	        stack = stack.next;
	      }

	      stackIn = stackStart;
	      stackOut = stackEnd;
	      for (x = 0; x < width; x++) {
	        pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;
	        if (pa !== 0) {
	          pa = 255 / pa;
	          pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;
	          pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;
	          pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;
	        } else {
	          pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;
	        }

	        r_sum -= r_out_sum;
	        g_sum -= g_out_sum;
	        b_sum -= b_out_sum;
	        a_sum -= a_out_sum;

	        r_out_sum -= stackIn.r;
	        g_out_sum -= stackIn.g;
	        b_out_sum -= stackIn.b;
	        a_out_sum -= stackIn.a;

	        p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;

	        r_in_sum += stackIn.r = pixels[p];
	        g_in_sum += stackIn.g = pixels[p + 1];
	        b_in_sum += stackIn.b = pixels[p + 2];
	        a_in_sum += stackIn.a = pixels[p + 3];

	        r_sum += r_in_sum;
	        g_sum += g_in_sum;
	        b_sum += b_in_sum;
	        a_sum += a_in_sum;

	        stackIn = stackIn.next;

	        r_out_sum += pr = stackOut.r;
	        g_out_sum += pg = stackOut.g;
	        b_out_sum += pb = stackOut.b;
	        a_out_sum += pa = stackOut.a;

	        r_in_sum -= pr;
	        g_in_sum -= pg;
	        b_in_sum -= pb;
	        a_in_sum -= pa;

	        stackOut = stackOut.next;

	        yi += 4;
	      }
	      yw += width;
	    }

	    for (x = 0; x < width; x++) {
	      g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;

	      yi = x << 2;
	      r_out_sum = radiusPlus1 * (pr = pixels[yi]);
	      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);
	      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);
	      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);

	      r_sum += sumFactor * pr;
	      g_sum += sumFactor * pg;
	      b_sum += sumFactor * pb;
	      a_sum += sumFactor * pa;

	      stack = stackStart;

	      for (i = 0; i < radiusPlus1; i++) {
	        stack.r = pr;
	        stack.g = pg;
	        stack.b = pb;
	        stack.a = pa;
	        stack = stack.next;
	      }

	      yp = width;

	      for (i = 1; i <= radius; i++) {
	        yi = (yp + x) << 2;

	        r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);
	        g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;
	        b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;
	        a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;

	        r_in_sum += pr;
	        g_in_sum += pg;
	        b_in_sum += pb;
	        a_in_sum += pa;

	        stack = stack.next;

	        if (i < heightMinus1) {
	          yp += width;
	        }
	      }

	      yi = x;
	      stackIn = stackStart;
	      stackOut = stackEnd;
	      for (y = 0; y < height; y++) {
	        p = yi << 2;
	        pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;
	        if (pa > 0) {
	          pa = 255 / pa;
	          pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;
	          pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;
	          pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;
	        } else {
	          pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;
	        }

	        r_sum -= r_out_sum;
	        g_sum -= g_out_sum;
	        b_sum -= b_out_sum;
	        a_sum -= a_out_sum;

	        r_out_sum -= stackIn.r;
	        g_out_sum -= stackIn.g;
	        b_out_sum -= stackIn.b;
	        a_out_sum -= stackIn.a;

	        p =
	          (x +
	            ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *
	              width) <<
	          2;

	        r_sum += r_in_sum += stackIn.r = pixels[p];
	        g_sum += g_in_sum += stackIn.g = pixels[p + 1];
	        b_sum += b_in_sum += stackIn.b = pixels[p + 2];
	        a_sum += a_in_sum += stackIn.a = pixels[p + 3];

	        stackIn = stackIn.next;

	        r_out_sum += pr = stackOut.r;
	        g_out_sum += pg = stackOut.g;
	        b_out_sum += pb = stackOut.b;
	        a_out_sum += pa = stackOut.a;

	        r_in_sum -= pr;
	        g_in_sum -= pg;
	        b_in_sum -= pb;
	        a_in_sum -= pa;

	        stackOut = stackOut.next;

	        yi += width;
	      }
	    }
	  }

	  /**
	     * Blur Filter
	     * @function
	     * @name Blur
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Blur]);
	     * node.blurRadius(10);
	     */
	  Konva.Filters.Blur = function Blur(imageData) {
	    var radius = Math.round(this.blurRadius());

	    if (radius > 0) {
	      filterGaussBlurRGBA(imageData, radius);
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'blurRadius',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );

	  /**
	    * get/set blur radius. Use with {@link Konva.Filters.Blur} filter
	    * @name blurRadius
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} radius
	    * @returns {Integer}
	    */
	})(Konva);

	/*eslint-disable  max-depth */
	(function() {
	  'use strict';
	  function pixelAt(idata, x, y) {
	    var idx = (y * idata.width + x) * 4;
	    var d = [];
	    d.push(
	      idata.data[idx++],
	      idata.data[idx++],
	      idata.data[idx++],
	      idata.data[idx++]
	    );
	    return d;
	  }

	  function rgbDistance(p1, p2) {
	    return Math.sqrt(
	      Math.pow(p1[0] - p2[0], 2) +
	        Math.pow(p1[1] - p2[1], 2) +
	        Math.pow(p1[2] - p2[2], 2)
	    );
	  }

	  function rgbMean(pTab) {
	    var m = [0, 0, 0];

	    for (var i = 0; i < pTab.length; i++) {
	      m[0] += pTab[i][0];
	      m[1] += pTab[i][1];
	      m[2] += pTab[i][2];
	    }

	    m[0] /= pTab.length;
	    m[1] /= pTab.length;
	    m[2] /= pTab.length;

	    return m;
	  }

	  function backgroundMask(idata, threshold) {
	    var rgbv_no = pixelAt(idata, 0, 0);
	    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);
	    var rgbv_so = pixelAt(idata, 0, idata.height - 1);
	    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);

	    var thres = threshold || 10;
	    if (
	      rgbDistance(rgbv_no, rgbv_ne) < thres &&
	      rgbDistance(rgbv_ne, rgbv_se) < thres &&
	      rgbDistance(rgbv_se, rgbv_so) < thres &&
	      rgbDistance(rgbv_so, rgbv_no) < thres
	    ) {
	      // Mean color
	      var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);

	      // Mask based on color distance
	      var mask = [];
	      for (var i = 0; i < idata.width * idata.height; i++) {
	        var d = rgbDistance(mean, [
	          idata.data[i * 4],
	          idata.data[i * 4 + 1],
	          idata.data[i * 4 + 2]
	        ]);
	        mask[i] = d < thres ? 0 : 255;
	      }

	      return mask;
	    }
	  }

	  function applyMask(idata, mask) {
	    for (var i = 0; i < idata.width * idata.height; i++) {
	      idata.data[4 * i + 3] = mask[i];
	    }
	  }

	  function erodeMask(mask, sw, sh) {
	    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];
	    var side = Math.round(Math.sqrt(weights.length));
	    var halfSide = Math.floor(side / 2);

	    var maskResult = [];
	    for (var y = 0; y < sh; y++) {
	      for (var x = 0; x < sw; x++) {
	        var so = y * sw + x;
	        var a = 0;
	        for (var cy = 0; cy < side; cy++) {
	          for (var cx = 0; cx < side; cx++) {
	            var scy = y + cy - halfSide;
	            var scx = x + cx - halfSide;

	            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {
	              var srcOff = scy * sw + scx;
	              var wt = weights[cy * side + cx];

	              a += mask[srcOff] * wt;
	            }
	          }
	        }

	        maskResult[so] = a === 255 * 8 ? 255 : 0;
	      }
	    }

	    return maskResult;
	  }

	  function dilateMask(mask, sw, sh) {
	    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];
	    var side = Math.round(Math.sqrt(weights.length));
	    var halfSide = Math.floor(side / 2);

	    var maskResult = [];
	    for (var y = 0; y < sh; y++) {
	      for (var x = 0; x < sw; x++) {
	        var so = y * sw + x;
	        var a = 0;
	        for (var cy = 0; cy < side; cy++) {
	          for (var cx = 0; cx < side; cx++) {
	            var scy = y + cy - halfSide;
	            var scx = x + cx - halfSide;

	            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {
	              var srcOff = scy * sw + scx;
	              var wt = weights[cy * side + cx];

	              a += mask[srcOff] * wt;
	            }
	          }
	        }

	        maskResult[so] = a >= 255 * 4 ? 255 : 0;
	      }
	    }

	    return maskResult;
	  }

	  function smoothEdgeMask(mask, sw, sh) {
	    var weights = [
	      1 / 9,
	      1 / 9,
	      1 / 9,
	      1 / 9,
	      1 / 9,
	      1 / 9,
	      1 / 9,
	      1 / 9,
	      1 / 9
	    ];
	    var side = Math.round(Math.sqrt(weights.length));
	    var halfSide = Math.floor(side / 2);

	    var maskResult = [];
	    for (var y = 0; y < sh; y++) {
	      for (var x = 0; x < sw; x++) {
	        var so = y * sw + x;
	        var a = 0;
	        for (var cy = 0; cy < side; cy++) {
	          for (var cx = 0; cx < side; cx++) {
	            var scy = y + cy - halfSide;
	            var scx = x + cx - halfSide;

	            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {
	              var srcOff = scy * sw + scx;
	              var wt = weights[cy * side + cx];

	              a += mask[srcOff] * wt;
	            }
	          }
	        }

	        maskResult[so] = a;
	      }
	    }

	    return maskResult;
	  }

	  /**
		 * Mask Filter
		 * @function
		 * @name Mask
		 * @memberof Konva.Filters
		 * @param {Object} imageData
		 * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Mask]);
	     * node.threshold(200);
		 */
	  Konva.Filters.Mask = function(imageData) {
	    // Detect pixels close to the background color
	    var threshold = this.threshold(),
	      mask = backgroundMask(imageData, threshold);
	    if (mask) {
	      // Erode
	      mask = erodeMask(mask, imageData.width, imageData.height);

	      // Dilate
	      mask = dilateMask(mask, imageData.width, imageData.height);

	      // Gradient
	      mask = smoothEdgeMask(mask, imageData.width, imageData.height);

	      // Apply mask
	      applyMask(imageData, mask);

	      // todo : Update hit region function according to mask
	    }

	    return imageData;
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'threshold',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	})();

	(function() {
	  'use strict';
	  /**
	     * RGB Filter
	     * @function
	     * @name RGB
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.RGB]);
	     * node.blue(120);
	     * node.green(200);
	     */
	  Konva.Filters.RGB = function(imageData) {
	    var data = imageData.data,
	      nPixels = data.length,
	      red = this.red(),
	      green = this.green(),
	      blue = this.blue(),
	      i,
	      brightness;

	    for (i = 0; i < nPixels; i += 4) {
	      brightness =
	        (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;
	      data[i] = brightness * red; // r
	      data[i + 1] = brightness * green; // g
	      data[i + 2] = brightness * blue; // b
	      data[i + 3] = data[i + 3]; // alpha
	    }
	  };

	  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {
	    this._filterUpToDate = false;
	    if (val > 255) {
	      return 255;
	    } else if (val < 0) {
	      return 0;
	    } else {
	      return Math.round(val);
	    }
	  });
	  /**
	    * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.
	    * @name red
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} red value between 0 and 255
	    * @returns {Integer}
	    */

	  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {
	    this._filterUpToDate = false;
	    if (val > 255) {
	      return 255;
	    } else if (val < 0) {
	      return 0;
	    } else {
	      return Math.round(val);
	    }
	  });
	  /**
	    * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.
	    * @name green
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} green value between 0 and 255
	    * @returns {Integer}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'blue',
	    0,
	    Konva.Validators.RGBComponent,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.
	    * @name blue
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} blue value between 0 and 255
	    * @returns {Integer}
	    */
	})();

	(function() {
	  'use strict';
	  /**
	     * RGBA Filter
	     * @function
	     * @name RGBA
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @author codefo
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.RGBA]);
	     * node.blue(120);
	     * node.green(200);
	     * node.alpha(0.3);
	     */
	  Konva.Filters.RGBA = function(imageData) {
	    var data = imageData.data,
	      nPixels = data.length,
	      red = this.red(),
	      green = this.green(),
	      blue = this.blue(),
	      alpha = this.alpha(),
	      i,
	      ia;

	    for (i = 0; i < nPixels; i += 4) {
	      ia = 1 - alpha;

	      data[i] = red * alpha + data[i] * ia; // r
	      data[i + 1] = green * alpha + data[i + 1] * ia; // g
	      data[i + 2] = blue * alpha + data[i + 2] * ia; // b
	    }
	  };

	  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {
	    this._filterUpToDate = false;
	    if (val > 255) {
	      return 255;
	    } else if (val < 0) {
	      return 0;
	    } else {
	      return Math.round(val);
	    }
	  });
	  /**
	    * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.
	    * @name red
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} red value between 0 and 255
	    * @returns {Integer}
	    */

	  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {
	    this._filterUpToDate = false;
	    if (val > 255) {
	      return 255;
	    } else if (val < 0) {
	      return 0;
	    } else {
	      return Math.round(val);
	    }
	  });
	  /**
	    * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.
	    * @name green
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} green value between 0 and 255
	    * @returns {Integer}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'blue',
	    0,
	    Konva.Validators.RGBComponent,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.
	    * @name blue
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} blue value between 0 and 255
	    * @returns {Integer}
	    */

	  Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {
	    this._filterUpToDate = false;
	    if (val > 1) {
	      return 1;
	    } else if (val < 0) {
	      return 0;
	    } else {
	      return val;
	    }
	  });
	  /**
	     * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.
	     * @name alpha
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Float} alpha value between 0 and 1
	     * @returns {Float}
	     */
	})();

	(function() {
	  'use strict';
	  /**
	    * HSV Filter. Adjusts the hue, saturation and value
	    * @function
	    * @name HSV
	    * @memberof Konva.Filters
	    * @param {Object} imageData
	    * @author ippo615
	    * @example
	    * image.filters([Konva.Filters.HSV]);
	    * image.value(200);
	    */

	  Konva.Filters.HSV = function(imageData) {
	    var data = imageData.data,
	      nPixels = data.length,
	      v = Math.pow(2, this.value()),
	      s = Math.pow(2, this.saturation()),
	      h = Math.abs(this.hue() + 360) % 360,
	      i;

	    // Basis for the technique used:
	    // http://beesbuzz.biz/code/hsv_color_transforms.php
	    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)
	    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)
	    // H is the hue shift in degrees (0 to 360)
	    // vsu = V*S*cos(H*PI/180);
	    // vsw = V*S*sin(H*PI/180);
	    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]
	    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]
	    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]

	    // Precompute the values in the matrix:
	    var vsu = v * s * Math.cos(h * Math.PI / 180),
	      vsw = v * s * Math.sin(h * Math.PI / 180);
	    // (result spot)(source spot)
	    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,
	      rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,
	      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;
	    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,
	      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,
	      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;
	    var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,
	      bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,
	      bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;

	    var r, g, b, a;

	    for (i = 0; i < nPixels; i += 4) {
	      r = data[i + 0];
	      g = data[i + 1];
	      b = data[i + 2];
	      a = data[i + 3];

	      data[i + 0] = rr * r + rg * g + rb * b;
	      data[i + 1] = gr * r + gg * g + gb * b;
	      data[i + 2] = br * r + bg * g + bb * b;
	      data[i + 3] = a; // alpha
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'hue',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.
	    * @name hue
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} hue value between 0 and 359
	    * @returns {Number}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'saturation',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.
	    * @name saturation
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..
	    * @returns {Number}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'value',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.
	    * @name value
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..
	    * @returns {Number}
	    */
	})();

	(function() {
	  'use strict';
	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'hue',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.
	    * @name hue
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} hue value between 0 and 359
	    * @returns {Number}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'saturation',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.
	    * @name saturation
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..
	    * @returns {Number}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'luminance',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.
	    * @name value
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..
	    * @returns {Number}
	    */

	  /**
	    * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)
	    * @function
	    * @memberof Konva.Filters
	    * @param {Object} imageData
	    * @author ippo615
	    * @example
	    * image.filters([Konva.Filters.HSL]);
	    * image.luminance(200);
	    */

	  Konva.Filters.HSL = function(imageData) {
	    var data = imageData.data,
	      nPixels = data.length,
	      v = 1,
	      s = Math.pow(2, this.saturation()),
	      h = Math.abs(this.hue() + 360) % 360,
	      l = this.luminance() * 127,
	      i;

	    // Basis for the technique used:
	    // http://beesbuzz.biz/code/hsv_color_transforms.php
	    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)
	    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)
	    // H is the hue shift in degrees (0 to 360)
	    // vsu = V*S*cos(H*PI/180);
	    // vsw = V*S*sin(H*PI/180);
	    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]
	    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]
	    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]

	    // Precompute the values in the matrix:
	    var vsu = v * s * Math.cos(h * Math.PI / 180),
	      vsw = v * s * Math.sin(h * Math.PI / 180);
	    // (result spot)(source spot)
	    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,
	      rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,
	      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;
	    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,
	      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,
	      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;
	    var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,
	      bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,
	      bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;

	    var r, g, b, a;

	    for (i = 0; i < nPixels; i += 4) {
	      r = data[i + 0];
	      g = data[i + 1];
	      b = data[i + 2];
	      a = data[i + 3];

	      data[i + 0] = rr * r + rg * g + rb * b + l;
	      data[i + 1] = gr * r + gg * g + gb * b + l;
	      data[i + 2] = br * r + bg * g + bb * b + l;
	      data[i + 3] = a; // alpha
	    }
	  };
	})();

	(function() {
	  'use strict';
	  /**
	     * Emboss Filter.
	     * Pixastic Lib - Emboss filter - v0.1.0
	     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/
	     * License: [http://www.pixastic.com/lib/license.txt]
	     * @function
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Emboss]);
	     * node.embossStrength(0.8);
	     * node.embossWhiteLevel(0.3);
	     * node.embossDirection('right');
	     * node.embossBlend(true);
	     */
	  Konva.Filters.Emboss = function(imageData) {
	    // pixastic strength is between 0 and 10.  I want it between 0 and 1
	    // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,
	    // a max value of greyLevel yields a white emboss, and the min value yields a black
	    // emboss.  Therefore, I changed greyLevel to whiteLevel
	    var strength = this.embossStrength() * 10,
	      greyLevel = this.embossWhiteLevel() * 255,
	      direction = this.embossDirection(),
	      blend = this.embossBlend(),
	      dirY = 0,
	      dirX = 0,
	      data = imageData.data,
	      w = imageData.width,
	      h = imageData.height,
	      w4 = w * 4,
	      y = h;

	    switch (direction) {
	      case 'top-left':
	        dirY = -1;
	        dirX = -1;
	        break;
	      case 'top':
	        dirY = -1;
	        dirX = 0;
	        break;
	      case 'top-right':
	        dirY = -1;
	        dirX = 1;
	        break;
	      case 'right':
	        dirY = 0;
	        dirX = 1;
	        break;
	      case 'bottom-right':
	        dirY = 1;
	        dirX = 1;
	        break;
	      case 'bottom':
	        dirY = 1;
	        dirX = 0;
	        break;
	      case 'bottom-left':
	        dirY = 1;
	        dirX = -1;
	        break;
	      case 'left':
	        dirY = 0;
	        dirX = -1;
	        break;
	      default:
	        Konva.Util.error('Unknown emboss direction: ' + direction);
	    }

	    do {
	      var offsetY = (y - 1) * w4;

	      var otherY = dirY;
	      if (y + otherY < 1) {
	        otherY = 0;
	      }
	      if (y + otherY > h) {
	        otherY = 0;
	      }

	      var offsetYOther = (y - 1 + otherY) * w * 4;

	      var x = w;
	      do {
	        var offset = offsetY + (x - 1) * 4;

	        var otherX = dirX;
	        if (x + otherX < 1) {
	          otherX = 0;
	        }
	        if (x + otherX > w) {
	          otherX = 0;
	        }

	        var offsetOther = offsetYOther + (x - 1 + otherX) * 4;

	        var dR = data[offset] - data[offsetOther];
	        var dG = data[offset + 1] - data[offsetOther + 1];
	        var dB = data[offset + 2] - data[offsetOther + 2];

	        var dif = dR;
	        var absDif = dif > 0 ? dif : -dif;

	        var absG = dG > 0 ? dG : -dG;
	        var absB = dB > 0 ? dB : -dB;

	        if (absG > absDif) {
	          dif = dG;
	        }
	        if (absB > absDif) {
	          dif = dB;
	        }

	        dif *= strength;

	        if (blend) {
	          var r = data[offset] + dif;
	          var g = data[offset + 1] + dif;
	          var b = data[offset + 2] + dif;

	          data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;
	          data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;
	          data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;
	        } else {
	          var grey = greyLevel - dif;
	          if (grey < 0) {
	            grey = 0;
	          } else if (grey > 255) {
	            grey = 255;
	          }

	          data[offset] = data[offset + 1] = data[offset + 2] = grey;
	        }
	      } while (--x);
	    } while (--y);
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'embossStrength',
	    0.5,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.
	    * @name embossStrength
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} level between 0 and 1.  Default is 0.5
	    * @returns {Number}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'embossWhiteLevel',
	    0.5,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.
	    * @name embossWhiteLevel
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5
	    * @returns {Number}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'embossDirection',
	    'top-left',
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.
	    * @name embossDirection
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left
	    *   The default is top-left
	    * @returns {String}
	    */

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'embossBlend',
	    false,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.
	    * @name embossBlend
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Boolean} embossBlend
	    * @returns {Boolean}
	    */
	})();

	(function() {
	  'use strict';
	  function remap(fromValue, fromMin, fromMax, toMin, toMax) {
	    // Compute the range of the data
	    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;

	    // If either range is 0, then the value can only be mapped to 1 value
	    if (fromRange === 0) {
	      return toMin + toRange / 2;
	    }
	    if (toRange === 0) {
	      return toMin;
	    }

	    // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate
	    toValue = (fromValue - fromMin) / fromRange;
	    toValue = toRange * toValue + toMin;

	    return toValue;
	  }

	  /**
	    * Enhance Filter. Adjusts the colors so that they span the widest
	    *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel
	    *  writes.
	    * @function
	    * @name Enhance
	    * @memberof Konva.Filters
	    * @param {Object} imageData
	    * @author ippo615
	    * @example
	    * node.cache();
	    * node.filters([Konva.Filters.Enhance]);
	    * node.enhance(0.4);
	    */
	  Konva.Filters.Enhance = function(imageData) {
	    var data = imageData.data,
	      nSubPixels = data.length,
	      rMin = data[0],
	      rMax = rMin,
	      r,
	      gMin = data[1],
	      gMax = gMin,
	      g,
	      bMin = data[2],
	      bMax = bMin,
	      b,
	      i;

	    // If we are not enhancing anything - don't do any computation
	    var enhanceAmount = this.enhance();
	    if (enhanceAmount === 0) {
	      return;
	    }

	    // 1st Pass - find the min and max for each channel:
	    for (i = 0; i < nSubPixels; i += 4) {
	      r = data[i + 0];
	      if (r < rMin) {
	        rMin = r;
	      } else if (r > rMax) {
	        rMax = r;
	      }
	      g = data[i + 1];
	      if (g < gMin) {
	        gMin = g;
	      } else if (g > gMax) {
	        gMax = g;
	      }
	      b = data[i + 2];
	      if (b < bMin) {
	        bMin = b;
	      } else if (b > bMax) {
	        bMax = b;
	      }
	      //a = data[i + 3];
	      //if (a < aMin) { aMin = a; } else
	      //if (a > aMax) { aMax = a; }
	    }

	    // If there is only 1 level - don't remap
	    if (rMax === rMin) {
	      rMax = 255;
	      rMin = 0;
	    }
	    if (gMax === gMin) {
	      gMax = 255;
	      gMin = 0;
	    }
	    if (bMax === bMin) {
	      bMax = 255;
	      bMin = 0;
	    }

	    var rMid,
	      rGoalMax,
	      rGoalMin,
	      gMid,
	      gGoalMax,
	      gGoalMin,
	      bMid,
	      bGoalMax,
	      bGoalMin;

	    // If the enhancement is positive - stretch the histogram
	    if (enhanceAmount > 0) {
	      rGoalMax = rMax + enhanceAmount * (255 - rMax);
	      rGoalMin = rMin - enhanceAmount * (rMin - 0);
	      gGoalMax = gMax + enhanceAmount * (255 - gMax);
	      gGoalMin = gMin - enhanceAmount * (gMin - 0);
	      bGoalMax = bMax + enhanceAmount * (255 - bMax);
	      bGoalMin = bMin - enhanceAmount * (bMin - 0);
	      // If the enhancement is negative -   compress the histogram
	    } else {
	      rMid = (rMax + rMin) * 0.5;
	      rGoalMax = rMax + enhanceAmount * (rMax - rMid);
	      rGoalMin = rMin + enhanceAmount * (rMin - rMid);
	      gMid = (gMax + gMin) * 0.5;
	      gGoalMax = gMax + enhanceAmount * (gMax - gMid);
	      gGoalMin = gMin + enhanceAmount * (gMin - gMid);
	      bMid = (bMax + bMin) * 0.5;
	      bGoalMax = bMax + enhanceAmount * (bMax - bMid);
	      bGoalMin = bMin + enhanceAmount * (bMin - bMid);
	    }

	    // Pass 2 - remap everything, except the alpha
	    for (i = 0; i < nSubPixels; i += 4) {
	      data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);
	      data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);
	      data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);
	      //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'enhance',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );

	  /**
	    * get/set enhance. Use with {@link Konva.Filters.Enhance} filter.
	    * @name enhance
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Float} amount
	    * @returns {Float}
	    */
	})();

	(function() {
	  'use strict';
	  /**
	     * Posterize Filter. Adjusts the channels so that there are no more
	     *  than n different values for that channel. This is also applied
	     *  to the alpha channel.
	     * @function
	     * @name Posterize
	     * @author ippo615
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Posterize]);
	     * node.levels(0.8); // between 0 and 1
	     */

	  Konva.Filters.Posterize = function(imageData) {
	    // level must be between 1 and 255
	    var levels = Math.round(this.levels() * 254) + 1,
	      data = imageData.data,
	      len = data.length,
	      scale = 255 / levels,
	      i;

	    for (i = 0; i < len; i += 1) {
	      data[i] = Math.floor(data[i] / scale) * scale;
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'levels',
	    0.5,
	    null,
	    Konva.Factory.afterSetFilter
	  );

	  /**
	    * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.
	    * @name levels
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} level between 0 and 1
	    * @returns {Number}
	    */
	})();

	(function() {
	  'use strict';
	  /**
	     * Noise Filter. Randomly adds or substracts to the color channels
	     * @function
	     * @name Noise
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Noise]);
	     * node.noise(0.8);
	     */
	  Konva.Filters.Noise = function(imageData) {
	    var amount = this.noise() * 255,
	      data = imageData.data,
	      nPixels = data.length,
	      half = amount / 2,
	      i;

	    for (i = 0; i < nPixels; i += 4) {
	      data[i + 0] += half - 2 * half * Math.random();
	      data[i + 1] += half - 2 * half * Math.random();
	      data[i + 2] += half - 2 * half * Math.random();
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'noise',
	    0.2,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.
	    * @name noise
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} noise
	    * @returns {Number}
	    */
	})();

	/*eslint-disable max-depth */
	(function() {
	  'use strict';
	  /**
	     * Pixelate Filter. Averages groups of pixels and redraws
	     *  them as larger pixels
	     * @function
	     * @name Pixelate
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Pixelate]);
	     * node.pixelSize(10);
	     */

	  Konva.Filters.Pixelate = function(imageData) {
	    var pixelSize = Math.ceil(this.pixelSize()),
	      width = imageData.width,
	      height = imageData.height,
	      x,
	      y,
	      i,
	      //pixelsPerBin = pixelSize * pixelSize,
	      red,
	      green,
	      blue,
	      alpha,
	      nBinsX = Math.ceil(width / pixelSize),
	      nBinsY = Math.ceil(height / pixelSize),
	      xBinStart,
	      xBinEnd,
	      yBinStart,
	      yBinEnd,
	      xBin,
	      yBin,
	      pixelsInBin;
	    imageData = imageData.data;

	    if (pixelSize <= 0) {
	      Konva.Util.error('pixelSize value can not be <= 0');
	      return;
	    }

	    for (xBin = 0; xBin < nBinsX; xBin += 1) {
	      for (yBin = 0; yBin < nBinsY; yBin += 1) {
	        // Initialize the color accumlators to 0
	        red = 0;
	        green = 0;
	        blue = 0;
	        alpha = 0;

	        // Determine which pixels are included in this bin
	        xBinStart = xBin * pixelSize;
	        xBinEnd = xBinStart + pixelSize;
	        yBinStart = yBin * pixelSize;
	        yBinEnd = yBinStart + pixelSize;

	        // Add all of the pixels to this bin!
	        pixelsInBin = 0;
	        for (x = xBinStart; x < xBinEnd; x += 1) {
	          if (x >= width) {
	            continue;
	          }
	          for (y = yBinStart; y < yBinEnd; y += 1) {
	            if (y >= height) {
	              continue;
	            }
	            i = (width * y + x) * 4;
	            red += imageData[i + 0];
	            green += imageData[i + 1];
	            blue += imageData[i + 2];
	            alpha += imageData[i + 3];
	            pixelsInBin += 1;
	          }
	        }

	        // Make sure the channels are between 0-255
	        red = red / pixelsInBin;
	        green = green / pixelsInBin;
	        blue = blue / pixelsInBin;

	        // Draw this bin
	        for (x = xBinStart; x < xBinEnd; x += 1) {
	          if (x >= width) {
	            continue;
	          }
	          for (y = yBinStart; y < yBinEnd; y += 1) {
	            if (y >= height) {
	              continue;
	            }
	            i = (width * y + x) * 4;
	            imageData[i + 0] = red;
	            imageData[i + 1] = green;
	            imageData[i + 2] = blue;
	            imageData[i + 3] = alpha;
	          }
	        }
	      }
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'pixelSize',
	    8,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.
	    * @name pixelSize
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} pixelSize
	    * @returns {Integer}
	    */
	})();

	(function() {
	  'use strict';
	  /**
	     * Threshold Filter. Pushes any value above the mid point to
	     *  the max and any value below the mid point to the min.
	     *  This affects the alpha channel.
	     * @function
	     * @name Threshold
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Threshold]);
	     * node.threshold(0.1);
	     */

	  Konva.Filters.Threshold = function(imageData) {
	    var level = this.threshold() * 255,
	      data = imageData.data,
	      len = data.length,
	      i;

	    for (i = 0; i < len; i += 1) {
	      data[i] = data[i] < level ? 0 : 255;
	    }
	  };

	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'threshold',
	    0.5,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	  /**
	    * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.
	    * @name threshold
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Number} threshold
	    * @returns {Number}
	    */
	})();

	(function() {
	  'use strict';
	  /**
	     * Sepia Filter
	     * Based on: Pixastic Lib - Sepia filter - v0.1.0
	     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/
	     * @function
	     * @name Sepia
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @author Jacob Seidelin <jseidelin@nihilogic.dk>
	     * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Sepia]);
	     */
	  Konva.Filters.Sepia = function(imageData) {
	    var data = imageData.data,
	      w = imageData.width,
	      y = imageData.height,
	      w4 = w * 4,
	      offsetY,
	      x,
	      offset,
	      or,
	      og,
	      ob,
	      r,
	      g,
	      b;

	    do {
	      offsetY = (y - 1) * w4;
	      x = w;
	      do {
	        offset = offsetY + (x - 1) * 4;

	        or = data[offset];
	        og = data[offset + 1];
	        ob = data[offset + 2];

	        r = or * 0.393 + og * 0.769 + ob * 0.189;
	        g = or * 0.349 + og * 0.686 + ob * 0.168;
	        b = or * 0.272 + og * 0.534 + ob * 0.131;

	        data[offset] = r > 255 ? 255 : r;
	        data[offset + 1] = g > 255 ? 255 : g;
	        data[offset + 2] = b > 255 ? 255 : b;
	        data[offset + 3] = data[offset + 3];
	      } while (--x);
	    } while (--y);
	  };
	})();

	(function() {
	  'use strict';
	  /**
	     * Solarize Filter
	     * Pixastic Lib - Solarize filter - v0.1.0
	     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/
	     * License: [http://www.pixastic.com/lib/license.txt]
	     * @function
	     * @name Solarize
	     * @memberof Konva.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Solarize]);
	     */
	  Konva.Filters.Solarize = function(imageData) {
	    var data = imageData.data,
	      w = imageData.width,
	      h = imageData.height,
	      w4 = w * 4,
	      y = h;

	    do {
	      var offsetY = (y - 1) * w4;
	      var x = w;
	      do {
	        var offset = offsetY + (x - 1) * 4;
	        var r = data[offset];
	        var g = data[offset + 1];
	        var b = data[offset + 2];

	        if (r > 127) {
	          r = 255 - r;
	        }
	        if (g > 127) {
	          g = 255 - g;
	        }
	        if (b > 127) {
	          b = 255 - b;
	        }

	        data[offset] = r;
	        data[offset + 1] = g;
	        data[offset + 2] = b;
	      } while (--x);
	    } while (--y);
	  };
	})();

	(function() {
	  'use strict';
	  /*
	   * ToPolar Filter. Converts image data to polar coordinates. Performs
	   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along
	   *  what would be the y axis and the theta axis along the x axis.
	   * @function
	   * @author ippo615
	   * @memberof Konva.Filters
	   * @param {ImageData} src, the source image data (what will be transformed)
	   * @param {ImageData} dst, the destination image data (where it will be saved)
	   * @param {Object} opt
	   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,
	   *  default is in the middle
	   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,
	   *  default is in the middle
	   */

	  var ToPolar = function(src, dst, opt) {
	    var srcPixels = src.data,
	      dstPixels = dst.data,
	      xSize = src.width,
	      ySize = src.height,
	      xMid = opt.polarCenterX || xSize / 2,
	      yMid = opt.polarCenterY || ySize / 2,
	      i,
	      x,
	      y,
	      r = 0,
	      g = 0,
	      b = 0,
	      a = 0;

	    // Find the largest radius
	    var rad,
	      rMax = Math.sqrt(xMid * xMid + yMid * yMid);
	    x = xSize - xMid;
	    y = ySize - yMid;
	    rad = Math.sqrt(x * x + y * y);
	    rMax = rad > rMax ? rad : rMax;

	    // We'll be uisng y as the radius, and x as the angle (theta=t)
	    var rSize = ySize,
	      tSize = xSize,
	      radius,
	      theta;

	    // We want to cover all angles (0-360) and we need to convert to
	    // radians (*PI/180)
	    var conversion = 360 / tSize * Math.PI / 180,
	      sin,
	      cos;

	    // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;

	    for (theta = 0; theta < tSize; theta += 1) {
	      sin = Math.sin(theta * conversion);
	      cos = Math.cos(theta * conversion);
	      for (radius = 0; radius < rSize; radius += 1) {
	        x = Math.floor(xMid + rMax * radius / rSize * cos);
	        y = Math.floor(yMid + rMax * radius / rSize * sin);
	        i = (y * xSize + x) * 4;
	        r = srcPixels[i + 0];
	        g = srcPixels[i + 1];
	        b = srcPixels[i + 2];
	        a = srcPixels[i + 3];

	        // Store it
	        //i = (theta * xSize  +  radius) * 4;
	        i = (theta + radius * xSize) * 4;
	        dstPixels[i + 0] = r;
	        dstPixels[i + 1] = g;
	        dstPixels[i + 2] = b;
	        dstPixels[i + 3] = a;
	      }
	    }
	  };

	  /*
	     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.
	     *  Performs w*h*4 pixel reads and w*h pixel writes.
	     * @function
	     * @author ippo615
	     * @memberof Konva.Filters
	     * @param {ImageData} src, the source image data (what will be transformed)
	     * @param {ImageData} dst, the destination image data (where it will be saved)
	     * @param {Object} opt
	     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,
	     *  default is in the middle
	     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,
	     *  default is in the middle
	     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,
	     *  0 is no rotation, 360 degrees is a full rotation
	     */

	  var FromPolar = function(src, dst, opt) {
	    var srcPixels = src.data,
	      dstPixels = dst.data,
	      xSize = src.width,
	      ySize = src.height,
	      xMid = opt.polarCenterX || xSize / 2,
	      yMid = opt.polarCenterY || ySize / 2,
	      i,
	      x,
	      y,
	      dx,
	      dy,
	      r = 0,
	      g = 0,
	      b = 0,
	      a = 0;

	    // Find the largest radius
	    var rad,
	      rMax = Math.sqrt(xMid * xMid + yMid * yMid);
	    x = xSize - xMid;
	    y = ySize - yMid;
	    rad = Math.sqrt(x * x + y * y);
	    rMax = rad > rMax ? rad : rMax;

	    // We'll be uisng x as the radius, and y as the angle (theta=t)
	    var rSize = ySize,
	      tSize = xSize,
	      radius,
	      theta,
	      phaseShift = opt.polarRotation || 0;

	    // We need to convert to degrees and we need to make sure
	    // it's between (0-360)
	    // var conversion = tSize/360*180/Math.PI;
	    //var conversion = tSize/360*180/Math.PI;

	    var x1, y1;

	    for (x = 0; x < xSize; x += 1) {
	      for (y = 0; y < ySize; y += 1) {
	        dx = x - xMid;
	        dy = y - yMid;
	        radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;
	        theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;
	        theta = theta * tSize / 360;
	        x1 = Math.floor(theta);
	        y1 = Math.floor(radius);
	        i = (y1 * xSize + x1) * 4;
	        r = srcPixels[i + 0];
	        g = srcPixels[i + 1];
	        b = srcPixels[i + 2];
	        a = srcPixels[i + 3];

	        // Store it
	        i = (y * xSize + x) * 4;
	        dstPixels[i + 0] = r;
	        dstPixels[i + 1] = g;
	        dstPixels[i + 2] = b;
	        dstPixels[i + 3] = a;
	      }
	    }
	  };

	  //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);
	  //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);

	  // create a temporary canvas for working - shared between multiple calls

	  /*
	     * Kaleidoscope Filter.
	     * @function
	     * @name Kaleidoscope
	     * @author ippo615
	     * @memberof Konva.Filters
	     * @example
	     * node.cache();
	     * node.filters([Konva.Filters.Kaleidoscope]);
	     * node.kaleidoscopePower(3);
	     * node.kaleidoscopeAngle(45);
	     */
	  Konva.Filters.Kaleidoscope = function(imageData) {
	    var xSize = imageData.width,
	      ySize = imageData.height;

	    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;
	    var power = Math.round(this.kaleidoscopePower());
	    var angle = Math.round(this.kaleidoscopeAngle());
	    var offset = Math.floor(xSize * (angle % 360) / 360);

	    if (power < 1) {
	      return;
	    }

	    // Work with our shared buffer canvas
	    var tempCanvas = Konva.Util.createCanvasElement();
	    tempCanvas.width = xSize;
	    tempCanvas.height = ySize;
	    var scratchData = tempCanvas
	      .getContext('2d')
	      .getImageData(0, 0, xSize, ySize);

	    // Convert thhe original to polar coordinates
	    ToPolar(imageData, scratchData, {
	      polarCenterX: xSize / 2,
	      polarCenterY: ySize / 2
	    });

	    // Determine how big each section will be, if it's too small
	    // make it bigger
	    var minSectionSize = xSize / Math.pow(2, power);
	    while (minSectionSize <= 8) {
	      minSectionSize = minSectionSize * 2;
	      power -= 1;
	    }
	    minSectionSize = Math.ceil(minSectionSize);
	    var sectionSize = minSectionSize;

	    // Copy the offset region to 0
	    // Depending on the size of filter and location of the offset we may need
	    // to copy the section backwards to prevent it from rewriting itself
	    var xStart = 0,
	      xEnd = sectionSize,
	      xDelta = 1;
	    if (offset + minSectionSize > xSize) {
	      xStart = sectionSize;
	      xEnd = 0;
	      xDelta = -1;
	    }
	    for (y = 0; y < ySize; y += 1) {
	      for (x = xStart; x !== xEnd; x += xDelta) {
	        xoff = Math.round(x + offset) % xSize;
	        srcPos = (xSize * y + xoff) * 4;
	        r = scratchData.data[srcPos + 0];
	        g = scratchData.data[srcPos + 1];
	        b = scratchData.data[srcPos + 2];
	        a = scratchData.data[srcPos + 3];
	        dstPos = (xSize * y + x) * 4;
	        scratchData.data[dstPos + 0] = r;
	        scratchData.data[dstPos + 1] = g;
	        scratchData.data[dstPos + 2] = b;
	        scratchData.data[dstPos + 3] = a;
	      }
	    }

	    // Perform the actual effect
	    for (y = 0; y < ySize; y += 1) {
	      sectionSize = Math.floor(minSectionSize);
	      for (i = 0; i < power; i += 1) {
	        for (x = 0; x < sectionSize + 1; x += 1) {
	          srcPos = (xSize * y + x) * 4;
	          r = scratchData.data[srcPos + 0];
	          g = scratchData.data[srcPos + 1];
	          b = scratchData.data[srcPos + 2];
	          a = scratchData.data[srcPos + 3];
	          dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;
	          scratchData.data[dstPos + 0] = r;
	          scratchData.data[dstPos + 1] = g;
	          scratchData.data[dstPos + 2] = b;
	          scratchData.data[dstPos + 3] = a;
	        }
	        sectionSize *= 2;
	      }
	    }

	    // Convert back from polar coordinates
	    FromPolar(scratchData, imageData, { polarRotation: 0 });
	  };

	  /**
	    * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.
	    * @name kaleidoscopePower
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} power of kaleidoscope
	    * @returns {Integer}
	    */
	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'kaleidoscopePower',
	    2,
	    null,
	    Konva.Factory.afterSetFilter
	  );

	  /**
	    * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.
	    * @name kaleidoscopeAngle
	    * @method
	    * @memberof Konva.Node.prototype
	    * @param {Integer} degrees
	    * @returns {Integer}
	    */
	  Konva.Factory.addGetterSetter(
	    Konva.Node,
	    'kaleidoscopeAngle',
	    0,
	    null,
	    Konva.Factory.afterSetFilter
	  );
	})();

	(function() {
	  'use strict';
	  /**
	     * Container constructor.&nbsp; Containers are used to contain nodes or other containers
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Node
	     * @abstract
	     * @param {Object} config
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height
	     * @param {Function} [config.clipFunc] set clip func

	     */
	  Konva.Container = function(config) {
	    this.__init(config);
	  };

	  Konva.Util.addMethods(Konva.Container, {
	    __init: function(config) {
	      this.children = new Konva.Collection();
	      Konva.Node.call(this, config);
	    },
	    /**
	         * returns a {@link Konva.Collection} of direct descendant nodes
	         * @method
	         * @memberof Konva.Container.prototype
	         * @param {Function} [filterFunc] filter function
	         * @returns {Konva.Collection}
	         * @example
	         * // get all children
	         * var children = layer.getChildren();
	         *
	         * // get only circles
	         * var circles = layer.getChildren(function(node){
	         *    return node.getClassName() === 'Circle';
	         * });
	         */
	    getChildren: function(filterFunc) {
	      if (!filterFunc) {
	        return this.children;
	      }

	      var results = new Konva.Collection();
	      this.children.each(function(child) {
	        if (filterFunc(child)) {
	          results.push(child);
	        }
	      });
	      return results;
	    },
	    /**
	         * determine if node has children
	         * @method
	         * @memberof Konva.Container.prototype
	         * @returns {Boolean}
	         */
	    hasChildren: function() {
	      return this.getChildren().length > 0;
	    },
	    /**
	         * remove all children
	         * @method
	         * @memberof Konva.Container.prototype
	         */
	    removeChildren: function() {
	      var children = Konva.Collection.toCollection(this.children);
	      var child;
	      for (var i = 0; i < children.length; i++) {
	        child = children[i];
	        // reset parent to prevent many _setChildrenIndices calls
	        delete child.parent;
	        child.index = 0;
	        child.remove();
	      }
	      children = null;
	      this.children = new Konva.Collection();
	      return this;
	    },
	    /**
	         * destroy all children
	         * @method
	         * @memberof Konva.Container.prototype
	         */
	    destroyChildren: function() {
	      var children = Konva.Collection.toCollection(this.children);
	      var child;
	      for (var i = 0; i < children.length; i++) {
	        child = children[i];
	        // reset parent to prevent many _setChildrenIndices calls
	        delete child.parent;
	        child.index = 0;
	        child.destroy();
	      }
	      children = null;
	      this.children = new Konva.Collection();
	      return this;
	    },
	    /**
	         * Add node or nodes to container.
	         * @method
	         * @memberof Konva.Container.prototype
	         * @param {...Konva.Node} child
	         * @returns {Container}
	         * @example
	         * layer.add(shape1, shape2, shape3);
	         */
	    add: function(child) {
	      if (arguments.length > 1) {
	        for (var i = 0; i < arguments.length; i++) {
	          this.add(arguments[i]);
	        }
	        return this;
	      }
	      if (child.getParent()) {
	        child.moveTo(this);
	        return this;
	      }
	      var children = this.children;
	      this._validateAdd(child);
	      child.index = children.length;
	      child.parent = this;
	      children.push(child);
	      this._fire('add', {
	        child: child
	      });

	      // if node under drag we need to update drag animation
	      if (Konva.DD && child.isDragging()) {
	        Konva.DD.anim.setLayers(child.getLayer());
	      }

	      // chainable
	      return this;
	    },
	    destroy: function() {
	      // destroy children
	      if (this.hasChildren()) {
	        this.destroyChildren();
	      }
	      // then destroy self
	      Konva.Node.prototype.destroy.call(this);
	      return this;
	    },
	    /**
	         * return a {@link Konva.Collection} of nodes that match the selector.  Use '#' for id selections
	         * and '.' for name selections.  You can also select by type or class name. Pass multiple selectors
	         * separated by a space.
	         * @method
	         * @memberof Konva.Container.prototype
	         * @param {String} selector
	         * @returns {Collection}
	         * @example
	         * // select node with id foo
	         * var node = stage.find('#foo');
	         *
	         * // select nodes with name bar inside layer
	         * var nodes = layer.find('.bar');
	         *
	         * // select all groups inside layer
	         * var nodes = layer.find('Group');
	         *
	         * // select all rectangles inside layer
	         * var nodes = layer.find('Rect');
	         *
	         * // select node with an id of foo or a name of bar inside layer
	         * var nodes = layer.find('#foo, .bar');
	         */
	    find: function(selector) {
	      var retArr = [],
	        selectorArr = selector.replace(/ /g, '').split(','),
	        len = selectorArr.length,
	        n,
	        i,
	        sel,
	        arr,
	        node,
	        children,
	        clen;

	      for (n = 0; n < len; n++) {
	        sel = selectorArr[n];
	        if (!Konva.Util.isValidSelector(sel)) {
	          Konva.Util.warn(
	            'Selector "' +
	              sel +
	              '" is invalid. Allowed selectors examples are "#foo", ".bar" or "Group".'
	          );
	          Konva.Util.warn(
	            'If you have a custom shape with such className, please change it to start with upper letter like "Triangle".'
	          );
	          Konva.Util.warn('Konva is awesome, right?');
	        }
	        // id selector
	        if (sel.charAt(0) === '#') {
	          node = this._getNodeById(sel.slice(1));
	          if (node) {
	            retArr.push(node);
	          }
	        } else if (sel.charAt(0) === '.') {
	          // name selector
	          arr = this._getNodesByName(sel.slice(1));
	          retArr = retArr.concat(arr);
	        } else {
	          // unrecognized selector, pass to children
	          children = this.getChildren();
	          clen = children.length;
	          for (i = 0; i < clen; i++) {
	            retArr = retArr.concat(children[i]._get(sel));
	          }
	        }
	      }

	      return Konva.Collection.toCollection(retArr);
	    },
	    /**
	         * return a first node from `find` method
	         * @method
	         * @memberof Konva.Container.prototype
	         * @param {String} selector
	         * @returns {Konva.Node}
	         * @example
	         * // select node with id foo
	         * var node = stage.findOne('#foo');
	         *
	         * // select node with name bar inside layer
	         * var nodes = layer.findOne('.bar');
	         */
	    findOne: function(selector) {
	      return this.find(selector)[0];
	    },
	    _getNodeById: function(key) {
	      var node = Konva.ids[key];

	      if (node !== undefined && this.isAncestorOf(node)) {
	        return node;
	      }
	      return null;
	    },
	    _getNodesByName: function(key) {
	      var arr = Konva.names[key] || [];
	      return this._getDescendants(arr);
	    },
	    _get: function(selector) {
	      var retArr = Konva.Node.prototype._get.call(this, selector);
	      var children = this.getChildren();
	      var len = children.length;
	      for (var n = 0; n < len; n++) {
	        retArr = retArr.concat(children[n]._get(selector));
	      }
	      return retArr;
	    },
	    // extenders
	    toObject: function() {
	      var obj = Konva.Node.prototype.toObject.call(this);

	      obj.children = [];

	      var children = this.getChildren();
	      var len = children.length;
	      for (var n = 0; n < len; n++) {
	        var child = children[n];
	        obj.children.push(child.toObject());
	      }

	      return obj;
	    },
	    _getDescendants: function(arr) {
	      var retArr = [];
	      var len = arr.length;
	      for (var n = 0; n < len; n++) {
	        var node = arr[n];
	        if (this.isAncestorOf(node)) {
	          retArr.push(node);
	        }
	      }

	      return retArr;
	    },
	    /**
	         * determine if node is an ancestor
	         * of descendant
	         * @method
	         * @memberof Konva.Container.prototype
	         * @param {Konva.Node} node
	         */
	    isAncestorOf: function(node) {
	      var parent = node.getParent();
	      while (parent) {
	        if (parent._id === this._id) {
	          return true;
	        }
	        parent = parent.getParent();
	      }

	      return false;
	    },
	    clone: function(obj) {
	      // call super method
	      var node = Konva.Node.prototype.clone.call(this, obj);

	      this.getChildren().each(function(no) {
	        node.add(no.clone());
	      });
	      return node;
	    },
	    /**
	         * get all shapes that intersect a point.  Note: because this method must clear a temporary
	         * canvas and redraw every shape inside the container, it should only be used for special sitations
	         * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible
	         * because it performs much better
	         * @method
	         * @memberof Konva.Container.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @returns {Array} array of shapes
	         */
	    getAllIntersections: function(pos) {
	      var arr = [];

	      this.find('Shape').each(function(shape) {
	        if (shape.isVisible() && shape.intersects(pos)) {
	          arr.push(shape);
	        }
	      });

	      return arr;
	    },
	    _setChildrenIndices: function() {
	      this.children.each(function(child, n) {
	        child.index = n;
	      });
	    },
	    drawScene: function(can, top, caching) {
	      var layer = this.getLayer(),
	        canvas = can || (layer && layer.getCanvas()),
	        context = canvas && canvas.getContext(),
	        cachedCanvas = this._cache.canvas,
	        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;

	      if (this.isVisible()) {
	        if (!caching && cachedSceneCanvas) {
	          context.save();
	          layer._applyTransform(this, context, top);
	          this._drawCachedSceneCanvas(context);
	          context.restore();
	        } else {
	          this._drawChildren(canvas, 'drawScene', top, false, caching);
	        }
	      }
	      return this;
	    },
	    drawHit: function(can, top, caching) {
	      var layer = this.getLayer(),
	        canvas = can || (layer && layer.hitCanvas),
	        context = canvas && canvas.getContext(),
	        cachedCanvas = this._cache.canvas,
	        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;

	      if (this.shouldDrawHit(canvas)) {
	        if (layer) {
	          layer.clearHitCache();
	        }
	        if (!caching && cachedHitCanvas) {
	          context.save();
	          layer._applyTransform(this, context, top);
	          this._drawCachedHitCanvas(context);
	          context.restore();
	        } else {
	          this._drawChildren(canvas, 'drawHit', top);
	        }
	      }
	      return this;
	    },
	    _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {
	      var layer = this.getLayer(),
	        context = canvas && canvas.getContext(),
	        clipWidth = this.getClipWidth(),
	        clipHeight = this.getClipHeight(),
	        clipFunc = this.getClipFunc(),
	        hasClip = (clipWidth && clipHeight) || clipFunc,
	        clipX,
	        clipY;

	      if (hasClip && layer) {
	        context.save();
	        var transform = this.getAbsoluteTransform(top);
	        var m = transform.getMatrix();
	        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	        context.beginPath();
	        if (clipFunc) {
	          clipFunc.call(this, context, this);
	        } else {
	          clipX = this.getClipX();
	          clipY = this.getClipY();
	          context.rect(clipX, clipY, clipWidth, clipHeight);
	        }
	        context.clip();
	        m = transform.copy().invert().getMatrix();
	        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	      }

	      this.children.each(function(child) {
	        child[drawMethod](canvas, top, caching, skipBuffer);
	      });

	      if (hasClip) {
	        context.restore();
	      }
	    },
	    shouldDrawHit: function(canvas) {
	      var layer = this.getLayer();
	      var dd = Konva.DD;
	      var layerUnderDrag =
	        dd &&
	        Konva.isDragging() &&
	        Konva.DD.anim.getLayers().indexOf(layer) !== -1;
	      return (
	        (canvas && canvas.isCache) ||
	        (layer &&
	          layer.hitGraphEnabled() &&
	          this.isVisible() &&
	          !layerUnderDrag)
	      );
	    },
	    getClientRect: function(attrs) {
	      attrs = attrs || {};
	      var skipTransform = attrs.skipTransform;
	      var relativeTo = attrs.relativeTo;

	      var minX, minY, maxX, maxY;
	      var selfRect = {
	        x: 0,
	        y: 0,
	        width: 0,
	        height: 0
	      };
	      var that = this;
	      this.children.each(function(child) {
	        // skip invisible children
	        if (!child.isVisible()) {
	          return;
	        }
	        var rect = child.getClientRect({ relativeTo: that });

	        // skip invisible children (like empty groups)
	        // or don't skip... hmmm...
	        // if (rect.width === 0 && rect.height === 0) {
	        //     return;
	        // }

	        if (minX === undefined) {
	          // initial value for first child
	          minX = rect.x;
	          minY = rect.y;
	          maxX = rect.x + rect.width;
	          maxY = rect.y + rect.height;
	        } else {
	          minX = Math.min(minX, rect.x);
	          minY = Math.min(minY, rect.y);
	          maxX = Math.max(maxX, rect.x + rect.width);
	          maxY = Math.max(maxY, rect.y + rect.height);
	        }
	      });

	      if (this.children.length !== 0) {
	        selfRect = {
	          x: minX,
	          y: minY,
	          width: maxX - minX,
	          height: maxY - minY
	        };
	      }

	      if (!skipTransform) {
	        return this._transformedRect(selfRect, relativeTo);
	      }
	      return selfRect;
	    }
	  });

	  Konva.Util.extend(Konva.Container, Konva.Node);
	  // deprecated methods
	  Konva.Container.prototype.get = Konva.Container.prototype.find;

	  // add getters setters
	  Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', [
	    'x',
	    'y',
	    'width',
	    'height'
	  ]);
	  /**
	     * get/set clip
	     * @method
	     * @name clip
	     * @memberof Konva.Container.prototype
	     * @param {Object} clip
	     * @param {Number} clip.x
	     * @param {Number} clip.y
	     * @param {Number} clip.width
	     * @param {Number} clip.height
	     * @returns {Object}
	     * @example
	     * // get clip
	     * var clip = container.clip();
	     *
	     * // set clip
	     * container.setClip({
	     *   x: 20,
	     *   y: 20,
	     *   width: 20,
	     *   height: 20
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Container, 'clipX');
	  /**
	     * get/set clip x
	     * @name clipX
	     * @method
	     * @memberof Konva.Container.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get clip x
	     * var clipX = container.clipX();
	     *
	     * // set clip x
	     * container.clipX(10);
	     */

	  Konva.Factory.addGetterSetter(Konva.Container, 'clipY');
	  /**
	     * get/set clip y
	     * @name clipY
	     * @method
	     * @memberof Konva.Container.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get clip y
	     * var clipY = container.clipY();
	     *
	     * // set clip y
	     * container.clipY(10);
	     */

	  Konva.Factory.addGetterSetter(Konva.Container, 'clipWidth');
	  /**
	     * get/set clip width
	     * @name clipWidth
	     * @method
	     * @memberof Konva.Container.prototype
	     * @param {Number} width
	     * @returns {Number}
	     * @example
	     * // get clip width
	     * var clipWidth = container.clipWidth();
	     *
	     * // set clip width
	     * container.clipWidth(100);
	     */

	  Konva.Factory.addGetterSetter(Konva.Container, 'clipHeight');
	  /**
	     * get/set clip height
	     * @name clipHeight
	     * @method
	     * @memberof Konva.Container.prototype
	     * @param {Number} height
	     * @returns {Number}
	     * @example
	     * // get clip height
	     * var clipHeight = container.clipHeight();
	     *
	     * // set clip height
	     * container.clipHeight(100);
	     */

	  Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');
	  /**
	      * get/set clip function
	      * @name clipFunc
	      * @method
	      * @memberof Konva.Container.prototype
	      * @param {Function} function
	      * @returns {Function}
	      * @example
	      * // get clip function
	      * var clipFunction = container.clipFunc();
	      *
	      * // set clip height
	      * container.clipFunc(function(ctx) {
	      *   ctx.rect(0, 0, 100, 100);
	      * });
	      */

	  Konva.Collection.mapMethods(Konva.Container);
	})();

	(function(Konva) {
	  'use strict';
	  var HAS_SHADOW = 'hasShadow';
	  var SHADOW_RGBA = 'shadowRGBA';

	  function _fillFunc(context) {
	    context.fill();
	  }
	  function _strokeFunc(context) {
	    context.stroke();
	  }
	  function _fillFuncHit(context) {
	    context.fill();
	  }
	  function _strokeFuncHit(context) {
	    context.stroke();
	  }

	  function _clearHasShadowCache() {
	    this._clearCache(HAS_SHADOW);
	  }

	  function _clearGetShadowRGBACache() {
	    this._clearCache(SHADOW_RGBA);
	  }

	  /**
	     * Shape constructor.  Shapes are primitive objects such as rectangles,
	     *  circles, text, lines, etc.
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Node
	     * @param {Object} config
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var customShape = new Konva.Shape({
	         *   x: 5,
	         *   y: 10,
	         *   fill: 'red',
	         *   // a Konva.Canvas renderer is passed into the drawFunc function
	         *   drawFunc: function(context) {
	         *     context.beginPath();
	         *     context.moveTo(200, 50);
	         *     context.lineTo(420, 80);
	         *     context.quadraticCurveTo(300, 100, 260, 170);
	         *     context.closePath();
	         *     context.fillStrokeShape(this);
	         *   }
	         *});
	     */
	  Konva.Shape = function(config) {
	    this.__init(config);
	  };

	  Konva.Util.addMethods(Konva.Shape, {
	    __init: function(config) {
	      this.nodeType = 'Shape';
	      this._fillFunc = _fillFunc;
	      this._strokeFunc = _strokeFunc;
	      this._fillFuncHit = _fillFuncHit;
	      this._strokeFuncHit = _strokeFuncHit;

	      // set colorKey
	      var shapes = Konva.shapes;
	      var key;

	      while (true) {
	        key = Konva.Util.getRandomColor();
	        if (key && !(key in shapes)) {
	          break;
	        }
	      }

	      this.colorKey = key;
	      shapes[key] = this;

	      // call super constructor
	      Konva.Node.call(this, config);

	      this.on(
	        'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',
	        _clearHasShadowCache
	      );

	      this.on(
	        'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',
	        _clearGetShadowRGBACache
	      );
	    },
	    hasChildren: function() {
	      return false;
	    },
	    getChildren: function() {
	      return [];
	    },
	    /**
	         * get canvas context tied to the layer
	         * @method
	         * @memberof Konva.Shape.prototype
	         * @returns {Konva.Context}
	         */
	    getContext: function() {
	      return this.getLayer().getContext();
	    },
	    /**
	         * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element
	         * @method
	         * @memberof Konva.Shape.prototype
	         * @returns {Konva.Canvas}
	         */
	    getCanvas: function() {
	      return this.getLayer().getCanvas();
	    },
	    /**
	         * returns whether or not a shadow will be rendered
	         * @method
	         * @memberof Konva.Shape.prototype
	         * @returns {Boolean}
	         */
	    hasShadow: function() {
	      return this._getCache(HAS_SHADOW, this._hasShadow);
	    },
	    _hasShadow: function() {
	      return (
	        this.getShadowEnabled() &&
	        (this.getShadowOpacity() !== 0 &&
	          !!(this.getShadowColor() ||
	            this.getShadowBlur() ||
	            this.getShadowOffsetX() ||
	            this.getShadowOffsetY()))
	      );
	    },
	    getShadowRGBA: function() {
	      return this._getCache(SHADOW_RGBA, this._getShadowRGBA);
	    },
	    _getShadowRGBA: function() {
	      if (this.hasShadow()) {
	        var rgba = Konva.Util.colorToRGBA(this.shadowColor());
	        return (
	          'rgba(' +
	          rgba.r +
	          ',' +
	          rgba.g +
	          ',' +
	          rgba.b +
	          ',' +
	          rgba.a * (this.getShadowOpacity() || 1) +
	          ')'
	        );
	      }
	    },
	    /**
	         * returns whether or not the shape will be filled
	         * @method
	         * @memberof Konva.Shape.prototype
	         * @returns {Boolean}
	         */
	    hasFill: function() {
	      return !!(this.getFill() ||
	        this.getFillPatternImage() ||
	        this.getFillLinearGradientColorStops() ||
	        this.getFillRadialGradientColorStops());
	    },
	    /**
	         * returns whether or not the shape will be stroked
	         * @method
	         * @memberof Konva.Shape.prototype
	         * @returns {Boolean}
	         */
	    hasStroke: function() {
	      return this.strokeEnabled() && !!this.stroke();
	    },
	    /**
	         * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because
	         *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times
	         *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible
	         *  because it performs much better
	         * @method
	         * @memberof Konva.Shape.prototype
	         * @param {Object} point
	         * @param {Number} point.x
	         * @param {Number} point.y
	         * @returns {Boolean}
	         */
	    intersects: function(point) {
	      var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;

	      bufferHitCanvas.getContext().clear();
	      this.drawHit(bufferHitCanvas);
	      p = bufferHitCanvas.context.getImageData(
	        Math.round(point.x),
	        Math.round(point.y),
	        1,
	        1
	      ).data;
	      return p[3] > 0;
	    },
	    // extends Node.prototype.destroy
	    destroy: function() {
	      Konva.Node.prototype.destroy.call(this);
	      delete Konva.shapes[this.colorKey];
	      return this;
	    },
	    _useBufferCanvas: function(caching) {
	      return (
	        (!caching &&
	          (this.perfectDrawEnabled() &&
	            this.getAbsoluteOpacity() !== 1 &&
	            this.hasFill() &&
	            this.hasStroke() &&
	            this.getStage())) ||
	        (this.perfectDrawEnabled() &&
	          this.hasShadow() &&
	          this.getAbsoluteOpacity() !== 1 &&
	          this.hasFill() &&
	          this.hasStroke() &&
	          this.getStage())
	      );
	    },
	    /**
	         * return self rectangle (x, y, width, height) of shape.
	         * This method are not taken into account transformation and styles.
	         * @method
	         * @memberof Konva.Shape.prototype
	         * @returns {Object} rect with {x, y, width, height} properties
	         * @example
	         *
	         * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}
	         * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}
	         *
	         */
	    getSelfRect: function() {
	      var size = this.getSize();
	      return {
	        x: this._centroid ? Math.round(-size.width / 2) : 0,
	        y: this._centroid ? Math.round(-size.height / 2) : 0,
	        width: size.width,
	        height: size.height
	      };
	    },
	    getClientRect: function(attrs) {
	      attrs = attrs || {};
	      var skipTransform = attrs.skipTransform;
	      var relativeTo = attrs.relativeTo;

	      var fillRect = this.getSelfRect();

	      var strokeWidth = (this.hasStroke() && this.strokeWidth()) || 0;
	      var fillAndStrokeWidth = fillRect.width + strokeWidth;
	      var fillAndStrokeHeight = fillRect.height + strokeWidth;

	      var shadowOffsetX = this.hasShadow() ? this.shadowOffsetX() : 0;
	      var shadowOffsetY = this.hasShadow() ? this.shadowOffsetY() : 0;

	      var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);
	      var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);

	      var blurRadius = (this.hasShadow() && this.shadowBlur()) || 0;

	      var width = preWidth + blurRadius * 2;
	      var height = preHeight + blurRadius * 2;

	      // if stroke, for example = 3
	      // we need to set x to 1.5, but after Math.round it will be 2
	      // as we have additional offset we need to increase width and height by 1 pixel
	      var roundingOffset = 0;
	      if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {
	        roundingOffset = 1;
	      }
	      var rect = {
	        width: width + roundingOffset,
	        height: height + roundingOffset,
	        x: -Math.round(strokeWidth / 2 + blurRadius) +
	          Math.min(shadowOffsetX, 0) +
	          fillRect.x,
	        y: -Math.round(strokeWidth / 2 + blurRadius) +
	          Math.min(shadowOffsetY, 0) +
	          fillRect.y
	      };
	      if (!skipTransform) {
	        return this._transformedRect(rect, relativeTo);
	      }
	      return rect;
	    },
	    drawScene: function(can, top, caching, skipBuffer) {
	      var layer = this.getLayer(),
	        canvas = can || layer.getCanvas(),
	        context = canvas.getContext(),
	        cachedCanvas = this._cache.canvas,
	        drawFunc = this.sceneFunc(),
	        hasShadow = this.hasShadow(),
	        hasStroke = this.hasStroke(),
	        stage,
	        bufferCanvas,
	        bufferContext;

	      if (!this.isVisible()) {
	        return this;
	      }
	      if (cachedCanvas) {
	        context.save();
	        layer._applyTransform(this, context, top);
	        this._drawCachedSceneCanvas(context);
	        context.restore();
	        return this;
	      }
	      if (!drawFunc) {
	        return this;
	      }
	      context.save();
	      // if buffer canvas is needed
	      if (this._useBufferCanvas(caching) && !skipBuffer) {
	        stage = this.getStage();
	        bufferCanvas = stage.bufferCanvas;
	        bufferContext = bufferCanvas.getContext();
	        bufferContext.clear();
	        bufferContext.save();
	        bufferContext._applyLineJoin(this);
	        // layer might be undefined if we are using cache before adding to layer
	        if (!caching) {
	          if (layer) {
	            layer._applyTransform(this, bufferContext, top);
	          } else {
	            var m = this.getAbsoluteTransform(top).getMatrix();
	            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	          }
	        }

	        drawFunc.call(this, bufferContext);
	        bufferContext.restore();

	        var ratio = bufferCanvas.pixelRatio;
	        if (hasShadow && !canvas.hitCanvas) {
	          context.save();

	          context._applyShadow(this);
	          context._applyOpacity(this);
	          context._applyGlobalCompositeOperation(this);
	          context.drawImage(
	            bufferCanvas._canvas,
	            0,
	            0,
	            bufferCanvas.width / ratio,
	            bufferCanvas.height / ratio
	          );
	          context.restore();
	        } else {
	          context._applyOpacity(this);
	          context._applyGlobalCompositeOperation(this);
	          context.drawImage(
	            bufferCanvas._canvas,
	            0,
	            0,
	            bufferCanvas.width / ratio,
	            bufferCanvas.height / ratio
	          );
	        }
	      } else {
	        // if buffer canvas is not needed
	        context._applyLineJoin(this);
	        // layer might be undefined if we are using cache before adding to layer
	        if (!caching) {
	          if (layer) {
	            layer._applyTransform(this, context, top);
	          } else {
	            var o = this.getAbsoluteTransform(top).getMatrix();
	            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);
	          }
	        }

	        if (hasShadow && hasStroke && !canvas.hitCanvas) {
	          context.save();
	          // apply shadow
	          if (!caching) {
	            context._applyOpacity(this);
	            context._applyGlobalCompositeOperation(this);
	          }
	          context._applyShadow(this);

	          drawFunc.call(this, context);
	          context.restore();
	          // if shape has stroke we need to redraw shape
	          // otherwise we will see a shadow under stroke (and over fill)
	          // but I think this is unexpected behavior
	          if (this.hasFill() && this.getShadowForStrokeEnabled()) {
	            drawFunc.call(this, context);
	          }
	        } else if (hasShadow && !canvas.hitCanvas) {
	          context.save();
	          if (!caching) {
	            context._applyOpacity(this);
	            context._applyGlobalCompositeOperation(this);
	          }
	          context._applyShadow(this);
	          drawFunc.call(this, context);
	          context.restore();
	        } else {
	          if (!caching) {
	            context._applyOpacity(this);
	            context._applyGlobalCompositeOperation(this);
	          }
	          drawFunc.call(this, context);
	        }
	      }
	      context.restore();
	      return this;
	    },
	    drawHit: function(can, top, caching) {
	      var layer = this.getLayer(),
	        canvas = can || layer.hitCanvas,
	        context = canvas.getContext(),
	        drawFunc = this.hitFunc() || this.sceneFunc(),
	        cachedCanvas = this._cache.canvas,
	        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;

	      if (!this.shouldDrawHit(canvas)) {
	        return this;
	      }
	      if (layer) {
	        layer.clearHitCache();
	      }
	      if (cachedHitCanvas) {
	        context.save();
	        layer._applyTransform(this, context, top);
	        this._drawCachedHitCanvas(context);
	        context.restore();
	        return this;
	      }
	      if (!drawFunc) {
	        return this;
	      }
	      context.save();
	      context._applyLineJoin(this);
	      if (!caching) {
	        if (layer) {
	          layer._applyTransform(this, context, top);
	        } else {
	          var o = this.getAbsoluteTransform(top).getMatrix();
	          context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);
	        }
	      }
	      drawFunc.call(this, context);
	      context.restore();
	      return this;
	    },
	    /**
	        * draw hit graph using the cached scene canvas
	        * @method
	        * @memberof Konva.Shape.prototype
	        * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not
	        *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.
	        *  The default is 0
	        * @returns {Konva.Shape}
	        * @example
	        * shape.cache();
	        * shape.drawHitFromCache();
	        */
	    drawHitFromCache: function(alphaThreshold) {
	      var threshold = alphaThreshold || 0,
	        cachedCanvas = this._cache.canvas,
	        sceneCanvas = this._getCachedSceneCanvas(),
	        hitCanvas = cachedCanvas.hit,
	        hitContext = hitCanvas.getContext(),
	        hitWidth = hitCanvas.getWidth(),
	        hitHeight = hitCanvas.getHeight(),
	        hitImageData,
	        hitData,
	        len,
	        rgbColorKey,
	        i,
	        alpha;

	      hitContext.clear();
	      hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);

	      try {
	        hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);
	        hitData = hitImageData.data;
	        len = hitData.length;
	        rgbColorKey = Konva.Util._hexToRgb(this.colorKey);

	        // replace non transparent pixels with color key
	        for (i = 0; i < len; i += 4) {
	          alpha = hitData[i + 3];
	          if (alpha > threshold) {
	            hitData[i] = rgbColorKey.r;
	            hitData[i + 1] = rgbColorKey.g;
	            hitData[i + 2] = rgbColorKey.b;
	            hitData[i + 3] = 255;
	          } else {
	            hitData[i + 3] = 0;
	          }
	        }
	        hitContext.putImageData(hitImageData, 0, 0);
	      } catch (e) {
	        Konva.Util.error(
	          'Unable to draw hit graph from cached scene canvas. ' + e.message
	        );
	      }

	      return this;
	    }
	  });
	  Konva.Util.extend(Konva.Shape, Konva.Node);

	  // add getters and setters
	  Konva.Factory.addGetterSetter(Konva.Shape, 'stroke');

	  /**
	     * get/set stroke color
	     * @name stroke
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {String} color
	     * @returns {String}
	     * @example
	     * // get stroke color
	     * var stroke = shape.stroke();
	     *
	     * // set stroke color with color string
	     * shape.stroke('green');
	     *
	     * // set stroke color with hex
	     * shape.stroke('#00ff00');
	     *
	     * // set stroke color with rgb
	     * shape.stroke('rgb(0,255,0)');
	     *
	     * // set stroke color with rgba and make it 50% opaque
	     * shape.stroke('rgba(0,255,0,0.5');
	     */

	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'strokeRed',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'strokeGreen',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'strokeBlue',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'strokeAlpha',
	    1,
	    Konva.Validators.alphaComponent
	  );

	  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeWidth', 2);

	  /**
	     * get/set stroke width
	     * @name strokeWidth
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} strokeWidth
	     * @returns {Number}
	     * @example
	     * // get stroke width
	     * var strokeWidth = shape.strokeWidth();
	     *
	     * // set stroke width
	     * shape.strokeWidth();
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeHitEnabled', true);

	  /**
	     * get/set strokeHitEnabled property. Useful for performance optimization.
	     * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area
	     * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`
	     * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)
	     * Default value is true
	     * @name strokeHitEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} strokeHitEnabled
	     * @returns {Boolean}
	     * @example
	     * // get strokeHitEnabled
	     * var strokeHitEnabled = shape.strokeHitEnabled();
	     *
	     * // set strokeHitEnabled
	     * shape.strokeHitEnabled();
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'perfectDrawEnabled', true);

	  /**
	     * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to false to improve performance.
	     * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.
	     * Default value is true
	     * @name perfectDrawEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} perfectDrawEnabled
	     * @returns {Boolean}
	     * @example
	     * // get perfectDrawEnabled
	     * var perfectDrawEnabled = shape.perfectDrawEnabled();
	     *
	     * // set perfectDrawEnabled
	     * shape.perfectDrawEnabled();
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowForStrokeEnabled', true);

	  /**
	     * get/set shadowForStrokeEnabled. Useful for performance optimization.
	     * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.
	     * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.
	     * Default value is true
	     * @name shadowForStrokeEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} shadowForStrokeEnabled
	     * @returns {Boolean}
	     * @example
	     * // get shadowForStrokeEnabled
	     * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();
	     *
	     * // set shadowForStrokeEnabled
	     * shape.shadowForStrokeEnabled();
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');

	  /**
	     * get/set line join.  Can be miter, round, or bevel.  The
	     *  default is miter
	     * @name lineJoin
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {String} lineJoin
	     * @returns {String}
	     * @example
	     * // get line join
	     * var lineJoin = shape.lineJoin();
	     *
	     * // set line join
	     * shape.lineJoin('round');
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');

	  /**
	     * get/set line cap.  Can be butt, round, or square
	     * @name lineCap
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {String} lineCap
	     * @returns {String}
	     * @example
	     * // get line cap
	     * var lineCap = shape.lineCap();
	     *
	     * // set line cap
	     * shape.lineCap('round');
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');

	  /**
	     * get/set scene draw function
	     * @name sceneFunc
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Function} drawFunc drawing function
	     * @returns {Function}
	     * @example
	     * // get scene draw function
	     * var sceneFunc = shape.sceneFunc();
	     *
	     * // set scene draw function
	     * shape.sceneFunc(function(context) {
	     *   context.beginPath();
	     *   context.rect(0, 0, this.width(), this.height());
	     *   context.closePath();
	     *   context.fillStrokeShape(this);
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');

	  /**
	     * get/set hit draw function
	     * @name hitFunc
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Function} drawFunc drawing function
	     * @returns {Function}
	     * @example
	     * // get hit draw function
	     * var hitFunc = shape.hitFunc();
	     *
	     * // set hit draw function
	     * shape.hitFunc(function(context) {
	     *   context.beginPath();
	     *   context.rect(0, 0, this.width(), this.height());
	     *   context.closePath();
	     *   context.fillStrokeShape(this);
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'dash');

	  /**
	     * get/set dash array for stroke.
	     * @name dash
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Array} dash
	     * @returns {Array}
	     * @example
	     *  // apply dashed stroke that is 10px long and 5 pixels apart
	     *  line.dash([10, 5]);
	     *  // apply dashed stroke that is made up of alternating dashed
	     *  // lines that are 10px long and 20px apart, and dots that have
	     *  // a radius of 5px and are 20px apart
	     *  line.dash([10, 20, 0.001, 20]);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'dashOffset', 0);

	  /**
	     * get/set dash offset for stroke.
	     * @name dash
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} dash offset
	     * @returns {Number}
	     * @example
	     *  // apply dashed stroke that is 10px long and 5 pixels apart with an offset of 5px
	     *  line.dash([10, 5]);
	     *  line.dashOffset(5);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowColor');

	  /**
	     * get/set shadow color
	     * @name shadowColor
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {String} color
	     * @returns {String}
	     * @example
	     * // get shadow color
	     * var shadow = shape.shadowColor();
	     *
	     * // set shadow color with color string
	     * shape.shadowColor('green');
	     *
	     * // set shadow color with hex
	     * shape.shadowColor('#00ff00');
	     *
	     * // set shadow color with rgb
	     * shape.shadowColor('rgb(0,255,0)');
	     *
	     * // set shadow color with rgba and make it 50% opaque
	     * shape.shadowColor('rgba(0,255,0,0.5');
	     */

	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'shadowRed',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'shadowGreen',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'shadowBlue',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'shadowAlpha',
	    1,
	    Konva.Validators.alphaComponent
	  );

	  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowBlur');

	  /**
	     * get/set shadow blur
	     * @name shadowBlur
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} blur
	     * @returns {Number}
	     * @example
	     * // get shadow blur
	     * var shadowBlur = shape.shadowBlur();
	     *
	     * // set shadow blur
	     * shape.shadowBlur(10);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOpacity');

	  /**
	     * get/set shadow opacity.  must be a value between 0 and 1
	     * @name shadowOpacity
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} opacity
	     * @returns {Number}
	     * @example
	     * // get shadow opacity
	     * var shadowOpacity = shape.shadowOpacity();
	     *
	     * // set shadow opacity
	     * shape.shadowOpacity(0.5);
	     */

	  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', [
	    'x',
	    'y'
	  ]);

	  /**
	     * get/set shadow offset
	     * @name shadowOffset
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Object} offset
	     * @param {Number} offset.x
	     * @param {Number} offset.y
	     * @returns {Object}
	     * @example
	     * // get shadow offset
	     * var shadowOffset = shape.shadowOffset();
	     *
	     * // set shadow offset
	     * shape.shadowOffset({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetX', 0);

	  /**
	     * get/set shadow offset x
	     * @name shadowOffsetX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get shadow offset x
	     * var shadowOffsetX = shape.shadowOffsetX();
	     *
	     * // set shadow offset x
	     * shape.shadowOffsetX(5);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetY', 0);

	  /**
	     * get/set shadow offset y
	     * @name shadowOffsetY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get shadow offset y
	     * var shadowOffsetY = shape.shadowOffsetY();
	     *
	     * // set shadow offset y
	     * shape.shadowOffsetY(5);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');

	  /**
	     * get/set fill pattern image
	     * @name fillPatternImage
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Image} image object
	     * @returns {Image}
	     * @example
	     * // get fill pattern image
	     * var fillPatternImage = shape.fillPatternImage();
	     *
	     * // set fill pattern image
	     * var imageObj = new Image();
	     * imageObj.onload = function() {
	     *   shape.fillPatternImage(imageObj);
	     * };
	     * imageObj.src = 'path/to/image/jpg';
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fill');

	  /**
	     * get/set fill color
	     * @name fill
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {String} color
	     * @returns {String}
	     * @example
	     * // get fill color
	     * var fill = shape.fill();
	     *
	     * // set fill color with color string
	     * shape.fill('green');
	     *
	     * // set fill color with hex
	     * shape.fill('#00ff00');
	     *
	     * // set fill color with rgb
	     * shape.fill('rgb(0,255,0)');
	     *
	     * // set fill color with rgba and make it 50% opaque
	     * shape.fill('rgba(0,255,0,0.5');
	     *
	     * // shape without fill
	     * shape.fill(null);
	     */

	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'fillRed',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'fillGreen',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'fillBlue',
	    0,
	    Konva.Validators.RGBComponent
	  );
	  Konva.Factory.addDeprecatedGetterSetter(
	    Konva.Shape,
	    'fillAlpha',
	    1,
	    Konva.Validators.alphaComponent
	  );

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternX', 0);

	  /**
	     * get/set fill pattern x
	     * @name fillPatternX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill pattern x
	     * var fillPatternX = shape.fillPatternX();
	     * // set fill pattern x
	     * shape.fillPatternX(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternY', 0);

	  /**
	     * get/set fill pattern y
	     * @name fillPatternY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill pattern y
	     * var fillPatternY = shape.fillPatternY();
	     * // set fill pattern y
	     * shape.fillPatternY(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');

	  /**
	     * get/set fill linear gradient color stops
	     * @name fillLinearGradientColorStops
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Array} colorStops
	     * @returns {Array} colorStops
	     * @example
	     * // get fill linear gradient color stops
	     * var colorStops = shape.fillLinearGradientColorStops();
	     *
	     * // create a linear gradient that starts with red, changes to blue
	     * // halfway through, and then changes to green
	     * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');
	     */

	  Konva.Factory.addGetterSetter(
	    Konva.Shape,
	    'fillRadialGradientStartRadius',
	    0
	  );

	  /**
	     * get/set fill radial gradient start radius
	     * @name fillRadialGradientStartRadius
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radial gradient start radius
	     * var startRadius = shape.fillRadialGradientStartRadius();
	     *
	     * // set radial gradient start radius
	     * shape.fillRadialGradientStartRadius(0);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);

	  /**
	     * get/set fill radial gradient end radius
	     * @name fillRadialGradientEndRadius
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radial gradient end radius
	     * var endRadius = shape.fillRadialGradientEndRadius();
	     *
	     * // set radial gradient end radius
	     * shape.fillRadialGradientEndRadius(100);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');

	  /**
	     * get/set fill radial gradient color stops
	     * @name fillRadialGradientColorStops
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} colorStops
	     * @returns {Array}
	     * @example
	     * // get fill radial gradient color stops
	     * var colorStops = shape.fillRadialGradientColorStops();
	     *
	     * // create a radial gradient that starts with red, changes to blue
	     * // halfway through, and then changes to green
	     * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');

	  /**
	     * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'
	     * @name fillPatternRepeat
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {String} repeat
	     * @returns {String}
	     * @example
	     * // get fill pattern repeat
	     * var repeat = shape.fillPatternRepeat();
	     *
	     * // repeat pattern in x direction only
	     * shape.fillPatternRepeat('repeat-x');
	     *
	     * // do not repeat the pattern
	     * shape.fillPatternRepeat('no repeat');
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);

	  /**
	     * get/set fill enabled flag
	     * @name fillEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get fill enabled flag
	     * var fillEnabled = shape.fillEnabled();
	     *
	     * // disable fill
	     * shape.fillEnabled(false);
	     *
	     * // enable fill
	     * shape.fillEnabled(true);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);

	  /**
	     * get/set stroke enabled flag
	     * @name strokeEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get stroke enabled flag
	     * var strokeEnabled = shape.strokeEnabled();
	     *
	     * // disable stroke
	     * shape.strokeEnabled(false);
	     *
	     * // enable stroke
	     * shape.strokeEnabled(true);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);

	  /**
	     * get/set shadow enabled flag
	     * @name shadowEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get shadow enabled flag
	     * var shadowEnabled = shape.shadowEnabled();
	     *
	     * // disable shadow
	     * shape.shadowEnabled(false);
	     *
	     * // enable shadow
	     * shape.shadowEnabled(true);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);

	  /**
	     * get/set dash enabled flag
	     * @name dashEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get dash enabled flag
	     * var dashEnabled = shape.dashEnabled();
	     *
	     * // disable dash
	     * shape.dashEnabled(false);
	     *
	     * // enable dash
	     * shape.dashEnabled(true);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);

	  /**
	     * get/set strokeScale enabled flag
	     * @name strokeScaleEnabled
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get stroke scale enabled flag
	     * var strokeScaleEnabled = shape.strokeScaleEnabled();
	     *
	     * // disable stroke scale
	     * shape.strokeScaleEnabled(false);
	     *
	     * // enable stroke scale
	     * shape.strokeScaleEnabled(true);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');

	  /**
	     * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.
	     *   This is handy if you want to toggle between different fill types.
	     * @name fillPriority
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {String} priority
	     * @returns {String}
	     * @example
	     * // get fill priority
	     * var fillPriority = shape.fillPriority();
	     *
	     * // set fill priority
	     * shape.fillPriority('linear-gradient');
	     */

	  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', [
	    'x',
	    'y'
	  ]);

	  /**
	     * get/set fill pattern offset
	     * @name fillPatternOffset
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Object} offset
	     * @param {Number} offset.x
	     * @param {Number} offset.y
	     * @returns {Object}
	     * @example
	     * // get fill pattern offset
	     * var patternOffset = shape.fillPatternOffset();
	     *
	     * // set fill pattern offset
	     * shape.fillPatternOffset({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetX', 0);
	  /**
	     * get/set fill pattern offset x
	     * @name fillPatternOffsetX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill pattern offset x
	     * var patternOffsetX = shape.fillPatternOffsetX();
	     *
	     * // set fill pattern offset x
	     * shape.fillPatternOffsetX(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetY', 0);
	  /**
	     * get/set fill pattern offset y
	     * @name fillPatternOffsetY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill pattern offset y
	     * var patternOffsetY = shape.fillPatternOffsetY();
	     *
	     * // set fill pattern offset y
	     * shape.fillPatternOffsetY(10);
	     */

	  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', [
	    'x',
	    'y'
	  ]);

	  /**
	     * get/set fill pattern scale
	     * @name fillPatternScale
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Object} scale
	     * @param {Number} scale.x
	     * @param {Number} scale.y
	     * @returns {Object}
	     * @example
	     * // get fill pattern scale
	     * var patternScale = shape.fillPatternScale();
	     *
	     * // set fill pattern scale
	     * shape.fillPatternScale({
	     *   x: 2
	     *   y: 2
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleX', 1);
	  /**
	     * get/set fill pattern scale x
	     * @name fillPatternScaleX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill pattern scale x
	     * var patternScaleX = shape.fillPatternScaleX();
	     *
	     * // set fill pattern scale x
	     * shape.fillPatternScaleX(2);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleY', 1);
	  /**
	     * get/set fill pattern scale y
	     * @name fillPatternScaleY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill pattern scale y
	     * var patternScaleY = shape.fillPatternScaleY();
	     *
	     * // set fill pattern scale y
	     * shape.fillPatternScaleY(2);
	     */

	  Konva.Factory.addComponentsGetterSetter(
	    Konva.Shape,
	    'fillLinearGradientStartPoint',
	    ['x', 'y']
	  );

	  /**
	     * get/set fill linear gradient start point
	     * @name fillLinearGradientStartPoint
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Object} startPoint
	     * @param {Number} startPoint.x
	     * @param {Number} startPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill linear gradient start point
	     * var startPoint = shape.fillLinearGradientStartPoint();
	     *
	     * // set fill linear gradient start point
	     * shape.fillLinearGradientStartPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(
	    Konva.Shape,
	    'fillLinearGradientStartPointX',
	    0
	  );
	  /**
	     * get/set fill linear gradient start point x
	     * @name fillLinearGradientStartPointX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient start point x
	     * var startPointX = shape.fillLinearGradientStartPointX();
	     *
	     * // set fill linear gradient start point x
	     * shape.fillLinearGradientStartPointX(20);
	     */

	  Konva.Factory.addGetterSetter(
	    Konva.Shape,
	    'fillLinearGradientStartPointY',
	    0
	  );
	  /**
	     * get/set fill linear gradient start point y
	     * @name fillLinearGradientStartPointY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient start point y
	     * var startPointY = shape.fillLinearGradientStartPointY();
	     *
	     * // set fill linear gradient start point y
	     * shape.fillLinearGradientStartPointY(20);
	     */

	  Konva.Factory.addComponentsGetterSetter(
	    Konva.Shape,
	    'fillLinearGradientEndPoint',
	    ['x', 'y']
	  );

	  /**
	     * get/set fill linear gradient end point
	     * @name fillLinearGradientEndPoint
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Object} endPoint
	     * @param {Number} endPoint.x
	     * @param {Number} endPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill linear gradient end point
	     * var endPoint = shape.fillLinearGradientEndPoint();
	     *
	     * // set fill linear gradient end point
	     * shape.fillLinearGradientEndPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);
	  /**
	     * get/set fill linear gradient end point x
	     * @name fillLinearGradientEndPointX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient end point x
	     * var endPointX = shape.fillLinearGradientEndPointX();
	     *
	     * // set fill linear gradient end point x
	     * shape.fillLinearGradientEndPointX(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);
	  /**
	     * get/set fill linear gradient end point y
	     * @name fillLinearGradientEndPointY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient end point y
	     * var endPointY = shape.fillLinearGradientEndPointY();
	     *
	     * // set fill linear gradient end point y
	     * shape.fillLinearGradientEndPointY(20);
	     */

	  Konva.Factory.addComponentsGetterSetter(
	    Konva.Shape,
	    'fillRadialGradientStartPoint',
	    ['x', 'y']
	  );

	  /**
	     * get/set fill radial gradient start point
	     * @name fillRadialGradientStartPoint
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Object} startPoint
	     * @param {Number} startPoint.x
	     * @param {Number} startPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill radial gradient start point
	     * var startPoint = shape.fillRadialGradientStartPoint();
	     *
	     * // set fill radial gradient start point
	     * shape.fillRadialGradientStartPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(
	    Konva.Shape,
	    'fillRadialGradientStartPointX',
	    0
	  );
	  /**
	     * get/set fill radial gradient start point x
	     * @name fillRadialGradientStartPointX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient start point x
	     * var startPointX = shape.fillRadialGradientStartPointX();
	     *
	     * // set fill radial gradient start point x
	     * shape.fillRadialGradientStartPointX(20);
	     */

	  Konva.Factory.addGetterSetter(
	    Konva.Shape,
	    'fillRadialGradientStartPointY',
	    0
	  );
	  /**
	     * get/set fill radial gradient start point y
	     * @name fillRadialGradientStartPointY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient start point y
	     * var startPointY = shape.fillRadialGradientStartPointY();
	     *
	     * // set fill radial gradient start point y
	     * shape.fillRadialGradientStartPointY(20);
	     */

	  Konva.Factory.addComponentsGetterSetter(
	    Konva.Shape,
	    'fillRadialGradientEndPoint',
	    ['x', 'y']
	  );

	  /**
	     * get/set fill radial gradient end point
	     * @name fillRadialGradientEndPoint
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Object} endPoint
	     * @param {Number} endPoint.x
	     * @param {Number} endPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill radial gradient end point
	     * var endPoint = shape.fillRadialGradientEndPoint();
	     *
	     * // set fill radial gradient end point
	     * shape.fillRadialGradientEndPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);
	  /**
	     * get/set fill radial gradient end point x
	     * @name fillRadialGradientEndPointX
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient end point x
	     * var endPointX = shape.fillRadialGradientEndPointX();
	     *
	     * // set fill radial gradient end point x
	     * shape.fillRadialGradientEndPointX(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);
	  /**
	     * get/set fill radial gradient end point y
	     * @name fillRadialGradientEndPointY
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient end point y
	     * var endPointY = shape.fillRadialGradientEndPointY();
	     *
	     * // set fill radial gradient end point y
	     * shape.fillRadialGradientEndPointY(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);

	  /**
	     * get/set fill pattern rotation in degrees
	     * @name fillPatternRotation
	     * @method
	     * @memberof Konva.Shape.prototype
	     * @param {Number} rotation
	     * @returns {Konva.Shape}
	     * @example
	     * // get fill pattern rotation
	     * var patternRotation = shape.fillPatternRotation();
	     *
	     * // set fill pattern rotation
	     * shape.fillPatternRotation(20);
	     */

	  Konva.Factory.backCompat(Konva.Shape, {
	    dashArray: 'dash',
	    getDashArray: 'getDash',
	    setDashArray: 'getDash',

	    drawFunc: 'sceneFunc',
	    getDrawFunc: 'getSceneFunc',
	    setDrawFunc: 'setSceneFunc',

	    drawHitFunc: 'hitFunc',
	    getDrawHitFunc: 'getHitFunc',
	    setDrawHitFunc: 'setHitFunc'
	  });

	  Konva.Collection.mapMethods(Konva.Shape);
	})(Konva);

	(function() {
	  'use strict';
	  // CONSTANTS
	  var STAGE = 'Stage',
	    STRING = 'string',
	    PX = 'px',
	    MOUSEOUT = 'mouseout',
	    MOUSELEAVE = 'mouseleave',
	    MOUSEOVER = 'mouseover',
	    MOUSEENTER = 'mouseenter',
	    MOUSEMOVE = 'mousemove',
	    MOUSEDOWN = 'mousedown',
	    MOUSEUP = 'mouseup',
	    CONTEXTMENU = 'contextmenu',
	    CLICK = 'click',
	    DBL_CLICK = 'dblclick',
	    TOUCHSTART = 'touchstart',
	    TOUCHEND = 'touchend',
	    TAP = 'tap',
	    DBL_TAP = 'dbltap',
	    TOUCHMOVE = 'touchmove',
	    WHEEL = 'wheel',
	    CONTENT_MOUSEOUT = 'contentMouseout',
	    CONTENT_MOUSEOVER = 'contentMouseover',
	    CONTENT_MOUSEMOVE = 'contentMousemove',
	    CONTENT_MOUSEDOWN = 'contentMousedown',
	    CONTENT_MOUSEUP = 'contentMouseup',
	    CONTENT_CONTEXTMENU = 'contentContextmenu',
	    CONTENT_CLICK = 'contentClick',
	    CONTENT_DBL_CLICK = 'contentDblclick',
	    CONTENT_TOUCHSTART = 'contentTouchstart',
	    CONTENT_TOUCHEND = 'contentTouchend',
	    CONTENT_DBL_TAP = 'contentDbltap',
	    CONTENT_TAP = 'contentTap',
	    CONTENT_TOUCHMOVE = 'contentTouchmove',
	    CONTENT_WHEEL = 'contentWheel',
	    DIV = 'div',
	    RELATIVE = 'relative',
	    KONVA_CONTENT = 'konvajs-content',
	    SPACE = ' ',
	    UNDERSCORE = '_',
	    CONTAINER = 'container',
	    EMPTY_STRING = '',
	    EVENTS = [
	      MOUSEDOWN,
	      MOUSEMOVE,
	      MOUSEUP,
	      MOUSEOUT,
	      TOUCHSTART,
	      TOUCHMOVE,
	      TOUCHEND,
	      MOUSEOVER,
	      WHEEL,
	      CONTEXTMENU
	    ],
	    // cached variables
	    eventsLength = EVENTS.length;

	  function addEvent(ctx, eventName) {
	    ctx.content.addEventListener(
	      eventName,
	      function(evt) {
	        ctx[UNDERSCORE + eventName](evt);
	      },
	      false
	    );
	  }

	  /**
	     * Stage constructor.  A stage is used to contain multiple layers
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Container
	     * @param {Object} config
	     * @param {String|Element} config.container Container selector or DOM element
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var stage = new Konva.Stage({
	         *   width: 500,
	         *   height: 800,
	         *   container: 'containerId' // or "#containerId" or ".containerClass"
	         * });
	     */
	  Konva.Stage = function(config) {
	    this.___init(config);
	  };

	  Konva.Util.addMethods(Konva.Stage, {
	    ___init: function(config) {
	      this.nodeType = STAGE;
	      // call super constructor
	      Konva.Container.call(this, config);
	      this._id = Konva.idCounter++;
	      this._buildDOM();
	      this._bindContentEvents();
	      this._enableNestedTransforms = false;
	      Konva.stages.push(this);
	    },
	    _validateAdd: function(child) {
	      if (child.getType() !== 'Layer') {
	        Konva.Util.throw('You may only add layers to the stage.');
	      }
	    },
	    /**
	         * set container dom element which contains the stage wrapper div element
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @param {DomElement} container can pass in a dom element or id string
	         */
	    setContainer: function(container) {
	      if (typeof container === STRING) {
	        if (container.charAt(0) === '.') {
	          var className = container.slice(1);
	          container = Konva.document.getElementsByClassName(className)[0];
	        } else {
	          var id;
	          if (container.charAt(0) !== '#') {
	            id = container;
	          } else {
	            id = container.slice(1);
	          }
	          container = Konva.document.getElementById(id);
	        }
	        if (!container) {
	          throw 'Can not find container in document with id ' + id;
	        }
	      }
	      this._setAttr(CONTAINER, container);
	      return this;
	    },
	    shouldDrawHit: function() {
	      return true;
	    },
	    draw: function() {
	      Konva.Node.prototype.draw.call(this);
	      return this;
	    },
	    /**
	         * draw layer scene graphs
	         * @name draw
	         * @method
	         * @memberof Konva.Stage.prototype
	         */

	    /**
	         * draw layer hit graphs
	         * @name drawHit
	         * @method
	         * @memberof Konva.Stage.prototype
	         */

	    /**
	         * set height
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @param {Number} height
	         */
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      this._resizeDOM();
	      return this;
	    },
	    /**
	         * set width
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @param {Number} width
	         */
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      this._resizeDOM();
	      return this;
	    },
	    /**
	         * clear all layers
	         * @method
	         * @memberof Konva.Stage.prototype
	         */
	    clear: function() {
	      var layers = this.children,
	        len = layers.length,
	        n;

	      for (n = 0; n < len; n++) {
	        layers[n].clear();
	      }
	      return this;
	    },
	    clone: function(obj) {
	      if (!obj) {
	        obj = {};
	      }
	      obj.container = Konva.document.createElement(DIV);
	      return Konva.Container.prototype.clone.call(this, obj);
	    },
	    /**
	         * destroy stage
	         * @method
	         * @memberof Konva.Stage.prototype
	         */
	    destroy: function() {
	      var content = this.content;
	      Konva.Container.prototype.destroy.call(this);

	      if (content && Konva.Util._isInDocument(content)) {
	        this.getContainer().removeChild(content);
	      }
	      var index = Konva.stages.indexOf(this);
	      if (index > -1) {
	        Konva.stages.splice(index, 1);
	      }
	      return this;
	    },
	    /**
	         * get pointer position which can be a touch position or mouse position
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @returns {Object}
	         */
	    getPointerPosition: function() {
	      return this.pointerPos;
	    },
	    getStage: function() {
	      return this;
	    },
	    /**
	         * get stage content div element which has the
	         *  the class name "konvajs-content"
	         * @method
	         * @memberof Konva.Stage.prototype
	         */
	    getContent: function() {
	      return this.content;
	    },
	    /**
	         * Creates a composite data URL
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @param {Object} config
	         * @param {Function} [config.callback] function executed when the composite has completed. Deprecated as method is sync now.
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         */
	    toDataURL: function(config) {
	      config = config || {};

	      var mimeType = config.mimeType || null,
	        quality = config.quality || null,
	        x = config.x || 0,
	        y = config.y || 0,
	        canvas = new Konva.SceneCanvas({
	          width: config.width || this.getWidth(),
	          height: config.height || this.getHeight(),
	          pixelRatio: config.pixelRatio
	        }),
	        _context = canvas.getContext()._context,
	        layers = this.children;

	      if (x || y) {
	        _context.translate(-1 * x, -1 * y);
	      }

	      layers.each(function(layer) {
	        var width = layer.getCanvas().getWidth();
	        var height = layer.getCanvas().getHeight();
	        var ratio = layer.getCanvas().getPixelRatio();
	        _context.drawImage(
	          layer.getCanvas()._canvas,
	          0,
	          0,
	          width / ratio,
	          height / ratio
	        );
	      });
	      var src = canvas.toDataURL(mimeType, quality);

	      if (config.callback) {
	        config.callback(src);
	      }

	      return src;
	    },
	    /**
	         * converts stage into an image.
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @param {Object} config
	         * @param {Function} config.callback function executed when the composite has completed
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         */
	    toImage: function(config) {
	      var cb = config.callback;

	      config.callback = function(dataUrl) {
	        Konva.Util._getImage(dataUrl, function(img) {
	          cb(img);
	        });
	      };
	      this.toDataURL(config);
	    },
	    /**
	         * get visible intersection shape. This is the preferred
	         *  method for determining if a point intersects a shape or not
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @param {String} [selector]
	         * @returns {Konva.Node}
	         * @example
	         * var shape = stage.getIntersection({x: 50, y: 50});
	         * // or if you interested in shape parent:
	         * var group = stage.getIntersection({x: 50, y: 50}, 'Group');
	         */
	    getIntersection: function(pos, selector) {
	      var layers = this.getChildren(),
	        len = layers.length,
	        end = len - 1,
	        n,
	        shape;

	      for (n = end; n >= 0; n--) {
	        shape = layers[n].getIntersection(pos, selector);
	        if (shape) {
	          return shape;
	        }
	      }

	      return null;
	    },
	    _resizeDOM: function() {
	      if (this.content) {
	        var width = this.getWidth(),
	          height = this.getHeight(),
	          layers = this.getChildren(),
	          len = layers.length,
	          n,
	          layer;

	        // set content dimensions
	        this.content.style.width = width + PX;
	        this.content.style.height = height + PX;

	        this.bufferCanvas.setSize(width, height);
	        this.bufferHitCanvas.setSize(width, height);

	        // set layer dimensions
	        for (n = 0; n < len; n++) {
	          layer = layers[n];
	          layer.setSize(width, height);
	          layer.draw();
	        }
	      }
	    },
	    /**
	         * add layer or layers to stage
	         * @method
	         * @memberof Konva.Stage.prototype
	         * @param {...Konva.Layer} layer
	         * @example
	         * stage.add(layer1, layer2, layer3);
	         */
	    add: function(layer) {
	      if (arguments.length > 1) {
	        for (var i = 0; i < arguments.length; i++) {
	          this.add(arguments[i]);
	        }
	        return this;
	      }
	      Konva.Container.prototype.add.call(this, layer);
	      layer._setCanvasSize(this.width(), this.height());

	      // draw layer and append canvas to container
	      layer.draw();

	      if (Konva.isBrowser) {
	        this.content.appendChild(layer.canvas._canvas);
	      }

	      // chainable
	      return this;
	    },
	    getParent: function() {
	      return null;
	    },
	    getLayer: function() {
	      return null;
	    },
	    /**
	         * returns a {@link Konva.Collection} of layers
	         * @method
	         * @memberof Konva.Stage.prototype
	         */
	    getLayers: function() {
	      return this.getChildren();
	    },
	    _bindContentEvents: function() {
	      if (!Konva.isBrowser) {
	        return;
	      }
	      for (var n = 0; n < eventsLength; n++) {
	        addEvent(this, EVENTS[n]);
	      }
	    },
	    _mouseover: function(evt) {
	      if (!Konva.UA.mobile) {
	        this._setPointerPosition(evt);
	        this._fire(CONTENT_MOUSEOVER, { evt: evt });
	      }
	    },
	    _mouseout: function(evt) {
	      if (!Konva.UA.mobile) {
	        this._setPointerPosition(evt);
	        var targetShape = this.targetShape;

	        if (targetShape && !Konva.isDragging()) {
	          targetShape._fireAndBubble(MOUSEOUT, { evt: evt });
	          targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });
	          this.targetShape = null;
	        }
	        this.pointerPos = undefined;

	        this._fire(CONTENT_MOUSEOUT, { evt: evt });
	      }
	    },
	    _mousemove: function(evt) {
	      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event
	      if (Konva.UA.ieMobile) {
	        return this._touchmove(evt);
	      }
	      // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464
	      if (
	        (typeof evt.movementX !== 'undefined' ||
	          typeof evt.movementY !== 'undefined') &&
	        evt.movementY === 0 &&
	        evt.movementX === 0
	      ) {
	        return null;
	      }
	      if (Konva.UA.mobile) {
	        return null;
	      }
	      this._setPointerPosition(evt);
	      var shape;

	      if (!Konva.isDragging()) {
	        shape = this.getIntersection(this.getPointerPosition());
	        if (shape && shape.isListening()) {
	          if (
	            !Konva.isDragging() &&
	            (!this.targetShape || this.targetShape._id !== shape._id)
	          ) {
	            if (this.targetShape) {
	              this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt }, shape);
	              this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt }, shape);
	            }
	            shape._fireAndBubble(MOUSEOVER, { evt: evt }, this.targetShape);
	            shape._fireAndBubble(MOUSEENTER, { evt: evt }, this.targetShape);
	            this.targetShape = shape;
	          } else {
	            shape._fireAndBubble(MOUSEMOVE, { evt: evt });
	          }
	        } else {
	          /*
	                 * if no shape was detected, clear target shape and try
	                 * to run mouseout from previous target shape
	                 */
	          if (this.targetShape && !Konva.isDragging()) {
	            this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt });
	            this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });
	            this.targetShape = null;
	          }
	        }

	        // content event
	        this._fire(CONTENT_MOUSEMOVE, { evt: evt });
	      }

	      // always call preventDefault for desktop events because some browsers
	      // try to drag and drop the canvas element
	      if (evt.preventDefault) {
	        evt.preventDefault();
	      }
	    },
	    _mousedown: function(evt) {
	      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event
	      if (Konva.UA.ieMobile) {
	        return this._touchstart(evt);
	      }
	      if (!Konva.UA.mobile) {
	        this._setPointerPosition(evt);
	        var shape = this.getIntersection(this.getPointerPosition());

	        Konva.listenClickTap = true;

	        if (shape && shape.isListening()) {
	          this.clickStartShape = shape;
	          shape._fireAndBubble(MOUSEDOWN, { evt: evt });
	        }

	        // content event
	        this._fire(CONTENT_MOUSEDOWN, { evt: evt });
	      }

	      // always call preventDefault for desktop events because some browsers
	      // try to drag and drop the canvas element
	      if (evt.preventDefault) {
	        evt.preventDefault();
	      }
	    },
	    _mouseup: function(evt) {
	      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event
	      if (Konva.UA.ieMobile) {
	        return this._touchend(evt);
	      }
	      if (!Konva.UA.mobile) {
	        this._setPointerPosition(evt);
	        var shape = this.getIntersection(this.getPointerPosition()),
	          clickStartShape = this.clickStartShape,
	          clickEndShape = this.clickEndShape,
	          fireDblClick = false,
	          dd = Konva.DD;

	        if (Konva.inDblClickWindow) {
	          fireDblClick = true;
	          Konva.inDblClickWindow = false;
	        } else if (!dd || !dd.justDragged) {
	          // don't set inDblClickWindow after dragging
	          Konva.inDblClickWindow = true;
	        } else if (dd) {
	          dd.justDragged = false;
	        }

	        setTimeout(function() {
	          Konva.inDblClickWindow = false;
	        }, Konva.dblClickWindow);

	        if (shape && shape.isListening()) {
	          this.clickEndShape = shape;
	          shape._fireAndBubble(MOUSEUP, { evt: evt });

	          // detect if click or double click occurred
	          if (
	            Konva.listenClickTap &&
	            clickStartShape &&
	            clickStartShape._id === shape._id
	          ) {
	            shape._fireAndBubble(CLICK, { evt: evt });

	            if (
	              fireDblClick &&
	              clickEndShape &&
	              clickEndShape._id === shape._id
	            ) {
	              shape._fireAndBubble(DBL_CLICK, { evt: evt });
	            }
	          }
	        }
	        // content events
	        this._fire(CONTENT_MOUSEUP, { evt: evt });
	        if (Konva.listenClickTap) {
	          this._fire(CONTENT_CLICK, { evt: evt });
	          if (fireDblClick) {
	            this._fire(CONTENT_DBL_CLICK, { evt: evt });
	          }
	        }

	        Konva.listenClickTap = false;
	      }

	      // always call preventDefault for desktop events because some browsers
	      // try to drag and drop the canvas element
	      if (evt.preventDefault) {
	        evt.preventDefault();
	      }
	    },
	    _contextmenu: function(evt) {
	      this._fire(CONTENT_CONTEXTMENU, { evt: evt });
	    },
	    _touchstart: function(evt) {
	      this._setPointerPosition(evt);
	      var shape = this.getIntersection(this.getPointerPosition());

	      Konva.listenClickTap = true;

	      if (shape && shape.isListening()) {
	        this.tapStartShape = shape;
	        shape._fireAndBubble(TOUCHSTART, { evt: evt });

	        // only call preventDefault if the shape is listening for events
	        if (
	          shape.isListening() &&
	          shape.preventDefault() &&
	          evt.preventDefault
	        ) {
	          evt.preventDefault();
	        }
	      }
	      // content event
	      this._fire(CONTENT_TOUCHSTART, { evt: evt });
	    },
	    _touchend: function(evt) {
	      this._setPointerPosition(evt);
	      var shape = this.getIntersection(this.getPointerPosition()),
	        fireDblClick = false;

	      if (Konva.inDblClickWindow) {
	        fireDblClick = true;
	        Konva.inDblClickWindow = false;
	      } else {
	        Konva.inDblClickWindow = true;
	      }

	      setTimeout(function() {
	        Konva.inDblClickWindow = false;
	      }, Konva.dblClickWindow);

	      if (shape && shape.isListening()) {
	        shape._fireAndBubble(TOUCHEND, { evt: evt });

	        // detect if tap or double tap occurred
	        if (
	          Konva.listenClickTap &&
	          this.tapStartShape &&
	          shape._id === this.tapStartShape._id
	        ) {
	          shape._fireAndBubble(TAP, { evt: evt });

	          if (fireDblClick) {
	            shape._fireAndBubble(DBL_TAP, { evt: evt });
	          }
	        }
	        // only call preventDefault if the shape is listening for events
	        if (
	          shape.isListening() &&
	          shape.preventDefault() &&
	          evt.preventDefault
	        ) {
	          evt.preventDefault();
	        }
	      }
	      // content events
	      this._fire(CONTENT_TOUCHEND, { evt: evt });
	      if (Konva.listenClickTap) {
	        this._fire(CONTENT_TAP, { evt: evt });
	        if (fireDblClick) {
	          this._fire(CONTENT_DBL_TAP, { evt: evt });
	        }
	      }

	      Konva.listenClickTap = false;
	    },
	    _touchmove: function(evt) {
	      this._setPointerPosition(evt);
	      var dd = Konva.DD,
	        shape;
	      if (!Konva.isDragging()) {
	        shape = this.getIntersection(this.getPointerPosition());
	        if (shape && shape.isListening()) {
	          shape._fireAndBubble(TOUCHMOVE, { evt: evt });
	          // only call preventDefault if the shape is listening for events
	          if (
	            shape.isListening() &&
	            shape.preventDefault() &&
	            evt.preventDefault
	          ) {
	            evt.preventDefault();
	          }
	        }
	        this._fire(CONTENT_TOUCHMOVE, { evt: evt });
	      }
	      if (dd) {
	        if (Konva.isDragging() && Konva.DD.node.preventDefault()) {
	          evt.preventDefault();
	        }
	      }
	    },
	    _wheel: function(evt) {
	      this._setPointerPosition(evt);
	      var shape = this.getIntersection(this.getPointerPosition());

	      if (shape && shape.isListening()) {
	        shape._fireAndBubble(WHEEL, { evt: evt });
	      }
	      this._fire(CONTENT_WHEEL, { evt: evt });
	    },
	    _setPointerPosition: function(evt) {
	      var contentPosition = this._getContentPosition(),
	        x = null,
	        y = null;
	      evt = evt ? evt : window.event;

	      // touch events
	      if (evt.touches !== undefined) {
	        // currently, only handle one finger
	        if (evt.touches.length > 0) {
	          var touch = evt.touches[0];
	          // get the information for finger #1
	          x = touch.clientX - contentPosition.left;
	          y = touch.clientY - contentPosition.top;
	        }
	      } else {
	        // mouse events
	        x = evt.clientX - contentPosition.left;
	        y = evt.clientY - contentPosition.top;
	      }
	      if (x !== null && y !== null) {
	        this.pointerPos = {
	          x: x,
	          y: y
	        };
	      }
	    },
	    _getContentPosition: function() {
	      var rect = this.content.getBoundingClientRect
	        ? this.content.getBoundingClientRect()
	        : { top: 0, left: 0 };
	      return {
	        top: rect.top,
	        left: rect.left
	      };
	    },
	    _buildDOM: function() {
	      // the buffer canvas pixel ratio must be 1 because it is used as an
	      // intermediate canvas before copying the result onto a scene canvas.
	      // not setting it to 1 will result in an over compensation
	      this.bufferCanvas = new Konva.SceneCanvas();
	      this.bufferHitCanvas = new Konva.HitCanvas({ pixelRatio: 1 });

	      if (!Konva.isBrowser) {
	        return;
	      }
	      var container = this.getContainer();
	      if (!container) {
	        throw 'Stage has no container. A container is required.';
	      }
	      // clear content inside container
	      container.innerHTML = EMPTY_STRING;

	      // content
	      this.content = Konva.document.createElement(DIV);
	      this.content.style.position = RELATIVE;
	      this.content.className = KONVA_CONTENT;
	      this.content.setAttribute('role', 'presentation');

	      container.appendChild(this.content);

	      this._resizeDOM();
	    },
	    _onContent: function(typesStr, handler) {
	      var types = typesStr.split(SPACE),
	        len = types.length,
	        n,
	        baseEvent;

	      for (n = 0; n < len; n++) {
	        baseEvent = types[n];
	        this.content.addEventListener(baseEvent, handler, false);
	      }
	    },
	    // currently cache function is now working for stage, because stage has no its own canvas element
	    // TODO: may be it is better to cache all children layers?
	    cache: function() {
	      Konva.Util.warn(
	        'Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.'
	      );
	    },
	    clearCache: function() {}
	  });
	  Konva.Util.extend(Konva.Stage, Konva.Container);

	  // add getters and setters
	  Konva.Factory.addGetter(Konva.Stage, 'container');
	  Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');

	  /**
	     * get container DOM element
	     * @name container
	     * @method
	     * @memberof Konva.Stage.prototype
	     * @returns {DomElement} container
	     * @example
	     * // get container
	     * var container = stage.container();
	     * // set container
	     * var container = document.createElement('div');
	     * body.appendChild(container);
	     * stage.container(container);
	     */
	})();

	(function(Konva) {
	  'use strict';
	  /**
	     * BaseLayer constructor.
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Container
	     * @param {Object} config
	     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want
	     * to clear the canvas before each layer draw.  The default value is true.
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height
	     * @param {Function} [config.clipFunc] set clip func

	     */
	  Konva.BaseLayer = function(config) {
	    this.___init(config);
	  };

	  Konva.Util.addMethods(Konva.BaseLayer, {
	    ___init: function(config) {
	      this.nodeType = 'Layer';
	      Konva.Container.call(this, config);
	    },
	    createPNGStream: function() {
	      return this.canvas._canvas.createPNGStream();
	    },
	    /**
	     * get layer canvas
	     * @method
	     * @memberof Konva.BaseLayer.prototype
	     */
	    getCanvas: function() {
	      return this.canvas;
	    },
	    /**
	     * get layer hit canvas
	     * @method
	     * @memberof Konva.BaseLayer.prototype
	     */
	    getHitCanvas: function() {
	      return this.hitCanvas;
	    },
	    /**
	     * get layer canvas context
	     * @method
	     * @memberof Konva.BaseLayer.prototype
	     */
	    getContext: function() {
	      return this.getCanvas().getContext();
	    },
	    /**
	     * clear scene and hit canvas contexts tied to the layer
	     * @method
	     * @memberof Konva.BaseLayer.prototype
	     * @param {Object} [bounds]
	     * @param {Number} [bounds.x]
	     * @param {Number} [bounds.y]
	     * @param {Number} [bounds.width]
	     * @param {Number} [bounds.height]
	     * @example
	     * layer.clear();
	     * layer.clear({
	     *   x : 0,
	     *   y : 0,
	     *   width : 100,
	     *   height : 100
	     * });
	     */
	    clear: function(bounds) {
	      this.getContext().clear(bounds);
	      return this;
	    },
	    clearHitCache: function() {
	      this._hitImageData = undefined;
	    },
	    // extend Node.prototype.setZIndex
	    setZIndex: function(index) {
	      Konva.Node.prototype.setZIndex.call(this, index);
	      var stage = this.getStage();
	      if (stage) {
	        stage.content.removeChild(this.getCanvas()._canvas);

	        if (index < stage.getChildren().length - 1) {
	          stage.content.insertBefore(
	            this.getCanvas()._canvas,
	            stage.getChildren()[index + 1].getCanvas()._canvas
	          );
	        } else {
	          stage.content.appendChild(this.getCanvas()._canvas);
	        }
	      }
	      return this;
	    },
	    // extend Node.prototype.moveToTop
	    moveToTop: function() {
	      Konva.Node.prototype.moveToTop.call(this);
	      var stage = this.getStage();
	      if (stage) {
	        stage.content.removeChild(this.getCanvas()._canvas);
	        stage.content.appendChild(this.getCanvas()._canvas);
	      }
	      return this;
	    },
	    // extend Node.prototype.moveUp
	    moveUp: function() {
	      var moved = Konva.Node.prototype.moveUp.call(this);
	      if (!moved) {
	        return this;
	      }
	      var stage = this.getStage();
	      if (!stage) {
	        return this;
	      }
	      stage.content.removeChild(this.getCanvas()._canvas);

	      if (this.index < stage.getChildren().length - 1) {
	        stage.content.insertBefore(
	          this.getCanvas()._canvas,
	          stage.getChildren()[this.index + 1].getCanvas()._canvas
	        );
	      } else {
	        stage.content.appendChild(this.getCanvas()._canvas);
	      }
	      return this;
	    },
	    // extend Node.prototype.moveDown
	    moveDown: function() {
	      if (Konva.Node.prototype.moveDown.call(this)) {
	        var stage = this.getStage();
	        if (stage) {
	          var children = stage.getChildren();
	          stage.content.removeChild(this.getCanvas()._canvas);
	          stage.content.insertBefore(
	            this.getCanvas()._canvas,
	            children[this.index + 1].getCanvas()._canvas
	          );
	        }
	      }
	      return this;
	    },
	    // extend Node.prototype.moveToBottom
	    moveToBottom: function() {
	      if (Konva.Node.prototype.moveToBottom.call(this)) {
	        var stage = this.getStage();
	        if (stage) {
	          var children = stage.getChildren();
	          stage.content.removeChild(this.getCanvas()._canvas);
	          stage.content.insertBefore(
	            this.getCanvas()._canvas,
	            children[1].getCanvas()._canvas
	          );
	        }
	      }
	      return this;
	    },
	    getLayer: function() {
	      return this;
	    },
	    remove: function() {
	      var _canvas = this.getCanvas()._canvas;

	      Konva.Node.prototype.remove.call(this);

	      if (_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {
	        _canvas.parentNode.removeChild(_canvas);
	      }
	      return this;
	    },
	    getStage: function() {
	      return this.parent;
	    },
	    setSize: function(width, height) {
	      this.canvas.setSize(width, height);
	      return this;
	    },
	    /**
	     * get/set width of layer.getter return width of stage. setter doing nothing.
	     * if you want change width use `stage.width(value);`
	     * @name width
	     * @method
	     * @memberof Konva.BaseLayer.prototype
	     * @returns {Number}
	     * @example
	     * var width = layer.width();
	     */
	    getWidth: function() {
	      if (this.parent) {
	        return this.parent.getWidth();
	      }
	    },
	    setWidth: function() {
	      Konva.Util.warn(
	        'Can not change width of layer. Use "stage.width(value)" function instead.'
	      );
	    },
	    /**
	     * get/set height of layer.getter return height of stage. setter doing nothing.
	     * if you want change height use `stage.height(value);`
	     * @name height
	     * @method
	     * @memberof Konva.BaseLayer.prototype
	     * @returns {Number}
	     * @example
	     * var height = layer.height();
	     */
	    getHeight: function() {
	      if (this.parent) {
	        return this.parent.getHeight();
	      }
	    },
	    setHeight: function() {
	      Konva.Util.warn(
	        'Can not change height of layer. Use "stage.height(value)" function instead.'
	      );
	    },
	    // the apply transform method is handled by the Layer and FastLayer class
	    // because it is up to the layer to decide if an absolute or relative transform
	    // should be used
	    _applyTransform: function(shape, context, top) {
	      var m = shape.getAbsoluteTransform(top).getMatrix();
	      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	    }
	  });
	  Konva.Util.extend(Konva.BaseLayer, Konva.Container);

	  // add getters and setters
	  Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);
	  /**
	   * get/set clearBeforeDraw flag which determines if the layer is cleared or not
	   *  before drawing
	   * @name clearBeforeDraw
	   * @method
	   * @memberof Konva.BaseLayer.prototype
	   * @param {Boolean} clearBeforeDraw
	   * @returns {Boolean}
	   * @example
	   * // get clearBeforeDraw flag
	   * var clearBeforeDraw = layer.clearBeforeDraw();
	   *
	   * // disable clear before draw
	   * layer.clearBeforeDraw(false);
	   *
	   * // enable clear before draw
	   * layer.clearBeforeDraw(true);
	   */

	  Konva.Collection.mapMethods(Konva.BaseLayer);
	})(Konva);

	(function() {
	  'use strict';
	  // constants
	  var HASH = '#',
	    BEFORE_DRAW = 'beforeDraw',
	    DRAW = 'draw',
	    /*
	         * 2 - 3 - 4
	         * |       |
	         * 1 - 0   5
	         *         |
	         * 8 - 7 - 6
	         */
	    INTERSECTION_OFFSETS = [
	      { x: 0, y: 0 }, // 0
	      { x: -1, y: 0 }, // 1
	      { x: -1, y: -1 }, // 2
	      { x: 0, y: -1 }, // 3
	      { x: 1, y: -1 }, // 4
	      { x: 1, y: 0 }, // 5
	      { x: 1, y: 1 }, // 6
	      { x: 0, y: 1 }, // 7
	      { x: -1, y: 1 } // 8
	    ],
	    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;

	  /**
	     * Layer constructor.  Layers are tied to their own canvas element and are used
	     * to contain groups or shapes.
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.BaseLayer
	     * @param {Object} config
	     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want
	     * to clear the canvas before each layer draw.  The default value is true.
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height
	     * @param {Function} [config.clipFunc] set clip func

	     * @example
	     * var layer = new Konva.Layer();
	     */
	  Konva.Layer = function(config) {
	    this.____init(config);
	  };

	  Konva.Util.addMethods(Konva.Layer, {
	    ____init: function(config) {
	      this.nodeType = 'Layer';
	      this.canvas = new Konva.SceneCanvas();
	      this.hitCanvas = new Konva.HitCanvas({
	        pixelRatio: 1
	      });
	      // call super constructor
	      Konva.BaseLayer.call(this, config);
	    },
	    _setCanvasSize: function(width, height) {
	      this.canvas.setSize(width, height);
	      this.hitCanvas.setSize(width, height);
	    },
	    _validateAdd: function(child) {
	      var type = child.getType();
	      if (type !== 'Group' && type !== 'Shape') {
	        Konva.Util.throw('You may only add groups and shapes to a layer.');
	      }
	    },
	    /**
	         * get visible intersection shape. This is the preferred
	         * method for determining if a point intersects a shape or not
	         * also you may pass optional selector parametr to return ancestor of intersected shape
	         * @method
	         * @memberof Konva.Layer.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @param {String} [selector]
	         * @returns {Konva.Node}
	         * @example
	         * var shape = layer.getIntersection({x: 50, y: 50});
	         * // or if you interested in shape parent:
	         * var group = layer.getIntersection({x: 50, y: 50}, 'Group');
	         */
	    getIntersection: function(pos, selector) {
	      var obj, i, intersectionOffset, shape;

	      if (!this.hitGraphEnabled() || !this.isVisible()) {
	        return null;
	      }
	      // in some cases antialiased area may be bigger than 1px
	      // it is possible if we will cache node, then scale it a lot
	      // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.
	      var spiralSearchDistance = 1;
	      var continueSearch = false;
	      while (true) {
	        for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {
	          intersectionOffset = INTERSECTION_OFFSETS[i];
	          obj = this._getIntersection({
	            x: pos.x + intersectionOffset.x * spiralSearchDistance,
	            y: pos.y + intersectionOffset.y * spiralSearchDistance
	          });
	          shape = obj.shape;
	          if (shape && selector) {
	            return shape.findAncestor(selector, true);
	          } else if (shape) {
	            return shape;
	          }
	          // we should continue search if we found antialiased pixel
	          // that means our node somewhere very close
	          continueSearch = !!obj.antialiased;
	          // stop search if found empty pixel
	          if (!obj.antialiased) {
	            break;
	          }
	        }
	        // if no shape, and no antialiased pixel, we should end searching
	        if (continueSearch) {
	          spiralSearchDistance += 1;
	        } else {
	          return null;
	        }
	      }
	    },
	    _getImageData: function(x, y) {
	      var width = this.hitCanvas.width || 1,
	        height = this.hitCanvas.height || 1,
	        index = Math.round(y) * width + Math.round(x);

	      if (!this._hitImageData) {
	        this._hitImageData = this.hitCanvas.context.getImageData(
	          0,
	          0,
	          width,
	          height
	        );
	      }

	      return [
	        this._hitImageData.data[4 * index + 0], // Red
	        this._hitImageData.data[4 * index + 1], // Green
	        this._hitImageData.data[4 * index + 2], // Blue
	        this._hitImageData.data[4 * index + 3] // Alpha
	      ];
	    },
	    _getIntersection: function(pos) {
	      var ratio = this.hitCanvas.pixelRatio;
	      var p = this.hitCanvas.context.getImageData(
	        Math.round(pos.x * ratio),
	        Math.round(pos.y * ratio),
	        1,
	        1
	      ).data,
	        p3 = p[3],
	        colorKey,
	        shape;
	      // fully opaque pixel
	      if (p3 === 255) {
	        colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);
	        shape = Konva.shapes[HASH + colorKey];
	        if (shape) {
	          return {
	            shape: shape
	          };
	        }
	        return {
	          antialiased: true
	        };
	      } else if (p3 > 0) {
	        // antialiased pixel
	        return {
	          antialiased: true
	        };
	      }
	      // empty pixel
	      return {};
	    },
	    drawScene: function(can, top) {
	      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());

	      this._fire(BEFORE_DRAW, {
	        node: this
	      });

	      if (this.getClearBeforeDraw()) {
	        canvas.getContext().clear();
	      }

	      Konva.Container.prototype.drawScene.call(this, canvas, top);

	      this._fire(DRAW, {
	        node: this
	      });

	      return this;
	    },
	    drawHit: function(can, top) {
	      var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);

	      if (layer && layer.getClearBeforeDraw()) {
	        layer.getHitCanvas().getContext().clear();
	      }

	      Konva.Container.prototype.drawHit.call(this, canvas, top);
	      this.imageData = null; // Clear imageData cache
	      return this;
	    },
	    clear: function(bounds) {
	      Konva.BaseLayer.prototype.clear.call(this, bounds);
	      this.getHitCanvas().getContext().clear(bounds);
	      this.imageData = null; // Clear getImageData cache
	      return this;
	    },
	    // extend Node.prototype.setVisible
	    setVisible: function(visible) {
	      Konva.Node.prototype.setVisible.call(this, visible);
	      if (visible) {
	        this.getCanvas()._canvas.style.display = 'block';
	        this.hitCanvas._canvas.style.display = 'block';
	      } else {
	        this.getCanvas()._canvas.style.display = 'none';
	        this.hitCanvas._canvas.style.display = 'none';
	      }
	      return this;
	    },
	    /**
	         * enable hit graph
	         * @name enableHitGraph
	         * @method
	         * @memberof Konva.Layer.prototype
	         * @returns {Layer}
	         */
	    enableHitGraph: function() {
	      this.setHitGraphEnabled(true);
	      return this;
	    },
	    /**
	         * disable hit graph
	         * @name disableHitGraph
	         * @method
	         * @memberof Konva.Layer.prototype
	         * @returns {Layer}
	         */
	    disableHitGraph: function() {
	      this.setHitGraphEnabled(false);
	      return this;
	    },
	    setSize: function(width, height) {
	      Konva.BaseLayer.prototype.setSize.call(this, width, height);
	      this.hitCanvas.setSize(width, height);
	      return this;
	    }
	  });
	  Konva.Util.extend(Konva.Layer, Konva.BaseLayer);

	  Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);
	  /**
	     * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase
	     *  draw performance because the hit graph will not be redrawn each time the layer is
	     *  drawn.  This, however, also disables mouse/touch event detection
	     * @name hitGraphEnabled
	     * @method
	     * @memberof Konva.Layer.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get hitGraphEnabled flag
	     * var hitGraphEnabled = layer.hitGraphEnabled();
	     *
	     * // disable hit graph
	     * layer.hitGraphEnabled(false);
	     *
	     * // enable hit graph
	     * layer.hitGraphEnabled(true);
	     */
	  Konva.Collection.mapMethods(Konva.Layer);
	})();

	(function() {
	  'use strict';
	  /**
	     * FastLayer constructor. Layers are tied to their own canvas element and are used
	     * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,
	     * or event pub/sub, you should use FastLayer instead of Layer to create your layers.
	     * It renders about 2x faster than normal layers.
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.BaseLayer
	     * @param {Object} config
	     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want
	     * to clear the canvas before each layer draw.  The default value is true.
	     * @param {Boolean} [config.visible]
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height
	     * @param {Function} [config.clipFunc] set clip func

	     * @example
	     * var layer = new Konva.FastLayer();
	     */
	  Konva.FastLayer = function(config) {
	    this.____init(config);
	  };

	  Konva.Util.addMethods(Konva.FastLayer, {
	    ____init: function(config) {
	      this.nodeType = 'Layer';
	      this.canvas = new Konva.SceneCanvas();
	      // call super constructor
	      Konva.BaseLayer.call(this, config);
	    },
	    _validateAdd: function(child) {
	      var type = child.getType();
	      if (type !== 'Shape') {
	        Konva.Util.throw('You may only add shapes to a fast layer.');
	      }
	    },
	    _setCanvasSize: function(width, height) {
	      this.canvas.setSize(width, height);
	    },
	    hitGraphEnabled: function() {
	      return false;
	    },
	    getIntersection: function() {
	      return null;
	    },
	    drawScene: function(can) {
	      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());

	      if (this.getClearBeforeDraw()) {
	        canvas.getContext().clear();
	      }

	      Konva.Container.prototype.drawScene.call(this, canvas);

	      return this;
	    },
	    draw: function() {
	      this.drawScene();
	      return this;
	    },
	    // extend Node.prototype.setVisible
	    setVisible: function(visible) {
	      Konva.Node.prototype.setVisible.call(this, visible);
	      if (visible) {
	        this.getCanvas()._canvas.style.display = 'block';
	      } else {
	        this.getCanvas()._canvas.style.display = 'none';
	      }
	      return this;
	    }
	  });
	  Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);

	  Konva.Collection.mapMethods(Konva.FastLayer);
	})();

	(function() {
	  'use strict';
	  /**
	     * Group constructor.  Groups are used to contain shapes or other groups.
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Container
	     * @param {Object} config
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height
	     * @param {Function} [config.clipFunc] set clip func

	     * @example
	     * var group = new Konva.Group();
	     */
	  Konva.Group = function(config) {
	    this.___init(config);
	  };

	  Konva.Util.addMethods(Konva.Group, {
	    ___init: function(config) {
	      this.nodeType = 'Group';
	      // call super constructor
	      Konva.Container.call(this, config);
	    },
	    _validateAdd: function(child) {
	      var type = child.getType();
	      if (type !== 'Group' && type !== 'Shape') {
	        Konva.Util.throw('You may only add groups and shapes to groups.');
	      }
	    }
	  });
	  Konva.Util.extend(Konva.Group, Konva.Container);

	  Konva.Collection.mapMethods(Konva.Group);
	})();

	(function(Konva) {
	  'use strict';
	  var now = (function() {
	    if (Konva.global.performance && Konva.global.performance.now) {
	      return function() {
	        return Konva.global.performance.now();
	      };
	    }

	    return function() {
	      return new Date().getTime();
	    };
	  })();

	  function FRAF(callback) {
	    setTimeout(callback, 1000 / 60);
	  }

	  var RAF = (function() {
	    return (
	      Konva.global.requestAnimationFrame ||
	      Konva.global.webkitRequestAnimationFrame ||
	      Konva.global.mozRequestAnimationFrame ||
	      Konva.global.oRequestAnimationFrame ||
	      Konva.global.msRequestAnimationFrame ||
	      FRAF
	    );
	  })();

	  function requestAnimFrame() {
	    return RAF.apply(Konva.global, arguments);
	  }

	  /**
	     * Animation constructor.  A stage is used to contain multiple layers and handle
	     * @constructor
	     * @memberof Konva
	     * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains
	     *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed
	     *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started
	     *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started
	     *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,
	     *  if you don't need to redraw layer/layers on some frames.
	     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.
	     *  Not specifying a node will result in no redraw.
	     * @example
	     * // move a node to the right at 50 pixels / second
	     * var velocity = 50;
	     *
	     * var anim = new Konva.Animation(function(frame) {
	     *   var dist = velocity * (frame.timeDiff / 1000);
	     *   node.move(dist, 0);
	     * }, layer);
	     *
	     * anim.start();
	     */
	  Konva.Animation = function(func, layers) {
	    var Anim = Konva.Animation;
	    this.func = func;
	    this.setLayers(layers);
	    this.id = Anim.animIdCounter++;
	    this.frame = {
	      time: 0,
	      timeDiff: 0,
	      lastTime: now()
	    };
	  };
	  /*
	     * Animation methods
	     */
	  Konva.Animation.prototype = {
	    /**
	         * set layers to be redrawn on each animation frame
	         * @method
	         * @memberof Konva.Animation.prototype
	         * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.
	         * @return {Konva.Animation} this
	         */
	    setLayers: function(layers) {
	      var lays = [];
	      // if passing in no layers
	      if (!layers) {
	        lays = [];
	      } else if (layers.length > 0) {
	        // if passing in an array of Layers
	        // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting
	        // the length property to check for both cases
	        lays = layers;
	      } else {
	        // if passing in a Layer
	        lays = [layers];
	      }

	      this.layers = lays;
	      return this;
	    },
	    /**
	         * get layers
	         * @method
	         * @memberof Konva.Animation.prototype
	         * @return {Array} Array of Konva.Layer
	         */
	    getLayers: function() {
	      return this.layers;
	    },
	    /**
	         * add layer.  Returns true if the layer was added, and false if it was not
	         * @method
	         * @memberof Konva.Animation.prototype
	         * @param {Konva.Layer} layer to add
	         * @return {Bool} true if layer is added to animation, otherwise false
	         */
	    addLayer: function(layer) {
	      var layers = this.layers, len = layers.length, n;

	      // don't add the layer if it already exists
	      for (n = 0; n < len; n++) {
	        if (layers[n]._id === layer._id) {
	          return false;
	        }
	      }

	      this.layers.push(layer);
	      return true;
	    },
	    /**
	         * determine if animation is running or not.  returns true or false
	         * @method
	         * @memberof Konva.Animation.prototype
	         * @return {Bool} is animation running?
	         */
	    isRunning: function() {
	      var a = Konva.Animation,
	        animations = a.animations,
	        len = animations.length,
	        n;

	      for (n = 0; n < len; n++) {
	        if (animations[n].id === this.id) {
	          return true;
	        }
	      }
	      return false;
	    },
	    /**
	         * start animation
	         * @method
	         * @memberof Konva.Animation.prototype
	         * @return {Konva.Animation} this
	         */
	    start: function() {
	      var Anim = Konva.Animation;
	      this.stop();
	      this.frame.timeDiff = 0;
	      this.frame.lastTime = now();
	      Anim._addAnimation(this);
	      return this;
	    },
	    /**
	         * stop animation
	         * @method
	         * @memberof Konva.Animation.prototype
	         * @return {Konva.Animation} this
	         */
	    stop: function() {
	      Konva.Animation._removeAnimation(this);
	      return this;
	    },
	    _updateFrameObject: function(time) {
	      this.frame.timeDiff = time - this.frame.lastTime;
	      this.frame.lastTime = time;
	      this.frame.time += this.frame.timeDiff;
	      this.frame.frameRate = 1000 / this.frame.timeDiff;
	    }
	  };
	  Konva.Animation.animations = [];
	  Konva.Animation.animIdCounter = 0;
	  Konva.Animation.animRunning = false;

	  Konva.Animation._addAnimation = function(anim) {
	    this.animations.push(anim);
	    this._handleAnimation();
	  };
	  Konva.Animation._removeAnimation = function(anim) {
	    var id = anim.id, animations = this.animations, len = animations.length, n;

	    for (n = 0; n < len; n++) {
	      if (animations[n].id === id) {
	        this.animations.splice(n, 1);
	        break;
	      }
	    }
	  };

	  Konva.Animation._runFrames = function() {
	    var layerHash = {},
	      animations = this.animations,
	      anim,
	      layers,
	      func,
	      n,
	      i,
	      layersLen,
	      layer,
	      key,
	      needRedraw;
	    /*
	         * loop through all animations and execute animation
	         *  function.  if the animation object has specified node,
	         *  we can add the node to the nodes hash to eliminate
	         *  drawing the same node multiple times.  The node property
	         *  can be the stage itself or a layer
	         */
	    /*
	         * WARNING: don't cache animations.length because it could change while
	         * the for loop is running, causing a JS error
	         */

	    for (n = 0; n < animations.length; n++) {
	      anim = animations[n];
	      layers = anim.layers;
	      func = anim.func;

	      anim._updateFrameObject(now());
	      layersLen = layers.length;

	      // if animation object has a function, execute it
	      if (func) {
	        // allow anim bypassing drawing
	        needRedraw = func.call(anim, anim.frame) !== false;
	      } else {
	        needRedraw = true;
	      }
	      if (!needRedraw) {
	        continue;
	      }
	      for (i = 0; i < layersLen; i++) {
	        layer = layers[i];

	        if (layer._id !== undefined) {
	          layerHash[layer._id] = layer;
	        }
	      }
	    }

	    for (key in layerHash) {
	      if (!layerHash.hasOwnProperty(key)) {
	        continue;
	      }
	      layerHash[key].draw();
	    }
	  };
	  Konva.Animation._animationLoop = function() {
	    var Anim = Konva.Animation;
	    if (Anim.animations.length) {
	      Anim._runFrames();
	      requestAnimFrame(Anim._animationLoop);
	    } else {
	      Anim.animRunning = false;
	    }
	  };
	  Konva.Animation._handleAnimation = function() {
	    if (!this.animRunning) {
	      this.animRunning = true;
	      requestAnimFrame(this._animationLoop);
	    }
	  };

	  /**
	     * batch draw. this function will not do immediate draw
	     * but it will schedule drawing to next tick (requestAnimFrame)
	     * @method
	     * @return {Konva.Layer} this
	     * @memberof Konva.Base.prototype
	     */
	  Konva.BaseLayer.prototype.batchDraw = function() {
	    var that = this, Anim = Konva.Animation;

	    if (!this.batchAnim) {
	      this.batchAnim = new Anim(function() {
	        // stop animation after first tick
	        that.batchAnim.stop();
	      }, this);
	    }

	    if (!this.batchAnim.isRunning()) {
	      this.batchAnim.start();
	    }
	    return this;
	  };

	  /**
	     * batch draw
	     * @method
	     * @return {Konva.Stage} this
	     * @memberof Konva.Stage.prototype
	     */
	  Konva.Stage.prototype.batchDraw = function() {
	    this.getChildren().each(function(layer) {
	      layer.batchDraw();
	    });
	    return this;
	  };
	})(Konva);

	(function() {
	  'use strict';
	  var blacklist = {
	    node: 1,
	    duration: 1,
	    easing: 1,
	    onFinish: 1,
	    yoyo: 1
	  },
	    PAUSED = 1,
	    PLAYING = 2,
	    REVERSING = 3,
	    idCounter = 0,
	    colorAttrs = ['fill', 'stroke', 'shadowColor'];

	  var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {
	    this.prop = prop;
	    this.propFunc = propFunc;
	    this.begin = begin;
	    this._pos = begin;
	    this.duration = duration;
	    this._change = 0;
	    this.prevPos = 0;
	    this.yoyo = yoyo;
	    this._time = 0;
	    this._position = 0;
	    this._startTime = 0;
	    this._finish = 0;
	    this.func = func;
	    this._change = finish - this.begin;
	    this.pause();
	  };
	  /*
	     * Tween methods
	     */
	  Tween.prototype = {
	    fire: function(str) {
	      var handler = this[str];
	      if (handler) {
	        handler();
	      }
	    },
	    setTime: function(t) {
	      if (t > this.duration) {
	        if (this.yoyo) {
	          this._time = this.duration;
	          this.reverse();
	        } else {
	          this.finish();
	        }
	      } else if (t < 0) {
	        if (this.yoyo) {
	          this._time = 0;
	          this.play();
	        } else {
	          this.reset();
	        }
	      } else {
	        this._time = t;
	        this.update();
	      }
	    },
	    getTime: function() {
	      return this._time;
	    },
	    setPosition: function(p) {
	      this.prevPos = this._pos;
	      this.propFunc(p);
	      this._pos = p;
	    },
	    getPosition: function(t) {
	      if (t === undefined) {
	        t = this._time;
	      }
	      return this.func(t, this.begin, this._change, this.duration);
	    },
	    play: function() {
	      this.state = PLAYING;
	      this._startTime = this.getTimer() - this._time;
	      this.onEnterFrame();
	      this.fire('onPlay');
	    },
	    reverse: function() {
	      this.state = REVERSING;
	      this._time = this.duration - this._time;
	      this._startTime = this.getTimer() - this._time;
	      this.onEnterFrame();
	      this.fire('onReverse');
	    },
	    seek: function(t) {
	      this.pause();
	      this._time = t;
	      this.update();
	      this.fire('onSeek');
	    },
	    reset: function() {
	      this.pause();
	      this._time = 0;
	      this.update();
	      this.fire('onReset');
	    },
	    finish: function() {
	      this.pause();
	      this._time = this.duration;
	      this.update();
	      this.fire('onFinish');
	    },
	    update: function() {
	      this.setPosition(this.getPosition(this._time));
	    },
	    onEnterFrame: function() {
	      var t = this.getTimer() - this._startTime;
	      if (this.state === PLAYING) {
	        this.setTime(t);
	      } else if (this.state === REVERSING) {
	        this.setTime(this.duration - t);
	      }
	    },
	    pause: function() {
	      this.state = PAUSED;
	      this.fire('onPause');
	    },
	    getTimer: function() {
	      return new Date().getTime();
	    }
	  };

	  /**
	     * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.
	     *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using
	     *  a linear easing.  For more tweening options, check out {@link Konva.Easings}
	     * @constructor
	     * @memberof Konva
	     * @example
	     * // instantiate new tween which fully rotates a node in 1 second
	     * var tween = new Konva.Tween({
	     *   node: node,
	     *   rotationDeg: 360,
	     *   duration: 1,
	     *   easing: Konva.Easings.EaseInOut
	     * });
	     *
	     * // play tween
	     * tween.play();
	     *
	     * // pause tween
	     * tween.pause();
	     */
	  Konva.Tween = function(config) {
	    var that = this,
	      node = config.node,
	      nodeId = node._id,
	      duration,
	      easing = config.easing || Konva.Easings.Linear,
	      yoyo = !!config.yoyo,
	      key;

	    if (typeof config.duration === 'undefined') {
	      duration = 1;
	    } else if (config.duration === 0) {
	      // zero is bad value for duration
	      duration = 0.001;
	    } else {
	      duration = config.duration;
	    }
	    this.node = node;
	    this._id = idCounter++;

	    var layers =
	      node.getLayer() ||
	      (node instanceof Konva.Stage ? node.getLayers() : null);
	    if (!layers) {
	      Konva.Util.error(
	        'Tween constructor have `node` that is not in a layer. Please add node into layer first.'
	      );
	    }
	    this.anim = new Konva.Animation(function() {
	      that.tween.onEnterFrame();
	    }, layers);

	    this.tween = new Tween(
	      key,
	      function(i) {
	        that._tweenFunc(i);
	      },
	      easing,
	      0,
	      1,
	      duration * 1000,
	      yoyo
	    );

	    this._addListeners();

	    // init attrs map
	    if (!Konva.Tween.attrs[nodeId]) {
	      Konva.Tween.attrs[nodeId] = {};
	    }
	    if (!Konva.Tween.attrs[nodeId][this._id]) {
	      Konva.Tween.attrs[nodeId][this._id] = {};
	    }
	    // init tweens map
	    if (!Konva.Tween.tweens[nodeId]) {
	      Konva.Tween.tweens[nodeId] = {};
	    }

	    for (key in config) {
	      if (blacklist[key] === undefined) {
	        this._addAttr(key, config[key]);
	      }
	    }

	    this.reset();

	    // callbacks
	    this.onFinish = config.onFinish;
	    this.onReset = config.onReset;
	  };

	  // start/diff object = attrs.nodeId.tweenId.attr
	  Konva.Tween.attrs = {};
	  // tweenId = tweens.nodeId.attr
	  Konva.Tween.tweens = {};

	  Konva.Tween.prototype = {
	    _addAttr: function(key, end) {
	      var node = this.node,
	        nodeId = node._id,
	        start,
	        diff,
	        tweenId,
	        n,
	        len,
	        trueEnd,
	        trueStart;

	      // remove conflict from tween map if it exists
	      tweenId = Konva.Tween.tweens[nodeId][key];

	      if (tweenId) {
	        delete Konva.Tween.attrs[nodeId][tweenId][key];
	      }

	      // add to tween map
	      start = node.getAttr(key);

	      if (Konva.Util._isArray(end)) {
	        diff = [];
	        len = Math.max(end.length, start.length);

	        if (key === 'points' && end.length !== start.length) {
	          // before tweening points we need to make sure that start.length === end.length
	          // Konva.Util._prepareArrayForTween thinking that end.length > start.length

	          if (end.length > start.length) {
	            // so in this case we will increase number of starting points
	            trueStart = start;
	            start = Konva.Util._prepareArrayForTween(start, end, node.closed());
	          } else {
	            // in this case we will increase number of eding points
	            trueEnd = end;
	            end = Konva.Util._prepareArrayForTween(end, start, node.closed());
	          }
	        }

	        for (n = 0; n < len; n++) {
	          diff.push(end[n] - start[n]);
	        }
	      } else if (colorAttrs.indexOf(key) !== -1) {
	        start = Konva.Util.colorToRGBA(start);
	        var endRGBA = Konva.Util.colorToRGBA(end);
	        diff = {
	          r: endRGBA.r - start.r,
	          g: endRGBA.g - start.g,
	          b: endRGBA.b - start.b,
	          a: endRGBA.a - start.a
	        };
	      } else {
	        diff = end - start;
	      }

	      Konva.Tween.attrs[nodeId][this._id][key] = {
	        start: start,
	        diff: diff,
	        end: end,
	        trueEnd: trueEnd,
	        trueStart: trueStart
	      };
	      Konva.Tween.tweens[nodeId][key] = this._id;
	    },
	    _tweenFunc: function(i) {
	      var node = this.node,
	        attrs = Konva.Tween.attrs[node._id][this._id],
	        key,
	        attr,
	        start,
	        diff,
	        newVal,
	        n,
	        len,
	        end;

	      for (key in attrs) {
	        attr = attrs[key];
	        start = attr.start;
	        diff = attr.diff;
	        end = attr.end;

	        if (Konva.Util._isArray(start)) {
	          newVal = [];
	          len = Math.max(start.length, end.length);
	          for (n = 0; n < len; n++) {
	            newVal.push((start[n] || 0) + diff[n] * i);
	          }
	        } else if (colorAttrs.indexOf(key) !== -1) {
	          newVal =
	            'rgba(' +
	            Math.round(start.r + diff.r * i) +
	            ',' +
	            Math.round(start.g + diff.g * i) +
	            ',' +
	            Math.round(start.b + diff.b * i) +
	            ',' +
	            (start.a + diff.a * i) +
	            ')';
	        } else {
	          newVal = start + diff * i;
	        }

	        node.setAttr(key, newVal);
	      }
	    },
	    _addListeners: function() {
	      var that = this;

	      // start listeners
	      this.tween.onPlay = function() {
	        that.anim.start();
	      };
	      this.tween.onReverse = function() {
	        that.anim.start();
	      };

	      // stop listeners
	      this.tween.onPause = function() {
	        that.anim.stop();
	      };
	      this.tween.onFinish = function() {
	        var node = that.node;

	        // after tweening  points of line we need to set original end
	        var attrs = Konva.Tween.attrs[node._id][that._id];
	        if (attrs.points && attrs.points.trueEnd) {
	          node.points(attrs.points.trueEnd);
	        }

	        if (that.onFinish) {
	          that.onFinish.call(that);
	        }
	      };
	      this.tween.onReset = function() {
	        var node = that.node;
	        // after tweening  points of line we need to set original start
	        var attrs = Konva.Tween.attrs[node._id][that._id];
	        if (attrs.points && attrs.points.trueStart) {
	          node.points(attrs.points.trueStart);
	        }

	        if (that.onReset) {
	          that.onReset();
	        }
	      };
	    },
	    /**
	         * play
	         * @method
	         * @memberof Konva.Tween.prototype
	         * @returns {Tween}
	         */
	    play: function() {
	      this.tween.play();
	      return this;
	    },
	    /**
	         * reverse
	         * @method
	         * @memberof Konva.Tween.prototype
	         * @returns {Tween}
	         */
	    reverse: function() {
	      this.tween.reverse();
	      return this;
	    },
	    /**
	         * reset
	         * @method
	         * @memberof Konva.Tween.prototype
	         * @returns {Tween}
	         */
	    reset: function() {
	      this.tween.reset();
	      return this;
	    },
	    /**
	         * seek
	         * @method
	         * @memberof Konva.Tween.prototype
	         * @param {Integer} t time in seconds between 0 and the duration
	         * @returns {Tween}
	         */
	    seek: function(t) {
	      this.tween.seek(t * 1000);
	      return this;
	    },
	    /**
	         * pause
	         * @method
	         * @memberof Konva.Tween.prototype
	         * @returns {Tween}
	         */
	    pause: function() {
	      this.tween.pause();
	      return this;
	    },
	    /**
	         * finish
	         * @method
	         * @memberof Konva.Tween.prototype
	         * @returns {Tween}
	         */
	    finish: function() {
	      this.tween.finish();
	      return this;
	    },
	    /**
	         * destroy
	         * @method
	         * @memberof Konva.Tween.prototype
	         */
	    destroy: function() {
	      var nodeId = this.node._id,
	        thisId = this._id,
	        attrs = Konva.Tween.tweens[nodeId],
	        key;

	      this.pause();

	      for (key in attrs) {
	        delete Konva.Tween.tweens[nodeId][key];
	      }

	      delete Konva.Tween.attrs[nodeId][thisId];
	    }
	  };

	  /**
	     * Tween node properties. Shorter usage of {@link Konva.Tween} object.
	     *
	     * @method Konva.Node#to
	     * @memberof Konva.Node
	     * @param {Object} [params] tween params
	     * @example
	     *
	     * circle.to({
	     *  x : 50,
	     *  duration : 0.5
	     * });
	     */
	  Konva.Node.prototype.to = function(params) {
	    var onFinish = params.onFinish;
	    params.node = this;
	    params.onFinish = function() {
	      this.destroy();
	      if (onFinish) {
	        onFinish();
	      }
	    };
	    var tween = new Konva.Tween(params);
	    tween.play();
	  };

	  /*
	    * These eases were ported from an Adobe Flash tweening library to JavaScript
	    * by Xaric
	    */

	  /**
	     * @namespace Easings
	     * @memberof Konva
	     */
	  Konva.Easings = {
	    /**
	        * back ease in
	        * @function
	        * @memberof Konva.Easings
	        */
	    BackEaseIn: function(t, b, c, d) {
	      var s = 1.70158;
	      return c * (t /= d) * t * ((s + 1) * t - s) + b;
	    },
	    /**
	        * back ease out
	        * @function
	        * @memberof Konva.Easings
	        */
	    BackEaseOut: function(t, b, c, d) {
	      var s = 1.70158;
	      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
	    },
	    /**
	        * back ease in out
	        * @function
	        * @memberof Konva.Easings
	        */
	    BackEaseInOut: function(t, b, c, d) {
	      var s = 1.70158;
	      if ((t /= d / 2) < 1) {
	        return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;
	      }
	      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
	    },
	    /**
	        * elastic ease in
	        * @function
	        * @memberof Konva.Easings
	        */
	    ElasticEaseIn: function(t, b, c, d, a, p) {
	      // added s = 0
	      var s = 0;
	      if (t === 0) {
	        return b;
	      }
	      if ((t /= d) === 1) {
	        return b + c;
	      }
	      if (!p) {
	        p = d * 0.3;
	      }
	      if (!a || a < Math.abs(c)) {
	        a = c;
	        s = p / 4;
	      } else {
	        s = p / (2 * Math.PI) * Math.asin(c / a);
	      }
	      return (
	        -(a *
	          Math.pow(2, 10 * (t -= 1)) *
	          Math.sin((t * d - s) * (2 * Math.PI) / p)) + b
	      );
	    },
	    /**
	        * elastic ease out
	        * @function
	        * @memberof Konva.Easings
	        */
	    ElasticEaseOut: function(t, b, c, d, a, p) {
	      // added s = 0
	      var s = 0;
	      if (t === 0) {
	        return b;
	      }
	      if ((t /= d) === 1) {
	        return b + c;
	      }
	      if (!p) {
	        p = d * 0.3;
	      }
	      if (!a || a < Math.abs(c)) {
	        a = c;
	        s = p / 4;
	      } else {
	        s = p / (2 * Math.PI) * Math.asin(c / a);
	      }
	      return (
	        a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) +
	        c +
	        b
	      );
	    },
	    /**
	        * elastic ease in out
	        * @function
	        * @memberof Konva.Easings
	        */
	    ElasticEaseInOut: function(t, b, c, d, a, p) {
	      // added s = 0
	      var s = 0;
	      if (t === 0) {
	        return b;
	      }
	      if ((t /= d / 2) === 2) {
	        return b + c;
	      }
	      if (!p) {
	        p = d * (0.3 * 1.5);
	      }
	      if (!a || a < Math.abs(c)) {
	        a = c;
	        s = p / 4;
	      } else {
	        s = p / (2 * Math.PI) * Math.asin(c / a);
	      }
	      if (t < 1) {
	        return (
	          -0.5 *
	            (a *
	              Math.pow(2, 10 * (t -= 1)) *
	              Math.sin((t * d - s) * (2 * Math.PI) / p)) +
	          b
	        );
	      }
	      return (
	        a *
	          Math.pow(2, -10 * (t -= 1)) *
	          Math.sin((t * d - s) * (2 * Math.PI) / p) *
	          0.5 +
	        c +
	        b
	      );
	    },
	    /**
	        * bounce ease out
	        * @function
	        * @memberof Konva.Easings
	        */
	    BounceEaseOut: function(t, b, c, d) {
	      if ((t /= d) < 1 / 2.75) {
	        return c * (7.5625 * t * t) + b;
	      } else if (t < 2 / 2.75) {
	        return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;
	      } else if (t < 2.5 / 2.75) {
	        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;
	      } else {
	        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;
	      }
	    },
	    /**
	        * bounce ease in
	        * @function
	        * @memberof Konva.Easings
	        */
	    BounceEaseIn: function(t, b, c, d) {
	      return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;
	    },
	    /**
	        * bounce ease in out
	        * @function
	        * @memberof Konva.Easings
	        */
	    BounceEaseInOut: function(t, b, c, d) {
	      if (t < d / 2) {
	        return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;
	      } else {
	        return (
	          Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b
	        );
	      }
	    },
	    /**
	        * ease in
	        * @function
	        * @memberof Konva.Easings
	        */
	    EaseIn: function(t, b, c, d) {
	      return c * (t /= d) * t + b;
	    },
	    /**
	        * ease out
	        * @function
	        * @memberof Konva.Easings
	        */
	    EaseOut: function(t, b, c, d) {
	      return -c * (t /= d) * (t - 2) + b;
	    },
	    /**
	        * ease in out
	        * @function
	        * @memberof Konva.Easings
	        */
	    EaseInOut: function(t, b, c, d) {
	      if ((t /= d / 2) < 1) {
	        return c / 2 * t * t + b;
	      }
	      return -c / 2 * (--t * (t - 2) - 1) + b;
	    },
	    /**
	        * strong ease in
	        * @function
	        * @memberof Konva.Easings
	        */
	    StrongEaseIn: function(t, b, c, d) {
	      return c * (t /= d) * t * t * t * t + b;
	    },
	    /**
	        * strong ease out
	        * @function
	        * @memberof Konva.Easings
	        */
	    StrongEaseOut: function(t, b, c, d) {
	      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
	    },
	    /**
	        * strong ease in out
	        * @function
	        * @memberof Konva.Easings
	        */
	    StrongEaseInOut: function(t, b, c, d) {
	      if ((t /= d / 2) < 1) {
	        return c / 2 * t * t * t * t * t + b;
	      }
	      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
	    },
	    /**
	        * linear
	        * @function
	        * @memberof Konva.Easings
	        */
	    Linear: function(t, b, c, d) {
	      return c * t / d + b;
	    }
	  };
	})();

	(function() {
	  'use strict';
	  Konva.DD = {
	    // properties
	    anim: new Konva.Animation(function() {
	      var b = this.dirty;
	      this.dirty = false;
	      return b;
	    }),
	    isDragging: false,
	    justDragged: false,
	    offset: {
	      x: 0,
	      y: 0
	    },
	    node: null,

	    // methods
	    _drag: function(evt) {
	      var dd = Konva.DD,
	        node = dd.node;
	      if (node) {
	        if (!dd.isDragging) {
	          var pos = node.getStage().getPointerPosition();
	          // it is possible that pos is undefined
	          // reattach it
	          if (!pos) {
	            node.getStage()._setPointerPosition(evt);
	            pos = node.getStage().getPointerPosition();
	          }
	          var dragDistance = node.dragDistance();
	          var distance = Math.max(
	            Math.abs(pos.x - dd.startPointerPos.x),
	            Math.abs(pos.y - dd.startPointerPos.y)
	          );
	          if (distance < dragDistance) {
	            return;
	          }
	        }

	        node.getStage()._setPointerPosition(evt);
	        node._setDragPosition(evt);
	        if (!dd.isDragging) {
	          dd.isDragging = true;
	          node.fire(
	            'dragstart',
	            {
	              type: 'dragstart',
	              target: node,
	              evt: evt
	            },
	            true
	          );
	        }

	        // execute ondragmove if defined
	        node.fire(
	          'dragmove',
	          {
	            type: 'dragmove',
	            target: node,
	            evt: evt
	          },
	          true
	        );
	      }
	    },
	    _endDragBefore: function(evt) {
	      var dd = Konva.DD,
	        node = dd.node,
	        layer;

	      if (node) {
	        layer = node.getLayer();
	        dd.anim.stop();

	        // only fire dragend event if the drag and drop
	        // operation actually started.
	        if (dd.isDragging) {
	          dd.isDragging = false;
	          dd.justDragged = true;
	          Konva.listenClickTap = false;

	          if (evt) {
	            evt.dragEndNode = node;
	          }
	        }

	        delete dd.node;

	        if (node.getLayer() || layer || node instanceof Konva.Stage) {
	          (layer || node).draw();
	        }
	      }
	    },
	    _endDragAfter: function(evt) {
	      evt = evt || {};
	      var dragEndNode = evt.dragEndNode;

	      if (evt && dragEndNode) {
	        dragEndNode.fire(
	          'dragend',
	          {
	            type: 'dragend',
	            target: dragEndNode,
	            evt: evt
	          },
	          true
	        );
	      }
	    }
	  };

	  // Node extenders

	  /**
	     * initiate drag and drop
	     * @method
	     * @memberof Konva.Node.prototype
	     */
	  Konva.Node.prototype.startDrag = function() {
	    var dd = Konva.DD,
	      stage = this.getStage(),
	      layer = this.getLayer(),
	      pos = stage.getPointerPosition(),
	      ap = this.getAbsolutePosition();

	    if (pos) {
	      if (dd.node) {
	        dd.node.stopDrag();
	      }

	      dd.node = this;
	      dd.startPointerPos = pos;
	      dd.offset.x = pos.x - ap.x;
	      dd.offset.y = pos.y - ap.y;
	      dd.anim.setLayers(layer || this.getLayers());
	      dd.anim.start();

	      this._setDragPosition();
	    }
	  };

	  Konva.Node.prototype._setDragPosition = function(evt) {
	    var dd = Konva.DD,
	      pos = this.getStage().getPointerPosition(),
	      dbf = this.getDragBoundFunc();
	    if (!pos) {
	      return;
	    }
	    var newNodePos = {
	      x: pos.x - dd.offset.x,
	      y: pos.y - dd.offset.y
	    };

	    if (dbf !== undefined) {
	      newNodePos = dbf.call(this, newNodePos, evt);
	    }
	    this.setAbsolutePosition(newNodePos);

	    if (
	      !this._lastPos ||
	      this._lastPos.x !== newNodePos.x ||
	      this._lastPos.y !== newNodePos.y
	    ) {
	      dd.anim.dirty = true;
	    }

	    this._lastPos = newNodePos;
	  };

	  /**
	     * stop drag and drop
	     * @method
	     * @memberof Konva.Node.prototype
	     */
	  Konva.Node.prototype.stopDrag = function() {
	    var dd = Konva.DD,
	      evt = {};
	    dd._endDragBefore(evt);
	    dd._endDragAfter(evt);
	  };

	  Konva.Node.prototype.setDraggable = function(draggable) {
	    this._setAttr('draggable', draggable);
	    this._dragChange();
	  };

	  var origRemove = Konva.Node.prototype.remove;

	  Konva.Node.prototype.__originalRemove = origRemove;
	  Konva.Node.prototype.remove = function() {
	    var dd = Konva.DD;

	    // stop DD
	    if (dd.node && dd.node._id === this._id) {
	      this.stopDrag();
	    }

	    origRemove.call(this);
	  };

	  /**
	     * determine if node is currently in drag and drop mode
	     * @method
	     * @memberof Konva.Node.prototype
	     */
	  Konva.Node.prototype.isDragging = function() {
	    var dd = Konva.DD;
	    return !!(dd.node && dd.node._id === this._id && dd.isDragging);
	  };

	  Konva.Node.prototype._listenDrag = function() {
	    var that = this;

	    this._dragCleanup();

	    if (this.getClassName() === 'Stage') {
	      this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {
	        if (!Konva.DD.node) {
	          that.startDrag(evt);
	        }
	      });
	    } else {
	      this.on('mousedown.konva touchstart.konva', function(evt) {
	        // ignore right and middle buttons
	        if (evt.evt.button === 1 || evt.evt.button === 2) {
	          return;
	        }
	        if (!Konva.DD.node) {
	          that.startDrag(evt);
	        }
	      });
	    }

	    // listening is required for drag and drop
	    /*
	        this._listeningEnabled = true;
	        this._clearSelfAndAncestorCache('listeningEnabled');
	        */
	  };

	  Konva.Node.prototype._dragChange = function() {
	    if (this.attrs.draggable) {
	      this._listenDrag();
	    } else {
	      // remove event listeners
	      this._dragCleanup();

	      /*
	             * force drag and drop to end
	             * if this node is currently in
	             * drag and drop mode
	             */
	      var stage = this.getStage();
	      var dd = Konva.DD;
	      if (stage && dd.node && dd.node._id === this._id) {
	        dd.node.stopDrag();
	      }
	    }
	  };

	  Konva.Node.prototype._dragCleanup = function() {
	    if (this.getClassName() === 'Stage') {
	      this.off('contentMousedown.konva');
	      this.off('contentTouchstart.konva');
	    } else {
	      this.off('mousedown.konva');
	      this.off('touchstart.konva');
	    }
	  };

	  Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');

	  /**
	     * get/set drag bound function.  This is used to override the default
	     *  drag and drop position
	     * @name dragBoundFunc
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Function} dragBoundFunc
	     * @returns {Function}
	     * @example
	     * // get drag bound function
	     * var dragBoundFunc = node.dragBoundFunc();
	     *
	     * // create vertical drag and drop
	     * node.dragBoundFunc(function(pos){
	     *   return {
	     *     x: this.getAbsolutePosition().x,
	     *     y: pos.y
	     *   };
	     * });
	     */

	  Konva.Factory.addGetter(Konva.Node, 'draggable', false);
	  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');

	  /**
	     * get/set draggable flag
	     * @name draggable
	     * @method
	     * @memberof Konva.Node.prototype
	     * @param {Boolean} draggable
	     * @returns {Boolean}
	     * @example
	     * // get draggable flag
	     * var draggable = node.draggable();
	     *
	     * // enable drag and drop
	     * node.draggable(true);
	     *
	     * // disable drag and drop
	     * node.draggable(false);
	     */

	  if (Konva.isBrowser) {
	    var html = Konva.document.documentElement;
	    html.addEventListener('mouseup', Konva.DD._endDragBefore, true);
	    html.addEventListener('touchend', Konva.DD._endDragBefore, true);

	    html.addEventListener('mousemove', Konva.DD._drag);
	    html.addEventListener('touchmove', Konva.DD._drag);

	    html.addEventListener('mouseup', Konva.DD._endDragAfter, false);
	    html.addEventListener('touchend', Konva.DD._endDragAfter, false);
	  }
	})();

	(function() {
	  'use strict';
	  /**
	     * Rect constructor
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Number} [config.cornerRadius]
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var rect = new Konva.Rect({
	     *   width: 100,
	     *   height: 50,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 5
	     * });
	     */
	  Konva.Rect = function(config) {
	    this.___init(config);
	  };

	  Konva.Rect.prototype = {
	    ___init: function(config) {
	      Konva.Shape.call(this, config);
	      this.className = 'Rect';
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var cornerRadius = this.getCornerRadius(),
	        width = this.getWidth(),
	        height = this.getHeight();

	      context.beginPath();

	      if (!cornerRadius) {
	        // simple rect - don't bother doing all that complicated maths stuff.
	        context.rect(0, 0, width, height);
	      } else {
	        // arcTo would be nicer, but browser support is patchy (Opera)
	        cornerRadius = Math.min(cornerRadius, width / 2, height / 2);
	        context.moveTo(cornerRadius, 0);
	        context.lineTo(width - cornerRadius, 0);
	        context.arc(
	          width - cornerRadius,
	          cornerRadius,
	          cornerRadius,
	          Math.PI * 3 / 2,
	          0,
	          false
	        );
	        context.lineTo(width, height - cornerRadius);
	        context.arc(
	          width - cornerRadius,
	          height - cornerRadius,
	          cornerRadius,
	          0,
	          Math.PI / 2,
	          false
	        );
	        context.lineTo(cornerRadius, height);
	        context.arc(
	          cornerRadius,
	          height - cornerRadius,
	          cornerRadius,
	          Math.PI / 2,
	          Math.PI,
	          false
	        );
	        context.lineTo(0, cornerRadius);
	        context.arc(
	          cornerRadius,
	          cornerRadius,
	          cornerRadius,
	          Math.PI,
	          Math.PI * 3 / 2,
	          false
	        );
	      }
	      context.closePath();
	      context.fillStrokeShape(this);
	    }
	  };

	  Konva.Util.extend(Konva.Rect, Konva.Shape);

	  Konva.Factory.addGetterSetter(Konva.Rect, 'cornerRadius', 0);
	  /**
	     * get/set corner radius
	     * @name cornerRadius
	     * @method
	     * @memberof Konva.Rect.prototype
	     * @param {Number} cornerRadius
	     * @returns {Number}
	     * @example
	     * // get corner radius
	     * var cornerRadius = rect.cornerRadius();
	     *
	     * // set corner radius
	     * rect.cornerRadius(10);
	     */

	  Konva.Collection.mapMethods(Konva.Rect);
	})();

	(function(Konva) {
	  'use strict';
	  // the 0.0001 offset fixes a bug in Chrome 27
	  var PIx2 = Math.PI * 2 - 0.0001, CIRCLE = 'Circle';

	  /**
	     * Circle constructor
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Number} config.radius
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // create circle
	     * var circle = new Konva.Circle({
	     *   radius: 40,
	     *   fill: 'red',
	     *   stroke: 'black'
	     *   strokeWidth: 5
	     * });
	     */
	  Konva.Circle = function(config) {
	    this.___init(config);
	  };

	  Konva.Circle.prototype = {
	    _centroid: true,
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = CIRCLE;
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      context.beginPath();
	      context.arc(0, 0, this.getRadius(), 0, PIx2, false);
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    // implements Shape.prototype.getWidth()
	    getWidth: function() {
	      return this.getRadius() * 2;
	    },
	    // implements Shape.prototype.getHeight()
	    getHeight: function() {
	      return this.getRadius() * 2;
	    },
	    // implements Shape.prototype.setWidth()
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      if (this.radius() !== width / 2) {
	        this.setRadius(width / 2);
	      }
	    },
	    // implements Shape.prototype.setHeight()
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      if (this.radius() !== height / 2) {
	        this.setRadius(height / 2);
	      }
	    }
	  };
	  Konva.Util.extend(Konva.Circle, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Circle, 'radius', 0);
	  Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');

	  /**
	     * get/set radius
	     * @name radius
	     * @method
	     * @memberof Konva.Circle.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radius
	     * var radius = circle.radius();
	     *
	     * // set radius
	     * circle.radius(10);
	     */

	  Konva.Collection.mapMethods(Konva.Circle);
	})(Konva);

	(function() {
	  'use strict';
	  // the 0.0001 offset fixes a bug in Chrome 27
	  var PIx2 = Math.PI * 2 - 0.0001, ELLIPSE = 'Ellipse';

	  /**
	     * Ellipse constructor
	     * @constructor
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Object} config.radius defines x and y radius
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var ellipse = new Konva.Ellipse({
	     *   radius : {
	     *     x : 50,
	     *     y : 50
	     *   },
	     *   fill: 'red'
	     * });
	     */
	  Konva.Ellipse = function(config) {
	    this.___init(config);
	  };

	  Konva.Ellipse.prototype = {
	    _centroid: true,
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = ELLIPSE;
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var rx = this.getRadiusX(), ry = this.getRadiusY();

	      context.beginPath();
	      context.save();
	      if (rx !== ry) {
	        context.scale(1, ry / rx);
	      }
	      context.arc(0, 0, rx, 0, PIx2, false);
	      context.restore();
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    // implements Shape.prototype.getWidth()
	    getWidth: function() {
	      return this.getRadiusX() * 2;
	    },
	    // implements Shape.prototype.getHeight()
	    getHeight: function() {
	      return this.getRadiusY() * 2;
	    },
	    // implements Shape.prototype.setWidth()
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      this.setRadius({
	        x: width / 2
	      });
	    },
	    // implements Shape.prototype.setHeight()
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      this.setRadius({
	        y: height / 2
	      });
	    }
	  };
	  Konva.Util.extend(Konva.Ellipse, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);

	  /**
	     * get/set radius
	     * @name radius
	     * @method
	     * @memberof Konva.Ellipse.prototype
	     * @param {Object} radius
	     * @param {Number} radius.x
	     * @param {Number} radius.y
	     * @returns {Object}
	     * @example
	     * // get radius
	     * var radius = ellipse.radius();
	     *
	     * // set radius
	     * ellipse.radius({
	     *   x: 200,
	     *   y: 100
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusX', 0);
	  /**
	     * get/set radius x
	     * @name radiusX
	     * @method
	     * @memberof Konva.Ellipse.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get radius x
	     * var radiusX = ellipse.radiusX();
	     *
	     * // set radius x
	     * ellipse.radiusX(200);
	     */

	  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusY', 0);
	  /**
	     * get/set radius y
	     * @name radiusY
	     * @method
	     * @memberof Konva.Ellipse.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get radius y
	     * var radiusY = ellipse.radiusY();
	     *
	     * // set radius y
	     * ellipse.radiusY(200);
	     */

	  Konva.Collection.mapMethods(Konva.Ellipse);
	})();

	(function() {
	  'use strict';
	  // the 0.0001 offset fixes a bug in Chrome 27
	  var PIx2 = Math.PI * 2 - 0.0001;
	  /**
	     * Ring constructor
	     * @constructor
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Number} config.innerRadius
	     * @param {Number} config.outerRadius
	     * @param {Boolean} [config.clockwise]
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var ring = new Konva.Ring({
	     *   innerRadius: 40,
	     *   outerRadius: 80,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 5
	     * });
	     */
	  Konva.Ring = function(config) {
	    this.___init(config);
	  };

	  Konva.Ring.prototype = {
	    _centroid: true,
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'Ring';
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      context.beginPath();
	      context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);
	      context.moveTo(this.getOuterRadius(), 0);
	      context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    // implements Shape.prototype.getWidth()
	    getWidth: function() {
	      return this.getOuterRadius() * 2;
	    },
	    // implements Shape.prototype.getHeight()
	    getHeight: function() {
	      return this.getOuterRadius() * 2;
	    },
	    // implements Shape.prototype.setWidth()
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      if (this.outerRadius() !== width / 2) {
	        this.setOuterRadius(width / 2);
	      }
	    },
	    // implements Shape.prototype.setHeight()
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      if (this.outerRadius() !== height / 2) {
	        this.setOuterRadius(height / 2);
	      }
	    },
	    setOuterRadius: function(val) {
	      this._setAttr('outerRadius', val);
	      this.setWidth(val * 2);
	      this.setHeight(val * 2);
	    }
	  };
	  Konva.Util.extend(Konva.Ring, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Ring, 'innerRadius', 0);

	  /**
	     * get/set innerRadius
	     * @name innerRadius
	     * @method
	     * @memberof Konva.Ring.prototype
	     * @param {Number} innerRadius
	     * @returns {Number}
	     * @example
	     * // get inner radius
	     * var innerRadius = ring.innerRadius();
	     *
	     * // set inner radius
	     * ring.innerRadius(20);
	     */
	  Konva.Factory.addGetter(Konva.Ring, 'outerRadius', 0);
	  Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');

	  /**
	     * get/set outerRadius
	     * @name outerRadius
	     * @method
	     * @memberof Konva.Ring.prototype
	     * @param {Number} outerRadius
	     * @returns {Number}
	     * @example
	     * // get outer radius
	     * var outerRadius = ring.outerRadius();
	     *
	     * // set outer radius
	     * ring.outerRadius(20);
	     */

	  Konva.Collection.mapMethods(Konva.Ring);
	})();

	(function() {
	  'use strict';
	  /**
	     * Wedge constructor
	     * @constructor
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Number} config.angle in degrees
	     * @param {Number} config.radius
	     * @param {Boolean} [config.clockwise]
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // draw a wedge that's pointing downwards
	     * var wedge = new Konva.Wedge({
	     *   radius: 40,
	     *   fill: 'red',
	     *   stroke: 'black'
	     *   strokeWidth: 5,
	     *   angleDeg: 60,
	     *   rotationDeg: -120
	     * });
	     */
	  Konva.Wedge = function(config) {
	    this.___init(config);
	  };

	  Konva.Wedge.prototype = {
	    _centroid: true,
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'Wedge';
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      context.beginPath();
	      context.arc(
	        0,
	        0,
	        this.getRadius(),
	        0,
	        Konva.getAngle(this.getAngle()),
	        this.getClockwise()
	      );
	      context.lineTo(0, 0);
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    // implements Shape.prototype.getWidth()
	    getWidth: function() {
	      return this.getRadius() * 2;
	    },
	    // implements Shape.prototype.getHeight()
	    getHeight: function() {
	      return this.getRadius() * 2;
	    },
	    // implements Shape.prototype.setWidth()
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      if (this.radius() !== width / 2) {
	        this.setRadius(width / 2);
	      }
	    },
	    // implements Shape.prototype.setHeight()
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      if (this.radius() !== height / 2) {
	        this.setRadius(height / 2);
	      }
	    }
	  };
	  Konva.Util.extend(Konva.Wedge, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Wedge, 'radius', 0);

	  /**
	     * get/set radius
	     * @name radius
	     * @method
	     * @memberof Konva.Wedge.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radius
	     * var radius = wedge.radius();
	     *
	     * // set radius
	     * wedge.radius(10);
	     */

	  Konva.Factory.addGetterSetter(Konva.Wedge, 'angle', 0);

	  /**
	     * get/set angle in degrees
	     * @name angle
	     * @method
	     * @memberof Konva.Wedge.prototype
	     * @param {Number} angle
	     * @returns {Number}
	     * @example
	     * // get angle
	     * var angle = wedge.angle();
	     *
	     * // set angle
	     * wedge.angle(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);

	  /**
	     * get/set clockwise flag
	     * @name clockwise
	     * @method
	     * @memberof Konva.Wedge.prototype
	     * @param {Number} clockwise
	     * @returns {Number}
	     * @example
	     * // get clockwise flag
	     * var clockwise = wedge.clockwise();
	     *
	     * // draw wedge counter-clockwise
	     * wedge.clockwise(false);
	     *
	     * // draw wedge clockwise
	     * wedge.clockwise(true);
	     */

	  Konva.Factory.backCompat(Konva.Wedge, {
	    angleDeg: 'angle',
	    getAngleDeg: 'getAngle',
	    setAngleDeg: 'setAngle'
	  });

	  Konva.Collection.mapMethods(Konva.Wedge);
	})();

	(function(Konva) {
	  'use strict';
	  /**
	     * Arc constructor
	     * @constructor
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Number} config.angle in degrees
	     * @param {Number} config.innerRadius
	     * @param {Number} config.outerRadius
	     * @param {Boolean} [config.clockwise]
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // draw a Arc that's pointing downwards
	     * var arc = new Konva.Arc({
	     *   innerRadius: 40,
	     *   outerRadius: 80,
	     *   fill: 'red',
	     *   stroke: 'black'
	     *   strokeWidth: 5,
	     *   angle: 60,
	     *   rotationDeg: -120
	     * });
	     */
	  Konva.Arc = function(config) {
	    this.___init(config);
	  };

	  Konva.Arc.prototype = {
	    _centroid: true,
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'Arc';
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();

	      context.beginPath();
	      context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);
	      context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    // implements Shape.prototype.getWidth()
	    getWidth: function() {
	      return this.getOuterRadius() * 2;
	    },
	    // implements Shape.prototype.getHeight()
	    getHeight: function() {
	      return this.getOuterRadius() * 2;
	    },
	    // implements Shape.prototype.setWidth()
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      if (this.getOuterRadius() !== width / 2) {
	        this.setOuterRadius(width / 2);
	      }
	    },
	    // implements Shape.prototype.setHeight()
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      if (this.getOuterRadius() !== height / 2) {
	        this.setOuterRadius(height / 2);
	      }
	    }
	  };
	  Konva.Util.extend(Konva.Arc, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Arc, 'innerRadius', 0);

	  /**
	     * get/set innerRadius
	     * @name innerRadius
	     * @method
	     * @memberof Konva.Arc.prototype
	     * @param {Number} innerRadius
	     * @returns {Number}
	     * @example
	     * // get inner radius
	     * var innerRadius = arc.innerRadius();
	     *
	     * // set inner radius
	     * arc.innerRadius(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Arc, 'outerRadius', 0);

	  /**
	     * get/set outerRadius
	     * @name outerRadius
	     * @method
	     * @memberof Konva.Arc.prototype
	     * @param {Number} outerRadius
	     * @returns {Number}
	     * @example
	     * // get outer radius
	     * var outerRadius = arc.outerRadius();
	     *
	     * // set outer radius
	     * arc.outerRadius(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Arc, 'angle', 0);

	  /**
	     * get/set angle in degrees
	     * @name angle
	     * @method
	     * @memberof Konva.Arc.prototype
	     * @param {Number} angle
	     * @returns {Number}
	     * @example
	     * // get angle
	     * var angle = arc.angle();
	     *
	     * // set angle
	     * arc.angle(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);

	  /**
	     * get/set clockwise flag
	     * @name clockwise
	     * @method
	     * @memberof Konva.Arc.prototype
	     * @param {Boolean} clockwise
	     * @returns {Boolean}
	     * @example
	     * // get clockwise flag
	     * var clockwise = arc.clockwise();
	     *
	     * // draw arc counter-clockwise
	     * arc.clockwise(false);
	     *
	     * // draw arc clockwise
	     * arc.clockwise(true);
	     */

	  Konva.Collection.mapMethods(Konva.Arc);
	})(Konva);

	(function() {
	  'use strict';
	  // CONSTANTS
	  var IMAGE = 'Image';

	  /**
	     * Image constructor
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Image} config.image
	     * @param {Object} [config.crop]
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var imageObj = new Image();
	     * imageObj.onload = function() {
	     *   var image = new Konva.Image({
	     *     x: 200,
	     *     y: 50,
	     *     image: imageObj,
	     *     width: 100,
	     *     height: 100
	     *   });
	     * };
	     * imageObj.src = '/path/to/image.jpg'
	     */
	  Konva.Image = function(config) {
	    this.___init(config);
	  };

	  Konva.Image.prototype = {
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = IMAGE;
	      this.sceneFunc(this._sceneFunc);
	      this.hitFunc(this._hitFunc);
	    },
	    _useBufferCanvas: function() {
	      return (
	        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&
	        this.hasStroke() &&
	        this.getStage()
	      );
	    },
	    _sceneFunc: function(context) {
	      var width = this.getWidth(),
	        height = this.getHeight(),
	        image = this.getImage(),
	        cropWidth,
	        cropHeight,
	        params;

	      if (image) {
	        cropWidth = this.getCropWidth();
	        cropHeight = this.getCropHeight();
	        if (cropWidth && cropHeight) {
	          params = [
	            image,
	            this.getCropX(),
	            this.getCropY(),
	            cropWidth,
	            cropHeight,
	            0,
	            0,
	            width,
	            height
	          ];
	        } else {
	          params = [image, 0, 0, width, height];
	        }
	      }

	      if (this.hasFill() || this.hasStroke()) {
	        context.beginPath();
	        context.rect(0, 0, width, height);
	        context.closePath();
	        context.fillStrokeShape(this);
	      }

	      if (image) {
	        context.drawImage.apply(context, params);
	      }
	    },
	    _hitFunc: function(context) {
	      var width = this.getWidth(), height = this.getHeight();

	      context.beginPath();
	      context.rect(0, 0, width, height);
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    getWidth: function() {
	      var image = this.getImage();
	      return this.attrs.width || (image ? image.width : 0);
	    },
	    getHeight: function() {
	      var image = this.getImage();
	      return this.attrs.height || (image ? image.height : 0);
	    }
	  };
	  Konva.Util.extend(Konva.Image, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Image, 'image');

	  /**
	     * set image
	     * @name setImage
	     * @method
	     * @memberof Konva.Image.prototype
	     * @param {Image} image
	     */

	  /**
	     * get image
	     * @name getImage
	     * @method
	     * @memberof Konva.Image.prototype
	     * @returns {Image}
	     */

	  Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', [
	    'x',
	    'y',
	    'width',
	    'height'
	  ]);
	  /**
	     * get/set crop
	     * @method
	     * @name crop
	     * @memberof Konva.Image.prototype
	     * @param {Object} crop
	     * @param {Number} crop.x
	     * @param {Number} crop.y
	     * @param {Number} crop.width
	     * @param {Number} crop.height
	     * @returns {Object}
	     * @example
	     * // get crop
	     * var crop = image.crop();
	     *
	     * // set crop
	     * image.crop({
	     *   x: 20,
	     *   y: 20,
	     *   width: 20,
	     *   height: 20
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Image, 'cropX', 0);
	  /**
	     * get/set crop x
	     * @method
	     * @name cropX
	     * @memberof Konva.Image.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get crop x
	     * var cropX = image.cropX();
	     *
	     * // set crop x
	     * image.cropX(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Image, 'cropY', 0);
	  /**
	     * get/set crop y
	     * @name cropY
	     * @method
	     * @memberof Konva.Image.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get crop y
	     * var cropY = image.cropY();
	     *
	     * // set crop y
	     * image.cropY(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Image, 'cropWidth', 0);
	  /**
	     * get/set crop width
	     * @name cropWidth
	     * @method
	     * @memberof Konva.Image.prototype
	     * @param {Number} width
	     * @returns {Number}
	     * @example
	     * // get crop width
	     * var cropWidth = image.cropWidth();
	     *
	     * // set crop width
	     * image.cropWidth(20);
	     */

	  Konva.Factory.addGetterSetter(Konva.Image, 'cropHeight', 0);
	  /**
	     * get/set crop height
	     * @name cropHeight
	     * @method
	     * @memberof Konva.Image.prototype
	     * @param {Number} height
	     * @returns {Number}
	     * @example
	     * // get crop height
	     * var cropHeight = image.cropHeight();
	     *
	     * // set crop height
	     * image.cropHeight(20);
	     */

	  Konva.Collection.mapMethods(Konva.Image);

	  /**
	     * load image from given url and create `Konva.Image` instance
	     * @method
	     * @memberof Konva.Image
	     * @param {String} url image source
	     * @param {Function} callback with Konva.Image instance as first argument
	     * @example
	     *  Konva.Image.fromURL(imageURL, function(image){
	     *    // image is Konva.Image instance
	     *    layer.add(image);
	     *    layer.draw();
	     *  });
	     */
	  Konva.Image.fromURL = function(url, callback) {
	    var img = new Image();
	    img.onload = function() {
	      var image = new Konva.Image({
	        image: img
	      });
	      callback(image);
	    };
	    img.src = url;
	  };
	})();

	/*eslint-disable max-depth */
	(function() {
	  'use strict';
	  // var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
	  // constants
	  var AUTO = 'auto',
	    //CANVAS = 'canvas',
	    CENTER = 'center',
	    JUSTIFY = 'justify',
	    CHANGE_KONVA = 'Change.konva',
	    CONTEXT_2D = '2d',
	    DASH = '-',
	    EMPTY_STRING = '',
	    LEFT = 'left',
	    TEXT = 'text',
	    TEXT_UPPER = 'Text',
	    MIDDLE = 'middle',
	    NORMAL = 'normal',
	    PX_SPACE = 'px ',
	    SPACE = ' ',
	    RIGHT = 'right',
	    WORD = 'word',
	    CHAR = 'char',
	    NONE = 'none',
	    ATTR_CHANGE_LIST = [
	      'fontFamily',
	      'fontSize',
	      'fontStyle',
	      'fontVariant',
	      'padding',
	      'align',
	      'lineHeight',
	      'text',
	      'width',
	      'height',
	      'wrap',
	      'letterSpacing'
	    ],
	    // cached variables
	    attrChangeListLen = ATTR_CHANGE_LIST.length;
	  var dummyContext;
	  function getDummyContext() {
	    if (dummyContext) {
	      return dummyContext;
	    }
	    dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);
	    return dummyContext;
	  }

	  /**
	     * Text constructor
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {String} [config.fontFamily] default is Arial
	     * @param {Number} [config.fontSize] in pixels.  Default is 12
	     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal
	     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal
	     * @param {String} config.text
	     * @param {String} [config.align] can be left, center, or right
	     * @param {Number} [config.padding]
	     * @param {Number} [config.lineHeight] default is 1
	     * @param {String} [config.wrap] can be word, char, or none. Default is word
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var text = new Konva.Text({
	     *   x: 10,
	     *   y: 15,
	     *   text: 'Simple Text',
	     *   fontSize: 30,
	     *   fontFamily: 'Calibri',
	     *   fill: 'green'
	     * });
	     */
	  Konva.Text = function(config) {
	    this.___init(config);
	  };
	  function _fillFunc(context) {
	    context.fillText(this.partialText, 0, 0);
	  }
	  function _strokeFunc(context) {
	    context.strokeText(this.partialText, 0, 0);
	  }

	  Konva.Text.prototype = {
	    ___init: function(config) {
	      config = config || {};

	      // set default color to black
	      if (
	        !config.fillLinearGradientColorStops &&
	        !config.fillRadialGradientColorStops
	      ) {
	        config.fill = config.fill || 'black';
	      }
	      //
	      // if (config.width === undefined) {
	      //     config.width = AUTO;
	      // }
	      // if (config.height === undefined) {
	      //     config.height = AUTO;
	      // }

	      // call super constructor
	      Konva.Shape.call(this, config);

	      this._fillFunc = _fillFunc;
	      this._strokeFunc = _strokeFunc;
	      this.className = TEXT_UPPER;

	      // update text data for certain attr changes
	      for (var n = 0; n < attrChangeListLen; n++) {
	        this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);
	      }

	      this._setTextData();
	      this.sceneFunc(this._sceneFunc);
	      this.hitFunc(this._hitFunc);
	    },
	    _sceneFunc: function(context) {
	      var p = this.getPadding(),
	        textHeight = this.getTextHeight(),
	        lineHeightPx = this.getLineHeight() * textHeight,
	        textArr = this.textArr,
	        textArrLen = textArr.length,
	        align = this.getAlign(),
	        totalWidth = this.getWidth(),
	        letterSpacing = this.getLetterSpacing(),
	        textDecoration = this.textDecoration(),
	        fill = this.fill(),
	        fontSize = this.fontSize(),
	        n;

	      context.setAttr('font', this._getContextFont());

	      context.setAttr('textBaseline', MIDDLE);
	      context.setAttr('textAlign', LEFT);
	      context.save();
	      if (p) {
	        context.translate(p, 0);
	        context.translate(0, p + textHeight / 2);
	      } else {
	        context.translate(0, textHeight / 2);
	      }

	      // draw text lines
	      for (n = 0; n < textArrLen; n++) {
	        var obj = textArr[n],
	          text = obj.text,
	          width = obj.width;

	        // horizontal alignment
	        context.save();
	        if (align === RIGHT) {
	          context.translate(totalWidth - width - p * 2, 0);
	        } else if (align === CENTER) {
	          context.translate((totalWidth - width - p * 2) / 2, 0);
	        }

	        if (textDecoration.indexOf('underline') !== -1) {
	          context.save();
	          context.beginPath();
	          context.moveTo(0, Math.round(lineHeightPx / 2));
	          context.lineTo(Math.round(width), Math.round(lineHeightPx / 2));
	          // TODO: I have no idea what is real ratio
	          // just /20 looks good enough
	          context.lineWidth = fontSize / 15;
	          context.strokeStyle = fill;
	          context.stroke();
	          context.restore();
	        }
	        if (textDecoration.indexOf('line-through') !== -1) {
	          context.save();
	          context.beginPath();
	          context.moveTo(0, 0);
	          context.lineTo(Math.round(width), 0);
	          context.lineWidth = fontSize / 15;
	          context.strokeStyle = fill;
	          context.stroke();
	          context.restore();
	        }
	        if (letterSpacing !== 0 || align === JUSTIFY) {
	          //   var words = text.split(' ');
	          var spacesNumber = text.split(' ').length - 1;
	          for (var li = 0; li < text.length; li++) {
	            var letter = text[li];
	            // skip justify for the last line
	            if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {
	              context.translate(
	                Math.floor((totalWidth - width) / spacesNumber),
	                0
	              );
	            }
	            this.partialText = letter;
	            context.fillStrokeShape(this);
	            context.translate(
	              Math.round(this._getTextSize(letter).width) + letterSpacing,
	              0
	            );
	          }
	        } else {
	          this.partialText = text;

	          context.fillStrokeShape(this);
	        }
	        context.restore();
	        context.translate(0, lineHeightPx);
	      }
	      context.restore();
	    },
	    _hitFunc: function(context) {
	      var width = this.getWidth(),
	        height = this.getHeight();

	      context.beginPath();
	      context.rect(0, 0, width, height);
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    // _useBufferCanvas: function(caching) {
	    //     var useIt = Konva.Shape.prototype._useBufferCanvas.call(this, caching);
	    //     if (useIt) {
	    //       return true;
	    //     }
	    //     return false;
	    //     // return isFirefox && this.hasFill() && this.hasShadow();
	    // },
	    setText: function(text) {
	      var str = Konva.Util._isString(text) ? text : (text || '').toString();
	      this._setAttr(TEXT, str);
	      return this;
	    },
	    /**
	         * get width of text area, which includes padding
	         * @method
	         * @memberof Konva.Text.prototype
	         * @returns {Number}
	         */
	    getWidth: function() {
	      var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;
	      return isAuto
	        ? this.getTextWidth() + this.getPadding() * 2
	        : this.attrs.width;
	    },
	    /**
	         * get the height of the text area, which takes into account multi-line text, line heights, and padding
	         * @method
	         * @memberof Konva.Text.prototype
	         * @returns {Number}
	         */
	    getHeight: function() {
	      var isAuto =
	        this.attrs.height === AUTO || this.attrs.height === undefined;
	      return isAuto
	        ? this.getTextHeight() * this.textArr.length * this.getLineHeight() +
	          this.getPadding() * 2
	        : this.attrs.height;
	    },
	    /**
	         * get text width
	         * @method
	         * @memberof Konva.Text.prototype
	         * @returns {Number}
	         */
	    getTextWidth: function() {
	      return this.textWidth;
	    },
	    /**
	         * get text height
	         * @method
	         * @memberof Konva.Text.prototype
	         * @returns {Number}
	         */
	    getTextHeight: function() {
	      return this.textHeight;
	    },
	    _getTextSize: function(text) {
	      var _context = getDummyContext(),
	        fontSize = this.getFontSize(),
	        metrics;

	      _context.save();
	      _context.font = this._getContextFont();

	      metrics = _context.measureText(text);
	      _context.restore();
	      return {
	        width: metrics.width,
	        height: parseInt(fontSize, 10)
	      };
	    },
	    _getContextFont: function() {
	      // IE don't want to work with usual font style
	      // bold was not working
	      // removing font variant will solve
	      // fix for: https://github.com/konvajs/konva/issues/94
	      if (Konva.UA.isIE) {
	        return (
	          this.getFontStyle() +
	          SPACE +
	          this.getFontSize() +
	          PX_SPACE +
	          this.getFontFamily()
	        );
	      }
	      return (
	        this.getFontStyle() +
	        SPACE +
	        this.getFontVariant() +
	        SPACE +
	        this.getFontSize() +
	        PX_SPACE +
	        this.getFontFamily()
	      );
	    },
	    _addTextLine: function(line) {
	      if (this.align() === JUSTIFY) {
	        line = line.trim();
	      }
	      var width = this._getTextWidth(line);
	      return this.textArr.push({ text: line, width: width });
	    },
	    _getTextWidth: function(text) {
	      var latterSpacing = this.getLetterSpacing();
	      var length = text.length;
	      return (
	        getDummyContext().measureText(text).width +
	        (length ? latterSpacing * (length - 1) : 0)
	      );
	    },
	    _setTextData: function() {
	      var lines = this.getText().split('\n'),
	        fontSize = +this.getFontSize(),
	        textWidth = 0,
	        lineHeightPx = this.getLineHeight() * fontSize,
	        width = this.attrs.width,
	        height = this.attrs.height,
	        fixedWidth = width !== AUTO,
	        fixedHeight = height !== AUTO,
	        padding = this.getPadding(),
	        maxWidth = width - padding * 2,
	        maxHeightPx = height - padding * 2,
	        currentHeightPx = 0,
	        wrap = this.getWrap(),
	        shouldWrap = wrap !== NONE,
	        wrapAtWord = wrap !== CHAR && shouldWrap;

	      this.textArr = [];
	      getDummyContext().save();
	      getDummyContext().font = this._getContextFont();
	      for (var i = 0, max = lines.length; i < max; ++i) {
	        var line = lines[i];

	        var lineWidth = this._getTextWidth(line);
	        if (fixedWidth && lineWidth > maxWidth) {
	          /*
	                     * if width is fixed and line does not fit entirely
	                     * break the line into multiple fitting lines
	                     */
	          while (line.length > 0) {
	            /*
	                         * use binary search to find the longest substring that
	                         * that would fit in the specified width
	                         */
	            var low = 0,
	              high = line.length,
	              match = '',
	              matchWidth = 0;
	            while (low < high) {
	              var mid = (low + high) >>> 1,
	                substr = line.slice(0, mid + 1),
	                substrWidth = this._getTextWidth(substr);
	              if (substrWidth <= maxWidth) {
	                low = mid + 1;
	                match = substr;
	                matchWidth = substrWidth;
	              } else {
	                high = mid;
	              }
	            }
	            /*
	                         * 'low' is now the index of the substring end
	                         * 'match' is the substring
	                         * 'matchWidth' is the substring width in px
	                         */
	            if (match) {
	              // a fitting substring was found
	              if (wrapAtWord) {
	                // try to find a space or dash where wrapping could be done
	                var wrapIndex =
	                  Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +
	                  1;
	                if (wrapIndex > 0) {
	                  // re-cut the substring found at the space/dash position
	                  low = wrapIndex;
	                  match = match.slice(0, low);
	                  matchWidth = this._getTextWidth(match);
	                }
	              }
	              this._addTextLine(match);
	              textWidth = Math.max(textWidth, matchWidth);
	              currentHeightPx += lineHeightPx;
	              if (
	                !shouldWrap ||
	                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)
	              ) {
	                /*
	                                 * stop wrapping if wrapping is disabled or if adding
	                                 * one more line would overflow the fixed height
	                                 */
	                break;
	              }
	              line = line.slice(low);
	              if (line.length > 0) {
	                // Check if the remaining text would fit on one line
	                lineWidth = this._getTextWidth(line);
	                if (lineWidth <= maxWidth) {
	                  // if it does, add the line and break out of the loop
	                  this._addTextLine(line);
	                  currentHeightPx += lineHeightPx;
	                  textWidth = Math.max(textWidth, lineWidth);
	                  break;
	                }
	              }
	            } else {
	              // not even one character could fit in the element, abort
	              break;
	            }
	          }
	        } else {
	          // element width is automatically adjusted to max line width
	          this._addTextLine(line);
	          currentHeightPx += lineHeightPx;
	          textWidth = Math.max(textWidth, lineWidth);
	        }
	        // if element height is fixed, abort if adding one more line would overflow
	        if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {
	          break;
	        }
	      }
	      getDummyContext().restore();
	      this.textHeight = fontSize;
	      // var maxTextWidth = 0;
	      // for(var j = 0; j < this.textArr.length; j++) {
	      //     maxTextWidth = Math.max(maxTextWidth, this.textArr[j].width);
	      // }
	      this.textWidth = textWidth;
	    }
	  };
	  Konva.Util.extend(Konva.Text, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');

	  /**
	     * get/set font family
	     * @name fontFamily
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {String} fontFamily
	     * @returns {String}
	     * @example
	     * // get font family
	     * var fontFamily = text.fontFamily();
	     *
	     * // set font family
	     * text.fontFamily('Arial');
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'fontSize', 12);

	  /**
	     * get/set font size in pixels
	     * @name fontSize
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {Number} fontSize
	     * @returns {Number}
	     * @example
	     * // get font size
	     * var fontSize = text.fontSize();
	     *
	     * // set font size to 22px
	     * text.fontSize(22);
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);

	  /**
	     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.
	     * @name fontStyle
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {String} fontStyle
	     * @returns {String}
	     * @example
	     * // get font style
	     * var fontStyle = text.fontStyle();
	     *
	     * // set font style
	     * text.fontStyle('bold');
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);

	  /**
	     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.
	     * @name fontVariant
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {String} fontVariant
	     * @returns {String}
	     * @example
	     * // get font variant
	     * var fontVariant = text.fontVariant();
	     *
	     * // set font variant
	     * text.fontVariant('small-caps');
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'padding', 0);

	  /**
	     * set padding
	     * @name padding
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {Number} padding
	     * @returns {Number}
	     * @example
	     * // get padding
	     * var padding = text.padding();
	     *
	     * // set padding to 10 pixels
	     * text.padding(10);
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);

	  /**
	     * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'
	     * @name align
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {String} align
	     * @returns {String}
	     * @example
	     * // get text align
	     * var align = text.align();
	     *
	     * // center text
	     * text.align('center');
	     *
	     * // align text to right
	     * text.align('right');
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'lineHeight', 1);

	  /**
	     * get/set line height.  The default is 1.
	     * @name lineHeight
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {Number} lineHeight
	     * @returns {Number}
	     * @example
	     * // get line height
	     * var lineHeight = text.lineHeight();
	     *
	     * // set the line height
	     * text.lineHeight(2);
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);

	  /**
	     * get/set wrap.  Can be word, char, or none. Default is word.
	     * @name wrap
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {String} wrap
	     * @returns {String}
	     * @example
	     * // get wrap
	     * var wrap = text.wrap();
	     *
	     * // set wrap
	     * text.wrap('word');
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'letterSpacing', 0);

	  /**
	       * set letter spacing property. Default value is 0.
	       * @name letterSpacing
	       * @method
	       * @memberof Konva.TextPath.prototype
	       * @param {Number} letterSpacing
	       */

	  Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);
	  Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');

	  /**
	     * get/set text
	     * @name getText
	     * @method
	     * @memberof Konva.Text.prototype
	     * @param {String} text
	     * @returns {String}
	     * @example
	     * // get text
	     * var text = text.text();
	     *
	     * // set text
	     * text.text('Hello world!');
	     */

	  Konva.Factory.addGetterSetter(Konva.Text, 'textDecoration', EMPTY_STRING);

	  /**
	      * get/set text decoration of a text.  Possible values are 'underline', 'line-through' or combination of these values separated by space
	      * @name textDecoration
	      * @method
	      * @memberof Konva.Text.prototype
	      * @param {String} textDecoration
	      * @returns {String}
	      * @example
	      * // get text decoration
	      * var textDecoration = text.textDecoration();
	      *
	      * // underline text
	      * text.textDecoration('underline');
	      *
	      * // strike text
	      * text.textDecoration('line-through');
	      *
	      * // underline and strike text
	      * text.textDecoration('underline line-through');
	      */

	  Konva.Collection.mapMethods(Konva.Text);
	})();

	(function() {
	  'use strict';
	  /**
	     * Line constructor.&nbsp; Lines are defined by an array of points and
	     *  a tension
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Array} config.points
	     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.
	     *   The default is 0
	     * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob
	     * @param {Boolean} [config.bezier] if no tension is provided but bezier=true, we draw the line as a bezier using the passed points
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var line = new Konva.Line({
	     *   x: 100,
	     *   y: 50,
	     *   points: [73, 70, 340, 23, 450, 60, 500, 20],
	     *   stroke: 'red',
	     *   tension: 1
	     * });
	     */
	  Konva.Line = function(config) {
	    this.___init(config);
	  };

	  Konva.Line.prototype = {
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'Line';

	      this.on(
	        'pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva',
	        function() {
	          this._clearCache('tensionPoints');
	        }
	      );

	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var points = this.getPoints(),
	        length = points.length,
	        tension = this.getTension(),
	        closed = this.getClosed(),
	        bezier = this.getBezier(),
	        tp,
	        len,
	        n;

	      if (!length) {
	        return;
	      }

	      context.beginPath();
	      context.moveTo(points[0], points[1]);

	      // tension
	      if (tension !== 0 && length > 4) {
	        tp = this.getTensionPoints();
	        len = tp.length;
	        n = closed ? 0 : 4;

	        if (!closed) {
	          context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);
	        }

	        while (n < len - 2) {
	          context.bezierCurveTo(
	            tp[n++],
	            tp[n++],
	            tp[n++],
	            tp[n++],
	            tp[n++],
	            tp[n++]
	          );
	        }

	        if (!closed) {
	          context.quadraticCurveTo(
	            tp[len - 2],
	            tp[len - 1],
	            points[length - 2],
	            points[length - 1]
	          );
	        }
	      } else if (bezier) {
	        // no tension but bezier
	        n = 2;

	        while (n < length) {
	          context.bezierCurveTo(
	            points[n++],
	            points[n++],
	            points[n++],
	            points[n++],
	            points[n++],
	            points[n++]
	          );
	        }
	      } else {
	        // no tension
	        for (n = 2; n < length; n += 2) {
	          context.lineTo(points[n], points[n + 1]);
	        }
	      }

	      // closed e.g. polygons and blobs
	      if (closed) {
	        context.closePath();
	        context.fillStrokeShape(this);
	      } else {
	        // open e.g. lines and splines
	        context.strokeShape(this);
	      }
	    },
	    getTensionPoints: function() {
	      return this._getCache('tensionPoints', this._getTensionPoints);
	    },
	    _getTensionPoints: function() {
	      if (this.getClosed()) {
	        return this._getTensionPointsClosed();
	      } else {
	        return Konva.Util._expandPoints(this.getPoints(), this.getTension());
	      }
	    },
	    _getTensionPointsClosed: function() {
	      var p = this.getPoints(),
	        len = p.length,
	        tension = this.getTension(),
	        util = Konva.Util,
	        firstControlPoints = util._getControlPoints(
	          p[len - 2],
	          p[len - 1],
	          p[0],
	          p[1],
	          p[2],
	          p[3],
	          tension
	        ),
	        lastControlPoints = util._getControlPoints(
	          p[len - 4],
	          p[len - 3],
	          p[len - 2],
	          p[len - 1],
	          p[0],
	          p[1],
	          tension
	        ),
	        middle = Konva.Util._expandPoints(p, tension),
	        tp = [firstControlPoints[2], firstControlPoints[3]]
	          .concat(middle)
	          .concat([
	            lastControlPoints[0],
	            lastControlPoints[1],
	            p[len - 2],
	            p[len - 1],
	            lastControlPoints[2],
	            lastControlPoints[3],
	            firstControlPoints[0],
	            firstControlPoints[1],
	            p[0],
	            p[1]
	          ]);

	      return tp;
	    },
	    getWidth: function() {
	      return this.getSelfRect().width;
	    },
	    getHeight: function() {
	      return this.getSelfRect().height;
	    },
	    // overload size detection
	    getSelfRect: function() {
	      var points;
	      if (this.getTension() !== 0) {
	        points = this._getTensionPoints();
	      } else {
	        points = this.getPoints();
	      }
	      var minX = points[0];
	      var maxX = points[0];
	      var minY = points[1];
	      var maxY = points[1];
	      var x, y;
	      for (var i = 0; i < points.length / 2; i++) {
	        x = points[i * 2];
	        y = points[i * 2 + 1];
	        minX = Math.min(minX, x);
	        maxX = Math.max(maxX, x);
	        minY = Math.min(minY, y);
	        maxY = Math.max(maxY, y);
	      }
	      return {
	        x: Math.round(minX),
	        y: Math.round(minY),
	        width: Math.round(maxX - minX),
	        height: Math.round(maxY - minY)
	      };
	    }
	  };
	  Konva.Util.extend(Konva.Line, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);

	  /**
	     * get/set closed flag.  The default is false
	     * @name closed
	     * @method
	     * @memberof Konva.Line.prototype
	     * @param {Boolean} closed
	     * @returns {Boolean}
	     * @example
	     * // get closed flag
	     * var closed = line.closed();
	     *
	     * // close the shape
	     * line.closed(true);
	     *
	     * // open the shape
	     * line.closed(false);
	     */

	  Konva.Factory.addGetterSetter(Konva.Line, 'bezier', false);

	  /**
	    * get/set bezier flag.  The default is false
	    * @name bezier
	    * @method
	    * @memberof Konva.Line.prototype
	    * @param {Boolean} bezier
	    * @returns {Boolean}
	    * @example
	    * // get whether the line is a bezier
	    * var isBezier = line.bezier();
	    *
	    * // set whether the line is a bezier
	    * line.bezier(true);
	    */

	  Konva.Factory.addGetterSetter(Konva.Line, 'tension', 0);

	  /**
	     * get/set tension
	     * @name tension
	     * @method
	     * @memberof Konva.Line.prototype
	     * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.
	     *   The default is 0
	     * @returns {Number}
	     * @example
	     * // get tension
	     * var tension = line.tension();
	     *
	     * // set tension
	     * line.tension(3);
	     */

	  Konva.Factory.addGetterSetter(Konva.Line, 'points', []);
	  /**
	     * get/set points array
	     * @name points
	     * @method
	     * @memberof Konva.Line.prototype
	     * @param {Array} points
	     * @returns {Array}
	     * @example
	     * // get points
	     * var points = line.points();
	     *
	     * // set points
	     * line.points([10, 20, 30, 40, 50, 60]);
	     *
	     * // push a new point
	     * line.points(line.points().concat([70, 80]));
	     */

	  Konva.Collection.mapMethods(Konva.Line);
	})();

	(function() {
	  'use strict';
	  /**
	     * Sprite constructor
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {String} config.animation animation key
	     * @param {Object} config.animations animation map
	     * @param {Integer} [config.frameIndex] animation frame index
	     * @param {Image} config.image image object
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var imageObj = new Image();
	     * imageObj.onload = function() {
	     *   var sprite = new Konva.Sprite({
	     *     x: 200,
	     *     y: 100,
	     *     image: imageObj,
	     *     animation: 'standing',
	     *     animations: {
	     *       standing: [
	     *         // x, y, width, height (6 frames)
	     *         0, 0, 49, 109,
	     *         52, 0, 49, 109,
	     *         105, 0, 49, 109,
	     *         158, 0, 49, 109,
	     *         210, 0, 49, 109,
	     *         262, 0, 49, 109
	     *       ],
	     *       kicking: [
	     *         // x, y, width, height (6 frames)
	     *         0, 109, 45, 98,
	     *         45, 109, 45, 98,
	     *         95, 109, 63, 98,
	     *         156, 109, 70, 98,
	     *         229, 109, 60, 98,
	     *         287, 109, 41, 98
	     *       ]
	     *     },
	     *     frameRate: 7,
	     *     frameIndex: 0
	     *   });
	     * };
	     * imageObj.src = '/path/to/image.jpg'
	     */
	  Konva.Sprite = function(config) {
	    this.___init(config);
	  };

	  Konva.Sprite.prototype = {
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'Sprite';

	      this._updated = true;
	      var that = this;
	      this.anim = new Konva.Animation(function() {
	        // if we don't need to redraw layer we should return false
	        var updated = that._updated;
	        that._updated = false;
	        return updated;
	      });
	      this.on('animationChange.konva', function() {
	        // reset index when animation changes
	        this.frameIndex(0);
	      });
	      this.on('frameIndexChange.konva', function() {
	        this._updated = true;
	      });
	      // smooth change for frameRate
	      this.on('frameRateChange.konva', function() {
	        if (!this.anim.isRunning()) {
	          return;
	        }
	        clearInterval(this.interval);
	        this._setInterval();
	      });

	      this.sceneFunc(this._sceneFunc);
	      this.hitFunc(this._hitFunc);
	    },
	    _sceneFunc: function(context) {
	      var anim = this.getAnimation(),
	        index = this.frameIndex(),
	        ix4 = index * 4,
	        set = this.getAnimations()[anim],
	        offsets = this.frameOffsets(),
	        x = set[ix4 + 0],
	        y = set[ix4 + 1],
	        width = set[ix4 + 2],
	        height = set[ix4 + 3],
	        image = this.getImage();

	      if (this.hasFill() || this.hasStroke()) {
	        context.beginPath();
	        context.rect(0, 0, width, height);
	        context.closePath();
	        context.fillStrokeShape(this);
	      }

	      if (image) {
	        if (offsets) {
	          var offset = offsets[anim], ix2 = index * 2;
	          context.drawImage(
	            image,
	            x,
	            y,
	            width,
	            height,
	            offset[ix2 + 0],
	            offset[ix2 + 1],
	            width,
	            height
	          );
	        } else {
	          context.drawImage(image, x, y, width, height, 0, 0, width, height);
	        }
	      }
	    },
	    _hitFunc: function(context) {
	      var anim = this.getAnimation(),
	        index = this.frameIndex(),
	        ix4 = index * 4,
	        set = this.getAnimations()[anim],
	        offsets = this.frameOffsets(),
	        width = set[ix4 + 2],
	        height = set[ix4 + 3];

	      context.beginPath();
	      if (offsets) {
	        var offset = offsets[anim];
	        var ix2 = index * 2;
	        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);
	      } else {
	        context.rect(0, 0, width, height);
	      }
	      context.closePath();
	      context.fillShape(this);
	    },
	    _useBufferCanvas: function() {
	      return (
	        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&
	        this.hasStroke()
	      );
	    },
	    _setInterval: function() {
	      var that = this;
	      this.interval = setInterval(function() {
	        that._updateIndex();
	      }, 1000 / this.getFrameRate());
	    },
	    /**
	         * start sprite animation
	         * @method
	         * @memberof Konva.Sprite.prototype
	         */
	    start: function() {
	      var layer = this.getLayer();

	      /*
	             * animation object has no executable function because
	             *  the updates are done with a fixed FPS with the setInterval
	             *  below.  The anim object only needs the layer reference for
	             *  redraw
	             */
	      this.anim.setLayers(layer);
	      this._setInterval();
	      this.anim.start();
	    },
	    /**
	         * stop sprite animation
	         * @method
	         * @memberof Konva.Sprite.prototype
	         */
	    stop: function() {
	      this.anim.stop();
	      clearInterval(this.interval);
	    },
	    /**
	         * determine if animation of sprite is running or not.  returns true or false
	         * @method
	         * @memberof Konva.Animation.prototype
	         * @returns {Boolean}
	         */
	    isRunning: function() {
	      return this.anim.isRunning();
	    },
	    _updateIndex: function() {
	      var index = this.frameIndex(),
	        animation = this.getAnimation(),
	        animations = this.getAnimations(),
	        anim = animations[animation],
	        len = anim.length / 4;

	      if (index < len - 1) {
	        this.frameIndex(index + 1);
	      } else {
	        this.frameIndex(0);
	      }
	    }
	  };
	  Konva.Util.extend(Konva.Sprite, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');

	  /**
	     * get/set animation key
	     * @name animation
	     * @method
	     * @memberof Konva.Sprite.prototype
	     * @param {String} anim animation key
	     * @returns {String}
	     * @example
	     * // get animation key
	     * var animation = sprite.animation();
	     *
	     * // set animation key
	     * sprite.animation('kicking');
	     */

	  Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');

	  /**
	     * get/set animations map
	     * @name animations
	     * @method
	     * @memberof Konva.Sprite.prototype
	     * @param {Object} animations
	     * @returns {Object}
	     * @example
	     * // get animations map
	     * var animations = sprite.animations();
	     *
	     * // set animations map
	     * sprite.animations({
	     *   standing: [
	     *     // x, y, width, height (6 frames)
	     *     0, 0, 49, 109,
	     *     52, 0, 49, 109,
	     *     105, 0, 49, 109,
	     *     158, 0, 49, 109,
	     *     210, 0, 49, 109,
	     *     262, 0, 49, 109
	     *   ],
	     *   kicking: [
	     *     // x, y, width, height (6 frames)
	     *     0, 109, 45, 98,
	     *     45, 109, 45, 98,
	     *     95, 109, 63, 98,
	     *     156, 109, 70, 98,
	     *     229, 109, 60, 98,
	     *     287, 109, 41, 98
	     *   ]
	     * });
	     */

	  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');

	  /**
	    * get/set offsets map
	    * @name offsets
	    * @method
	    * @memberof Konva.Sprite.prototype
	    * @param {Object} offsets
	    * @returns {Object}
	    * @example
	    * // get offsets map
	    * var offsets = sprite.offsets();
	    *
	    * // set offsets map
	    * sprite.offsets({
	    *   standing: [
	    *     // x, y (6 frames)
	    *     0, 0,
	    *     0, 0,
	    *     5, 0,
	    *     0, 0,
	    *     0, 3,
	    *     2, 0
	    *   ],
	    *   kicking: [
	    *     // x, y (6 frames)
	    *     0, 5,
	    *     5, 0,
	    *     10, 0,
	    *     0, 0,
	    *     2, 1,
	    *     0, 0
	    *   ]
	    * });
	    */

	  Konva.Factory.addGetterSetter(Konva.Sprite, 'image');

	  /**
	     * get/set image
	     * @name image
	     * @method
	     * @memberof Konva.Sprite.prototype
	     * @param {Image} image
	     * @returns {Image}
	     * @example
	     * // get image
	     * var image = sprite.image();
	     *
	     * // set image
	     * sprite.image(imageObj);
	     */

	  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameIndex', 0);

	  /**
	     * set/set animation frame index
	     * @name frameIndex
	     * @method
	     * @memberof Konva.Sprite.prototype
	     * @param {Integer} frameIndex
	     * @returns {Integer}
	     * @example
	     * // get animation frame index
	     * var frameIndex = sprite.frameIndex();
	     *
	     * // set animation frame index
	     * sprite.frameIndex(3);
	     */

	  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameRate', 17);

	  /**
	     * get/set frame rate in frames per second.  Increase this number to make the sprite
	     *  animation run faster, and decrease the number to make the sprite animation run slower
	     *  The default is 17 frames per second
	     * @name frameRate
	     * @method
	     * @memberof Konva.Sprite.prototype
	     * @param {Integer} frameRate
	     * @returns {Integer}
	     * @example
	     * // get frame rate
	     * var frameRate = sprite.frameRate();
	     *
	     * // set frame rate to 2 frames per second
	     * sprite.frameRate(2);
	     */

	  Konva.Factory.backCompat(Konva.Sprite, {
	    index: 'frameIndex',
	    getIndex: 'getFrameIndex',
	    setIndex: 'setFrameIndex'
	  });

	  Konva.Collection.mapMethods(Konva.Sprite);
	})();

	/*eslint-disable  no-shadow, max-len, max-depth */
	(function() {
	  'use strict';
	  /**
	     * Path constructor.
	     * @author Jason Follas
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {String} config.data SVG data string
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var path = new Konva.Path({
	     *   x: 240,
	     *   y: 40,
	     *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',
	     *   fill: 'green',
	     *   scale: 2
	     * });
	     */
	  Konva.Path = function(config) {
	    this.___init(config);
	  };

	  Konva.Path.prototype = {
	    ___init: function(config) {
	      this.dataArray = [];
	      var that = this;

	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'Path';

	      this.dataArray = Konva.Path.parsePathData(this.getData());
	      this.on('dataChange.konva', function() {
	        that.dataArray = Konva.Path.parsePathData(this.getData());
	      });

	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var ca = this.dataArray;

	      // context position
	      context.beginPath();
	      for (var n = 0; n < ca.length; n++) {
	        var c = ca[n].command;
	        var p = ca[n].points;
	        switch (c) {
	          case 'L':
	            context.lineTo(p[0], p[1]);
	            break;
	          case 'M':
	            context.moveTo(p[0], p[1]);
	            break;
	          case 'C':
	            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);
	            break;
	          case 'Q':
	            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);
	            break;
	          case 'A':
	            var cx = p[0],
	              cy = p[1],
	              rx = p[2],
	              ry = p[3],
	              theta = p[4],
	              dTheta = p[5],
	              psi = p[6],
	              fs = p[7];

	            var r = rx > ry ? rx : ry;
	            var scaleX = rx > ry ? 1 : rx / ry;
	            var scaleY = rx > ry ? ry / rx : 1;

	            context.translate(cx, cy);
	            context.rotate(psi);
	            context.scale(scaleX, scaleY);
	            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);
	            context.scale(1 / scaleX, 1 / scaleY);
	            context.rotate(-psi);
	            context.translate(-cx, -cy);

	            break;
	          case 'z':
	            context.closePath();
	            break;
	        }
	      }

	      context.fillStrokeShape(this);
	    },
	    getSelfRect: function() {
	      var points = [];
	      this.dataArray.forEach(function(data) {
	        points = points.concat(data.points);
	      });
	      var minX = points[0];
	      var maxX = points[0];
	      var minY = points[1];
	      var maxY = points[1];
	      var x, y;
	      for (var i = 0; i < points.length / 2; i++) {
	        x = points[i * 2];
	        y = points[i * 2 + 1];
	        minX = Math.min(minX, x);
	        maxX = Math.max(maxX, x);
	        minY = Math.min(minY, y);
	        maxY = Math.max(maxY, y);
	      }
	      return {
	        x: Math.round(minX),
	        y: Math.round(minY),
	        width: Math.round(maxX - minX),
	        height: Math.round(maxY - minY)
	      };
	    }
	  };
	  Konva.Util.extend(Konva.Path, Konva.Shape);

	  Konva.Path.getLineLength = function(x1, y1, x2, y2) {
	    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
	  };
	  Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {
	    if (fromX === undefined) {
	      fromX = P1x;
	    }
	    if (fromY === undefined) {
	      fromY = P1y;
	    }

	    var m = (P2y - P1y) / (P2x - P1x + 0.00000001);
	    var run = Math.sqrt(dist * dist / (1 + m * m));
	    if (P2x < P1x) {
	      run *= -1;
	    }
	    var rise = m * run;
	    var pt;

	    if (P2x === P1x) {
	      // vertical line
	      pt = {
	        x: fromX,
	        y: fromY + rise
	      };
	    } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {
	      pt = {
	        x: fromX + run,
	        y: fromY + rise
	      };
	    } else {
	      var ix, iy;

	      var len = this.getLineLength(P1x, P1y, P2x, P2y);
	      if (len < 0.00000001) {
	        return undefined;
	      }
	      var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);
	      u = u / (len * len);
	      ix = P1x + u * (P2x - P1x);
	      iy = P1y + u * (P2y - P1y);

	      var pRise = this.getLineLength(fromX, fromY, ix, iy);
	      var pRun = Math.sqrt(dist * dist - pRise * pRise);
	      run = Math.sqrt(pRun * pRun / (1 + m * m));
	      if (P2x < P1x) {
	        run *= -1;
	      }
	      rise = m * run;
	      pt = {
	        x: ix + run,
	        y: iy + rise
	      };
	    }

	    return pt;
	  };

	  Konva.Path.getPointOnCubicBezier = function(
	    pct,
	    P1x,
	    P1y,
	    P2x,
	    P2y,
	    P3x,
	    P3y,
	    P4x,
	    P4y
	  ) {
	    function CB1(t) {
	      return t * t * t;
	    }
	    function CB2(t) {
	      return 3 * t * t * (1 - t);
	    }
	    function CB3(t) {
	      return 3 * t * (1 - t) * (1 - t);
	    }
	    function CB4(t) {
	      return (1 - t) * (1 - t) * (1 - t);
	    }
	    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);
	    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);

	    return {
	      x: x,
	      y: y
	    };
	  };
	  Konva.Path.getPointOnQuadraticBezier = function(
	    pct,
	    P1x,
	    P1y,
	    P2x,
	    P2y,
	    P3x,
	    P3y
	  ) {
	    function QB1(t) {
	      return t * t;
	    }
	    function QB2(t) {
	      return 2 * t * (1 - t);
	    }
	    function QB3(t) {
	      return (1 - t) * (1 - t);
	    }
	    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);
	    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);

	    return {
	      x: x,
	      y: y
	    };
	  };
	  Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {
	    var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);
	    var pt = {
	      x: rx * Math.cos(theta),
	      y: ry * Math.sin(theta)
	    };
	    return {
	      x: cx + (pt.x * cosPsi - pt.y * sinPsi),
	      y: cy + (pt.x * sinPsi + pt.y * cosPsi)
	    };
	  };
	  /*
	     * get parsed data array from the data
	     *  string.  V, v, H, h, and l data are converted to
	     *  L data for the purpose of high performance Path
	     *  rendering
	     */
	  Konva.Path.parsePathData = function(data) {
	    // Path Data Segment must begin with a moveTo
	    //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)
	    //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)
	    //l (x y)+  Relative lineTo
	    //L (x y)+  Absolute LineTo
	    //h (x)+    Relative horizontal lineTo
	    //H (x)+    Absolute horizontal lineTo
	    //v (y)+    Relative vertical lineTo
	    //V (y)+    Absolute vertical lineTo
	    //z (closepath)
	    //Z (closepath)
	    //c (x1 y1 x2 y2 x y)+ Relative Bezier curve
	    //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve
	    //q (x1 y1 x y)+       Relative Quadratic Bezier
	    //Q (x1 y1 x y)+       Absolute Quadratic Bezier
	    //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier
	    //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier
	    //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve
	    //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve
	    //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc
	    //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc

	    // return early if data is not defined
	    if (!data) {
	      return [];
	    }

	    // command string
	    var cs = data;

	    // command chars
	    var cc = [
	      'm',
	      'M',
	      'l',
	      'L',
	      'v',
	      'V',
	      'h',
	      'H',
	      'z',
	      'Z',
	      'c',
	      'C',
	      'q',
	      'Q',
	      't',
	      'T',
	      's',
	      'S',
	      'a',
	      'A'
	    ];
	    // convert white spaces to commas
	    cs = cs.replace(new RegExp(' ', 'g'), ',');
	    // create pipes so that we can split the data
	    for (var n = 0; n < cc.length; n++) {
	      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);
	    }
	    // create array
	    var arr = cs.split('|');
	    var ca = [];
	    // init context point
	    var cpx = 0;
	    var cpy = 0;
	    for (n = 1; n < arr.length; n++) {
	      var str = arr[n];
	      var c = str.charAt(0);
	      str = str.slice(1);
	      // remove ,- for consistency
	      str = str.replace(new RegExp(',-', 'g'), '-');
	      // add commas so that it's easy to split
	      str = str.replace(new RegExp('-', 'g'), ',-');
	      str = str.replace(new RegExp('e,-', 'g'), 'e-');
	      var p = str.split(',');
	      if (p.length > 0 && p[0] === '') {
	        p.shift();
	      }
	      // convert strings to floats
	      for (var i = 0; i < p.length; i++) {
	        p[i] = parseFloat(p[i]);
	      }
	      while (p.length > 0) {
	        if (isNaN(p[0])) {
	          // case for a trailing comma before next command
	          break;
	        }

	        var cmd = null;
	        var points = [];
	        var startX = cpx, startY = cpy;
	        // Move var from within the switch to up here (jshint)
	        var prevCmd, ctlPtx, ctlPty; // Ss, Tt
	        var rx, ry, psi, fa, fs, x1, y1; // Aa

	        // convert l, H, h, V, and v to L
	        switch (c) {
	          // Note: Keep the lineTo's above the moveTo's in this switch
	          case 'l':
	            cpx += p.shift();
	            cpy += p.shift();
	            cmd = 'L';
	            points.push(cpx, cpy);
	            break;
	          case 'L':
	            cpx = p.shift();
	            cpy = p.shift();
	            points.push(cpx, cpy);
	            break;
	          // Note: lineTo handlers need to be above this point
	          case 'm':
	            var dx = p.shift();
	            var dy = p.shift();
	            cpx += dx;
	            cpy += dy;
	            cmd = 'M';
	            // After closing the path move the current position
	            // to the the first point of the path (if any).
	            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {
	              for (var idx = ca.length - 2; idx >= 0; idx--) {
	                if (ca[idx].command === 'M') {
	                  cpx = ca[idx].points[0] + dx;
	                  cpy = ca[idx].points[1] + dy;
	                  break;
	                }
	              }
	            }
	            points.push(cpx, cpy);
	            c = 'l';
	            // subsequent points are treated as relative lineTo
	            break;
	          case 'M':
	            cpx = p.shift();
	            cpy = p.shift();
	            cmd = 'M';
	            points.push(cpx, cpy);
	            c = 'L';
	            // subsequent points are treated as absolute lineTo
	            break;

	          case 'h':
	            cpx += p.shift();
	            cmd = 'L';
	            points.push(cpx, cpy);
	            break;
	          case 'H':
	            cpx = p.shift();
	            cmd = 'L';
	            points.push(cpx, cpy);
	            break;
	          case 'v':
	            cpy += p.shift();
	            cmd = 'L';
	            points.push(cpx, cpy);
	            break;
	          case 'V':
	            cpy = p.shift();
	            cmd = 'L';
	            points.push(cpx, cpy);
	            break;
	          case 'C':
	            points.push(p.shift(), p.shift(), p.shift(), p.shift());
	            cpx = p.shift();
	            cpy = p.shift();
	            points.push(cpx, cpy);
	            break;
	          case 'c':
	            points.push(
	              cpx + p.shift(),
	              cpy + p.shift(),
	              cpx + p.shift(),
	              cpy + p.shift()
	            );
	            cpx += p.shift();
	            cpy += p.shift();
	            cmd = 'C';
	            points.push(cpx, cpy);
	            break;
	          case 'S':
	            ctlPtx = cpx;
	            ctlPty = cpy;
	            prevCmd = ca[ca.length - 1];
	            if (prevCmd.command === 'C') {
	              ctlPtx = cpx + (cpx - prevCmd.points[2]);
	              ctlPty = cpy + (cpy - prevCmd.points[3]);
	            }
	            points.push(ctlPtx, ctlPty, p.shift(), p.shift());
	            cpx = p.shift();
	            cpy = p.shift();
	            cmd = 'C';
	            points.push(cpx, cpy);
	            break;
	          case 's':
	            ctlPtx = cpx;
	            ctlPty = cpy;
	            prevCmd = ca[ca.length - 1];
	            if (prevCmd.command === 'C') {
	              ctlPtx = cpx + (cpx - prevCmd.points[2]);
	              ctlPty = cpy + (cpy - prevCmd.points[3]);
	            }
	            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());
	            cpx += p.shift();
	            cpy += p.shift();
	            cmd = 'C';
	            points.push(cpx, cpy);
	            break;
	          case 'Q':
	            points.push(p.shift(), p.shift());
	            cpx = p.shift();
	            cpy = p.shift();
	            points.push(cpx, cpy);
	            break;
	          case 'q':
	            points.push(cpx + p.shift(), cpy + p.shift());
	            cpx += p.shift();
	            cpy += p.shift();
	            cmd = 'Q';
	            points.push(cpx, cpy);
	            break;
	          case 'T':
	            ctlPtx = cpx;
	            ctlPty = cpy;
	            prevCmd = ca[ca.length - 1];
	            if (prevCmd.command === 'Q') {
	              ctlPtx = cpx + (cpx - prevCmd.points[0]);
	              ctlPty = cpy + (cpy - prevCmd.points[1]);
	            }
	            cpx = p.shift();
	            cpy = p.shift();
	            cmd = 'Q';
	            points.push(ctlPtx, ctlPty, cpx, cpy);
	            break;
	          case 't':
	            ctlPtx = cpx;
	            ctlPty = cpy;
	            prevCmd = ca[ca.length - 1];
	            if (prevCmd.command === 'Q') {
	              ctlPtx = cpx + (cpx - prevCmd.points[0]);
	              ctlPty = cpy + (cpy - prevCmd.points[1]);
	            }
	            cpx += p.shift();
	            cpy += p.shift();
	            cmd = 'Q';
	            points.push(ctlPtx, ctlPty, cpx, cpy);
	            break;
	          case 'A':
	            rx = p.shift();
	            ry = p.shift();
	            psi = p.shift();
	            fa = p.shift();
	            fs = p.shift();
	            x1 = cpx;
	            y1 = cpy;
	            cpx = p.shift();
	            cpy = p.shift();
	            cmd = 'A';
	            points = this.convertEndpointToCenterParameterization(
	              x1,
	              y1,
	              cpx,
	              cpy,
	              fa,
	              fs,
	              rx,
	              ry,
	              psi
	            );
	            break;
	          case 'a':
	            rx = p.shift();
	            ry = p.shift();
	            psi = p.shift();
	            fa = p.shift();
	            fs = p.shift();
	            x1 = cpx;
	            y1 = cpy;
	            cpx += p.shift();
	            cpy += p.shift();
	            cmd = 'A';
	            points = this.convertEndpointToCenterParameterization(
	              x1,
	              y1,
	              cpx,
	              cpy,
	              fa,
	              fs,
	              rx,
	              ry,
	              psi
	            );
	            break;
	        }

	        ca.push({
	          command: cmd || c,
	          points: points,
	          start: {
	            x: startX,
	            y: startY
	          },
	          pathLength: this.calcLength(startX, startY, cmd || c, points)
	        });
	      }

	      if (c === 'z' || c === 'Z') {
	        ca.push({
	          command: 'z',
	          points: [],
	          start: undefined,
	          pathLength: 0
	        });
	      }
	    }

	    return ca;
	  };
	  Konva.Path.calcLength = function(x, y, cmd, points) {
	    var len, p1, p2, t;
	    var path = Konva.Path;

	    switch (cmd) {
	      case 'L':
	        return path.getLineLength(x, y, points[0], points[1]);
	      case 'C':
	        // Approximates by breaking curve into 100 line segments
	        len = 0.0;
	        p1 = path.getPointOnCubicBezier(
	          0,
	          x,
	          y,
	          points[0],
	          points[1],
	          points[2],
	          points[3],
	          points[4],
	          points[5]
	        );
	        for (t = 0.01; t <= 1; t += 0.01) {
	          p2 = path.getPointOnCubicBezier(
	            t,
	            x,
	            y,
	            points[0],
	            points[1],
	            points[2],
	            points[3],
	            points[4],
	            points[5]
	          );
	          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	          p1 = p2;
	        }
	        return len;
	      case 'Q':
	        // Approximates by breaking curve into 100 line segments
	        len = 0.0;
	        p1 = path.getPointOnQuadraticBezier(
	          0,
	          x,
	          y,
	          points[0],
	          points[1],
	          points[2],
	          points[3]
	        );
	        for (t = 0.01; t <= 1; t += 0.01) {
	          p2 = path.getPointOnQuadraticBezier(
	            t,
	            x,
	            y,
	            points[0],
	            points[1],
	            points[2],
	            points[3]
	          );
	          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	          p1 = p2;
	        }
	        return len;
	      case 'A':
	        // Approximates by breaking curve into line segments
	        len = 0.0;
	        var start = points[4];
	        // 4 = theta
	        var dTheta = points[5];
	        // 5 = dTheta
	        var end = points[4] + dTheta;
	        var inc = Math.PI / 180.0;
	        // 1 degree resolution
	        if (Math.abs(start - end) < inc) {
	          inc = Math.abs(start - end);
	        }
	        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi
	        p1 = path.getPointOnEllipticalArc(
	          points[0],
	          points[1],
	          points[2],
	          points[3],
	          start,
	          0
	        );
	        if (dTheta < 0) {
	          // clockwise
	          for (t = start - inc; t > end; t -= inc) {
	            p2 = path.getPointOnEllipticalArc(
	              points[0],
	              points[1],
	              points[2],
	              points[3],
	              t,
	              0
	            );
	            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	            p1 = p2;
	          }
	        } else {
	          // counter-clockwise
	          for (t = start + inc; t < end; t += inc) {
	            p2 = path.getPointOnEllipticalArc(
	              points[0],
	              points[1],
	              points[2],
	              points[3],
	              t,
	              0
	            );
	            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	            p1 = p2;
	          }
	        }
	        p2 = path.getPointOnEllipticalArc(
	          points[0],
	          points[1],
	          points[2],
	          points[3],
	          end,
	          0
	        );
	        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);

	        return len;
	    }

	    return 0;
	  };
	  Konva.Path.convertEndpointToCenterParameterization = function(
	    x1,
	    y1,
	    x2,
	    y2,
	    fa,
	    fs,
	    rx,
	    ry,
	    psiDeg
	  ) {
	    // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes
	    var psi = psiDeg * (Math.PI / 180.0);
	    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;
	    var yp =
	      -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;

	    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);

	    if (lambda > 1) {
	      rx *= Math.sqrt(lambda);
	      ry *= Math.sqrt(lambda);
	    }

	    var f = Math.sqrt(
	      (rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /
	        (rx * rx * (yp * yp) + ry * ry * (xp * xp))
	    );

	    if (fa === fs) {
	      f *= -1;
	    }
	    if (isNaN(f)) {
	      f = 0;
	    }

	    var cxp = f * rx * yp / ry;
	    var cyp = f * -ry * xp / rx;

	    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;
	    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;

	    var vMag = function(v) {
	      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
	    };
	    var vRatio = function(u, v) {
	      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));
	    };
	    var vAngle = function(u, v) {
	      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));
	    };
	    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);
	    var u = [(xp - cxp) / rx, (yp - cyp) / ry];
	    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];
	    var dTheta = vAngle(u, v);

	    if (vRatio(u, v) <= -1) {
	      dTheta = Math.PI;
	    }
	    if (vRatio(u, v) >= 1) {
	      dTheta = 0;
	    }
	    if (fs === 0 && dTheta > 0) {
	      dTheta = dTheta - 2 * Math.PI;
	    }
	    if (fs === 1 && dTheta < 0) {
	      dTheta = dTheta + 2 * Math.PI;
	    }
	    return [cx, cy, rx, ry, theta, dTheta, psi, fs];
	  };
	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Path, 'data');

	  /**
	     * set SVG path data string.  This method
	     *  also automatically parses the data string
	     *  into a data array.  Currently supported SVG data:
	     *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z
	     * @name setData
	     * @method
	     * @memberof Konva.Path.prototype
	     * @param {String} SVG path command string
	     */

	  /**
	     * get SVG path data string
	     * @name getData
	     * @method
	     * @memberof Konva.Path.prototype
	     */

	  Konva.Collection.mapMethods(Konva.Path);
	})();

	(function() {
	  'use strict';
	  var EMPTY_STRING = '',
	    //CALIBRI = 'Calibri',
	    NORMAL = 'normal';

	  /**
	     * Path constructor.
	     * @author Jason Follas
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {String} [config.fontFamily] default is Calibri
	     * @param {Number} [config.fontSize] default is 12
	     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal
	     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal
	     * @param {String} config.text
	     * @param {String} config.data SVG data string
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var textpath = new Konva.TextPath({
	     *   x: 100,
	     *   y: 50,
	     *   fill: '#333',
	     *   fontSize: '24',
	     *   fontFamily: 'Arial',
	     *   text: 'All the world\'s a stage, and all the men and women merely players.',
	     *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50'
	     * });
	     */
	  Konva.TextPath = function(config) {
	    this.___init(config);
	  };

	  function _fillFunc(context) {
	    context.fillText(this.partialText, 0, 0);
	  }
	  function _strokeFunc(context) {
	    context.strokeText(this.partialText, 0, 0);
	  }

	  Konva.TextPath.prototype = {
	    ___init: function(config) {
	      var that = this;
	      this.dummyCanvas = Konva.Util.createCanvasElement();
	      this.dataArray = [];

	      // call super constructor
	      Konva.Shape.call(this, config);

	      // overrides
	      // TODO: shouldn't this be on the prototype?
	      this._fillFunc = _fillFunc;
	      this._strokeFunc = _strokeFunc;
	      this._fillFuncHit = _fillFunc;
	      this._strokeFuncHit = _strokeFunc;

	      this.className = 'TextPath';

	      this.dataArray = Konva.Path.parsePathData(this.attrs.data);
	      this.on('dataChange.konva', function() {
	        that.dataArray = Konva.Path.parsePathData(this.attrs.data);
	        that._setTextData();
	      });

	      // update text data for certain attr changes
	      this.on(
	        'textChange.konva alignChange.konva letterSpacingChange.konva',
	        that._setTextData
	      );
	      that._setTextData();
	      this.sceneFunc(this._sceneFunc);
	      this.hitFunc(this._hitFunc);
	    },
	    _sceneFunc: function(context) {
	      context.setAttr('font', this._getContextFont());
	      context.setAttr('textBaseline', this.getTextBaseline());
	      context.setAttr('textAlign', 'left');
	      context.save();

	      var textDecoration = this.textDecoration();
	      var fill = this.fill();
	      var fontSize = this.fontSize();

	      var glyphInfo = this.glyphInfo;
	      if (textDecoration === 'underline') {
	        context.beginPath();
	      }
	      for (var i = 0; i < glyphInfo.length; i++) {
	        context.save();

	        var p0 = glyphInfo[i].p0;

	        context.translate(p0.x, p0.y);
	        context.rotate(glyphInfo[i].rotation);
	        this.partialText = glyphInfo[i].text;

	        context.fillStrokeShape(this);
	        if (textDecoration === 'underline') {
	          if (i === 0) {
	            context.moveTo(0, fontSize / 2 + 1);
	          }

	          context.lineTo(fontSize, fontSize / 2 + 1);
	        }
	        context.restore();

	        //// To assist with debugging visually, uncomment following
	        //
	        // if (i % 2)
	        // context.strokeStyle = 'cyan';
	        // else
	        // context.strokeStyle = 'green';
	        // var p1 = glyphInfo[i].p1;
	        // context.moveTo(p0.x, p0.y);
	        // context.lineTo(p1.x, p1.y);
	        // context.stroke();
	      }
	      if (textDecoration === 'underline') {
	        context.strokeStyle = fill;
	        context.lineWidth = fontSize / 20;
	        context.stroke();
	      }

	      context.restore();
	    },
	    _hitFunc: function(context) {
	      context.beginPath();

	      var glyphInfo = this.glyphInfo;
	      if (glyphInfo.length >= 1) {
	        var p0 = glyphInfo[0].p0;
	        context.moveTo(p0.x, p0.y);
	      }
	      for (var i = 0; i < glyphInfo.length; i++) {
	        var p1 = glyphInfo[i].p1;
	        context.lineTo(p1.x, p1.y);
	      }
	      context.setAttr('lineWidth', this.getFontSize());
	      context.setAttr('strokeStyle', this.colorKey);
	      context.stroke();
	    },
	    /**
	         * get text width in pixels
	         * @method
	         * @memberof Konva.TextPath.prototype
	         */
	    getTextWidth: function() {
	      return this.textWidth;
	    },
	    /**
	         * get text height in pixels
	         * @method
	         * @memberof Konva.TextPath.prototype
	         */
	    getTextHeight: function() {
	      return this.textHeight;
	    },
	    /**
	         * set text
	         * @method
	         * @memberof Konva.TextPath.prototype
	         * @param {String} text
	         */
	    setText: function(text) {
	      Konva.Text.prototype.setText.call(this, text);
	    },
	    _getTextSize: function(text) {
	      var dummyCanvas = this.dummyCanvas;
	      var _context = dummyCanvas.getContext('2d');

	      _context.save();

	      _context.font = this._getContextFont();
	      var metrics = _context.measureText(text);

	      _context.restore();

	      return {
	        width: metrics.width,
	        height: parseInt(this.attrs.fontSize, 10)
	      };
	    },
	    _setTextData: function() {
	      var that = this;
	      var size = this._getTextSize(this.attrs.text);
	      var letterSpacing = this.getLetterSpacing();
	      var align = this.align();

	      this.textWidth = size.width;
	      this.textHeight = size.height;

	      var textFullWidth = Math.max(
	        this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing,
	        0
	      );

	      this.glyphInfo = [];

	      var fullPathWidth = 0;
	      for (var l = 0; l < that.dataArray.length; l++) {
	        if (that.dataArray[l].pathLength > 0) {
	          fullPathWidth += that.dataArray[l].pathLength;
	        }
	      }

	      var offset = 0;
	      if (align === 'center') {
	        offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);
	      }
	      if (align === 'right') {
	        offset = Math.max(0, fullPathWidth - textFullWidth);
	      }

	      var charArr = this.getText().split('');
	      var spacesNumber = this.getText().split(' ').length - 1;

	      var p0, p1, pathCmd;

	      var pIndex = -1;
	      var currentT = 0;
	      // var sumLength = 0;
	      // for(var j = 0; j < that.dataArray.length; j++) {
	      //   if(that.dataArray[j].pathLength > 0) {
	      //
	      //     if (sumLength + that.dataArray[j].pathLength > offset) {}
	      //       fullPathWidth += that.dataArray[j].pathLength;
	      //   }
	      // }

	      var getNextPathSegment = function() {
	        currentT = 0;
	        var pathData = that.dataArray;

	        for (var j = pIndex + 1; j < pathData.length; j++) {
	          if (pathData[j].pathLength > 0) {
	            pIndex = j;

	            return pathData[j];
	          } else if (pathData[j].command === 'M') {
	            p0 = {
	              x: pathData[j].points[0],
	              y: pathData[j].points[1]
	            };
	          }
	        }

	        return {};
	      };

	      var findSegmentToFitCharacter = function(c) {
	        var glyphWidth = that._getTextSize(c).width + letterSpacing;

	        if (c === ' ' && align === 'justify') {
	          glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;
	        }

	        var currLen = 0;
	        var attempts = 0;

	        p1 = undefined;
	        while (
	          Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&
	          attempts < 25
	        ) {
	          attempts++;
	          var cumulativePathLength = currLen;
	          while (pathCmd === undefined) {
	            pathCmd = getNextPathSegment();

	            if (
	              pathCmd &&
	              cumulativePathLength + pathCmd.pathLength < glyphWidth
	            ) {
	              cumulativePathLength += pathCmd.pathLength;
	              pathCmd = undefined;
	            }
	          }

	          if (pathCmd === {} || p0 === undefined) {
	            return undefined;
	          }

	          var needNewSegment = false;

	          switch (pathCmd.command) {
	            case 'L':
	              if (
	                Konva.Path.getLineLength(
	                  p0.x,
	                  p0.y,
	                  pathCmd.points[0],
	                  pathCmd.points[1]
	                ) > glyphWidth
	              ) {
	                p1 = Konva.Path.getPointOnLine(
	                  glyphWidth,
	                  p0.x,
	                  p0.y,
	                  pathCmd.points[0],
	                  pathCmd.points[1],
	                  p0.x,
	                  p0.y
	                );
	              } else {
	                pathCmd = undefined;
	              }
	              break;
	            case 'A':
	              var start = pathCmd.points[4];
	              // 4 = theta
	              var dTheta = pathCmd.points[5];
	              // 5 = dTheta
	              var end = pathCmd.points[4] + dTheta;

	              if (currentT === 0) {
	                currentT = start + 0.00000001;
	              } else if (glyphWidth > currLen) {
	                // Just in case start is 0
	                currentT += Math.PI / 180.0 * dTheta / Math.abs(dTheta);
	              } else {
	                currentT -= Math.PI / 360.0 * dTheta / Math.abs(dTheta);
	              }

	              // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249
	              // Old code failed to render text along arc of this path: "M 50 50 a 150 50 0 0 1 250 50 l 50 0"
	              if (
	                (dTheta < 0 && currentT < end) ||
	                (dTheta >= 0 && currentT > end)
	              ) {
	                currentT = end;
	                needNewSegment = true;
	              }
	              p1 = Konva.Path.getPointOnEllipticalArc(
	                pathCmd.points[0],
	                pathCmd.points[1],
	                pathCmd.points[2],
	                pathCmd.points[3],
	                currentT,
	                pathCmd.points[6]
	              );
	              break;
	            case 'C':
	              if (currentT === 0) {
	                if (glyphWidth > pathCmd.pathLength) {
	                  currentT = 0.00000001;
	                } else {
	                  currentT = glyphWidth / pathCmd.pathLength;
	                }
	              } else if (glyphWidth > currLen) {
	                currentT += (glyphWidth - currLen) / pathCmd.pathLength;
	              } else {
	                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;
	              }

	              if (currentT > 1.0) {
	                currentT = 1.0;
	                needNewSegment = true;
	              }
	              p1 = Konva.Path.getPointOnCubicBezier(
	                currentT,
	                pathCmd.start.x,
	                pathCmd.start.y,
	                pathCmd.points[0],
	                pathCmd.points[1],
	                pathCmd.points[2],
	                pathCmd.points[3],
	                pathCmd.points[4],
	                pathCmd.points[5]
	              );
	              break;
	            case 'Q':
	              if (currentT === 0) {
	                currentT = glyphWidth / pathCmd.pathLength;
	              } else if (glyphWidth > currLen) {
	                currentT += (glyphWidth - currLen) / pathCmd.pathLength;
	              } else {
	                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;
	              }

	              if (currentT > 1.0) {
	                currentT = 1.0;
	                needNewSegment = true;
	              }
	              p1 = Konva.Path.getPointOnQuadraticBezier(
	                currentT,
	                pathCmd.start.x,
	                pathCmd.start.y,
	                pathCmd.points[0],
	                pathCmd.points[1],
	                pathCmd.points[2],
	                pathCmd.points[3]
	              );
	              break;
	          }

	          if (p1 !== undefined) {
	            currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);
	          }

	          if (needNewSegment) {
	            needNewSegment = false;
	            pathCmd = undefined;
	          }
	        }
	      };

	      // fake search for offset, this is very bad approach
	      // TODO: find other way to add offset from start (for align)
	      var testChar = 'C';
	      var glyphWidth = that._getTextSize(testChar).width + letterSpacing;
	      for (var k = 0; k < offset / glyphWidth; k++) {
	        findSegmentToFitCharacter(testChar);
	        if (p0 === undefined || p1 === undefined) {
	          break;
	        }
	        p0 = p1;
	      }

	      for (var i = 0; i < charArr.length; i++) {
	        // Find p1 such that line segment between p0 and p1 is approx. width of glyph
	        findSegmentToFitCharacter(charArr[i]);

	        if (p0 === undefined || p1 === undefined) {
	          break;
	        }

	        var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);

	        // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.
	        // Can foresee having a rough pair table built in that the developer can override as needed.

	        var kern = 0;
	        // placeholder for future implementation

	        var midpoint = Konva.Path.getPointOnLine(
	          kern + width / 2.0,
	          p0.x,
	          p0.y,
	          p1.x,
	          p1.y
	        );

	        var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);
	        this.glyphInfo.push({
	          transposeX: midpoint.x,
	          transposeY: midpoint.y,
	          text: charArr[i],
	          rotation: rotation,
	          p0: p0,
	          p1: p1
	        });
	        p0 = p1;
	      }
	    },
	    getSelfRect: function() {
	      var points = [];

	      this.glyphInfo.forEach(function(info) {
	        points.push(info.p0.x);
	        points.push(info.p0.y);
	        points.push(info.p1.x);
	        points.push(info.p1.y);
	      });
	      var minX = points[0];
	      var maxX = points[0];
	      var minY = points[0];
	      var maxY = points[0];
	      var x, y;
	      for (var i = 0; i < points.length / 2; i++) {
	        x = points[i * 2];
	        y = points[i * 2 + 1];
	        minX = Math.min(minX, x);
	        maxX = Math.max(maxX, x);
	        minY = Math.min(minY, y);
	        maxY = Math.max(maxY, y);
	      }
	      var fontSize = this.fontSize();
	      return {
	        x: Math.round(minX) - fontSize / 2,
	        y: Math.round(minY) - fontSize / 2,
	        width: Math.round(maxX - minX) + fontSize,
	        height: Math.round(maxY - minY) + fontSize
	      };
	    }
	  };

	  // map TextPath methods to Text
	  Konva.TextPath.prototype._getContextFont =
	    Konva.Text.prototype._getContextFont;

	  Konva.Util.extend(Konva.TextPath, Konva.Shape);

	  // add setters and getters
	  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');

	  /**
	     * set font family
	     * @name setFontFamily
	     * @method
	     * @memberof Konva.TextPath.prototype
	     * @param {String} fontFamily
	     */

	  /**
	     * get font family
	     * @name getFontFamily
	     * @method
	     * @memberof Konva.TextPath.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontSize', 12);

	  /**
	     * set font size
	     * @name setFontSize
	     * @method
	     * @memberof Konva.TextPath.prototype
	     * @param {int} fontSize
	     */

	  /**
	     * get font size
	     * @name getFontSize
	     * @method
	     * @memberof Konva.TextPath.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);

	  /**
	     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.
	     * @name setFontStyle
	     * @method
	     * @memberof Konva.TextPath.prototype
	     * @param {String} fontStyle
	     */
	  Konva.Factory.addGetterSetter(Konva.TextPath, 'align', 'left');

	  /**
	      * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'
	      * @name align
	      * @method
	      * @memberof Konva.Text.prototype
	      * @param {String} align
	      * @returns {String}
	      * @example
	      * // get text align
	      * var align = text.align();
	      *
	      * // center text
	      * text.align('center');
	      *
	      * // align text to right
	      * text.align('right');
	      */

	  Konva.Factory.addGetterSetter(Konva.TextPath, 'letterSpacing', 0);

	  /**
	      * set letter spacing property. Default value is 0.
	      * @name letterSpacing
	      * @method
	      * @memberof Konva.TextPath.prototype
	      * @param {Number} letterSpacing
	      */

	  Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');

	  /**
	      * set textBaseline property. Default value is 'middle'.
	      * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'
	      * @name textBaseline
	      * @method
	      * @memberof Konva.TextPath.prototype
	      * @param {Number} textBaseline
	      */

	  /**
	     * get font style
	     * @name getFontStyle
	     * @method
	     * @memberof Konva.TextPath.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);

	  /**
	     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.
	     * @name setFontVariant
	     * @method
	     * @memberof Konva.TextPath.prototype
	     * @param {String} fontVariant
	     */

	  /**
	     * @get font variant
	     * @name getFontVariant
	     * @method
	     * @memberof Konva.TextPath.prototype
	     */

	  Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);

	  /**
	     * get text
	     * @name getText
	     * @method
	     * @memberof Konva.TextPath.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.TextPath, 'textDecoration', null);

	  /**
	      * get/set text decoration of a text.  Can be '' or 'underline'
	      * @name textDecoration
	      * @method
	      * @memberof Konva.Text.prototype
	      * @param {String} textDecoration
	      * @returns {String}
	      * @example
	      * // get text decoration
	      * var textDecoration = text.textDecoration();
	      *
	      * // center text
	      * text.textDecoration('underline');
	      */

	  Konva.Collection.mapMethods(Konva.TextPath);
	})();

	(function() {
	  'use strict';
	  /**
	     * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Number} config.sides
	     * @param {Number} config.radius
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var hexagon = new Konva.RegularPolygon({
	     *   x: 100,
	     *   y: 200,
	     *   sides: 6,
	     *   radius: 70,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 4
	     * });
	     */
	  Konva.RegularPolygon = function(config) {
	    this.___init(config);
	  };

	  Konva.RegularPolygon.prototype = {
	    _centroid: true,
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'RegularPolygon';
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var sides = this.attrs.sides, radius = this.attrs.radius, n, x, y;

	      context.beginPath();
	      context.moveTo(0, 0 - radius);

	      for (n = 1; n < sides; n++) {
	        x = radius * Math.sin(n * 2 * Math.PI / sides);
	        y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);
	        context.lineTo(x, y);
	      }
	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    getWidth: function() {
	      return this.getRadius() * 2;
	    },
	    // implements Shape.prototype.getHeight()
	    getHeight: function() {
	      return this.getRadius() * 2;
	    },
	    // implements Shape.prototype.setWidth()
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      if (this.radius() !== width / 2) {
	        this.setRadius(width / 2);
	      }
	    },
	    // implements Shape.prototype.setHeight()
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      if (this.radius() !== height / 2) {
	        this.setRadius(height / 2);
	      }
	    }
	  };
	  Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'radius', 0);

	  /**
	     * set radius
	     * @name setRadius
	     * @method
	     * @memberof Konva.RegularPolygon.prototype
	     * @param {Number} radius
	     */

	  /**
	     * get radius
	     * @name getRadius
	     * @method
	     * @memberof Konva.RegularPolygon.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'sides', 0);

	  /**
	     * set number of sides
	     * @name setSides
	     * @method
	     * @memberof Konva.RegularPolygon.prototype
	     * @param {int} sides
	     */

	  /**
	     * get number of sides
	     * @name getSides
	     * @method
	     * @memberof Konva.RegularPolygon.prototype
	     */

	  Konva.Collection.mapMethods(Konva.RegularPolygon);
	})();

	(function() {
	  'use strict';
	  /**
	     * Star constructor
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Integer} config.numPoints
	     * @param {Number} config.innerRadius
	     * @param {Number} config.outerRadius
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var star = new Konva.Star({
	     *   x: 100,
	     *   y: 200,
	     *   numPoints: 5,
	     *   innerRadius: 70,
	     *   outerRadius: 70,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 4
	     * });
	     */
	  Konva.Star = function(config) {
	    this.___init(config);
	  };

	  Konva.Star.prototype = {
	    _centroid: true,
	    ___init: function(config) {
	      // call super constructor
	      Konva.Shape.call(this, config);
	      this.className = 'Star';
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var innerRadius = this.innerRadius(),
	        outerRadius = this.outerRadius(),
	        numPoints = this.numPoints();

	      context.beginPath();
	      context.moveTo(0, 0 - outerRadius);

	      for (var n = 1; n < numPoints * 2; n++) {
	        var radius = n % 2 === 0 ? outerRadius : innerRadius;
	        var x = radius * Math.sin(n * Math.PI / numPoints);
	        var y = -1 * radius * Math.cos(n * Math.PI / numPoints);
	        context.lineTo(x, y);
	      }
	      context.closePath();

	      context.fillStrokeShape(this);
	    },
	    // implements Shape.prototype.getWidth()
	    getWidth: function() {
	      return this.getOuterRadius() * 2;
	    },
	    // implements Shape.prototype.getHeight()
	    getHeight: function() {
	      return this.getOuterRadius() * 2;
	    },
	    // implements Shape.prototype.setWidth()
	    setWidth: function(width) {
	      Konva.Node.prototype.setWidth.call(this, width);
	      if (this.outerRadius() !== width / 2) {
	        this.setOuterRadius(width / 2);
	      }
	    },
	    // implements Shape.prototype.setHeight()
	    setHeight: function(height) {
	      Konva.Node.prototype.setHeight.call(this, height);
	      if (this.outerRadius() !== height / 2) {
	        this.setOuterRadius(height / 2);
	      }
	    }
	  };
	  Konva.Util.extend(Konva.Star, Konva.Shape);

	  // add getters setters
	  Konva.Factory.addGetterSetter(Konva.Star, 'numPoints', 5);

	  /**
	     * set number of points
	     * @name setNumPoints
	     * @method
	     * @memberof Konva.Star.prototype
	     * @param {Integer} points
	     */

	  /**
	     * get number of points
	     * @name getNumPoints
	     * @method
	     * @memberof Konva.Star.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.Star, 'innerRadius', 0);

	  /**
	     * set inner radius
	     * @name setInnerRadius
	     * @method
	     * @memberof Konva.Star.prototype
	     * @param {Number} radius
	     */

	  /**
	     * get inner radius
	     * @name getInnerRadius
	     * @method
	     * @memberof Konva.Star.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.Star, 'outerRadius', 0);

	  /**
	     * set outer radius
	     * @name setOuterRadius
	     * @method
	     * @memberof Konva.Star.prototype
	     * @param {Number} radius
	     */

	  /**
	     * get outer radius
	     * @name getOuterRadius
	     * @method
	     * @memberof Konva.Star.prototype
	     */

	  Konva.Collection.mapMethods(Konva.Star);
	})();

	(function() {
	  'use strict';
	  // constants
	  var ATTR_CHANGE_LIST = [
	    'fontFamily',
	    'fontSize',
	    'fontStyle',
	    'padding',
	    'lineHeight',
	    'text',
	    'width'
	  ],
	    CHANGE_KONVA = 'Change.konva',
	    NONE = 'none',
	    UP = 'up',
	    RIGHT = 'right',
	    DOWN = 'down',
	    LEFT = 'left',
	    LABEL = 'Label',
	    // cached variables
	    attrChangeListLen = ATTR_CHANGE_LIST.length;

	  /**
	     * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape
	     * @constructor
	     * @memberof Konva
	     * @param {Object} config
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // create label
	     * var label = new Konva.Label({
	     *   x: 100,
	     *   y: 100,
	     *   draggable: true
	     * });
	     *
	     * // add a tag to the label
	     * label.add(new Konva.Tag({
	     *   fill: '#bbb',
	     *   stroke: '#333',
	     *   shadowColor: 'black',
	     *   shadowBlur: 10,
	     *   shadowOffset: [10, 10],
	     *   shadowOpacity: 0.2,
	     *   lineJoin: 'round',
	     *   pointerDirection: 'up',
	     *   pointerWidth: 20,
	     *   pointerHeight: 20,
	     *   cornerRadius: 5
	     * }));
	     *
	     * // add text to the label
	     * label.add(new Konva.Text({
	     *   text: 'Hello World!',
	     *   fontSize: 50,
	     *   lineHeight: 1.2,
	     *   padding: 10,
	     *   fill: 'green'
	     *  }));
	     */
	  Konva.Label = function(config) {
	    this.____init(config);
	  };

	  Konva.Label.prototype = {
	    ____init: function(config) {
	      var that = this;

	      Konva.Group.call(this, config);
	      this.className = LABEL;

	      this.on('add.konva', function(evt) {
	        that._addListeners(evt.child);
	        that._sync();
	      });
	    },
	    /**
	         * get Text shape for the label.  You need to access the Text shape in order to update
	         * the text properties
	         * @name getText
	         * @method
	         * @memberof Konva.Label.prototype
	         */
	    getText: function() {
	      return this.find('Text')[0];
	    },
	    /**
	         * get Tag shape for the label.  You need to access the Tag shape in order to update
	         * the pointer properties and the corner radius
	         * @name getTag
	         * @method
	         * @memberof Konva.Label.prototype
	         */
	    getTag: function() {
	      return this.find('Tag')[0];
	    },
	    _addListeners: function(text) {
	      var that = this, n;
	      var func = function() {
	        that._sync();
	      };

	      // update text data for certain attr changes
	      for (n = 0; n < attrChangeListLen; n++) {
	        text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);
	      }
	    },
	    getWidth: function() {
	      return this.getText().getWidth();
	    },
	    getHeight: function() {
	      return this.getText().getHeight();
	    },
	    _sync: function() {
	      var text = this.getText(),
	        tag = this.getTag(),
	        width,
	        height,
	        pointerDirection,
	        pointerWidth,
	        x,
	        y,
	        pointerHeight;

	      if (text && tag) {
	        width = text.getWidth();
	        height = text.getHeight();
	        pointerDirection = tag.getPointerDirection();
	        pointerWidth = tag.getPointerWidth();
	        pointerHeight = tag.getPointerHeight();
	        x = 0;
	        y = 0;

	        switch (pointerDirection) {
	          case UP:
	            x = width / 2;
	            y = -1 * pointerHeight;
	            break;
	          case RIGHT:
	            x = width + pointerWidth;
	            y = height / 2;
	            break;
	          case DOWN:
	            x = width / 2;
	            y = height + pointerHeight;
	            break;
	          case LEFT:
	            x = -1 * pointerWidth;
	            y = height / 2;
	            break;
	        }

	        tag.setAttrs({
	          x: -1 * x,
	          y: -1 * y,
	          width: width,
	          height: height
	        });

	        text.setAttrs({
	          x: -1 * x,
	          y: -1 * y
	        });
	      }
	    }
	  };

	  Konva.Util.extend(Konva.Label, Konva.Group);

	  Konva.Collection.mapMethods(Konva.Label);

	  /**
	     * Tag constructor.&nbsp; A Tag can be configured
	     *  to have a pointer element that points up, right, down, or left
	     * @constructor
	     * @memberof Konva
	     * @param {Object} config
	     * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default
	     *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.
	     * @param {Number} [config.pointerWidth]
	     * @param {Number} [config.pointerHeight]
	     * @param {Number} [config.cornerRadius]
	     */
	  Konva.Tag = function(config) {
	    this.___init(config);
	  };

	  Konva.Tag.prototype = {
	    ___init: function(config) {
	      Konva.Shape.call(this, config);
	      this.className = 'Tag';
	      this.sceneFunc(this._sceneFunc);
	    },
	    _sceneFunc: function(context) {
	      var width = this.getWidth(),
	        height = this.getHeight(),
	        pointerDirection = this.getPointerDirection(),
	        pointerWidth = this.getPointerWidth(),
	        pointerHeight = this.getPointerHeight(),
	        cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);

	      context.beginPath();
	      if (!cornerRadius) {
	        context.moveTo(0, 0);
	      } else {
	        context.moveTo(cornerRadius, 0);
	      }

	      if (pointerDirection === UP) {
	        context.lineTo((width - pointerWidth) / 2, 0);
	        context.lineTo(width / 2, -1 * pointerHeight);
	        context.lineTo((width + pointerWidth) / 2, 0);
	      }

	      if (!cornerRadius) {
	        context.lineTo(width, 0);
	      } else {
	        context.lineTo(width - cornerRadius, 0);
	        context.arc(
	          width - cornerRadius,
	          cornerRadius,
	          cornerRadius,
	          Math.PI * 3 / 2,
	          0,
	          false
	        );
	      }

	      if (pointerDirection === RIGHT) {
	        context.lineTo(width, (height - pointerHeight) / 2);
	        context.lineTo(width + pointerWidth, height / 2);
	        context.lineTo(width, (height + pointerHeight) / 2);
	      }

	      if (!cornerRadius) {
	        context.lineTo(width, height);
	      } else {
	        context.lineTo(width, height - cornerRadius);
	        context.arc(
	          width - cornerRadius,
	          height - cornerRadius,
	          cornerRadius,
	          0,
	          Math.PI / 2,
	          false
	        );
	      }

	      if (pointerDirection === DOWN) {
	        context.lineTo((width + pointerWidth) / 2, height);
	        context.lineTo(width / 2, height + pointerHeight);
	        context.lineTo((width - pointerWidth) / 2, height);
	      }

	      if (!cornerRadius) {
	        context.lineTo(0, height);
	      } else {
	        context.lineTo(cornerRadius, height);
	        context.arc(
	          cornerRadius,
	          height - cornerRadius,
	          cornerRadius,
	          Math.PI / 2,
	          Math.PI,
	          false
	        );
	      }

	      if (pointerDirection === LEFT) {
	        context.lineTo(0, (height + pointerHeight) / 2);
	        context.lineTo(-1 * pointerWidth, height / 2);
	        context.lineTo(0, (height - pointerHeight) / 2);
	      }

	      if (cornerRadius) {
	        context.lineTo(0, cornerRadius);
	        context.arc(
	          cornerRadius,
	          cornerRadius,
	          cornerRadius,
	          Math.PI,
	          Math.PI * 3 / 2,
	          false
	        );
	      }

	      context.closePath();
	      context.fillStrokeShape(this);
	    },
	    getSelfRect: function() {
	      var x = 0,
	        y = 0,
	        pointerWidth = this.getPointerWidth(),
	        pointerHeight = this.getPointerHeight(),
	        direction = this.pointerDirection(),
	        width = this.getWidth(),
	        height = this.getHeight();

	      if (direction === UP) {
	        y -= pointerHeight;
	        height += pointerHeight;
	      } else if (direction === DOWN) {
	        height += pointerHeight;
	      } else if (direction === LEFT) {
	        // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!
	        x -= pointerWidth * 1.5;
	        width += pointerWidth;
	      } else if (direction === RIGHT) {
	        width += pointerWidth * 1.5;
	      }
	      return {
	        x: x,
	        y: y,
	        width: width,
	        height: height
	      };
	    }
	  };

	  Konva.Util.extend(Konva.Tag, Konva.Shape);
	  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);

	  /**
	     * set pointer Direction
	     * @name setPointerDirection
	     * @method
	     * @memberof Konva.Tag.prototype
	     * @param {String} pointerDirection can be up, right, down, left, or none.  The
	     *  default is none
	     */

	  /**
	     * get pointer Direction
	     * @name getPointerDirection
	     * @method
	     * @memberof Konva.Tag.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerWidth', 0);

	  /**
	     * set pointer width
	     * @name setPointerWidth
	     * @method
	     * @memberof Konva.Tag.prototype
	     * @param {Number} pointerWidth
	     */

	  /**
	     * get pointer width
	     * @name getPointerWidth
	     * @method
	     * @memberof Konva.Tag.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerHeight', 0);

	  /**
	     * set pointer height
	     * @name setPointerHeight
	     * @method
	     * @memberof Konva.Tag.prototype
	     * @param {Number} pointerHeight
	     */

	  /**
	     * get pointer height
	     * @name getPointerHeight
	     * @method
	     * @memberof Konva.Tag.prototype
	     */

	  Konva.Factory.addGetterSetter(Konva.Tag, 'cornerRadius', 0);

	  /**
	     * set corner radius
	     * @name setCornerRadius
	     * @method
	     * @memberof Konva.Tag.prototype
	     * @param {Number} corner radius
	     */

	  /**
	     * get corner radius
	     * @name getCornerRadius
	     * @method
	     * @memberof Konva.Tag.prototype
	     */

	  Konva.Collection.mapMethods(Konva.Tag);
	})();

	(function(Konva) {
	  'use strict';
	  /**
	     * Arrow constructor
	     * @constructor
	     * @memberof Konva
	     * @augments Konva.Shape
	     * @param {Object} config
	     * @param {Array} config.points
	     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.
	     *   The default is 0
	     * @param {Number} config.pointerLength
	     * @param {Number} config.pointerWidth
	     * @param {String} [config.fill] fill color
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true
	     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true
	     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var line = new Konva.Line({
	     *   points: [73, 70, 340, 23, 450, 60, 500, 20],
	     *   stroke: 'red',
	     *   tension: 1,
	     *   pointerLength : 10,
	     *   pointerWidth : 12
	     * });
	     */
	  Konva.Arrow = function(config) {
	    this.____init(config);
	  };

	  Konva.Arrow.prototype = {
	    ____init: function(config) {
	      // call super constructor
	      Konva.Line.call(this, config);
	      this.className = 'Arrow';
	    },
	    _sceneFunc: function(ctx) {
	      Konva.Line.prototype._sceneFunc.apply(this, arguments);
	      var PI2 = Math.PI * 2;
	      var points = this.points();
	      var n = points.length;
	      var dx = points[n - 2] - points[n - 4];
	      var dy = points[n - 1] - points[n - 3];
	      var radians = (Math.atan2(dy, dx) + PI2) % PI2;
	      var length = this.pointerLength();
	      var width = this.pointerWidth();

	      ctx.save();
	      ctx.beginPath();
	      ctx.translate(points[n - 2], points[n - 1]);
	      ctx.rotate(radians);
	      ctx.moveTo(0, 0);
	      ctx.lineTo(-length, width / 2);
	      ctx.lineTo(-length, -width / 2);
	      ctx.closePath();
	      ctx.restore();

	      if (this.pointerAtBeginning()) {
	        ctx.save();
	        ctx.translate(points[0], points[1]);
	        dx = points[2] - points[0];
	        dy = points[3] - points[1];
	        ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);
	        ctx.moveTo(0, 0);
	        ctx.lineTo(-length, width / 2);
	        ctx.lineTo(-length, -width / 2);
	        ctx.closePath();
	        ctx.restore();
	      }
	      ctx.fillStrokeShape(this);
	    }
	  };

	  Konva.Util.extend(Konva.Arrow, Konva.Line);
	  /**
	     * get/set pointerLength
	     * @name pointerLength
	     * @method
	     * @memberof Konva.Arrow.prototype
	     * @param {Number} Length of pointer of arrow.
	     *   The default is 10.
	     * @returns {Number}
	     * @example
	     * // get tension
	     * var pointerLength = line.pointerLength();
	     *
	     * // set tension
	     * line.pointerLength(15);
	     */

	  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerLength', 10);
	  /**
	     * get/set pointerWidth
	     * @name pointerWidth
	     * @method
	     * @memberof Konva.Arrow.prototype
	     * @param {Number} Width of pointer of arrow.
	     *   The default is 10.
	     * @returns {Number}
	     * @example
	     * // get tension
	     * var pointerWidth = line.pointerWidth();
	     *
	     * // set tension
	     * line.pointerWidth(15);
	     */

	  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerWidth', 10);
	  /**
	     * get/set pointerAtBeginning
	     * @name pointerAtBeginning
	     * @method
	     * @memberof Konva.Arrow.prototype
	     * @param {Number} Should pointer displayed at beginning of arrow.
	     *   The default is false.
	     * @returns {Boolean}
	     * @example
	     * // get tension
	     * var pointerAtBeginning = line.pointerAtBeginning();
	     *
	     * // set tension
	     * line.pointerAtBeginning(true);
	     */

	  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);
	  Konva.Collection.mapMethods(Konva.Arrow);
	})(Konva);

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var React = __webpack_require__(3);
	var factory = __webpack_require__(31);

	if (typeof React === 'undefined') {
	  throw Error(
	    'create-react-class could not find the React object. If you are using script tags, ' +
	      'make sure that React is being loaded before create-react-class.'
	  );
	}

	// Hack to grab NoopUpdateQueue from isomorphic React
	var ReactNoopUpdateQueue = new React.Component().updater;

	module.exports = factory(
	  React.Component,
	  React.isValidElement,
	  ReactNoopUpdateQueue
	);


/***/ }),
/* 300 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var animatables = [];

	var animate = function animate() {
	  animatables.forEach(function (animatable) {
	    try {
	      animatable();
	    } catch (error) {
	      console.error(error);
	    }
	  });

	  window.requestAnimationFrame(animate);
	};

	window.requestAnimationFrame(animate);

	var addAnimateable = exports.addAnimateable = function addAnimateable(animatable) {
	  animatables.push(animatable);
	};

	var removeAnimateable = exports.removeAnimateable = function removeAnimateable(animatable) {
	  animatables = animatables.filter(function (a) {
	    return a === animatable;
	  });
	};

/***/ }),
/* 301 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var STAGE_WIDTH = exports.STAGE_WIDTH = 1024;
	var STAGE_HEIGHT = exports.STAGE_HEIGHT = 768;
	var WORLD_WIDTH = exports.WORLD_WIDTH = 6080;
	var PHOTO_WIDTH = exports.PHOTO_WIDTH = 275;
	var PHOTO_HEIGHT = exports.PHOTO_HEIGHT = 350;

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actions = __webpack_require__(235);

	var initialState = {
	  riders: []
	};

	var riderReducer = function riderReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];

	  switch (action.type) {
	    case _actions.RIDERS_SET:
	      return _extends({}, state, {
	        riders: action.payload
	      });
	    default:
	      return state;
	  }
	};

	exports.default = riderReducer;

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _gameContainer = __webpack_require__(304);

	Object.defineProperty(exports, 'GameContainer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_gameContainer).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	var _components = __webpack_require__(305);

	var _debug = __webpack_require__(574);

	var _debug2 = _interopRequireDefault(_debug);

	var _reactRedux = __webpack_require__(172);

	var _actions = __webpack_require__(235);

	var _socket = __webpack_require__(215);

	var _socket2 = _interopRequireDefault(_socket);

	var _settings = __webpack_require__(301);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var log = (0, _debug2.default)('GameContainer');

	var GameContainer = (_temp2 = _class = function (_Component) {
	  _inherits(GameContainer, _Component);

	  function GameContainer() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, GameContainer);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GameContainer.__proto__ || Object.getPrototypeOf(GameContainer)).call.apply(_ref, [this].concat(args))), _this), _this.newGame = function () {
	      _socket2.default.emit('admin:game:new', _this.props.adminToken);
	    }, _this.continueGame = function () {
	      _socket2.default.emit('admin:game:continue', _this.props.adminToken);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(GameContainer, [{
	    key: 'render',
	    value: function render() {
	      if (this.props.gameState === _gameState2.default.loading) {
	        return _react2.default.createElement(_components.LoadingAssets, null);
	      }

	      if (this.props.gameState === _gameState2.default.intro) {
	        return _react2.default.createElement(_components.Intro, {
	          onStart: this.continueGame,
	          onReset: this.newGame
	        });
	      }

	      if (this.props.gameState === _gameState2.default.riders) {
	        return _react2.default.createElement(_components.ChooseRiders, null);
	      }

	      if (this.props.gameState === _gameState2.default.countingDown || this.props.gameState === _gameState2.default.race || this.props.gameState === _gameState2.default.finishing) {
	        return _react2.default.createElement(_components.Game, { width: _settings.STAGE_WIDTH, height: _settings.STAGE_HEIGHT });
	      }

	      if (this.props.gameState === _gameState2.default.finished) {
	        return _react2.default.createElement(_components.Victory, null);
	      }

	      if (this.props.gameState === _gameState2.default.done) {
	        return _react2.default.createElement(_components.Champion, null);
	      }

	      return _react2.default.createElement(_components.Connecting, null);
	    }
	  }]);

	  return GameContainer;
	}(_react.Component), _class.propTypes = {
	  adminToken: _propTypes2.default.string.isRequired,
	  gameState: _propTypes2.default.string.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var token = _ref2.admin.token,
	      state = _ref2.game.state;
	  return {
	    adminToken: token,
	    gameState: state
	  };
	};

	var mapDispatchToProps = {
	  updateGameState: _actions.updateGameState
	};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(GameContainer);

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _game = __webpack_require__(306);

	Object.defineProperty(exports, 'Game', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_game).default;
	  }
	});

	var _intro = __webpack_require__(313);

	Object.defineProperty(exports, 'Intro', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_intro).default;
	  }
	});

	var _victory = __webpack_require__(538);

	Object.defineProperty(exports, 'Victory', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_victory).default;
	  }
	});

	var _connecting = __webpack_require__(540);

	Object.defineProperty(exports, 'Connecting', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_connecting).default;
	  }
	});

	var _app = __webpack_require__(541);

	Object.defineProperty(exports, 'App', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_app).default;
	  }
	});

	var _chooseRiders = __webpack_require__(563);

	Object.defineProperty(exports, 'ChooseRiders', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_chooseRiders).default;
	  }
	});

	var _champion = __webpack_require__(564);

	Object.defineProperty(exports, 'Champion', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_champion).default;
	  }
	});

	var _toolbar = __webpack_require__(565);

	Object.defineProperty(exports, 'ToolBar', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_toolbar).default;
	  }
	});

	var _loadingAssets = __webpack_require__(715);

	Object.defineProperty(exports, 'LoadingAssets', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_loadingAssets).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  width: ', 'px;\n  height: ', 'px;\n  background-color: #FFF;\n  margin: auto;\n'], ['\n  width: ', 'px;\n  height: ', 'px;\n  background-color: #FFF;\n  margin: auto;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _reactKonva = __webpack_require__(297);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _background = __webpack_require__(307);

	var _background2 = _interopRequireDefault(_background);

	var _road = __webpack_require__(308);

	var _road2 = _interopRequireDefault(_road);

	var _player = __webpack_require__(261);

	var _player2 = _interopRequireDefault(_player);

	var _playerStats = __webpack_require__(309);

	var _playerStats2 = _interopRequireDefault(_playerStats);

	var _countDown = __webpack_require__(311);

	var _countDown2 = _interopRequireDefault(_countDown);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	var _finishLine = __webpack_require__(312);

	var _finishLine2 = _interopRequireDefault(_finishLine);

	var _backgroundClouds = __webpack_require__(239);

	var _backgroundClouds2 = _interopRequireDefault(_backgroundClouds);

	var _backgroundCity = __webpack_require__(240);

	var _backgroundCity2 = _interopRequireDefault(_backgroundCity);

	var _backgroundTerraces = __webpack_require__(241);

	var _backgroundTerraces2 = _interopRequireDefault(_backgroundTerraces);

	var _backgroundRoad = __webpack_require__(242);

	var _backgroundRoad2 = _interopRequireDefault(_backgroundRoad);

	var _settings = __webpack_require__(301);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var StageWrapper = _styledComponents2.default.div(_templateObject, _settings.STAGE_WIDTH, _settings.STAGE_HEIGHT);

	var Game = (_temp2 = _class = function (_Component) {
	  _inherits(Game, _Component);

	  function Game() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Game);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Game.__proto__ || Object.getPrototypeOf(Game)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      canvas: null
	    }, _this.requestFullScreen = function () {
	      if (!_this.canvas) {
	        return;
	      }

	      _this.canvas.getCanvas().webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Game, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      return _react2.default.createElement(
	        StageWrapper,
	        null,
	        _react2.default.createElement(
	          _reactKonva.Stage,
	          {
	            width: this.props.width,
	            height: this.props.height,
	            ref: function ref(_ref3) {
	              return _this2.canvas = _ref3;
	            }
	          },
	          _react2.default.createElement(
	            _reactKonva.Layer,
	            null,
	            _react2.default.createElement(_background2.default, { image: _backgroundClouds2.default, width: 4096, height: 200, speed: 2, y: 60 }),
	            _react2.default.createElement(_background2.default, { image: _backgroundCity2.default, width: 4096, height: 451, speed: 4, y: 25 }),
	            _react2.default.createElement(_background2.default, { image: _backgroundTerraces2.default, width: 4056, height: 306, speed: 8, y: 334 }),
	            _react2.default.createElement(_road2.default, { y: 640 }),
	            _react2.default.createElement(_finishLine2.default, { y: 640 }),
	            this.props.gameState !== _gameState2.default.countingDown && this.props.players.map(function (player, index) {
	              return _react2.default.createElement(_playerStats2.default, {
	                x: index === 0 ? 10 : 519,
	                y: 10,
	                width: 495,
	                height: 154,
	                index: index,
	                key: player.id
	              });
	            }),
	            this.props.players.map(function (player, index) {
	              return _react2.default.createElement(_player2.default, {
	                player: player,
	                key: player.id,
	                yOffset: index === 0 ? 250 : 300,
	                xOffset: index === 0 ? 50 : 0
	              });
	            }),
	            _react2.default.createElement(_reactKonva.Rect, {
	              ref: function ref(_ref2) {
	                return _ref2 && _ref2.on('click', _this2.requestFullScreen);
	              },
	              x: 0,
	              y: 758,
	              width: 10,
	              height: 10
	            }),
	            this.props.gameState === _gameState2.default.countingDown && _react2.default.createElement(_countDown2.default, { 'data-id': 'count-down' })
	          )
	        )
	      );
	    }
	  }]);

	  return Game;
	}(_react.Component), _class.propTypes = {
	  width: _propTypes2.default.number.isRequired,
	  height: _propTypes2.default.number.isRequired,
	  players: _propTypes2.default.array.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref4) {
	  var state = _ref4.game.state,
	      players = _ref4.players.players;
	  return {
	    players: players,
	    gameState: state
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Game);

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _reactKonva = __webpack_require__(297);

	var _animator = __webpack_require__(300);

	var _assets = __webpack_require__(236);

	var _assets2 = _interopRequireDefault(_assets);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Background = (_temp2 = _class = function (_Component) {
	  _inherits(Background, _Component);

	  function Background() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Background);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Background.__proto__ || Object.getPrototypeOf(Background)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      xOffset: 0
	    }, _this.componentWillUnmount = function () {
	      (0, _animator.removeAnimateable)(_this.animate);
	    }, _this.animate = function () {
	      _this.setState(function (s) {
	        var offset = s.xOffset - _this.props.speed;

	        if (offset < 0 - (_this.props.width - 1025)) {
	          offset = 0;
	        }

	        return {
	          xOffset: offset
	        };
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Background, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      (0, _animator.addAnimateable)(this.animate);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_reactKonva.Image, {
	        image: _assets2.default.get(this.props.image),
	        x: 0 + this.state.xOffset,
	        y: this.props.y,
	        width: this.props.width,
	        height: this.props.height
	      });
	    }
	  }]);

	  return Background;
	}(_react.Component), _class.propTypes = {
	  image: _propTypes2.default.string.isRequired,
	  width: _propTypes2.default.number.isRequired,
	  height: _propTypes2.default.number.isRequired,
	  speed: _propTypes2.default.number.isRequired,
	  y: _propTypes2.default.number.isRequired
	}, _temp2);
	exports.default = Background;

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _reactKonva = __webpack_require__(297);

	var _backgroundRoad = __webpack_require__(242);

	var _backgroundRoad2 = _interopRequireDefault(_backgroundRoad);

	var _animator = __webpack_require__(300);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	var _settings = __webpack_require__(301);

	var _assets = __webpack_require__(236);

	var _assets2 = _interopRequireDefault(_assets);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Road = function (_Component) {
	  _inherits(Road, _Component);

	  function Road() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Road);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Road.__proto__ || Object.getPrototypeOf(Road)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      xOffset: 0
	    }, _this.componentWillUnmount = function () {
	      (0, _animator.removeAnimateable)(_this.animate);
	    }, _this.animate = function () {
	      _this.setState(function (s) {
	        return {
	          xOffset: s.xOffset < 0 - _settings.STAGE_WIDTH ? 0 : s.xOffset - 10
	        };
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Road, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      (0, _animator.addAnimateable)(this.animate);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_reactKonva.Image, {
	        fillPatternImage: _assets2.default.get(_backgroundRoad2.default),
	        fillPatternRepeat: 'repeat-x',
	        x: 0 + this.state.xOffset,
	        y: 640,
	        width: 2048,
	        height: 128
	      });
	    }
	  }]);

	  return Road;
	}(_react.Component);

	exports.default = Road;

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _reactKonva = __webpack_require__(297);

	var _rangeMap = __webpack_require__(229);

	var _rangeMap2 = _interopRequireDefault(_rangeMap);

	var _ff = __webpack_require__(310);

	var _ff2 = _interopRequireDefault(_ff);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	var _backgroundPower = __webpack_require__(244);

	var _backgroundPower2 = _interopRequireDefault(_backgroundPower);

	var _assets = __webpack_require__(236);

	var _assets2 = _interopRequireDefault(_assets);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var FF7Canvas = function FF7Canvas(_ref) {
	  var width = _ref.width,
	      height = _ref.height,
	      x = _ref.x,
	      y = _ref.y,
	      children = _ref.children;

	  return _react2.default.createElement(
	    _reactKonva.Group,
	    null,
	    _react2.default.createElement(_reactKonva.Rect, {
	      cornerRadius: 7,
	      x: x,
	      y: y,
	      width: width,
	      height: height,
	      fill: '#424542',
	      opacity: 0.7
	    }),
	    _react2.default.createElement(_reactKonva.Rect, {
	      cornerRadius: 7,
	      x: x + 2,
	      y: y + 2,
	      width: width - 4,
	      height: height - 4,
	      fillLinearGradientColorStops: [0, '#e7dfe7', 1, '#7b757b'],
	      fillLinearGradientStartPoint: { x: 0, y: 0 },
	      fillLinearGradientEndPoint: { x: 0, y: height - 4 },
	      opacity: 0.7
	    }),
	    _react2.default.createElement(_reactKonva.Rect, {
	      cornerRadius: 7,
	      x: x + 4,
	      y: y + 4,
	      width: width - 8,
	      height: height - 8,
	      fillLinearGradientColorStops: [0, '#04009d', 1, '#06004d'],
	      fillLinearGradientStartPoint: { x: 0, y: 0 },
	      fillLinearGradientEndPoint: { x: 0, y: height - 8 },
	      opacity: 0.7
	    }),
	    children
	  );
	};

	var PlayerStats = (_temp = _class = function (_Component) {
	  _inherits(PlayerStats, _Component);

	  function PlayerStats() {
	    _classCallCheck(this, PlayerStats);

	    return _possibleConstructorReturn(this, (PlayerStats.__proto__ || Object.getPrototypeOf(PlayerStats)).apply(this, arguments));
	  }

	  _createClass(PlayerStats, [{
	    key: 'render',
	    value: function render() {
	      var player = this.props.players[this.props.index];
	      var powerBarWidth = (0, _rangeMap2.default)(player.power > 1000 ? 1000 : player.power, 0, 1000, 0, 255);

	      return _react2.default.createElement(
	        FF7Canvas,
	        { x: this.props.x, y: this.props.y, width: this.props.width, height: this.props.height },
	        _react2.default.createElement(_reactKonva.Text, {
	          text: player.name,
	          x: this.props.x + 14,
	          y: this.props.y + 14,
	          fill: 'white',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 24,
	          shadowColor: '#424542',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        }),
	        _react2.default.createElement(_reactKonva.Text, {
	          text: 'Power',
	          x: this.props.x + 229,
	          y: this.props.y + 50,
	          fill: 'white',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 16,
	          shadowColor: '#424542',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        }),
	        _react2.default.createElement(_reactKonva.Image, {
	          fill: player.power > 1000 ? '#d54c38' : undefined,
	          fillPatternImage: player.power > 1000 ? undefined : _assets2.default.get(_backgroundPower2.default),
	          x: this.props.x + 229,
	          y: this.props.y + 74,
	          width: powerBarWidth,
	          height: 67
	        }),
	        _react2.default.createElement(_reactKonva.Text, {
	          text: player.power || '0',
	          x: this.props.x + 228 + (4 - player.power.toString().length) * 58,
	          y: this.props.y + 81,
	          fill: 'white',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 58,
	          shadowColor: '#424542',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        }),
	        _react2.default.createElement(_reactKonva.Text, {
	          text: 'w',
	          x: this.props.x + 460,
	          y: this.props.y + 111,
	          fill: 'white',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 24,
	          shadowColor: '#424542',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        }),
	        _react2.default.createElement(_reactKonva.Text, {
	          text: 'Distance',
	          x: this.props.x + 14,
	          y: this.props.y + 50,
	          fill: 'white',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 16,
	          shadowColor: '#424542',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        }),
	        _react2.default.createElement(_reactKonva.Text, {
	          text: player.metersRemaining,
	          x: this.props.x + 14 + (player.metersRemaining.toString().length === 3 ? 0 : 58),
	          y: this.props.y + 81,
	          fill: 'white',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 58,
	          shadowColor: '#424542',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        }),
	        _react2.default.createElement(_reactKonva.Text, {
	          text: 'm',
	          x: this.props.x + 190,
	          y: this.props.y + 111,
	          fill: 'white',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 24,
	          shadowColor: '#424542',
	          shadowOffsetX: 0,
	          shadowOffsetY: 3,
	          shadowBlur: 0
	        })
	      );
	    }
	  }]);

	  return PlayerStats;
	}(_react.Component), _class.propTypes = {
	  trackLength: _propTypes2.default.number.isRequired,
	  x: _propTypes2.default.number.isRequired,
	  y: _propTypes2.default.number.isRequired,
	  width: _propTypes2.default.number.isRequired,
	  height: _propTypes2.default.number.isRequired,
	  index: _propTypes2.default.number.isRequired,
	  players: _propTypes2.default.array.isRequired
	}, _temp);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var trackLength = _ref2.game.trackLength,
	      players = _ref2.players.players;
	  return {
	    trackLength: trackLength,
	    players: players
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PlayerStats);

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	            value: true
	});

	var _templateObject = _taggedTemplateLiteral(['\nborder: solid 1px #424542;\nbox-shadow: 1px 1px #e7dfe7,\n            -1px -1px #e7dfe7,\n            1px -1px #e7dfe7,\n            -1px 1px #e7dfe7,\n            0 -2px #9c9a9c,\n            -2px 0 #7b757b,\n            0 2px #424542;\nwidth: 250px;\npadding: 5px 10px;\nmargin: 50px 50px;\n\nbackground: #04009d;\nbackground: -moz-linear-gradient(top,  #04009d 0%, #06004d 100%);\nbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#04009d), color-stop(100%,#06004d));\nbackground: -webkit-linear-gradient(top,  #04009d 0%,#06004d 100%);\nbackground: -o-linear-gradient(top,  #04009d 0%,#06004d 100%);\nbackground: -ms-linear-gradient(top,  #04009d 0%,#06004d 100%);\nbackground: linear-gradient(to bottom,  #04009d 0%,#06004d 100%);\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\'#04009d\', endColorstr=\'#06004d\',GradientType=0 );\n\n-webkit-border-radius: 7px;\n-moz-border-radius: 7px;\nborder-radius: 7px;\n\n* {\n  color: #eff1ff;\n  text-shadow: 2px 2px #212421,\n               1px 1px #212021;\n  font-size: 16px;\n  margin: 5px 0;\n}\n'], ['\nborder: solid 1px #424542;\nbox-shadow: 1px 1px #e7dfe7,\n            -1px -1px #e7dfe7,\n            1px -1px #e7dfe7,\n            -1px 1px #e7dfe7,\n            0 -2px #9c9a9c,\n            -2px 0 #7b757b,\n            0 2px #424542;\nwidth: 250px;\npadding: 5px 10px;\nmargin: 50px 50px;\n\nbackground: #04009d;\nbackground: -moz-linear-gradient(top,  #04009d 0%, #06004d 100%);\nbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#04009d), color-stop(100%,#06004d));\nbackground: -webkit-linear-gradient(top,  #04009d 0%,#06004d 100%);\nbackground: -o-linear-gradient(top,  #04009d 0%,#06004d 100%);\nbackground: -ms-linear-gradient(top,  #04009d 0%,#06004d 100%);\nbackground: linear-gradient(to bottom,  #04009d 0%,#06004d 100%);\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\'#04009d\', endColorstr=\'#06004d\',GradientType=0 );\n\n-webkit-border-radius: 7px;\n-moz-border-radius: 7px;\nborder-radius: 7px;\n\n* {\n  color: #eff1ff;\n  text-shadow: 2px 2px #212421,\n               1px 1px #212021;\n  font-size: 16px;\n  margin: 5px 0;\n}\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var FF7 = _styledComponents2.default.div(_templateObject);

	exports.default = FF7;

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _reactKonva = __webpack_require__(297);

	var _actions = __webpack_require__(235);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CountDown = function (_Component) {
	  _inherits(CountDown, _Component);

	  function CountDown() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, CountDown);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CountDown.__proto__ || Object.getPrototypeOf(CountDown)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      count: 5
	    }, _this.countDown = function () {
	      _this.setState(function (s) {
	        return {
	          count: s.count - 1
	        };
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(CountDown, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.interval = setInterval(this.countDown, 1000);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearInterval(this.interval);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var message = this.state.count;
	      var x = 400;

	      if (this.state.count < 1) {
	        message = 'Go!';
	        x = 150;
	      }

	      return _react2.default.createElement(
	        _reactKonva.Group,
	        null,
	        _react2.default.createElement(_reactKonva.Text, {
	          text: message,
	          x: x,
	          y: 200,
	          fill: 'black',
	          fontFamily: '"Press Start 2P", monospace',
	          fontSize: 300
	        })
	      );
	    }
	  }]);

	  return CountDown;
	}(_react.Component);

	exports.default = CountDown;

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _reactKonva = __webpack_require__(297);

	var _finishLine = __webpack_require__(238);

	var _finishLine2 = _interopRequireDefault(_finishLine);

	var _animator = __webpack_require__(300);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	var _assets = __webpack_require__(236);

	var _assets2 = _interopRequireDefault(_assets);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var FinshLine = (_temp2 = _class = function (_Component) {
	  _inherits(FinshLine, _Component);

	  function FinshLine() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, FinshLine);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FinshLine.__proto__ || Object.getPrototypeOf(FinshLine)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      xOffset: 0
	    }, _this.componentWillUnmount = function () {
	      (0, _animator.removeAnimateable)(_this.animate);
	    }, _this.animate = function () {
	      if (_this.props.gameState !== _gameState2.default.finishing) {
	        return;
	      }

	      _this.setState(function (s) {
	        return {
	          xOffset: s.xOffset - 12
	        };
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(FinshLine, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      (0, _animator.addAnimateable)(this.animate);

	      this.setState({
	        xOffset: 0
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_reactKonva.Image, {
	        image: _assets2.default.get(_finishLine2.default),
	        x: 0 + this.state.xOffset,
	        y: 640,
	        width: 1152,
	        height: 128
	      });
	    }
	  }]);

	  return FinshLine;
	}(_react.Component), _class.propTypes = {
	  gameState: _propTypes2.default.string.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var state = _ref2.game.state;
	  return {
	    gameState: state
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FinshLine);

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  background-color: #FFF;\n  background-image: url(', ');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: ', 'px;\n  height: ', 'px;\n  margin: auto;\n  padding-top: 500px;\n'], ['\n  background-color: #FFF;\n  background-image: url(', ');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: ', 'px;\n  height: ', 'px;\n  margin: auto;\n  padding-top: 500px;\n']),
	    _templateObject2 = _taggedTemplateLiteral(['\n  margin-top: 0;\n'], ['\n  margin-top: 0;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _intro = __webpack_require__(243);

	var _intro2 = _interopRequireDefault(_intro);

	var _ff = __webpack_require__(310);

	var _ff2 = _interopRequireDefault(_ff);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _settings = __webpack_require__(301);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var IntroWrapper = _styledComponents2.default.div(_templateObject, _intro2.default, _settings.STAGE_WIDTH, _settings.STAGE_HEIGHT);

	var StartGame = _ff2.default.extend(_templateObject2);

	var Intro = (_temp2 = _class = function (_Component) {
	  _inherits(Intro, _Component);

	  function Intro() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Intro);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Intro.__proto__ || Object.getPrototypeOf(Intro)).call.apply(_ref, [this].concat(args))), _this), _this.onStart = function () {
	      if (_this.props.riders.length) {
	        return _this.props.onStart();
	      }

	      alert('Please add some riders first!');
	    }, _this.onReset = function () {
	      if (_this.props.riders.length) {
	        return _this.props.onReset();
	      }

	      alert('Please add some riders first!');
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Intro, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        IntroWrapper,
	        null,
	        _react2.default.createElement(
	          StartGame,
	          null,
	          _react2.default.createElement(
	            'p',
	            null,
	            'PCC Max Turbo'
	          ),
	          _react2.default.createElement(
	            _Button2.default,
	            { onClick: this.onReset },
	            'New Game >'
	          ),
	          _react2.default.createElement(
	            _Button2.default,
	            { onClick: this.onStart },
	            'Continue >'
	          )
	        )
	      );
	    }
	  }]);

	  return Intro;
	}(_react.Component), _class.propTypes = {
	  onStart: _propTypes2.default.func.isRequired,
	  onReset: _propTypes2.default.func.isRequired,
	  riders: _propTypes2.default.array.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var riders = _ref2.riders.riders;
	  return {
	    riders: riders
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Intro);

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Button = __webpack_require__(315);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Button).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _ref;
	// @inheritedComponent ButtonBase

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _colorManipulator = __webpack_require__(508);

	var _ButtonBase = __webpack_require__(522);

	var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: (0, _extends3.default)({}, theme.typography.button, {
	      lineHeight: '1.4em', // Improve readability for multiline button.
	      boxSizing: 'border-box',
	      minWidth: 88,
	      minHeight: 36,
	      padding: theme.spacing.unit + 'px ' + theme.spacing.unit * 2 + 'px',
	      borderRadius: 2,
	      color: theme.palette.text.primary,
	      transition: theme.transitions.create(['background-color', 'box-shadow'], {
	        duration: theme.transitions.duration.short
	      }),
	      '&:hover': {
	        textDecoration: 'none',
	        // Reset on mouse devices
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.text.primary, 0.12),
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        },
	        '&$disabled': {
	          backgroundColor: 'transparent'
	        }
	      }
	    }),
	    dense: {
	      padding: theme.spacing.unit - 1 + 'px ' + theme.spacing.unit + 'px',
	      minWidth: 64,
	      minHeight: 32,
	      fontSize: theme.typography.fontSize - 1
	    },
	    label: {
	      width: '100%',
	      display: 'inherit',
	      alignItems: 'inherit',
	      justifyContent: 'inherit'
	    },
	    flatPrimary: {
	      color: theme.palette.primary[500],
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary[500], 0.12),
	        // Reset on mouse devices
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    flatAccent: {
	      color: theme.palette.secondary.A200,
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.A200, 0.12),
	        // Reset on mouse devices
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    flatContrast: {
	      color: theme.palette.getContrastText(theme.palette.primary[500]),
	      '&:hover': {
	        backgroundColor: (0, _colorManipulator.fade)(theme.palette.getContrastText(theme.palette.primary[500]), 0.12),
	        // Reset on mouse devices
	        '@media (hover: none)': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    colorInherit: {
	      color: 'inherit'
	    },
	    raised: {
	      color: theme.palette.getContrastText(theme.palette.grey[300]),
	      backgroundColor: theme.palette.grey[300],
	      boxShadow: theme.shadows[2],
	      '&$keyboardFocused': {
	        boxShadow: theme.shadows[6]
	      },
	      '&:active': {
	        boxShadow: theme.shadows[8]
	      },
	      '&$disabled': {
	        boxShadow: theme.shadows[0],
	        backgroundColor: theme.palette.text.divider
	      },
	      '&:hover': {
	        backgroundColor: theme.palette.grey.A100,
	        // Reset on mouse devices
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.grey[300]
	        },
	        '&$disabled': {
	          backgroundColor: theme.palette.text.divider,
	          // Reset on mouse devices
	          '@media (hover: none)': {
	            backgroundColor: theme.palette.grey[300]
	          }
	        }
	      }
	    },
	    keyboardFocused: {},
	    raisedPrimary: {
	      color: theme.palette.getContrastText(theme.palette.primary[500]),
	      backgroundColor: theme.palette.primary[500],
	      '&:hover': {
	        backgroundColor: theme.palette.primary[700],
	        // Reset on mouse devices
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.primary[500]
	        }
	      }
	    },
	    raisedAccent: {
	      color: theme.palette.getContrastText(theme.palette.secondary.A200),
	      backgroundColor: theme.palette.secondary.A200,
	      '&:hover': {
	        backgroundColor: theme.palette.secondary.A400,
	        // Reset on mouse devices
	        '@media (hover: none)': {
	          backgroundColor: theme.palette.secondary.A200
	        }
	      }
	    },
	    raisedContrast: {
	      color: theme.palette.getContrastText(theme.palette.primary[500])
	    },
	    disabled: {
	      color: theme.palette.action.disabled
	    },
	    fab: {
	      borderRadius: '50%',
	      padding: 0,
	      minWidth: 0,
	      width: 56,
	      height: 56,
	      boxShadow: theme.shadows[6],
	      '&:active': {
	        boxShadow: theme.shadows[12]
	      }
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Color = __webpack_require__(174).oneOf(['default', 'inherit', 'primary', 'accent', 'contrast']);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  color: __webpack_require__(174).oneOf(['default', 'inherit', 'primary', 'accent', 'contrast']),
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  dense: __webpack_require__(174).bool,
	  disabled: __webpack_require__(174).bool,
	  disableFocusRipple: __webpack_require__(174).bool,
	  disableRipple: __webpack_require__(174).bool,
	  fab: __webpack_require__(174).bool,
	  href: __webpack_require__(174).string,
	  raised: __webpack_require__(174).bool,
	  type: __webpack_require__(174).string
	};


	function Button(props) {
	  var _classNames;

	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      dense = props.dense,
	      disabled = props.disabled,
	      disableFocusRipple = props.disableFocusRipple,
	      fab = props.fab,
	      raised = props.raised,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'dense', 'disabled', 'disableFocusRipple', 'fab', 'raised']);


	  var flat = !raised && !fab;
	  var className = (0, _classnames2.default)((_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.root, true), (0, _defineProperty3.default)(_classNames, classes.raised, raised || fab), (0, _defineProperty3.default)(_classNames, classes.fab, fab), (0, _defineProperty3.default)(_classNames, classes.colorInherit, color === 'inherit'), (0, _defineProperty3.default)(_classNames, classes.flatPrimary, flat && color === 'primary'), (0, _defineProperty3.default)(_classNames, classes.flatAccent, flat && color === 'accent'), (0, _defineProperty3.default)(_classNames, classes.flatContrast, flat && color === 'contrast'), (0, _defineProperty3.default)(_classNames, classes.raisedPrimary, !flat && color === 'primary'), (0, _defineProperty3.default)(_classNames, classes.raisedAccent, !flat && color === 'accent'), (0, _defineProperty3.default)(_classNames, classes.raisedContrast, !flat && color === 'contrast'), (0, _defineProperty3.default)(_classNames, classes.dense, dense), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames), classNameProp);

	  return _react2.default.createElement(
	    _ButtonBase2.default,
	    (0, _extends3.default)({
	      className: className,
	      disabled: disabled,
	      focusRipple: !disableFocusRipple,
	      keyboardFocusedClassName: classes.keyboardFocused
	    }, other),
	    _react2.default.createElement(
	      'span',
	      { className: classes.label },
	      children
	    )
	  );
	}

	Button.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  color: require('prop-types').oneOf(['default', 'inherit', 'primary', 'accent', 'contrast']).isRequired,
	  dense: require('prop-types').bool.isRequired,
	  disabled: require('prop-types').bool.isRequired,
	  fab: require('prop-types').bool.isRequired,
	  disableFocusRipple: require('prop-types').bool.isRequired,
	  raised: require('prop-types').bool.isRequired,
	  disableRipple: require('prop-types').bool.isRequired,
	  type: require('prop-types').string.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'color', require('prop-types').oneOf(['default', 'inherit', 'primary', 'accent', 'contrast'])), (0, _defineProperty3.default)(_ref, 'component', typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType)), (0, _defineProperty3.default)(_ref, 'dense', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'disabled', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'disableFocusRipple', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'disableRipple', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'fab', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'href', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'raised', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'type', require('prop-types').string), _ref) : {};
	Button.defaultProps = {
	  color: 'default',
	  dense: false,
	  disabled: false,
	  fab: false,
	  disableFocusRipple: false,
	  raised: false,
	  disableRipple: false,
	  type: 'button'
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiButton' })(Button);

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _defineProperty = __webpack_require__(317);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	};

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(318), __esModule: true };

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(319);
	var $Object = __webpack_require__(322).Object;
	module.exports = function defineProperty(it, key, desc) {
	  return $Object.defineProperty(it, key, desc);
	};


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(320);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(330), 'Object', { defineProperty: __webpack_require__(326).f });


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(321);
	var core = __webpack_require__(322);
	var ctx = __webpack_require__(323);
	var hide = __webpack_require__(325);
	var PROTOTYPE = 'prototype';

	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && key in exports) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 321 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 322 */
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.5.1' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(324);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 324 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(326);
	var createDesc = __webpack_require__(334);
	module.exports = __webpack_require__(330) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(327);
	var IE8_DOM_DEFINE = __webpack_require__(329);
	var toPrimitive = __webpack_require__(333);
	var dP = Object.defineProperty;

	exports.f = __webpack_require__(330) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(328);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 328 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(330) && !__webpack_require__(331)(function () {
	  return Object.defineProperty(__webpack_require__(332)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(331)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 331 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(328);
	var document = __webpack_require__(321).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(328);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 334 */
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 335 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (obj, keys) {
	  var target = {};

	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }

	  return target;
	};

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _assign = __webpack_require__(337);

	var _assign2 = _interopRequireDefault(_assign);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(338), __esModule: true };

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(339);
	module.exports = __webpack_require__(322).Object.assign;


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(320);

	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(340) });


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(341);
	var gOPS = __webpack_require__(356);
	var pIE = __webpack_require__(357);
	var toObject = __webpack_require__(358);
	var IObject = __webpack_require__(345);
	var $assign = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(331)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(342);
	var enumBugKeys = __webpack_require__(355);

	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(343);
	var toIObject = __webpack_require__(344);
	var arrayIndexOf = __webpack_require__(348)(false);
	var IE_PROTO = __webpack_require__(352)('IE_PROTO');

	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ }),
/* 343 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(345);
	var defined = __webpack_require__(347);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(346);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 346 */
/***/ (function(module, exports) {

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 347 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(344);
	var toLength = __webpack_require__(349);
	var toAbsoluteIndex = __webpack_require__(351);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(350);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 350 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(350);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(353)('keys');
	var uid = __webpack_require__(354);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(321);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};


/***/ }),
/* 354 */
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 355 */
/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ }),
/* 356 */
/***/ (function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 357 */
/***/ (function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(347);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.sheetsManager = undefined;

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _map = __webpack_require__(413);

	var _map2 = _interopRequireDefault(_map);

	var _minSafeInteger = __webpack_require__(437);

	var _minSafeInteger2 = _interopRequireDefault(_minSafeInteger);

	var _toConsumableArray2 = __webpack_require__(440);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _hoistNonReactStatics = __webpack_require__(296);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _wrapDisplayName = __webpack_require__(447);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	var _getDisplayName = __webpack_require__(448);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	var _contextTypes = __webpack_require__(449);

	var _contextTypes2 = _interopRequireDefault(_contextTypes);

	var _jss = __webpack_require__(453);

	var _jssPresetDefault = __webpack_require__(478);

	var _jssPresetDefault2 = _interopRequireDefault(_jssPresetDefault);

	var _jssRtl = __webpack_require__(496);

	var _jssRtl2 = _interopRequireDefault(_jssRtl);

	var _ns = __webpack_require__(495);

	var ns = _interopRequireWildcard(_ns);

	var _createMuiTheme = __webpack_require__(498);

	var _createMuiTheme2 = _interopRequireDefault(_createMuiTheme);

	var _themeListener = __webpack_require__(517);

	var _themeListener2 = _interopRequireDefault(_themeListener);

	var _createGenerateClassName = __webpack_require__(518);

	var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);

	var _getStylesCreator = __webpack_require__(520);

	var _getStylesCreator2 = _interopRequireDefault(_getStylesCreator);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_HigherOrderComponent = __webpack_require__(521).babelPluginFlowReactPropTypes_proptype_HigherOrderComponent || __webpack_require__(174).any; //  weak

	var presets = (0, _jssPresetDefault2.default)().plugins;
	var jss = (0, _jss.create)({ plugins: [].concat((0, _toConsumableArray3.default)(presets), [(0, _jssRtl2.default)()]) });

	// Use a singleton or the provided one by the context.
	var generateClassName = (0, _createGenerateClassName2.default)();

	// Global index counter to preserve source order.
	// As we create the style sheet during componentWillMount lifecycle,
	// children are handled after the parents, so the order of style elements would
	// be parent->child. It is a problem though when a parent passes a className
	// which needs to override any childs styles. StyleSheet of the child has a higher
	// specificity, because of the source order.
	// So our solution is to render sheets them in the reverse order child->sheet, so
	// that parent has a higher specificity.
	var indexCounter = _minSafeInteger2.default;

	var sheetsManager = exports.sheetsManager = new _map2.default();

	// We use the same empty object to ref count the styles that don't need a theme object.
	var noopTheme = {};

	// In order to have self-supporting components, we rely on default theme when not provided.
	var defaultTheme = void 0;

	function getDefaultTheme() {
	  if (defaultTheme) {
	    return defaultTheme;
	  }

	  defaultTheme = (0, _createMuiTheme2.default)();
	  return defaultTheme;
	}

	var babelPluginFlowReactPropTypes_proptype_RequiredProps = {
	  classes: __webpack_require__(174).object,
	  innerRef: __webpack_require__(174).func
	};
	var babelPluginFlowReactPropTypes_proptype_InjectedProps = {
	  classes: __webpack_require__(174).object.isRequired,
	  theme: __webpack_require__(174).object.isRequired
	};

	// Note, theme is conditionally injected, but flow is static analysis so we need to include it.

	// Link a style sheet with a component.
	// It does not modify the component passed to it;
	// instead, it returns a new component, with a `classes` property.
	var withStyles = function withStyles(stylesOrCreator) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  return function (Component) {
	    var _options$withTheme = options.withTheme,
	        withTheme = _options$withTheme === undefined ? false : _options$withTheme,
	        flip = options.flip,
	        name = options.name,
	        styleSheetOptions = (0, _objectWithoutProperties3.default)(options, ['withTheme', 'flip', 'name']);

	    var stylesCreator = (0, _getStylesCreator2.default)(stylesOrCreator);
	    var listenToTheme = stylesCreator.themingEnabled || withTheme || typeof name === 'string';

	    if (stylesCreator.options.index === undefined) {
	      indexCounter += 1;
	      stylesCreator.options.index = indexCounter;
	    }

	     false ? (0, _warning2.default)(indexCounter < 0, ['Material-UI: you might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join(' ')) : void 0;

	    var Style = function (_React$Component) {
	      (0, _inherits3.default)(Style, _React$Component);

	      function Style(props, context) {
	        (0, _classCallCheck3.default)(this, Style);

	        var _this = (0, _possibleConstructorReturn3.default)(this, (Style.__proto__ || (0, _getPrototypeOf2.default)(Style)).call(this, props, context));

	        _this.state = {};
	        _this.unsubscribeId = null;
	        _this.jss = null;
	        _this.sheetsManager = null;
	        _this.stylesCreatorSaved = null;
	        _this.theme = null;
	        _this.sheetOptions = null;
	        _this.theme = null;

	        _this.jss = _this.context[ns.jss] || jss;
	        _this.sheetsManager = _this.context.sheetsManager || sheetsManager;
	        // Attach the stylesCreator to the instance of the component as in the context
	        // of react-hot-loader the hooks can be executed in a different closure context:
	        // https://github.com/gaearon/react-hot-loader/blob/master/src/patch.dev.js#L107
	        _this.stylesCreatorSaved = stylesCreator;
	        _this.sheetOptions = (0, _extends3.default)({
	          generateClassName: generateClassName
	        }, _this.context[ns.sheetOptions]);
	        // We use || as it's lazy evaluated.
	        _this.theme = listenToTheme ? _themeListener2.default.initial(context) || getDefaultTheme() : noopTheme;
	        return _this;
	      }

	      // Exposed for test purposes.


	      // Exposed for tests purposes


	      (0, _createClass3.default)(Style, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	          this.attach(this.theme);
	        }
	      }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	          var _this2 = this;

	          if (!listenToTheme) {
	            return;
	          }

	          this.unsubscribeId = _themeListener2.default.subscribe(this.context, function (theme) {
	            var oldTheme = _this2.theme;
	            _this2.theme = theme;
	            _this2.attach(_this2.theme);

	            // Rerender the component so the underlying component gets the theme update.
	            _this2.setState({}, function () {
	              _this2.detach(oldTheme);
	            });
	          });
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          this.detach(this.theme);

	          if (this.unsubscribeId !== null) {
	            _themeListener2.default.unsubscribe(this.context, this.unsubscribeId);
	          }
	        }
	      }, {
	        key: 'attach',
	        value: function attach(theme) {
	          var stylesCreatorSaved = this.stylesCreatorSaved;
	          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);

	          if (!sheetManager) {
	            sheetManager = new _map2.default();
	            this.sheetsManager.set(stylesCreatorSaved, sheetManager);
	          }

	          var sheetManagerTheme = sheetManager.get(theme);

	          if (!sheetManagerTheme) {
	            sheetManagerTheme = {
	              refs: 0,
	              sheet: null
	            };
	            sheetManager.set(theme, sheetManagerTheme);
	          }

	          if (sheetManagerTheme.refs === 0) {
	            var styles = stylesCreatorSaved.create(theme, name);
	            var _meta = void 0;

	            if (false) {
	              _meta = name || (0, _getDisplayName2.default)(Component);
	              // Sanitize the string as will be used in development to prefix the generated
	              // class name.
	              _meta = _meta.replace(new RegExp(/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g), '-');
	            }

	            var sheet = this.jss.createStyleSheet(styles, (0, _extends3.default)({
	              meta: _meta,
	              flip: typeof flip === 'boolean' ? flip : theme.direction === 'rtl',
	              link: false
	            }, this.sheetOptions, stylesCreatorSaved.options, {
	              name: name
	            }, styleSheetOptions));

	            sheetManagerTheme.sheet = sheet;
	            sheet.attach();

	            var sheetsRegistry = this.context[ns.sheetsRegistry];
	            if (sheetsRegistry) {
	              sheetsRegistry.add(sheet);
	            }
	          }

	          sheetManagerTheme.refs += 1;
	        }
	      }, {
	        key: 'detach',
	        value: function detach(theme) {
	          var stylesCreatorSaved = this.stylesCreatorSaved;
	          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);
	          var sheetManagerTheme = sheetManager.get(theme);

	          sheetManagerTheme.refs -= 1;

	          if (sheetManagerTheme.refs === 0) {
	            sheetManager.delete(theme);
	            this.jss.removeStyleSheet(sheetManagerTheme.sheet);
	            var sheetsRegistry = this.context[ns.sheetsRegistry];
	            if (sheetsRegistry) {
	              sheetsRegistry.remove(sheetManagerTheme.sheet);
	            }
	          }
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var _props = this.props,
	              classesProp = _props.classes,
	              innerRef = _props.innerRef,
	              other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'innerRef']);


	          var classes = void 0;
	          var sheetManager = this.sheetsManager.get(this.stylesCreatorSaved);
	          var sheetsManagerTheme = sheetManager.get(this.theme);
	          var renderedClasses = sheetsManagerTheme.sheet.classes;

	          if (classesProp) {
	            classes = (0, _extends3.default)({}, renderedClasses, (0, _keys2.default)(classesProp).reduce(function (accumulator, key) {
	               false ? (0, _warning2.default)(renderedClasses[key], ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not implemented in ' + (0, _getDisplayName2.default)(Component) + '.'), 'You can only override one of the following: ' + (0, _keys2.default)(renderedClasses).join(',')].join('\n')) : void 0;

	               false ? (0, _warning2.default)(!classesProp[key] || typeof classesProp[key] === 'string', ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not valid for ' + (0, _getDisplayName2.default)(Component) + '.'), 'You need to provide a non empty string instead of: ' + classesProp[key] + '.'].join('\n')) : void 0;

	              if (classesProp[key]) {
	                accumulator[key] = renderedClasses[key] + ' ' + classesProp[key];
	              }

	              return accumulator;
	            }, {}));
	          } else {
	            classes = renderedClasses;
	          }

	          var more = {};

	          // Provide the theme to the wrapped component.
	          // So we don't have to use the `withTheme()` Higher-order Component.
	          if (withTheme) {
	            more.theme = this.theme;
	          }

	          return _react2.default.createElement(Component, (0, _extends3.default)({ classes: classes, ref: innerRef }, more, other));
	        }
	      }]);
	      return Style;
	    }(_react2.default.Component);

	    Style.contextTypes = (0, _extends3.default)({
	      sheetsManager: _propTypes2.default.object
	    }, _contextTypes2.default, listenToTheme ? _themeListener2.default.contextTypes : {});
	    Style.Naked = Component;
	    Style.propTypes =  false ? {
	      classes: require('prop-types').object,
	      innerRef: require('prop-types').func
	    } : {};


	    (0, _hoistNonReactStatics2.default)(Style, Component);

	    // Higher specificity
	    Style.options = options;

	    if (false) {
	      Style.displayName = (0, _wrapDisplayName2.default)(Component, 'withStyles');
	    }

	    return Style;
	  };
	};

	exports.default = withStyles;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(362), __esModule: true };

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(363);
	module.exports = __webpack_require__(322).Object.keys;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(358);
	var $keys = __webpack_require__(341);

	__webpack_require__(364)('keys', function () {
	  return function keys(it) {
	    return $keys(toObject(it));
	  };
	});


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(320);
	var core = __webpack_require__(322);
	var fails = __webpack_require__(331);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(366), __esModule: true };

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(367);
	module.exports = __webpack_require__(322).Object.getPrototypeOf;


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(358);
	var $getPrototypeOf = __webpack_require__(368);

	__webpack_require__(364)('getPrototypeOf', function () {
	  return function getPrototypeOf(it) {
	    return $getPrototypeOf(toObject(it));
	  };
	});


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(343);
	var toObject = __webpack_require__(358);
	var IE_PROTO = __webpack_require__(352)('IE_PROTO');
	var ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ }),
/* 369 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _defineProperty = __webpack_require__(317);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _typeof2 = __webpack_require__(372);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _iterator = __webpack_require__(373);

	var _iterator2 = _interopRequireDefault(_iterator);

	var _symbol = __webpack_require__(392);

	var _symbol2 = _interopRequireDefault(_symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(374), __esModule: true };

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(375);
	__webpack_require__(387);
	module.exports = __webpack_require__(391).f('iterator');


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(376)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(377)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(350);
	var defined = __webpack_require__(347);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(378);
	var $export = __webpack_require__(320);
	var redefine = __webpack_require__(379);
	var hide = __webpack_require__(325);
	var has = __webpack_require__(343);
	var Iterators = __webpack_require__(380);
	var $iterCreate = __webpack_require__(381);
	var setToStringTag = __webpack_require__(385);
	var getPrototypeOf = __webpack_require__(368);
	var ITERATOR = __webpack_require__(386)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';

	var returnThis = function () { return this; };

	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = $native || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ }),
/* 378 */
/***/ (function(module, exports) {

	module.exports = true;


/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(325);


/***/ }),
/* 380 */
/***/ (function(module, exports) {

	module.exports = {};


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(382);
	var descriptor = __webpack_require__(334);
	var setToStringTag = __webpack_require__(385);
	var IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(325)(IteratorPrototype, __webpack_require__(386)('iterator'), function () { return this; });

	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(327);
	var dPs = __webpack_require__(383);
	var enumBugKeys = __webpack_require__(355);
	var IE_PROTO = __webpack_require__(352)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(332)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(384).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(326);
	var anObject = __webpack_require__(327);
	var getKeys = __webpack_require__(341);

	module.exports = __webpack_require__(330) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(321).document;
	module.exports = document && document.documentElement;


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(326).f;
	var has = __webpack_require__(343);
	var TAG = __webpack_require__(386)('toStringTag');

	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(353)('wks');
	var uid = __webpack_require__(354);
	var Symbol = __webpack_require__(321).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(388);
	var global = __webpack_require__(321);
	var hide = __webpack_require__(325);
	var Iterators = __webpack_require__(380);
	var TO_STRING_TAG = __webpack_require__(386)('toStringTag');

	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');

	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(389);
	var step = __webpack_require__(390);
	var Iterators = __webpack_require__(380);
	var toIObject = __webpack_require__(344);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(377)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ }),
/* 389 */
/***/ (function(module, exports) {

	module.exports = function () { /* empty */ };


/***/ }),
/* 390 */
/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(386);


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(393), __esModule: true };

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(394);
	__webpack_require__(402);
	__webpack_require__(403);
	__webpack_require__(404);
	module.exports = __webpack_require__(322).Symbol;


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global = __webpack_require__(321);
	var has = __webpack_require__(343);
	var DESCRIPTORS = __webpack_require__(330);
	var $export = __webpack_require__(320);
	var redefine = __webpack_require__(379);
	var META = __webpack_require__(395).KEY;
	var $fails = __webpack_require__(331);
	var shared = __webpack_require__(353);
	var setToStringTag = __webpack_require__(385);
	var uid = __webpack_require__(354);
	var wks = __webpack_require__(386);
	var wksExt = __webpack_require__(391);
	var wksDefine = __webpack_require__(396);
	var enumKeys = __webpack_require__(397);
	var isArray = __webpack_require__(398);
	var anObject = __webpack_require__(327);
	var toIObject = __webpack_require__(344);
	var toPrimitive = __webpack_require__(333);
	var createDesc = __webpack_require__(334);
	var _create = __webpack_require__(382);
	var gOPNExt = __webpack_require__(399);
	var $GOPD = __webpack_require__(401);
	var $DP = __webpack_require__(326);
	var $keys = __webpack_require__(341);
	var gOPD = $GOPD.f;
	var dP = $DP.f;
	var gOPN = gOPNExt.f;
	var $Symbol = global.Symbol;
	var $JSON = global.JSON;
	var _stringify = $JSON && $JSON.stringify;
	var PROTOTYPE = 'prototype';
	var HIDDEN = wks('_hidden');
	var TO_PRIMITIVE = wks('toPrimitive');
	var isEnum = {}.propertyIsEnumerable;
	var SymbolRegistry = shared('symbol-registry');
	var AllSymbols = shared('symbols');
	var OPSymbols = shared('op-symbols');
	var ObjectProto = Object[PROTOTYPE];
	var USE_NATIVE = typeof $Symbol == 'function';
	var QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function () { return dP(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function (tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P));
	  var i = 0;
	  var l = keys.length;
	  var key;
	  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto;
	  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function (value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(400).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(357).f = $propertyIsEnumerable;
	  __webpack_require__(356).f = $getOwnPropertySymbols;

	  if (DESCRIPTORS && !__webpack_require__(378)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

	for (var es6Symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

	for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function (key) {
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
	    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
	  },
	  useSetter: function () { setter = true; },
	  useSimple: function () { setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    var args = [it];
	    var i = 1;
	    var replacer, $replacer;
	    while (arguments.length > i) args.push(arguments[i++]);
	    replacer = args[1];
	    if (typeof replacer == 'function') $replacer = replacer;
	    if ($replacer || !isArray(replacer)) replacer = function (key, value) {
	      if ($replacer) value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(325)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	var META = __webpack_require__(354)('meta');
	var isObject = __webpack_require__(328);
	var has = __webpack_require__(343);
	var setDesc = __webpack_require__(326).f;
	var id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(331)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function (it) {
	  setDesc(it, META, { value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  } });
	};
	var fastKey = function (it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function (it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(321);
	var core = __webpack_require__(322);
	var LIBRARY = __webpack_require__(378);
	var wksExt = __webpack_require__(391);
	var defineProperty = __webpack_require__(326).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(341);
	var gOPS = __webpack_require__(356);
	var pIE = __webpack_require__(357);
	module.exports = function (it) {
	  var result = getKeys(it);
	  var getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it);
	    var isEnum = pIE.f;
	    var i = 0;
	    var key;
	    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
	  } return result;
	};


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(346);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(344);
	var gOPN = __webpack_require__(400).f;
	var toString = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function (it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(342);
	var hiddenKeys = __webpack_require__(355).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	var pIE = __webpack_require__(357);
	var createDesc = __webpack_require__(334);
	var toIObject = __webpack_require__(344);
	var toPrimitive = __webpack_require__(333);
	var has = __webpack_require__(343);
	var IE8_DOM_DEFINE = __webpack_require__(329);
	var gOPD = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(330) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) { /* empty */ }
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};


/***/ }),
/* 402 */
/***/ (function(module, exports) {

	

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(396)('asyncIterator');


/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(396)('observable');


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _setPrototypeOf = __webpack_require__(406);

	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

	var _create = __webpack_require__(410);

	var _create2 = _interopRequireDefault(_create);

	var _typeof2 = __webpack_require__(372);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }

	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(407), __esModule: true };

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(408);
	module.exports = __webpack_require__(322).Object.setPrototypeOf;


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(320);
	$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(409).set });


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(328);
	var anObject = __webpack_require__(327);
	var check = function (O, proto) {
	  anObject(O);
	  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function (test, buggy, set) {
	      try {
	        set = __webpack_require__(323)(Function.call, __webpack_require__(401).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch (e) { buggy = true; }
	      return function setPrototypeOf(O, proto) {
	        check(O, proto);
	        if (buggy) O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(411), __esModule: true };

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(412);
	var $Object = __webpack_require__(322).Object;
	module.exports = function create(P, D) {
	  return $Object.create(P, D);
	};


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(320);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(382) });


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(414), __esModule: true };

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(402);
	__webpack_require__(375);
	__webpack_require__(387);
	__webpack_require__(415);
	__webpack_require__(430);
	__webpack_require__(433);
	__webpack_require__(435);
	module.exports = __webpack_require__(322).Map;


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(416);
	var validate = __webpack_require__(425);
	var MAP = 'Map';

	// 23.1 Map Objects
	module.exports = __webpack_require__(426)(MAP, function (get) {
	  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key) {
	    var entry = strong.getEntry(validate(this, MAP), key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value) {
	    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
	  }
	}, strong, true);


/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var dP = __webpack_require__(326).f;
	var create = __webpack_require__(382);
	var redefineAll = __webpack_require__(417);
	var ctx = __webpack_require__(323);
	var anInstance = __webpack_require__(418);
	var forOf = __webpack_require__(419);
	var $iterDefine = __webpack_require__(377);
	var step = __webpack_require__(390);
	var setSpecies = __webpack_require__(424);
	var DESCRIPTORS = __webpack_require__(330);
	var fastKey = __webpack_require__(395).fastKey;
	var validate = __webpack_require__(425);
	var SIZE = DESCRIPTORS ? '_s' : 'size';

	var getEntry = function (that, key) {
	  // fast case
	  var index = fastKey(key);
	  var entry;
	  if (index !== 'F') return that._i[index];
	  // frozen object case
	  for (entry = that._f; entry; entry = entry.n) {
	    if (entry.k == key) return entry;
	  }
	};

	module.exports = {
	  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
	    var C = wrapper(function (that, iterable) {
	      anInstance(that, C, NAME, '_i');
	      that._t = NAME;         // collection type
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear() {
	        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
	          entry.r = true;
	          if (entry.p) entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function (key) {
	        var that = validate(this, NAME);
	        var entry = getEntry(that, key);
	        if (entry) {
	          var next = entry.n;
	          var prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if (prev) prev.n = next;
	          if (next) next.p = prev;
	          if (that._f == entry) that._f = next;
	          if (that._l == entry) that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /* , that = undefined */) {
	        validate(this, NAME);
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
	        var entry;
	        while (entry = entry ? entry.n : this._f) {
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while (entry && entry.r) entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key) {
	        return !!getEntry(validate(this, NAME), key);
	      }
	    });
	    if (DESCRIPTORS) dP(C.prototype, 'size', {
	      get: function () {
	        return validate(this, NAME)[SIZE];
	      }
	    });
	    return C;
	  },
	  def: function (that, key, value) {
	    var entry = getEntry(that, key);
	    var prev, index;
	    // change existing entry
	    if (entry) {
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if (!that._f) that._f = entry;
	      if (prev) prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if (index !== 'F') that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function (C, NAME, IS_MAP) {
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function (iterated, kind) {
	      this._t = validate(iterated, NAME); // target
	      this._k = kind;                     // kind
	      this._l = undefined;                // previous
	    }, function () {
	      var that = this;
	      var kind = that._k;
	      var entry = that._l;
	      // revert to the last existing entry
	      while (entry && entry.r) entry = entry.p;
	      // get next entry
	      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if (kind == 'keys') return step(0, entry.k);
	      if (kind == 'values') return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};


/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

	var hide = __webpack_require__(325);
	module.exports = function (target, src, safe) {
	  for (var key in src) {
	    if (safe && target[key]) target[key] = src[key];
	    else hide(target, key, src[key]);
	  } return target;
	};


/***/ }),
/* 418 */
/***/ (function(module, exports) {

	module.exports = function (it, Constructor, name, forbiddenField) {
	  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};


/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

	var ctx = __webpack_require__(323);
	var call = __webpack_require__(420);
	var isArrayIter = __webpack_require__(421);
	var anObject = __webpack_require__(327);
	var toLength = __webpack_require__(349);
	var getIterFn = __webpack_require__(422);
	var BREAK = {};
	var RETURN = {};
	var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
	  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
	  var f = ctx(fn, that, entries ? 2 : 1);
	  var index = 0;
	  var length, step, iterator, result;
	  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if (result === BREAK || result === RETURN) return result;
	  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
	    result = call(iterator, f, step.value, entries);
	    if (result === BREAK || result === RETURN) return result;
	  }
	};
	exports.BREAK = BREAK;
	exports.RETURN = RETURN;


/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(327);
	module.exports = function (iterator, fn, value, entries) {
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch (e) {
	    var ret = iterator['return'];
	    if (ret !== undefined) anObject(ret.call(iterator));
	    throw e;
	  }
	};


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators = __webpack_require__(380);
	var ITERATOR = __webpack_require__(386)('iterator');
	var ArrayProto = Array.prototype;

	module.exports = function (it) {
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};


/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(423);
	var ITERATOR = __webpack_require__(386)('iterator');
	var Iterators = __webpack_require__(380);
	module.exports = __webpack_require__(322).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(346);
	var TAG = __webpack_require__(386)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};

	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var global = __webpack_require__(321);
	var core = __webpack_require__(322);
	var dP = __webpack_require__(326);
	var DESCRIPTORS = __webpack_require__(330);
	var SPECIES = __webpack_require__(386)('species');

	module.exports = function (KEY) {
	  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
	  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
	    configurable: true,
	    get: function () { return this; }
	  });
	};


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(328);
	module.exports = function (it, TYPE) {
	  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
	  return it;
	};


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var global = __webpack_require__(321);
	var $export = __webpack_require__(320);
	var meta = __webpack_require__(395);
	var fails = __webpack_require__(331);
	var hide = __webpack_require__(325);
	var redefineAll = __webpack_require__(417);
	var forOf = __webpack_require__(419);
	var anInstance = __webpack_require__(418);
	var isObject = __webpack_require__(328);
	var setToStringTag = __webpack_require__(385);
	var dP = __webpack_require__(326).f;
	var each = __webpack_require__(427)(0);
	var DESCRIPTORS = __webpack_require__(330);

	module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
	  var Base = global[NAME];
	  var C = Base;
	  var ADDER = IS_MAP ? 'set' : 'add';
	  var proto = C && C.prototype;
	  var O = {};
	  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
	    new C().entries().next();
	  }))) {
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    C = wrapper(function (target, iterable) {
	      anInstance(target, C, NAME, '_c');
	      target._c = new Base();
	      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
	    });
	    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
	      var IS_ADDER = KEY == 'add' || KEY == 'set';
	      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
	        anInstance(this, C, KEY);
	        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
	        var result = this._c[KEY](a === 0 ? 0 : a, b);
	        return IS_ADDER ? this : result;
	      });
	    });
	    IS_WEAK || dP(C.prototype, 'size', {
	      get: function () {
	        return this._c.size;
	      }
	    });
	  }

	  setToStringTag(C, NAME);

	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F, O);

	  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

	  return C;
	};


/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx = __webpack_require__(323);
	var IObject = __webpack_require__(345);
	var toObject = __webpack_require__(358);
	var toLength = __webpack_require__(349);
	var asc = __webpack_require__(428);
	module.exports = function (TYPE, $create) {
	  var IS_MAP = TYPE == 1;
	  var IS_FILTER = TYPE == 2;
	  var IS_SOME = TYPE == 3;
	  var IS_EVERY = TYPE == 4;
	  var IS_FIND_INDEX = TYPE == 6;
	  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
	  var create = $create || asc;
	  return function ($this, callbackfn, that) {
	    var O = toObject($this);
	    var self = IObject(O);
	    var f = ctx(callbackfn, that, 3);
	    var length = toLength(self.length);
	    var index = 0;
	    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
	    var val, res;
	    for (;length > index; index++) if (NO_HOLES || index in self) {
	      val = self[index];
	      res = f(val, index, O);
	      if (TYPE) {
	        if (IS_MAP) result[index] = res;   // map
	        else if (res) switch (TYPE) {
	          case 3: return true;             // some
	          case 5: return val;              // find
	          case 6: return index;            // findIndex
	          case 2: result.push(val);        // filter
	        } else if (IS_EVERY) return false; // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(429);

	module.exports = function (original, length) {
	  return new (speciesConstructor(original))(length);
	};


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(328);
	var isArray = __webpack_require__(398);
	var SPECIES = __webpack_require__(386)('species');

	module.exports = function (original) {
	  var C;
	  if (isArray(original)) {
	    C = original.constructor;
	    // cross-realm fallback
	    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
	    if (isObject(C)) {
	      C = C[SPECIES];
	      if (C === null) C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};


/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export = __webpack_require__(320);

	$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(431)('Map') });


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(423);
	var from = __webpack_require__(432);
	module.exports = function (NAME) {
	  return function toJSON() {
	    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};


/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(419);

	module.exports = function (iter, ITERATOR) {
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

	// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
	__webpack_require__(434)('Map');


/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/proposal-setmap-offrom/
	var $export = __webpack_require__(320);

	module.exports = function (COLLECTION) {
	  $export($export.S, COLLECTION, { of: function of() {
	    var length = arguments.length;
	    var A = Array(length);
	    while (length--) A[length] = arguments[length];
	    return new this(A);
	  } });
	};


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
	__webpack_require__(436)('Map');


/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/proposal-setmap-offrom/
	var $export = __webpack_require__(320);
	var aFunction = __webpack_require__(324);
	var ctx = __webpack_require__(323);
	var forOf = __webpack_require__(419);

	module.exports = function (COLLECTION) {
	  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
	    var mapFn = arguments[1];
	    var mapping, A, n, cb;
	    aFunction(this);
	    mapping = mapFn !== undefined;
	    if (mapping) aFunction(mapFn);
	    if (source == undefined) return new this();
	    A = [];
	    if (mapping) {
	      n = 0;
	      cb = ctx(mapFn, arguments[2], 2);
	      forOf(source, false, function (nextItem) {
	        A.push(cb(nextItem, n++));
	      });
	    } else {
	      forOf(source, false, A.push, A);
	    }
	    return new this(A);
	  } });
	};


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(438), __esModule: true };

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(439);
	module.exports = -0x1fffffffffffff;


/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(320);

	$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _from = __webpack_require__(441);

	var _from2 = _interopRequireDefault(_from);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }

	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(442), __esModule: true };

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(375);
	__webpack_require__(443);
	module.exports = __webpack_require__(322).Array.from;


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var ctx = __webpack_require__(323);
	var $export = __webpack_require__(320);
	var toObject = __webpack_require__(358);
	var call = __webpack_require__(420);
	var isArrayIter = __webpack_require__(421);
	var toLength = __webpack_require__(349);
	var createProperty = __webpack_require__(444);
	var getIterFn = __webpack_require__(422);

	$export($export.S + $export.F * !__webpack_require__(445)(function (iter) { Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
	    var O = toObject(arrayLike);
	    var C = typeof this == 'function' ? this : Array;
	    var aLen = arguments.length;
	    var mapfn = aLen > 1 ? arguments[1] : undefined;
	    var mapping = mapfn !== undefined;
	    var index = 0;
	    var iterFn = getIterFn(O);
	    var length, result, step, iterator;
	    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
	      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for (result = new C(length); length > index; index++) {
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(326);
	var createDesc = __webpack_require__(334);

	module.exports = function (object, index, value) {
	  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

	var ITERATOR = __webpack_require__(386)('iterator');
	var SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function () { SAFE_CLOSING = true; };
	  // eslint-disable-next-line no-throw-literal
	  Array.from(riter, function () { throw 2; });
	} catch (e) { /* empty */ }

	module.exports = function (exec, skipClosing) {
	  if (!skipClosing && !SAFE_CLOSING) return false;
	  var safe = false;
	  try {
	    var arr = [7];
	    var iter = arr[ITERATOR]();
	    iter.next = function () { return { done: safe = true }; };
	    arr[ITERATOR] = function () { return iter; };
	    exec(arr);
	  } catch (e) { /* empty */ }
	  return safe;
	};


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _getDisplayName = __webpack_require__(448);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
	  return hocName + '(' + (0, _getDisplayName2.default)(BaseComponent) + ')';
	};

	exports.default = wrapDisplayName;

/***/ }),
/* 448 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var getDisplayName = function getDisplayName(Component) {
	  if (typeof Component === 'string') {
	    return Component;
	  }

	  if (!Component) {
	    return undefined;
	  }

	  return Component.displayName || Component.name || 'Component';
	};

	exports.default = getDisplayName;

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ns$jss$ns$sheetOptio;

	var _propTypes = __webpack_require__(174);

	var _jss = __webpack_require__(450);

	var _jss2 = _interopRequireDefault(_jss);

	var _ns = __webpack_require__(495);

	var ns = _interopRequireWildcard(_ns);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	exports['default'] = (_ns$jss$ns$sheetOptio = {}, _defineProperty(_ns$jss$ns$sheetOptio, ns.jss, (0, _propTypes.instanceOf)(_jss2['default'].constructor)), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetOptions, _propTypes.object), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetsRegistry, (0, _propTypes.instanceOf)(_jss.SheetsRegistry)), _defineProperty(_ns$jss$ns$sheetOptio, ns.providerId, _propTypes.number), _ns$jss$ns$sheetOptio);

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getDynamicStyles = exports.SheetsRegistry = exports.SheetsManager = exports.createGenerateClassNameDefault = undefined;

	var _createGenerateClassName = __webpack_require__(451);

	Object.defineProperty(exports, 'createGenerateClassNameDefault', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createGenerateClassName)['default'];
	  }
	});

	var _SheetsManager = __webpack_require__(452);

	Object.defineProperty(exports, 'SheetsManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsManager)['default'];
	  }
	});

	var _jss = __webpack_require__(453);

	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _jss.SheetsRegistry;
	  }
	});
	Object.defineProperty(exports, 'getDynamicStyles', {
	  enumerable: true,
	  get: function get() {
	    return _jss.getDynamicStyles;
	  }
	});

	var _jssPresetDefault = __webpack_require__(478);

	var _jssPresetDefault2 = _interopRequireDefault(_jssPresetDefault);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	exports['default'] = (0, _jss.create)((0, _jssPresetDefault2['default'])());

/***/ }),
/* 451 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});


	var globalRef = typeof window === 'undefined' ? global : window;

	var namespace = '__JSS_VERSION_COUNTER__';
	if (globalRef[namespace] == null) globalRef[namespace] = 0;
	// In case we have more than one JSS version.
	var jssCounter = globalRef[namespace]++;

	/**
	 * Returns a function which generates unique class names based on counters.
	 * When new generator function is created, rule counter is reseted.
	 * We need to reset the rule counter for SSR for each request.
	 */

	exports['default'] = function () {
	  var ruleCounter = 0;

	  return function (rule) {
	    return rule.key + '-' + jssCounter + '-' + ruleCounter++;
	  };
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * SheetsManager is like a WeakMap which is designed to count StyleSheet
	 * instances and attach/detach automatically.
	 */
	var SheetsManager = function () {
	  function SheetsManager() {
	    _classCallCheck(this, SheetsManager);

	    this.sheets = [];
	    this.refs = [];
	    this.keys = [];
	  }

	  _createClass(SheetsManager, [{
	    key: 'get',
	    value: function get(key) {
	      var index = this.keys.indexOf(key);
	      return this.sheets[index];
	    }
	  }, {
	    key: 'add',
	    value: function add(key, sheet) {
	      var sheets = this.sheets,
	          refs = this.refs,
	          keys = this.keys;

	      var index = sheets.indexOf(sheet);

	      if (index !== -1) return index;

	      sheets.push(sheet);
	      refs.push(0);
	      keys.push(key);

	      return sheets.length - 1;
	    }
	  }, {
	    key: 'manage',
	    value: function manage(key) {
	      var index = this.keys.indexOf(key);
	      var sheet = this.sheets[index];
	      if (this.refs[index] === 0) sheet.attach();
	      this.refs[index]++;
	      if (!this.keys[index]) this.keys.splice(index, 0, key);
	      return sheet;
	    }
	  }, {
	    key: 'unmanage',
	    value: function unmanage(key) {
	      var index = this.keys.indexOf(key);
	      if (index === -1) {
	        // eslint-ignore-next-line no-console
	        (0, _warning2['default'])('SheetsManager: can\'t find sheet to unmanage');
	        return;
	      }
	      if (this.refs[index] > 0) {
	        this.refs[index]--;
	        if (this.refs[index] === 0) this.sheets[index].detach();
	      }
	    }
	  }]);

	  return SheetsManager;
	}();

	exports['default'] = SheetsManager;

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.create = exports.sheets = exports.RuleList = exports.SheetsManager = exports.SheetsRegistry = exports.getDynamicStyles = undefined;

	var _getDynamicStyles = __webpack_require__(454);

	Object.defineProperty(exports, 'getDynamicStyles', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getDynamicStyles)['default'];
	  }
	});

	var _SheetsRegistry = __webpack_require__(455);

	Object.defineProperty(exports, 'SheetsRegistry', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsRegistry)['default'];
	  }
	});

	var _SheetsManager = __webpack_require__(452);

	Object.defineProperty(exports, 'SheetsManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SheetsManager)['default'];
	  }
	});

	var _RuleList = __webpack_require__(456);

	Object.defineProperty(exports, 'RuleList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RuleList)['default'];
	  }
	});

	var _sheets = __webpack_require__(464);

	Object.defineProperty(exports, 'sheets', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_sheets)['default'];
	  }
	});

	var _Jss = __webpack_require__(465);

	var _Jss2 = _interopRequireDefault(_Jss);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Creates a new instance of Jss.
	 */
	var create = exports.create = function create(options) {
	  return new _Jss2['default'](options);
	};

	/**
	 * A global Jss instance.
	 */
	exports['default'] = create();

/***/ }),
/* 454 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/**
	 * Extracts a styles object with only props that contain function values.
	 */
	exports['default'] = function (styles) {
	  // eslint-disable-next-line no-shadow
	  function extract(styles) {
	    var to = null;

	    for (var key in styles) {
	      var value = styles[key];
	      var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

	      if (type === 'function') {
	        if (!to) to = {};
	        to[key] = value;
	      } else if (type === 'object' && value !== null && !Array.isArray(value)) {
	        var extracted = extract(value);
	        if (extracted) {
	          if (!to) to = {};
	          to[key] = extracted;
	        }
	      }
	    }

	    return to;
	  }

	  return extract(styles);
	};

/***/ }),
/* 455 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Sheets registry to access them all at one place.
	 */
	var SheetsRegistry = function () {
	  function SheetsRegistry() {
	    _classCallCheck(this, SheetsRegistry);

	    this.registry = [];
	  }

	  _createClass(SheetsRegistry, [{
	    key: 'add',


	    /**
	     * Register a Style Sheet.
	     */
	    value: function add(sheet) {
	      var registry = this.registry;
	      var index = sheet.options.index;


	      if (registry.indexOf(sheet) !== -1) return;

	      if (registry.length === 0 || index >= this.index) {
	        registry.push(sheet);
	        return;
	      }

	      // Find a position.
	      for (var i = 0; i < registry.length; i++) {
	        if (registry[i].options.index > index) {
	          registry.splice(i, 0, sheet);
	          return;
	        }
	      }
	    }

	    /**
	     * Reset the registry.
	     */

	  }, {
	    key: 'reset',
	    value: function reset() {
	      this.registry = [];
	    }

	    /**
	     * Remove a Style Sheet.
	     */

	  }, {
	    key: 'remove',
	    value: function remove(sheet) {
	      var index = this.registry.indexOf(sheet);
	      this.registry.splice(index, 1);
	    }

	    /**
	     * Convert all attached sheets to a CSS string.
	     */

	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      return this.registry.filter(function (sheet) {
	        return sheet.attached;
	      }).map(function (sheet) {
	        return sheet.toString(options);
	      }).join('\n');
	    }
	  }, {
	    key: 'index',


	    /**
	     * Current highest index number.
	     */
	    get: function get() {
	      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
	    }
	  }]);

	  return SheetsRegistry;
	}();

	exports['default'] = SheetsRegistry;

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _createRule = __webpack_require__(457);

	var _createRule2 = _interopRequireDefault(_createRule);

	var _updateRule = __webpack_require__(462);

	var _updateRule2 = _interopRequireDefault(_updateRule);

	var _linkRule = __webpack_require__(463);

	var _linkRule2 = _interopRequireDefault(_linkRule);

	var _StyleRule = __webpack_require__(458);

	var _StyleRule2 = _interopRequireDefault(_StyleRule);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Contains rules objects and allows adding/removing etc.
	 * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
	 */
	var RuleList = function () {

	  // Original styles object.
	  function RuleList(options) {
	    _classCallCheck(this, RuleList);

	    this.map = {};
	    this.raw = {};
	    this.index = [];

	    this.options = options;
	    this.classes = options.classes;
	  }

	  /**
	   * Create and register rule.
	   *
	   * Will not render after Style Sheet was rendered the first time.
	   */


	  // Used to ensure correct rules order.

	  // Rules registry for access by .get() method.
	  // It contains the same rule registered by name and by selector.


	  _createClass(RuleList, [{
	    key: 'add',
	    value: function add(name, decl, options) {
	      var _options = this.options,
	          parent = _options.parent,
	          sheet = _options.sheet,
	          jss = _options.jss,
	          Renderer = _options.Renderer,
	          generateClassName = _options.generateClassName;


	      options = _extends({
	        classes: this.classes,
	        parent: parent,
	        sheet: sheet,
	        jss: jss,
	        Renderer: Renderer,
	        generateClassName: generateClassName
	      }, options);

	      if (!options.selector && this.classes[name]) options.selector = '.' + this.classes[name];

	      this.raw[name] = decl;

	      var rule = (0, _createRule2['default'])(name, decl, options);
	      this.register(rule);

	      var index = options.index === undefined ? this.index.length : options.index;
	      this.index.splice(index, 0, rule);

	      return rule;
	    }

	    /**
	     * Get a rule.
	     */

	  }, {
	    key: 'get',
	    value: function get(name) {
	      return this.map[name];
	    }

	    /**
	     * Delete a rule.
	     */

	  }, {
	    key: 'remove',
	    value: function remove(rule) {
	      this.unregister(rule);
	      this.index.splice(this.indexOf(rule), 1);
	    }

	    /**
	     * Get index of a rule.
	     */

	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.index.indexOf(rule);
	    }

	    /**
	     * Run `onProcessRule()` plugins on every rule.
	     */

	  }, {
	    key: 'process',
	    value: function process() {
	      var plugins = this.options.jss.plugins;
	      // We need to clone array because if we modify the index somewhere else during a loop
	      // we end up with very hard-to-track-down side effects.

	      this.index.slice(0).forEach(plugins.onProcessRule, plugins);
	    }

	    /**
	     * Register a rule in `.map` and `.classes` maps.
	     */

	  }, {
	    key: 'register',
	    value: function register(rule) {
	      this.map[rule.key] = rule;
	      if (rule instanceof _StyleRule2['default']) {
	        this.map[rule.selector] = rule;
	        this.classes[rule.key] = rule.selector.substr(1);
	      }
	    }

	    /**
	     * Unregister a rule.
	     */

	  }, {
	    key: 'unregister',
	    value: function unregister(rule) {
	      delete this.map[rule.key];
	      delete this.classes[rule.key];
	      if (rule instanceof _StyleRule2['default']) delete this.map[rule.selector];
	    }

	    /**
	     * Update the function values with a new data.
	     */

	  }, {
	    key: 'update',
	    value: function update(name, data) {
	      if (typeof name === 'string') {
	        (0, _updateRule2['default'])(this.get(name), data, RuleList);
	        return;
	      }

	      for (var index = 0; index < this.index.length; index++) {
	        (0, _updateRule2['default'])(this.index[index], name, RuleList);
	      }
	    }

	    /**
	     * Link renderable rules with CSSRuleList.
	     */

	  }, {
	    key: 'link',
	    value: function link(cssRules) {
	      for (var i = 0; i < cssRules.length; i++) {
	        var cssRule = cssRules[i];
	        var rule = this.get(this.options.sheet.renderer.getSelector(cssRule));
	        if (rule) (0, _linkRule2['default'])(rule, cssRule);
	      }
	    }

	    /**
	     * Convert rules to a CSS string.
	     */

	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      var str = '';

	      for (var index = 0; index < this.index.length; index++) {
	        var rule = this.index[index];
	        var css = rule.toString(options);

	        // No need to render an empty rule.
	        if (!css) continue;

	        if (str) str += '\n';
	        str += css;
	      }

	      return str;
	    }
	  }]);

	  return RuleList;
	}();

	exports['default'] = RuleList;

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = createRule;

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _StyleRule = __webpack_require__(458);

	var _StyleRule2 = _interopRequireDefault(_StyleRule);

	var _cloneStyle = __webpack_require__(461);

	var _cloneStyle2 = _interopRequireDefault(_cloneStyle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Create a rule instance.
	 */
	function createRule() {
	  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unnamed';
	  var decl = arguments[1];
	  var options = arguments[2];
	  var jss = options.jss;

	  var declCopy = (0, _cloneStyle2['default'])(decl);

	  var rule = jss.plugins.onCreateRule(name, declCopy, options);
	  if (rule) return rule;

	  // It is an at-rule and it has no instance.
	  if (name[0] === '@') {
	    (0, _warning2['default'])(false, '[JSS] Unknown at-rule %s', name);
	  }

	  return new _StyleRule2['default'](name, declCopy, options);
	}

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _toCss = __webpack_require__(459);

	var _toCss2 = _interopRequireDefault(_toCss);

	var _toCssValue = __webpack_require__(460);

	var _toCssValue2 = _interopRequireDefault(_toCssValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var StyleRule = function () {
	  function StyleRule(key, style, options) {
	    _classCallCheck(this, StyleRule);

	    this.type = 'style';
	    this.isProcessed = false;
	    var generateClassName = options.generateClassName,
	        sheet = options.sheet,
	        Renderer = options.Renderer,
	        selector = options.selector;

	    this.key = key;
	    this.options = options;
	    this.style = style;
	    this.selectorText = selector || '.' + generateClassName(this, sheet);
	    this.renderer = sheet ? sheet.renderer : new Renderer();
	  }

	  /**
	   * Set selector string.
	   * TODO rewrite this #419
	   * Attention: use this with caution. Most browsers didn't implement
	   * selectorText setter, so this may result in rerendering of entire Style Sheet.
	   */


	  _createClass(StyleRule, [{
	    key: 'prop',


	    /**
	     * Get or set a style property.
	     */
	    value: function prop(name, nextValue) {
	      var $name = typeof this.style[name] === 'function' ? '$' + name : name;
	      var currValue = this.style[$name];

	      // Its a setter.
	      if (nextValue != null) {
	        // Don't do anything if the value has not changed.
	        if (currValue !== nextValue) {
	          nextValue = this.options.jss.plugins.onChangeValue(nextValue, name, this);
	          Object.defineProperty(this.style, $name, {
	            value: nextValue,
	            writable: true
	          });
	          // Defined if StyleSheet option `link` is true.
	          if (this.renderable) this.renderer.setStyle(this.renderable, name, nextValue);
	        }
	        return this;
	      }

	      // Its a getter, read the value from the DOM if its not cached.
	      if (this.renderable && currValue == null) {
	        // Cache the value after we have got it from the DOM first time.
	        Object.defineProperty(this.style, $name, {
	          value: this.renderer.getStyle(this.renderable, name),
	          writable: true
	        });
	      }

	      return this.style[$name];
	    }

	    /**
	     * Apply rule to an element inline.
	     */

	  }, {
	    key: 'applyTo',
	    value: function applyTo(renderable) {
	      var json = this.toJSON();
	      for (var prop in json) {
	        this.renderer.setStyle(renderable, prop, json[prop]);
	      }return this;
	    }

	    /**
	     * Returns JSON representation of the rule.
	     * Fallbacks are not supported.
	     * Useful for inline styles.
	     */

	  }, {
	    key: 'toJSON',
	    value: function toJSON() {
	      var json = {};
	      for (var prop in this.style) {
	        var value = this.style[prop];
	        var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	        if (type === 'function') json[prop] = this.style['$' + prop];else if (type !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = (0, _toCssValue2['default'])(value);
	      }
	      return json;
	    }

	    /**
	     * Generates a CSS string.
	     */

	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      return (0, _toCss2['default'])(this.selector, this.style, options);
	    }
	  }, {
	    key: 'selector',
	    set: function set(selector) {
	      var sheet = this.options.sheet;

	      // After we modify a selector, ref by old selector needs to be removed.

	      if (sheet) sheet.rules.unregister(this);

	      this.selectorText = selector;

	      if (!this.renderable) {
	        // Register the rule with new selector.
	        if (sheet) sheet.rules.register(this);
	        return;
	      }

	      var changed = this.renderer.setSelector(this.renderable, selector);

	      if (changed && sheet) {
	        sheet.rules.register(this);
	        return;
	      }

	      // If selector setter is not implemented, rerender the sheet.
	      // We need to delete renderable from the rule, because when sheet.deploy()
	      // calls rule.toString, it will get the old selector.
	      delete this.renderable;
	      if (sheet) {
	        sheet.rules.register(this);
	        sheet.deploy().link();
	      }
	    }

	    /**
	     * Get selector string.
	     */
	    ,
	    get: function get() {
	      if (this.renderable) {
	        return this.renderer.getSelector(this.renderable);
	      }

	      return this.selectorText;
	    }
	  }]);

	  return StyleRule;
	}();

	exports['default'] = StyleRule;

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = toCss;

	var _toCssValue = __webpack_require__(460);

	var _toCssValue2 = _interopRequireDefault(_toCssValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Indent a string.
	 * http://jsperf.com/array-join-vs-for
	 */
	function indentStr(str, indent) {
	  var result = '';
	  for (var index = 0; index < indent; index++) {
	    result += '  ';
	  }return result + str;
	}

	/**
	 * Converts a Rule to CSS string.
	 */

	function toCss(selector, style) {
	  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	  var result = '';

	  if (!style) return result;

	  var _options$indent = options.indent,
	      indent = _options$indent === undefined ? 0 : _options$indent;
	  var fallbacks = style.fallbacks;


	  indent++;

	  // Apply fallbacks first.
	  if (fallbacks) {
	    // Array syntax {fallbacks: [{prop: value}]}
	    if (Array.isArray(fallbacks)) {
	      for (var index = 0; index < fallbacks.length; index++) {
	        var fallback = fallbacks[index];
	        for (var prop in fallback) {
	          var value = fallback[prop];
	          if (value != null) {
	            result += '\n' + indentStr(prop + ': ' + (0, _toCssValue2['default'])(value) + ';', indent);
	          }
	        }
	      }
	    }
	    // Object syntax {fallbacks: {prop: value}}
	    else {
	        for (var _prop in fallbacks) {
	          var _value = fallbacks[_prop];
	          if (_value != null) {
	            result += '\n' + indentStr(_prop + ': ' + (0, _toCssValue2['default'])(_value) + ';', indent);
	          }
	        }
	      }
	  }

	  var hasFunctionValue = false;

	  for (var _prop2 in style) {
	    var _value2 = style[_prop2];
	    if (typeof _value2 === 'function') {
	      _value2 = style['$' + _prop2];
	      hasFunctionValue = true;
	    }
	    if (_value2 != null && _prop2 !== 'fallbacks') {
	      result += '\n' + indentStr(_prop2 + ': ' + (0, _toCssValue2['default'])(_value2) + ';', indent);
	    }
	  }

	  if (!result && !hasFunctionValue) return result;

	  indent--;
	  result = indentStr(selector + ' {' + result + '\n', indent) + indentStr('}', indent);

	  return result;
	}

/***/ }),
/* 460 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = toCssValue;
	var joinWithSpace = function joinWithSpace(value) {
	  return value.join(' ');
	};

	/**
	 * Converts array values to string.
	 *
	 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
	 * `border: ['1px', '2px']` > `border: 1px, 2px;`
	 */
	function toCssValue(value) {
	  if (!Array.isArray(value)) return value;

	  // Support space separated values.
	  if (Array.isArray(value[0])) {
	    return toCssValue(value.map(joinWithSpace));
	  }

	  return value.join(', ');
	}

/***/ }),
/* 461 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.default = cloneStyle;
	var isArray = Array.isArray;
	function cloneStyle(style) {
	  // Support empty values in case user ends up with them by accident.
	  if (style == null) return style;

	  // Support string value for SimpleRule.
	  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);
	  if (typeOfStyle === 'string' || typeOfStyle === 'number') return style;

	  // Support array for FontFaceRule.
	  if (isArray(style)) return style.map(cloneStyle);

	  var newStyle = {};
	  for (var name in style) {
	    var value = style[name];
	    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	      newStyle[name] = cloneStyle(value);
	      continue;
	    }
	    newStyle[name] = value;
	  }

	  return newStyle;
	}

/***/ }),
/* 462 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports['default'] = function (rule, data, RuleList) {
	  if (rule.type === 'style') {
	    for (var prop in rule.style) {
	      var value = rule.style[prop];
	      if (typeof value === 'function') {
	        rule.prop(prop, value(data));
	      }
	    }
	  } else if (rule.rules instanceof RuleList) {
	    rule.rules.update(data);
	  }
	};

/***/ }),
/* 463 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = linkRule;
	/**
	 * Link rule with CSSStyleRule and nested rules with corresponding nested cssRules if both exists.
	 */
	function linkRule(rule, cssRule) {
	  rule.renderable = cssRule;
	  if (rule.rules && cssRule.cssRules) rule.rules.link(cssRule.cssRules);
	}

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SheetsRegistry = __webpack_require__(455);

	var _SheetsRegistry2 = _interopRequireDefault(_SheetsRegistry);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * This is a global sheets registry. Only DomRenderer will add sheets to it.
	 * On the server one should use an own SheetsRegistry instance and add the
	 * sheets to it, because you need to make sure to create a new registry for
	 * each request in order to not leak sheets across requests.
	 */
	exports['default'] = new _SheetsRegistry2['default']();

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _StyleSheet = __webpack_require__(466);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	var _PluginsRegistry = __webpack_require__(467);

	var _PluginsRegistry2 = _interopRequireDefault(_PluginsRegistry);

	var _rules = __webpack_require__(468);

	var _rules2 = _interopRequireDefault(_rules);

	var _sheets = __webpack_require__(464);

	var _sheets2 = _interopRequireDefault(_sheets);

	var _createGenerateClassName = __webpack_require__(451);

	var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);

	var _createRule2 = __webpack_require__(457);

	var _createRule3 = _interopRequireDefault(_createRule2);

	var _findRenderer = __webpack_require__(474);

	var _findRenderer2 = _interopRequireDefault(_findRenderer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Jss = function () {
	  function Jss(options) {
	    _classCallCheck(this, Jss);

	    this.version = "8.1.0";
	    this.plugins = new _PluginsRegistry2['default']();

	    // eslint-disable-next-line prefer-spread
	    this.use.apply(this, _rules2['default']);
	    this.setup(options);
	  }

	  _createClass(Jss, [{
	    key: 'setup',
	    value: function setup() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	      var createGenerateClassName = options.createGenerateClassName || _createGenerateClassName2['default'];
	      this.generateClassName = createGenerateClassName();
	      this.options = _extends({}, options, {
	        createGenerateClassName: createGenerateClassName,
	        Renderer: (0, _findRenderer2['default'])(options)
	        // eslint-disable-next-line prefer-spread
	      });if (options.plugins) this.use.apply(this, options.plugins);
	      return this;
	    }

	    /**
	     * Create a Style Sheet.
	     */

	  }, {
	    key: 'createStyleSheet',
	    value: function createStyleSheet(styles) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	      var index = options.index;
	      if (typeof index !== 'number') {
	        index = _sheets2['default'].index === 0 ? 0 : _sheets2['default'].index + 1;
	      }
	      var sheet = new _StyleSheet2['default'](styles, _extends({}, options, {
	        jss: this,
	        generateClassName: options.generateClassName || this.generateClassName,
	        insertionPoint: this.options.insertionPoint,
	        Renderer: this.options.Renderer,
	        index: index
	      }));
	      this.plugins.onProcessSheet(sheet);
	      return sheet;
	    }

	    /**
	     * Detach the Style Sheet and remove it from the registry.
	     */

	  }, {
	    key: 'removeStyleSheet',
	    value: function removeStyleSheet(sheet) {
	      sheet.detach();
	      _sheets2['default'].remove(sheet);
	      return this;
	    }

	    /**
	     * Create a rule without a Style Sheet.
	     */

	  }, {
	    key: 'createRule',
	    value: function createRule(name) {
	      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	      // Enable rule without name for inline styles.
	      if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
	        options = style;
	        style = name;
	        name = undefined;
	      }

	      // Cast from RuleFactoryOptions to RuleOptions
	      // https://stackoverflow.com/questions/41328728/force-casting-in-flow
	      var ruleOptions = options;

	      ruleOptions.jss = this;
	      ruleOptions.Renderer = this.options.Renderer;
	      if (!ruleOptions.generateClassName) ruleOptions.generateClassName = this.generateClassName;
	      if (!ruleOptions.classes) ruleOptions.classes = {};
	      var rule = (0, _createRule3['default'])(name, style, ruleOptions);
	      this.plugins.onProcessRule(rule);

	      return rule;
	    }

	    /**
	     * Register plugin. Passed function will be invoked with a rule instance.
	     */

	  }, {
	    key: 'use',
	    value: function use() {
	      var _this = this;

	      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {
	        plugins[_key] = arguments[_key];
	      }

	      plugins.forEach(function (plugin) {
	        return _this.plugins.use(plugin);
	      });
	      return this;
	    }
	  }]);

	  return Jss;
	}();

	exports['default'] = Jss;

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _linkRule = __webpack_require__(463);

	var _linkRule2 = _interopRequireDefault(_linkRule);

	var _RuleList = __webpack_require__(456);

	var _RuleList2 = _interopRequireDefault(_RuleList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var StyleSheet = function () {
	  function StyleSheet(styles, options) {
	    _classCallCheck(this, StyleSheet);

	    this.attached = false;
	    this.deployed = false;
	    this.linked = false;
	    this.classes = {};
	    this.options = _extends({}, options, {
	      sheet: this,
	      parent: this,
	      classes: this.classes
	    });
	    this.renderer = new options.Renderer(this);
	    this.rules = new _RuleList2['default'](this.options);

	    for (var name in styles) {
	      this.rules.add(name, styles[name]);
	    }

	    this.rules.process();
	  }

	  /**
	   * Attach renderable to the render tree.
	   */


	  _createClass(StyleSheet, [{
	    key: 'attach',
	    value: function attach() {
	      if (this.attached) return this;
	      if (!this.deployed) this.deploy();
	      this.renderer.attach();
	      if (!this.linked && this.options.link) this.link();
	      this.attached = true;
	      return this;
	    }

	    /**
	     * Remove renderable from render tree.
	     */

	  }, {
	    key: 'detach',
	    value: function detach() {
	      if (!this.attached) return this;
	      this.renderer.detach();
	      this.attached = false;
	      return this;
	    }

	    /**
	     * Add a rule to the current stylesheet.
	     * Will insert a rule also after the stylesheet has been rendered first time.
	     */

	  }, {
	    key: 'addRule',
	    value: function addRule(name, decl, options) {
	      var queue = this.queue;

	      // Plugins can create rules.
	      // In order to preserve the right order, we need to queue all `.addRule` calls,
	      // which happen after the first `rules.add()` call.

	      if (this.attached && !queue) this.queue = [];

	      var rule = this.rules.add(name, decl, options);
	      this.options.jss.plugins.onProcessRule(rule);

	      if (this.attached) {
	        if (!this.deployed) return rule;
	        // Don't insert rule directly if there is no stringified version yet.
	        // It will be inserted all together when .attach is called.
	        if (queue) queue.push(rule);else {
	          this.insertRule(rule);
	          if (this.queue) {
	            this.queue.forEach(this.insertRule, this);
	            this.queue = undefined;
	          }
	        }
	        return rule;
	      }

	      // We can't add rules to a detached style node.
	      // We will redeploy the sheet once user will attach it.
	      this.deployed = false;

	      return rule;
	    }

	    /**
	     * Insert rule into the StyleSheet
	     */

	  }, {
	    key: 'insertRule',
	    value: function insertRule(rule) {
	      var renderable = this.renderer.insertRule(rule);
	      if (renderable && this.options.link) (0, _linkRule2['default'])(rule, renderable);
	    }

	    /**
	     * Create and add rules.
	     * Will render also after Style Sheet was rendered the first time.
	     */

	  }, {
	    key: 'addRules',
	    value: function addRules(styles, options) {
	      var added = [];
	      for (var name in styles) {
	        added.push(this.addRule(name, styles[name], options));
	      }
	      return added;
	    }

	    /**
	     * Get a rule by name.
	     */

	  }, {
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }

	    /**
	     * Delete a rule by name.
	     * Returns `true`: if rule has been deleted from the DOM.
	     */

	  }, {
	    key: 'deleteRule',
	    value: function deleteRule(name) {
	      var rule = this.rules.get(name);

	      if (!rule) return false;

	      this.rules.remove(rule);

	      if (this.attached && rule.renderable) {
	        return this.renderer.deleteRule(rule.renderable);
	      }

	      return true;
	    }

	    /**
	     * Get index of a rule.
	     */

	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }

	    /**
	     * Deploy pure CSS string to a renderable.
	     */

	  }, {
	    key: 'deploy',
	    value: function deploy() {
	      this.renderer.deploy();
	      this.deployed = true;
	      return this;
	    }

	    /**
	     * Link renderable CSS rules from sheet with their corresponding models.
	     */

	  }, {
	    key: 'link',
	    value: function link() {
	      var cssRules = this.renderer.getRules();

	      // Is undefined when VirtualRenderer is used.
	      if (cssRules) this.rules.link(cssRules);
	      this.linked = true;
	      return this;
	    }

	    /**
	     * Update the function values with a new data.
	     */

	  }, {
	    key: 'update',
	    value: function update(name, data) {
	      this.rules.update(name, data);
	      return this;
	    }

	    /**
	     * Convert rules to a CSS string.
	     */

	  }, {
	    key: 'toString',
	    value: function toString(options) {
	      return this.rules.toString(options);
	    }
	  }]);

	  return StyleSheet;
	}();

	exports['default'] = StyleSheet;

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PluginsRegistry = function () {
	  function PluginsRegistry() {
	    _classCallCheck(this, PluginsRegistry);

	    this.hooks = {
	      onCreateRule: [],
	      onProcessRule: [],
	      onProcessStyle: [],
	      onProcessSheet: [],
	      onChangeValue: []

	      /**
	       * Call `onCreateRule` hooks and return an object if returned by a hook.
	       */
	    };
	  }

	  _createClass(PluginsRegistry, [{
	    key: 'onCreateRule',
	    value: function onCreateRule(name, decl, options) {
	      for (var i = 0; i < this.hooks.onCreateRule.length; i++) {
	        var rule = this.hooks.onCreateRule[i](name, decl, options);
	        if (rule) return rule;
	      }
	      return null;
	    }

	    /**
	     * Call `onProcessRule` hooks.
	     */

	  }, {
	    key: 'onProcessRule',
	    value: function onProcessRule(rule) {
	      if (rule.isProcessed) return;
	      var sheet = rule.options.sheet;

	      for (var i = 0; i < this.hooks.onProcessRule.length; i++) {
	        this.hooks.onProcessRule[i](rule, sheet);
	      }

	      // $FlowFixMe
	      if (rule.style) this.onProcessStyle(rule.style, rule, sheet);

	      rule.isProcessed = true;
	    }

	    /**
	     * Call `onProcessStyle` hooks.
	     */

	  }, {
	    key: 'onProcessStyle',
	    value: function onProcessStyle(style, rule, sheet) {
	      var nextStyle = style;

	      for (var i = 0; i < this.hooks.onProcessStyle.length; i++) {
	        nextStyle = this.hooks.onProcessStyle[i](nextStyle, rule, sheet);
	        // $FlowFixMe
	        rule.style = nextStyle;
	      }
	    }

	    /**
	     * Call `onProcessSheet` hooks.
	     */

	  }, {
	    key: 'onProcessSheet',
	    value: function onProcessSheet(sheet) {
	      for (var i = 0; i < this.hooks.onProcessSheet.length; i++) {
	        this.hooks.onProcessSheet[i](sheet);
	      }
	    }

	    /**
	     * Call `onChangeValue` hooks.
	     */

	  }, {
	    key: 'onChangeValue',
	    value: function onChangeValue(value, prop, rule) {
	      var processedValue = value;
	      for (var i = 0; i < this.hooks.onChangeValue.length; i++) {
	        processedValue = this.hooks.onChangeValue[i](processedValue, prop, rule);
	      }
	      return processedValue;
	    }

	    /**
	     * Register a plugin.
	     * If function is passed, it is a shortcut for `{onProcessRule}`.
	     */

	  }, {
	    key: 'use',
	    value: function use(plugin) {
	      for (var name in plugin) {
	        if (this.hooks[name]) this.hooks[name].push(plugin[name]);else (0, _warning2['default'])(false, '[JSS] Unknown hook "%s".', name);
	      }
	    }
	  }]);

	  return PluginsRegistry;
	}();

	exports['default'] = PluginsRegistry;

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SimpleRule = __webpack_require__(469);

	var _SimpleRule2 = _interopRequireDefault(_SimpleRule);

	var _KeyframesRule = __webpack_require__(470);

	var _KeyframesRule2 = _interopRequireDefault(_KeyframesRule);

	var _ConditionalRule = __webpack_require__(471);

	var _ConditionalRule2 = _interopRequireDefault(_ConditionalRule);

	var _FontFaceRule = __webpack_require__(472);

	var _FontFaceRule2 = _interopRequireDefault(_FontFaceRule);

	var _ViewportRule = __webpack_require__(473);

	var _ViewportRule2 = _interopRequireDefault(_ViewportRule);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var classes = {
	  '@charset': _SimpleRule2['default'],
	  '@import': _SimpleRule2['default'],
	  '@namespace': _SimpleRule2['default'],
	  '@keyframes': _KeyframesRule2['default'],
	  '@media': _ConditionalRule2['default'],
	  '@supports': _ConditionalRule2['default'],
	  '@font-face': _FontFaceRule2['default'],
	  '@viewport': _ViewportRule2['default'],
	  '@-ms-viewport': _ViewportRule2['default']

	  /**
	   * Generate plugins which will register all rules.
	   */
	};
	exports['default'] = Object.keys(classes).map(function (key) {
	  // https://jsperf.com/indexof-vs-substr-vs-regex-at-the-beginning-3
	  var re = new RegExp('^' + key);
	  var onCreateRule = function onCreateRule(name, decl, options) {
	    return re.test(name) ? new classes[key](name, decl, options) : null;
	  };
	  return { onCreateRule: onCreateRule };
	});

/***/ }),
/* 469 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var SimpleRule = function () {
	  function SimpleRule(key, value, options) {
	    _classCallCheck(this, SimpleRule);

	    this.type = 'simple';
	    this.isProcessed = false;

	    this.key = key;
	    this.value = value;
	    this.options = options;
	  }

	  /**
	   * Generates a CSS string.
	   */
	  // eslint-disable-next-line no-unused-vars


	  _createClass(SimpleRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      if (Array.isArray(this.value)) {
	        var str = '';
	        for (var index = 0; index < this.value.length; index++) {
	          str += this.key + ' ' + this.value[index] + ';';
	          if (this.value[index + 1]) str += '\n';
	        }
	        return str;
	      }

	      return this.key + ' ' + this.value + ';';
	    }
	  }]);

	  return SimpleRule;
	}();

	exports['default'] = SimpleRule;

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _RuleList = __webpack_require__(456);

	var _RuleList2 = _interopRequireDefault(_RuleList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Rule for @keyframes
	 */
	var KeyframesRule = function () {
	  function KeyframesRule(key, frames, options) {
	    _classCallCheck(this, KeyframesRule);

	    this.type = 'keyframes';
	    this.isProcessed = false;

	    this.key = key;
	    this.options = options;
	    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

	    for (var name in frames) {
	      this.rules.add(name, frames[name], _extends({}, this.options, {
	        parent: this,
	        selector: name
	      }));
	    }

	    this.rules.process();
	  }

	  /**
	   * Generates a CSS string.
	   */


	  _createClass(KeyframesRule, [{
	    key: 'toString',
	    value: function toString() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

	      var inner = this.rules.toString(options);
	      if (inner) inner += '\n';
	      return this.key + ' {\n' + inner + '}';
	    }
	  }]);

	  return KeyframesRule;
	}();

	exports['default'] = KeyframesRule;

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _RuleList = __webpack_require__(456);

	var _RuleList2 = _interopRequireDefault(_RuleList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Conditional rule for @media, @supports
	 */
	var ConditionalRule = function () {
	  function ConditionalRule(key, styles, options) {
	    _classCallCheck(this, ConditionalRule);

	    this.type = 'conditional';
	    this.isProcessed = false;

	    this.key = key;
	    this.options = options;
	    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

	    for (var name in styles) {
	      this.rules.add(name, styles[name]);
	    }

	    this.rules.process();
	  }

	  /**
	   * Get a rule.
	   */


	  _createClass(ConditionalRule, [{
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }

	    /**
	     * Get index of a rule.
	     */

	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }

	    /**
	     * Create and register rule, run plugins.
	     */

	  }, {
	    key: 'addRule',
	    value: function addRule(name, style, options) {
	      var rule = this.rules.add(name, style, options);
	      this.options.jss.plugins.onProcessRule(rule);
	      return rule;
	    }

	    /**
	     * Generates a CSS string.
	     */

	  }, {
	    key: 'toString',
	    value: function toString() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

	      var inner = this.rules.toString(options);
	      return inner ? this.key + ' {\n' + inner + '\n}' : '';
	    }
	  }]);

	  return ConditionalRule;
	}();

	exports['default'] = ConditionalRule;

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _toCss = __webpack_require__(459);

	var _toCss2 = _interopRequireDefault(_toCss);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var FontFaceRule = function () {
	  function FontFaceRule(key, style, options) {
	    _classCallCheck(this, FontFaceRule);

	    this.type = 'font-face';
	    this.isProcessed = false;

	    this.key = key;
	    this.style = style;
	    this.options = options;
	  }

	  /**
	   * Generates a CSS string.
	   */


	  _createClass(FontFaceRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      if (Array.isArray(this.style)) {
	        var str = '';
	        for (var index = 0; index < this.style.length; index++) {
	          str += (0, _toCss2['default'])(this.key, this.style[index]);
	          if (this.style[index + 1]) str += '\n';
	        }
	        return str;
	      }

	      return (0, _toCss2['default'])(this.key, this.style, options);
	    }
	  }]);

	  return FontFaceRule;
	}();

	exports['default'] = FontFaceRule;

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _toCss = __webpack_require__(459);

	var _toCss2 = _interopRequireDefault(_toCss);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ViewportRule = function () {
	  function ViewportRule(key, style, options) {
	    _classCallCheck(this, ViewportRule);

	    this.type = 'viewport';
	    this.isProcessed = false;

	    this.key = key;
	    this.style = style;
	    this.options = options;
	  }

	  /**
	   * Generates a CSS string.
	   */


	  _createClass(ViewportRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      return (0, _toCss2['default'])(this.key, this.style, options);
	    }
	  }]);

	  return ViewportRule;
	}();

	exports['default'] = ViewportRule;

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = findRenderer;

	var _isInBrowser = __webpack_require__(475);

	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

	var _DomRenderer = __webpack_require__(476);

	var _DomRenderer2 = _interopRequireDefault(_DomRenderer);

	var _VirtualRenderer = __webpack_require__(477);

	var _VirtualRenderer2 = _interopRequireDefault(_VirtualRenderer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Find proper renderer.
	 * Option `virtual` is used to force use of VirtualRenderer even if DOM is
	 * detected, used for testing only.
	 */
	function findRenderer() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  if (options.Renderer) return options.Renderer;
	  var useVirtual = options.virtual || !_isInBrowser2['default'];
	  return useVirtual ? _VirtualRenderer2['default'] : _DomRenderer2['default'];
	}

/***/ }),
/* 475 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var isBrowser = exports.isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

	exports.default = isBrowser;

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _sheets = __webpack_require__(464);

	var _sheets2 = _interopRequireDefault(_sheets);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Get a style property.
	 */
	function getStyle(rule, prop) {
	  try {
	    return rule.style.getPropertyValue(prop);
	  } catch (err) {
	    // IE may throw if property is unknown.
	    return '';
	  }
	}

	/**
	 * Set a style property.
	 */
	function setStyle(rule, prop, value) {
	  try {
	    rule.style.setProperty(prop, value);
	  } catch (err) {
	    // IE may throw if property is unknown.
	    return false;
	  }
	  return true;
	}

	function extractSelector(cssText) {
	  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

	  return cssText.substr(from, cssText.indexOf('{') - 1);
	}

	var CSSRuleTypes = {
	  STYLE_RULE: 1,
	  KEYFRAMES_RULE: 7

	  /**
	   * Get the selector.
	   */
	};function getSelector(rule) {
	  if (rule.type === CSSRuleTypes.STYLE_RULE) return rule.selectorText;
	  if (rule.type === CSSRuleTypes.KEYFRAMES_RULE) {
	    var name = rule.name;

	    if (name) return '@keyframes ' + name;

	    // There is no rule.name in the following browsers:
	    // - IE 9
	    // - Safari 7.1.8
	    // - Mobile Safari 9.0.0
	    var cssText = rule.cssText;

	    return '@' + extractSelector(cssText, cssText.indexOf('keyframes'));
	  }

	  return extractSelector(rule.cssText);
	}

	/**
	 * Set the selector.
	 */
	function setSelector(rule, selectorText) {
	  rule.selectorText = selectorText;

	  // Return false if setter was not successful.
	  // Currently works in chrome only.
	  return rule.selectorText === selectorText;
	}

	/**
	 * Gets the `head` element upon the first call and caches it.
	 */
	var getHead = function () {
	  var head = void 0;
	  return function () {
	    if (!head) head = document.head || document.getElementsByTagName('head')[0];
	    return head;
	  };
	}();

	/**
	 * Find attached sheet with an index higher than the passed one.
	 */
	function findHigherSheet(registry, options) {
	  for (var i = 0; i < registry.length; i++) {
	    var sheet = registry[i];
	    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
	      return sheet;
	    }
	  }
	  return null;
	}

	/**
	 * Find attached sheet with the highest index.
	 */
	function findHighestSheet(registry, options) {
	  for (var i = registry.length - 1; i >= 0; i--) {
	    var sheet = registry[i];
	    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
	      return sheet;
	    }
	  }
	  return null;
	}

	/**
	 * Find a comment with "jss" inside.
	 */
	function findCommentNode(text) {
	  var head = getHead();
	  for (var i = 0; i < head.childNodes.length; i++) {
	    var node = head.childNodes[i];
	    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
	      return node;
	    }
	  }
	  return null;
	}

	/**
	 * Find a node before which we can insert the sheet.
	 */
	function findPrevNode(options) {
	  var registry = _sheets2['default'].registry;


	  if (registry.length > 0) {
	    // Try to insert before the next higher sheet.
	    var sheet = findHigherSheet(registry, options);
	    if (sheet) return sheet.renderer.element;

	    // Otherwise insert after the last attached.
	    sheet = findHighestSheet(registry, options);
	    if (sheet) return sheet.renderer.element.nextElementSibling;
	  }

	  // Try to find a comment placeholder if registry is empty.
	  var insertionPoint = options.insertionPoint;

	  if (insertionPoint && typeof insertionPoint === 'string') {
	    var comment = findCommentNode(insertionPoint);
	    if (comment) return comment.nextSibling;
	    // If user specifies an insertion point and it can't be found in the document -
	    // bad specificity issues may appear.
	    (0, _warning2['default'])(insertionPoint === 'jss', '[JSS] Insertion point "%s" not found.', insertionPoint);
	  }

	  return null;
	}

	/**
	 * Insert style element into the DOM.
	 */
	function insertStyle(style, options) {
	  var insertionPoint = options.insertionPoint;

	  var prevNode = findPrevNode(options);

	  if (prevNode) {
	    var parentNode = prevNode.parentNode;

	    if (parentNode) parentNode.insertBefore(style, prevNode);
	    return;
	  }

	  // Works with iframes and any node types.
	  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
	    // https://stackoverflow.com/questions/41328728/force-casting-in-flow
	    var insertionPointElement = insertionPoint;
	    var _parentNode = insertionPointElement.parentNode;

	    if (_parentNode) _parentNode.insertBefore(style, insertionPointElement.nextSibling);else (0, _warning2['default'])(false, '[JSS] Insertion point is not in the DOM.');
	    return;
	  }

	  getHead().insertBefore(style, prevNode);
	}

	var DomRenderer = function () {
	  function DomRenderer(sheet) {
	    _classCallCheck(this, DomRenderer);

	    this.getStyle = getStyle;
	    this.setStyle = setStyle;
	    this.setSelector = setSelector;
	    this.getSelector = getSelector;
	    this.hasInsertedRules = false;

	    // There is no sheet when the renderer is used from a standalone StyleRule.
	    if (sheet) _sheets2['default'].add(sheet);

	    this.sheet = sheet;

	    var _ref = this.sheet ? this.sheet.options : {},
	        media = _ref.media,
	        meta = _ref.meta,
	        element = _ref.element;

	    this.element = element || document.createElement('style');
	    this.element.type = 'text/css';
	    this.element.setAttribute('data-jss', '');
	    if (media) this.element.setAttribute('media', media);
	    if (meta) this.element.setAttribute('data-meta', meta);
	  }

	  /**
	   * Insert style element into render tree.
	   */


	  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696


	  _createClass(DomRenderer, [{
	    key: 'attach',
	    value: function attach() {
	      // In the case the element node is external and it is already in the DOM.
	      if (this.element.parentNode || !this.sheet) return;

	      // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
	      // browsers remove those rules.
	      // TODO figure out if its a bug and if it is known.
	      // Workaround is to redeploy the sheet before attaching as a string.
	      if (this.hasInsertedRules) {
	        this.deploy();
	        this.hasInsertedRules = false;
	      }

	      insertStyle(this.element, this.sheet.options);
	    }

	    /**
	     * Remove style element from render tree.
	     */

	  }, {
	    key: 'detach',
	    value: function detach() {
	      this.element.parentNode.removeChild(this.element);
	    }

	    /**
	     * Inject CSS string into element.
	     */

	  }, {
	    key: 'deploy',
	    value: function deploy() {
	      if (!this.sheet) return;
	      this.element.textContent = '\n' + this.sheet.toString() + '\n';
	    }

	    /**
	     * Insert a rule into element.
	     */

	  }, {
	    key: 'insertRule',
	    value: function insertRule(rule) {
	      var sheet = this.element.sheet;
	      var cssRules = sheet.cssRules;

	      var index = cssRules.length;
	      var str = rule.toString();

	      if (!str) return false;

	      try {
	        sheet.insertRule(str, index);
	      } catch (err) {
	        (0, _warning2['default'])(false, '[JSS] Can not insert an unsupported rule \n\r%s', rule);
	        return false;
	      }

	      this.hasInsertedRules = true;

	      return cssRules[index];
	    }

	    /**
	     * Delete a rule.
	     */

	  }, {
	    key: 'deleteRule',
	    value: function deleteRule(rule) {
	      var sheet = this.element.sheet;
	      var cssRules = sheet.cssRules;

	      for (var _index = 0; _index < cssRules.length; _index++) {
	        if (rule === cssRules[_index]) {
	          sheet.deleteRule(_index);
	          return true;
	        }
	      }
	      return false;
	    }

	    /**
	     * Get all rules elements.
	     */

	  }, {
	    key: 'getRules',
	    value: function getRules() {
	      return this.element.sheet.cssRules;
	    }
	  }]);

	  return DomRenderer;
	}();

	exports['default'] = DomRenderer;

/***/ }),
/* 477 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/* eslint-disable class-methods-use-this */

	/**
	 * Rendering backend to do nothing in nodejs.
	 */
	var VirtualRenderer = function () {
	  function VirtualRenderer() {
	    _classCallCheck(this, VirtualRenderer);
	  }

	  _createClass(VirtualRenderer, [{
	    key: 'setStyle',
	    value: function setStyle() {
	      return true;
	    }
	  }, {
	    key: 'getStyle',
	    value: function getStyle() {
	      return '';
	    }
	  }, {
	    key: 'setSelector',
	    value: function setSelector() {
	      return true;
	    }
	  }, {
	    key: 'getSelector',
	    value: function getSelector() {
	      return '';
	    }
	  }, {
	    key: 'attach',
	    value: function attach() {}
	  }, {
	    key: 'detach',
	    value: function detach() {}
	  }, {
	    key: 'deploy',
	    value: function deploy() {}
	  }, {
	    key: 'insertRule',
	    value: function insertRule() {
	      return false;
	    }
	  }, {
	    key: 'deleteRule',
	    value: function deleteRule() {
	      return true;
	    }
	  }, {
	    key: 'getRules',
	    value: function getRules() {}
	  }]);

	  return VirtualRenderer;
	}();

	exports['default'] = VirtualRenderer;

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _jssExtend = __webpack_require__(479);

	var _jssExtend2 = _interopRequireDefault(_jssExtend);

	var _jssNested = __webpack_require__(480);

	var _jssNested2 = _interopRequireDefault(_jssNested);

	var _jssCamelCase = __webpack_require__(481);

	var _jssCamelCase2 = _interopRequireDefault(_jssCamelCase);

	var _jssDefaultUnit = __webpack_require__(482);

	var _jssDefaultUnit2 = _interopRequireDefault(_jssDefaultUnit);

	var _jssVendorPrefixer = __webpack_require__(484);

	var _jssVendorPrefixer2 = _interopRequireDefault(_jssVendorPrefixer);

	var _jssPropsSort = __webpack_require__(490);

	var _jssPropsSort2 = _interopRequireDefault(_jssPropsSort);

	var _jssCompose = __webpack_require__(491);

	var _jssCompose2 = _interopRequireDefault(_jssCompose);

	var _jssExpand = __webpack_require__(492);

	var _jssExpand2 = _interopRequireDefault(_jssExpand);

	var _jssGlobal = __webpack_require__(494);

	var _jssGlobal2 = _interopRequireDefault(_jssGlobal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  return {
	    plugins: [(0, _jssGlobal2.default)(options.global), (0, _jssExtend2.default)(options.extend), (0, _jssNested2.default)(options.nested), (0, _jssCompose2.default)(options.compose), (0, _jssCamelCase2.default)(options.camelCase), (0, _jssDefaultUnit2.default)(options.defaultUnit), (0, _jssExpand2.default)(options.expand), (0, _jssVendorPrefixer2.default)(options.vendorPrefixer), (0, _jssPropsSort2.default)(options.propsSort)]
	  };
	};

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports['default'] = jssExtend;

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var isObject = function isObject(obj) {
	  return obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj);
	};

	/**
	 * Recursively extend styles.
	 */
	function extend(style, rule, sheet) {
	  var newStyle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

	  if (typeof style.extend === 'string') {
	    if (sheet) {
	      var refRule = sheet.getRule(style.extend);
	      if (refRule) {
	        if (refRule === rule) (0, _warning2['default'])(false, '[JSS] A rule tries to extend itself \r\n%s', rule);else if (refRule.options.parent) {
	          var originalStyle = refRule.options.parent.rules.raw[style.extend];
	          extend(originalStyle, rule, sheet, newStyle);
	        }
	      }
	    }
	  } else if (Array.isArray(style.extend)) {
	    for (var index = 0; index < style.extend.length; index++) {
	      extend(style.extend[index], rule, sheet, newStyle);
	    }
	  } else {
	    for (var prop in style.extend) {
	      if (prop === 'extend') {
	        extend(style.extend.extend, rule, sheet, newStyle);
	      } else if (isObject(style.extend[prop])) {
	        if (!newStyle[prop]) newStyle[prop] = {};
	        extend(style.extend[prop], rule, sheet, newStyle[prop]);
	      } else {
	        newStyle[prop] = style.extend[prop];
	      }
	    }
	  }
	  // Copy base style.
	  for (var _prop in style) {
	    if (_prop === 'extend') continue;
	    if (isObject(newStyle[_prop]) && isObject(style[_prop])) {
	      extend(style[_prop], rule, sheet, newStyle[_prop]);
	    } else if (isObject(style[_prop])) {
	      newStyle[_prop] = extend(style[_prop], rule, sheet);
	    } else {
	      newStyle[_prop] = style[_prop];
	    }
	  }

	  return newStyle;
	}

	/**
	 * Handle `extend` property.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssExtend() {
	  function onProcessStyle(style, rule, sheet) {
	    return style.extend ? extend(style, rule, sheet) : style;
	  }

	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = jssNested;

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var separatorRegExp = /\s*,\s*/g;
	var parentRegExp = /&/g;
	var refRegExp = /\$([\w-]+)/g;

	/**
	 * Convert nested rules to separate, remove them from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssNested() {
	  // Get a function to be used for $ref replacement.
	  function getReplaceRef(container) {
	    return function (match, key) {
	      var rule = container.getRule(key);
	      if (rule) return rule.selector;
	      (0, _warning2.default)(false, '[JSS] Could not find the referenced rule %s in %s.', key, container.options.meta || container);
	      return key;
	    };
	  }

	  var hasAnd = function hasAnd(str) {
	    return str.indexOf('&') !== -1;
	  };

	  function replaceParentRefs(nestedProp, parentProp) {
	    var parentSelectors = parentProp.split(separatorRegExp);
	    var nestedSelectors = nestedProp.split(separatorRegExp);

	    var result = '';

	    for (var i = 0; i < parentSelectors.length; i++) {
	      var parent = parentSelectors[i];

	      for (var j = 0; j < nestedSelectors.length; j++) {
	        var nested = nestedSelectors[j];
	        if (result) result += ', ';
	        // Replace all & by the parent or prefix & with the parent.
	        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : parent + ' ' + nested;
	      }
	    }

	    return result;
	  }

	  function getOptions(rule, container, options) {
	    // Options has been already created, now we only increase index.
	    if (options) return _extends({}, options, { index: options.index + 1 });

	    var nestingLevel = rule.options.nestingLevel;

	    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

	    return _extends({}, rule.options, {
	      nestingLevel: nestingLevel,
	      index: container.indexOf(rule) + 1
	    });
	  }

	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;
	    var container = rule.options.parent;
	    var options = void 0;
	    var replaceRef = void 0;
	    for (var prop in style) {
	      var isNested = hasAnd(prop);
	      var isNestedConditional = prop[0] === '@';

	      if (!isNested && !isNestedConditional) continue;

	      options = getOptions(rule, container, options);

	      if (isNested) {
	        var selector = replaceParentRefs(prop, rule.selector
	        // Lazily create the ref replacer function just once for
	        // all nested rules within the sheet.
	        );if (!replaceRef) replaceRef = getReplaceRef(container
	        // Replace all $refs.
	        );selector = selector.replace(refRegExp, replaceRef);

	        container.addRule(selector, style[prop], _extends({}, options, { selector: selector }));
	      } else if (isNestedConditional) {
	        // Place conditional right after the parent rule to ensure right ordering.
	        container.addRule(prop, _defineProperty({}, rule.key, style[prop]), options);
	      }

	      delete style[prop];
	    }

	    return style;
	  }

	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 481 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = camelCase;
	var regExp = /([A-Z])/g;

	/**
	 * Replace a string passed from String#replace.
	 * @param {String} str
	 * @return {String}
	 */
	function replace(str) {
	  return "-" + str.toLowerCase();
	}

	/**
	 * Convert camel cased property names to dash separated.
	 *
	 * @param {Object} style
	 * @return {Object}
	 */
	function convertCase(style) {
	  var converted = {};

	  for (var prop in style) {
	    converted[prop.replace(regExp, replace)] = style[prop];
	  }

	  if (style.fallbacks) {
	    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
	  }

	  return converted;
	}

	/**
	 * Allow camel cased property names by converting them back to dasherized.
	 *
	 * @param {Rule} rule
	 */
	function camelCase() {
	  function onProcessStyle(style) {
	    if (Array.isArray(style)) {
	      // Handle rules like @font-face, which can have multiple styles in an array
	      for (var index = 0; index < style.length; index++) {
	        style[index] = convertCase(style[index]);
	      }
	      return style;
	    }

	    return convertCase(style);
	  }

	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports['default'] = defaultUnit;

	var _defaultUnits = __webpack_require__(483);

	var _defaultUnits2 = _interopRequireDefault(_defaultUnits);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Clones the object and adds a camel cased property version.
	 */
	function addCamelCasedVersion(obj) {
	  var regExp = /(-[a-z])/g;
	  var replace = function replace(str) {
	    return str[1].toUpperCase();
	  };
	  var newObj = {};
	  for (var key in obj) {
	    newObj[key] = obj[key];
	    newObj[key.replace(regExp, replace)] = obj[key];
	  }
	  return newObj;
	}

	var units = addCamelCasedVersion(_defaultUnits2['default']);

	/**
	 * Recursive deep style passing function
	 *
	 * @param {String} current property
	 * @param {(Object|Array|Number|String)} property value
	 * @param {Object} options
	 * @return {(Object|Array|Number|String)} resulting value
	 */
	function iterate(prop, value, options) {
	  if (!value) return value;

	  var convertedValue = value;

	  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	  if (type === 'object' && Array.isArray(value)) type = 'array';

	  switch (type) {
	    case 'object':
	      if (prop === 'fallbacks') {
	        for (var innerProp in value) {
	          value[innerProp] = iterate(innerProp, value[innerProp], options);
	        }
	        break;
	      }
	      for (var _innerProp in value) {
	        value[_innerProp] = iterate(prop + '-' + _innerProp, value[_innerProp], options);
	      }
	      break;
	    case 'array':
	      for (var i = 0; i < value.length; i++) {
	        value[i] = iterate(prop, value[i], options);
	      }
	      break;
	    case 'number':
	      if (value !== 0) {
	        convertedValue = value + (options[prop] || units[prop] || '');
	      }
	      break;
	    default:
	      break;
	  }

	  return convertedValue;
	}

	/**
	 * Add unit to numeric values.
	 */
	function defaultUnit() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  var camelCasedOptions = addCamelCasedVersion(options);

	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;

	    for (var prop in style) {
	      style[prop] = iterate(prop, style[prop], camelCasedOptions);
	    }

	    return style;
	  }

	  function onChangeValue(value, prop) {
	    return iterate(prop, value, camelCasedOptions);
	  }

	  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 483 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Generated jss-default-unit CSS property units
	 *
	 * @type object
	 */
	exports['default'] = {
	  'animation-delay': 'ms',
	  'animation-duration': 'ms',
	  'background-position': 'px',
	  'background-position-x': 'px',
	  'background-position-y': 'px',
	  'background-size': 'px',
	  border: 'px',
	  'border-bottom': 'px',
	  'border-bottom-left-radius': 'px',
	  'border-bottom-right-radius': 'px',
	  'border-bottom-width': 'px',
	  'border-left': 'px',
	  'border-left-width': 'px',
	  'border-radius': 'px',
	  'border-right': 'px',
	  'border-right-width': 'px',
	  'border-spacing': 'px',
	  'border-top': 'px',
	  'border-top-left-radius': 'px',
	  'border-top-right-radius': 'px',
	  'border-top-width': 'px',
	  'border-width': 'px',
	  'border-after-width': 'px',
	  'border-before-width': 'px',
	  'border-end-width': 'px',
	  'border-horizontal-spacing': 'px',
	  'border-start-width': 'px',
	  'border-vertical-spacing': 'px',
	  bottom: 'px',
	  'box-shadow': 'px',
	  'column-gap': 'px',
	  'column-rule': 'px',
	  'column-rule-width': 'px',
	  'column-width': 'px',
	  'flex-basis': 'px',
	  'font-size': 'px',
	  'font-size-delta': 'px',
	  height: 'px',
	  left: 'px',
	  'letter-spacing': 'px',
	  'logical-height': 'px',
	  'logical-width': 'px',
	  margin: 'px',
	  'margin-after': 'px',
	  'margin-before': 'px',
	  'margin-bottom': 'px',
	  'margin-left': 'px',
	  'margin-right': 'px',
	  'margin-top': 'px',
	  'max-height': 'px',
	  'max-width': 'px',
	  'margin-end': 'px',
	  'margin-start': 'px',
	  'mask-position-x': 'px',
	  'mask-position-y': 'px',
	  'mask-size': 'px',
	  'max-logical-height': 'px',
	  'max-logical-width': 'px',
	  'min-height': 'px',
	  'min-width': 'px',
	  'min-logical-height': 'px',
	  'min-logical-width': 'px',
	  motion: 'px',
	  'motion-offset': 'px',
	  outline: 'px',
	  'outline-offset': 'px',
	  'outline-width': 'px',
	  padding: 'px',
	  'padding-bottom': 'px',
	  'padding-left': 'px',
	  'padding-right': 'px',
	  'padding-top': 'px',
	  'padding-after': 'px',
	  'padding-before': 'px',
	  'padding-end': 'px',
	  'padding-start': 'px',
	  'perspective-origin-x': '%',
	  'perspective-origin-y': '%',
	  perspective: 'px',
	  right: 'px',
	  'shape-margin': 'px',
	  size: 'px',
	  'text-indent': 'px',
	  'text-stroke': 'px',
	  'text-stroke-width': 'px',
	  top: 'px',
	  'transform-origin': '%',
	  'transform-origin-x': '%',
	  'transform-origin-y': '%',
	  'transform-origin-z': '%',
	  'transition-delay': 'ms',
	  'transition-duration': 'ms',
	  'vertical-align': 'px',
	  width: 'px',
	  'word-spacing': 'px',
	  // Not existing properties.
	  // Used to avoid issues with jss-expand intergration.
	  'box-shadow-x': 'px',
	  'box-shadow-y': 'px',
	  'box-shadow-blur': 'px',
	  'box-shadow-spread': 'px',
	  'font-line-height': 'px',
	  'text-shadow-x': 'px',
	  'text-shadow-y': 'px',
	  'text-shadow-blur': 'px'
	};

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = jssVendorPrefixer;

	var _cssVendor = __webpack_require__(485);

	var vendor = _interopRequireWildcard(_cssVendor);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	/**
	 * Add vendor prefix to a property name when needed.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssVendorPrefixer() {
	  function onProcessRule(rule) {
	    if (rule.type === 'keyframes') {
	      rule.key = '@' + vendor.prefix.css + rule.key.substr(1);
	    }
	  }

	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;

	    for (var prop in style) {
	      var value = style[prop];

	      var changeProp = false;
	      var supportedProp = vendor.supportedProperty(prop);
	      if (supportedProp && supportedProp !== prop) changeProp = true;

	      var changeValue = false;
	      var supportedValue = vendor.supportedValue(supportedProp, value);
	      if (supportedValue && supportedValue !== value) changeValue = true;

	      if (changeProp || changeValue) {
	        if (changeProp) delete style[prop];
	        style[supportedProp || prop] = supportedValue || value;
	      }
	    }

	    return style;
	  }

	  function onChangeValue(value, prop) {
	    return vendor.supportedValue(prop, value);
	  }

	  return { onProcessRule: onProcessRule, onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
	}

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.supportedValue = exports.supportedProperty = exports.prefix = undefined;

	var _prefix = __webpack_require__(486);

	var _prefix2 = _interopRequireDefault(_prefix);

	var _supportedProperty = __webpack_require__(487);

	var _supportedProperty2 = _interopRequireDefault(_supportedProperty);

	var _supportedValue = __webpack_require__(489);

	var _supportedValue2 = _interopRequireDefault(_supportedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	exports['default'] = {
	  prefix: _prefix2['default'],
	  supportedProperty: _supportedProperty2['default'],
	  supportedValue: _supportedValue2['default']
	}; /**
	    * CSS Vendor prefix detection and property feature testing.
	    *
	    * @copyright Oleg Slobodskoi 2015
	    * @website https://github.com/jsstyles/css-vendor
	    * @license MIT
	    */

	exports.prefix = _prefix2['default'];
	exports.supportedProperty = _supportedProperty2['default'];
	exports.supportedValue = _supportedValue2['default'];

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isInBrowser = __webpack_require__(475);

	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var js = ''; /**
	              * Export javascript style and css style vendor prefixes.
	              * Based on "transform" support test.
	              */

	var css = '';

	// We should not do anything if required serverside.
	if (_isInBrowser2['default']) {
	  // Order matters. We need to check Webkit the last one because
	  // other vendors use to add Webkit prefixes to some properties
	  var jsCssMap = {
	    Moz: '-moz-',
	    // IE did it wrong again ...
	    ms: '-ms-',
	    O: '-o-',
	    Webkit: '-webkit-'
	  };
	  var style = document.createElement('p').style;
	  var testProp = 'Transform';

	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      js = key;
	      css = jsCssMap[key];
	      break;
	    }
	  }
	}

	/**
	 * Vendor prefix string for the current browser.
	 *
	 * @type {{js: String, css: String}}
	 * @api public
	 */
	exports['default'] = { js: js, css: css };

/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedProperty;

	var _isInBrowser = __webpack_require__(475);

	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

	var _prefix = __webpack_require__(486);

	var _prefix2 = _interopRequireDefault(_prefix);

	var _camelize = __webpack_require__(488);

	var _camelize2 = _interopRequireDefault(_camelize);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var el = void 0;
	var cache = {};

	if (_isInBrowser2['default']) {
	  el = document.createElement('p');

	  /**
	   * We test every property on vendor prefix requirement.
	   * Once tested, result is cached. It gives us up to 70% perf boost.
	   * http://jsperf.com/element-style-object-access-vs-plain-object
	   *
	   * Prefill cache with known css properties to reduce amount of
	   * properties we need to feature test at runtime.
	   * http://davidwalsh.name/vendor-prefix
	   */
	  var computed = window.getComputedStyle(document.documentElement, '');
	  for (var key in computed) {
	    if (!isNaN(key)) cache[computed[key]] = computed[key];
	  }
	}

	/**
	 * Test if a property is supported, returns supported property with vendor
	 * prefix if required. Returns `false` if not supported.
	 *
	 * @param {String} prop dash separated
	 * @return {String|Boolean}
	 * @api public
	 */
	function supportedProperty(prop) {
	  // For server-side rendering.
	  if (!el) return prop;

	  // We have not tested this prop yet, lets do the test.
	  if (cache[prop] != null) return cache[prop];

	  // Camelization is required because we can't test using
	  // css syntax for e.g. in FF.
	  // Test if property is supported as it is.
	  if ((0, _camelize2['default'])(prop) in el.style) {
	    cache[prop] = prop;
	  }
	  // Test if property is supported with vendor prefix.
	  else if (_prefix2['default'].js + (0, _camelize2['default'])('-' + prop) in el.style) {
	      cache[prop] = _prefix2['default'].css + prop;
	    } else {
	      cache[prop] = false;
	    }

	  return cache[prop];
	}

/***/ }),
/* 488 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = camelize;
	var regExp = /[-\s]+(.)?/g;

	/**
	 * Convert dash separated strings to camel cased.
	 *
	 * @param {String} str
	 * @return {String}
	 */
	function camelize(str) {
	  return str.replace(regExp, toUpper);
	}

	function toUpper(match, c) {
	  return c ? c.toUpperCase() : '';
	}

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedValue;

	var _isInBrowser = __webpack_require__(475);

	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

	var _prefix = __webpack_require__(486);

	var _prefix2 = _interopRequireDefault(_prefix);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var cache = {};
	var el = void 0;

	if (_isInBrowser2['default']) el = document.createElement('p');

	/**
	 * Returns prefixed value if needed. Returns `false` if value is not supported.
	 *
	 * @param {String} property
	 * @param {String} value
	 * @return {String|Boolean}
	 * @api public
	 */
	function supportedValue(property, value) {
	  // For server-side rendering.
	  if (!el) return value;

	  // It is a string or a number as a string like '1'.
	  // We want only prefixable values here.
	  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;

	  var cacheKey = property + value;

	  if (cache[cacheKey] != null) return cache[cacheKey];

	  // IE can even throw an error in some cases, for e.g. style.content = 'bar'
	  try {
	    // Test value as it is.
	    el.style[property] = value;
	  } catch (err) {
	    cache[cacheKey] = false;
	    return false;
	  }

	  // Value is supported as it is.
	  if (el.style[property] !== '') {
	    cache[cacheKey] = value;
	  } else {
	    // Test value with vendor prefix.
	    value = _prefix2['default'].css + value;

	    // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.
	    if (value === '-ms-flex') value = '-ms-flexbox';

	    el.style[property] = value;

	    // Value is supported with vendor prefix.
	    if (el.style[property] !== '') cache[cacheKey] = value;
	  }

	  if (!cache[cacheKey]) cache[cacheKey] = false;

	  // Reset style value.
	  el.style[property] = '';

	  return cache[cacheKey];
	}

/***/ }),
/* 490 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = jssPropsSort;
	/**
	 * Sort props by length.
	 */
	function jssPropsSort() {
	  function sort(prop0, prop1) {
	    return prop0.length - prop1.length;
	  }

	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;

	    var newStyle = {};
	    var props = Object.keys(style).sort(sort);
	    for (var prop in props) {
	      newStyle[props[prop]] = style[props[prop]];
	    }
	    return newStyle;
	  }

	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = jssCompose;

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Set selector.
	 *
	 * @param {Object} original rule
	 * @param {String} className class string
	 * @return {Boolean} flag, indicating function was successfull or not
	 */
	function registerClass(rule, className) {
	  // Skip falsy values
	  if (!className) return true;

	  // Support array of class names `{composes: ['foo', 'bar']}`
	  if (Array.isArray(className)) {
	    for (var index = 0; index < className.length; index++) {
	      var isSetted = registerClass(rule, className[index]);
	      if (!isSetted) return false;
	    }

	    return true;
	  }

	  // Support space separated class names `{composes: 'foo bar'}`
	  if (className.indexOf(' ') > -1) {
	    return registerClass(rule, className.split(' '));
	  }

	  var parent = rule.options.parent;

	  // It is a ref to a local rule.

	  if (className[0] === '$') {
	    var refRule = parent.getRule(className.substr(1));

	    if (!refRule) {
	      (0, _warning2.default)(false, '[JSS] Referenced rule is not defined. \r\n%s', rule);
	      return false;
	    }

	    if (refRule === rule) {
	      (0, _warning2.default)(false, '[JSS] Cyclic composition detected. \r\n%s', rule);
	      return false;
	    }

	    parent.classes[rule.key] += ' ' + parent.classes[refRule.key];

	    return true;
	  }

	  rule.options.parent.classes[rule.key] += ' ' + className;

	  return true;
	}

	/**
	 * Convert compose property to additional class, remove property from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssCompose() {
	  function onProcessStyle(style, rule) {
	    if (!style.composes) return style;
	    registerClass(rule, style.composes);
	    // Remove composes property to prevent infinite loop.
	    delete style.composes;
	    return style;
	  }
	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.default = jssExpand;

	var _props = __webpack_require__(493);

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	/**
	 * Map values by given prop.
	 *
	 * @param {Array} array of values
	 * @param {String} original property
	 * @param {String} original rule
	 * @return {String} mapped values
	 */
	function mapValuesByProp(value, prop, rule) {
	  return value.map(function (item) {
	    return objectToString(item, prop, rule);
	  });
	}

	/**
	 * Convert array to string.
	 *
	 * @param {Array} array of values
	 * @param {String} original property
	 * @param {Object} sheme, for converting arrays in strings
	 * @param {Object} original rule
	 * @return {String} converted string
	 */
	function arrayToString(value, prop, scheme, rule) {
	  if (scheme[prop] == null) return value.join(',');
	  if (value.length === 0) return '';
	  if (Array.isArray(value[0])) return arrayToString(value[0], prop, scheme);
	  if (_typeof(value[0]) === 'object') return mapValuesByProp(value, prop, rule);
	  return value.join(' ');
	}

	/**
	 * Convert object to string.
	 *
	 * @param {Object} object of values
	 * @param {String} original property
	 * @param {Object} original rule
	 * @param {Boolean} is fallback prop
	 * @return {String} converted string
	 */
	function objectToString(value, prop, rule, isFallback) {
	  if (!(_props.propObj[prop] || _props.customPropObj[prop])) return '';

	  var result = [];

	  // Check if exists any non-standart property
	  if (_props.customPropObj[prop]) {
	    value = customPropsToStyle(value, rule, _props.customPropObj[prop], isFallback);
	  }

	  // Pass throught all standart props
	  if (Object.keys(value).length) {
	    for (var baseProp in _props.propObj[prop]) {
	      if (value[baseProp]) {
	        if (Array.isArray(value[baseProp])) {
	          result.push(arrayToString(value[baseProp], baseProp, _props.propArrayInObj));
	        } else result.push(value[baseProp]);
	        continue;
	      }

	      // Add default value from props config.
	      if (_props.propObj[prop][baseProp] != null) {
	        result.push(_props.propObj[prop][baseProp]);
	      }
	    }
	  }

	  return result.join(' ');
	}

	/**
	 * Convert custom properties values to styles adding them to rule directly
	 *
	 * @param {Object} object of values
	 * @param {Object} original rule
	 * @param {String} property, that contain partial custom properties
	 * @param {Boolean} is fallback prop
	 * @return {Object} value without custom properties, that was already added to rule
	 */
	function customPropsToStyle(value, rule, customProps, isFallback) {
	  for (var prop in customProps) {
	    var propName = customProps[prop];

	    // If current property doesn't exist already in rule - add new one
	    if (typeof value[prop] !== 'undefined' && (isFallback || !rule.prop(propName))) {
	      var appendedValue = styleDetector(_defineProperty({}, propName, value[prop]), rule)[propName];

	      // Add style directly in rule
	      if (isFallback) rule.style.fallbacks[propName] = appendedValue;else rule.style[propName] = appendedValue;
	    }
	    // Delete converted property to avoid double converting
	    delete value[prop];
	  }

	  return value;
	}

	/**
	 * Detect if a style needs to be converted.
	 *
	 * @param {Object} style
	 * @param {Object} rule
	 * @param {Boolean} is fallback prop
	 * @return {Object} convertedStyle
	 */
	function styleDetector(style, rule, isFallback) {
	  for (var prop in style) {
	    var value = style[prop];

	    if (Array.isArray(value)) {
	      // Check double arrays to avoid recursion.
	      if (!Array.isArray(value[0])) {
	        if (prop === 'fallbacks') {
	          for (var index = 0; index < style.fallbacks.length; index++) {
	            style.fallbacks[index] = styleDetector(style.fallbacks[index], rule, true);
	          }
	          continue;
	        }

	        style[prop] = arrayToString(value, prop, _props.propArray);
	        // Avoid creating properties with empty values
	        if (!style[prop]) delete style[prop];
	      }
	    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	      if (prop === 'fallbacks') {
	        style.fallbacks = styleDetector(style.fallbacks, rule, true);
	        continue;
	      }

	      style[prop] = objectToString(value, prop, rule, isFallback);
	      // Avoid creating properties with empty values
	      if (!style[prop]) delete style[prop];
	    }

	    // Maybe a computed value resulting in an empty string
	    else if (style[prop] === '') delete style[prop];
	  }

	  return style;
	}

	/**
	 * Adds possibility to write expanded styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssExpand() {
	  function onProcessStyle(style, rule) {
	    if (!style || rule.type !== 'style') return style;

	    if (Array.isArray(style)) {
	      // Pass rules one by one and reformat them
	      for (var index = 0; index < style.length; index++) {
	        style[index] = styleDetector(style[index], rule);
	      }
	      return style;
	    }

	    return styleDetector(style, rule);
	  }

	  return { onProcessStyle: onProcessStyle };
	}

/***/ }),
/* 493 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * A scheme for converting properties from array to regular style.
	 * All properties listed below will be transformed to a string separated by space.
	 */
	var propArray = exports.propArray = {
	  'background-size': true,
	  'background-position': true,
	  border: true,
	  'border-bottom': true,
	  'border-left': true,
	  'border-top': true,
	  'border-right': true,
	  'border-radius': true,
	  'box-shadow': true,
	  flex: true,
	  margin: true,
	  padding: true,
	  outline: true,
	  'transform-origin': true,
	  transform: true,
	  transition: true
	};

	/**
	 * A scheme for converting arrays to regular styles inside of objects.
	 * For e.g.: "{position: [0, 0]}" => "background-position: 0 0;".
	 */
	var propArrayInObj = exports.propArrayInObj = {
	  position: true, // background-position
	  size: true // background-size
	};

	/**
	 * A scheme for parsing and building correct styles from passed objects.
	 */
	var propObj = exports.propObj = {
	  padding: {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  },
	  margin: {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  },
	  background: {
	    attachment: null,
	    color: null,
	    image: null,
	    position: null,
	    repeat: null
	  },
	  border: {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-top': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-right': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-bottom': {
	    width: null,
	    style: null,
	    color: null
	  },
	  'border-left': {
	    width: null,
	    style: null,
	    color: null
	  },
	  outline: {
	    width: null,
	    style: null,
	    color: null
	  },
	  'list-style': {
	    type: null,
	    position: null,
	    image: null
	  },
	  transition: {
	    property: null,
	    duration: null,
	    'timing-function': null,
	    timingFunction: null, // Needed for avoiding comilation issues with jss-camel-case
	    delay: null
	  },
	  animation: {
	    name: null,
	    duration: null,
	    'timing-function': null,
	    timingFunction: null, // Needed to avoid compilation issues with jss-camel-case
	    delay: null,
	    'iteration-count': null,
	    iterationCount: null, // Needed to avoid compilation issues with jss-camel-case
	    direction: null,
	    'fill-mode': null,
	    fillMode: null, // Needed to avoid compilation issues with jss-camel-case
	    'play-state': null,
	    playState: null // Needed to avoid compilation issues with jss-camel-case
	  },
	  'box-shadow': {
	    x: 0,
	    y: 0,
	    blur: 0,
	    spread: 0,
	    color: null,
	    inset: null
	  },
	  'text-shadow': {
	    x: 0,
	    y: 0,
	    blur: null,
	    color: null
	  }
	};

	/**
	 * A scheme for converting non-standart properties inside object.
	 * For e.g.: include 'border-radius' property inside 'border' object.
	 */
	var customPropObj = exports.customPropObj = {
	  border: {
	    radius: 'border-radius'
	  },
	  background: {
	    size: 'background-size',
	    image: 'background-image'
	  },
	  font: {
	    style: 'font-style',
	    variant: 'font-variant',
	    weight: 'font-weight',
	    stretch: 'font-stretch',
	    size: 'font-size',
	    family: 'font-family',
	    lineHeight: 'line-height', // Needed to avoid compilation issues with jss-camel-case
	    'line-height': 'line-height'
	  },
	  flex: {
	    grow: 'flex-grow',
	    basis: 'flex-basis',
	    direction: 'flex-direction',
	    wrap: 'flex-wrap',
	    flow: 'flex-flow',
	    shrink: 'flex-shrink'
	  },
	  align: {
	    self: 'align-self',
	    items: 'align-items',
	    content: 'align-content'
	  }
	};

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	exports['default'] = jssGlobal;

	var _jss = __webpack_require__(453);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var propKey = '@global';
	var prefixKey = '@global ';

	var GlobalContainerRule = function () {
	  function GlobalContainerRule(key, styles, options) {
	    _classCallCheck(this, GlobalContainerRule);

	    this.type = 'global';

	    this.key = key;
	    this.options = options;
	    this.rules = new _jss.RuleList(_extends({}, options, {
	      parent: this
	    }));

	    for (var selector in styles) {
	      this.rules.add(selector, styles[selector], { selector: selector });
	    }

	    this.rules.process();
	  }

	  /**
	   * Get a rule.
	   */


	  _createClass(GlobalContainerRule, [{
	    key: 'getRule',
	    value: function getRule(name) {
	      return this.rules.get(name);
	    }

	    /**
	     * Create and register rule, run plugins.
	     */

	  }, {
	    key: 'addRule',
	    value: function addRule(name, style, options) {
	      var rule = this.rules.add(name, style, options);
	      this.options.jss.plugins.onProcessRule(rule);
	      return rule;
	    }

	    /**
	     * Get index of a rule.
	     */

	  }, {
	    key: 'indexOf',
	    value: function indexOf(rule) {
	      return this.rules.indexOf(rule);
	    }

	    /**
	     * Generates a CSS string.
	     */

	  }, {
	    key: 'toString',
	    value: function toString() {
	      return this.rules.toString();
	    }
	  }]);

	  return GlobalContainerRule;
	}();

	var GlobalPrefixedRule = function () {
	  function GlobalPrefixedRule(name, style, options) {
	    _classCallCheck(this, GlobalPrefixedRule);

	    this.name = name;
	    this.options = options;
	    var selector = name.substr(prefixKey.length);
	    this.rule = options.jss.createRule(selector, style, _extends({}, options, {
	      parent: this,
	      selector: selector
	    }));
	  }

	  _createClass(GlobalPrefixedRule, [{
	    key: 'toString',
	    value: function toString(options) {
	      return this.rule.toString(options);
	    }
	  }]);

	  return GlobalPrefixedRule;
	}();

	var separatorRegExp = /\s*,\s*/g;

	function addScope(selector, scope) {
	  var parts = selector.split(separatorRegExp);
	  var scoped = '';
	  for (var i = 0; i < parts.length; i++) {
	    scoped += scope + ' ' + parts[i].trim();
	    if (parts[i + 1]) scoped += ', ';
	  }
	  return scoped;
	}

	function handleNestedGlobalContainerRule(rule) {
	  var options = rule.options,
	      style = rule.style;

	  var rules = style[propKey];

	  if (!rules) return;

	  for (var name in rules) {
	    options.sheet.addRule(name, rules[name], _extends({}, options, {
	      selector: addScope(name, rule.selector)
	    }));
	  }

	  delete style[propKey];
	}

	function handlePrefixedGlobalRule(rule) {
	  var options = rule.options,
	      style = rule.style;

	  for (var prop in style) {
	    if (prop.substr(0, propKey.length) !== propKey) continue;

	    var selector = addScope(prop.substr(propKey.length), rule.selector);
	    options.sheet.addRule(selector, style[prop], _extends({}, options, {
	      selector: selector
	    }));
	    delete style[prop];
	  }
	}

	/**
	 * Convert nested rules to separate, remove them from original styles.
	 *
	 * @param {Rule} rule
	 * @api public
	 */
	function jssGlobal() {
	  function onCreateRule(name, styles, options) {
	    if (name === propKey) {
	      return new GlobalContainerRule(name, styles, options);
	    }

	    if (name[0] === '@' && name.substr(0, prefixKey.length) === prefixKey) {
	      return new GlobalPrefixedRule(name, styles, options);
	    }

	    var parent = options.parent;


	    if (parent) {
	      if (parent.type === 'global' || parent.options.parent.type === 'global') {
	        options.global = true;
	      }
	    }

	    if (options.global) options.selector = name;

	    return null;
	  }

	  function onProcessRule(rule) {
	    if (rule.type !== 'style') return;

	    handleNestedGlobalContainerRule(rule);
	    handlePrefixedGlobalRule(rule);
	  }

	  return { onCreateRule: onCreateRule, onProcessRule: onProcessRule };
	}

/***/ }),
/* 495 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Namespaces to avoid conflicts on the context.
	 */
	var jss = exports.jss = '64a55d578f856d258dc345b094a2a2b3';
	var sheetsRegistry = exports.sheetsRegistry = 'd4bd0baacbc52bbd48bbb9eb24344ecd';
	var providerId = exports.providerId = 'd9f144a51454eae08eb84ab3ade674a5';
	var sheetOptions = exports.sheetOptions = '6fc570d6bd61383819d0f9e7407c452d';

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var rtl = __webpack_require__(497);
	var convert = rtl['default'] || rtl;
	function jssRTL(_a) {
	    var _b = _a === void 0 ? {} : _a, _c = _b.enabled, enabled = _c === void 0 ? true : _c, _d = _b.opt, opt = _d === void 0 ? 'out' : _d;
	    return {
	        onProcessStyle: function (style, _, sheet) {
	            if (!enabled) {
	                if (typeof style.flip === 'boolean') {
	                    delete style.flip;
	                }
	                return style;
	            }
	            var flip = opt === 'out'; // If it's set to opt-out, then it should flip by default
	            if (typeof sheet.options.flip === 'boolean') {
	                flip = sheet.options.flip;
	            }
	            if (typeof style.flip === 'boolean') {
	                flip = style.flip;
	                delete style.flip;
	            }
	            if (!flip) {
	                return style;
	            }
	            return convert(style);
	        },
	    };
	}
	exports.default = jssRTL;


/***/ }),
/* 497 */
/***/ (function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};









































	var slicedToArray = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];
	    var _n = true;
	    var _d = false;
	    var _e = undefined;

	    try {
	      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);

	        if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;
	      _e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }

	    return _arr;
	  }

	  return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if (Symbol.iterator in Object(arr)) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

	/**
	 * Takes an array of [keyValue1, keyValue2] pairs and creates an object of {keyValue1: keyValue2, keyValue2: keyValue1}
	 * @param {Array} array the array of pairs
	 * @return {Object} the {key, value} pair object
	 */
	function arrayToObject(array) {
	  return array.reduce(function (obj, _ref) {
	    var _ref2 = slicedToArray(_ref, 2),
	        prop1 = _ref2[0],
	        prop2 = _ref2[1];

	    obj[prop1] = prop2;
	    obj[prop2] = prop1;
	    return obj;
	  }, {});
	}

	function isBoolean(val) {
	  return typeof val === 'boolean';
	}

	function isNumber(val) {
	  return typeof val === 'number';
	}

	function isNullOrUndefined(val) {
	  return val === null || typeof val === 'undefined';
	}

	function isObject(val) {
	  return val && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object';
	}

	function isString(val) {
	  return typeof val === 'string';
	}

	function includes(inclusive, inclusee) {
	  return inclusive.indexOf(inclusee) !== -1;
	}

	/**
	 * Flip the sign of a CSS value, possibly with a unit.
	 *
	 * We can't just negate the value with unary minus due to the units.
	 *
	 * @private
	 * @param {String} value - the original value (for example 77%)
	 * @return {String} the result (for example -77%)
	 */
	function flipSign(value) {
	  if (parseFloat(value) === 0) {
	    // Don't mangle zeroes
	    return value;
	  }

	  if (value[0] === '-') {
	    return value.slice(1);
	  }

	  return '-' + value;
	}

	function calculateNewTranslate(match, prefix, offset, suffix) {
	  return prefix + flipSign(offset) + suffix;
	}

	/**
	 * Takes a percentage for background position and inverts it.
	 * This was copied and modified from CSSJanus:
	 * https://github.com/cssjanus/cssjanus/blob/4245f834365f6cfb0239191a151432fb85abab23/src/cssjanus.js#L152-L175
	 * @param {String} value - the original value (for example 77%)
	 * @return {String} the result (for example 23%)
	 */
	function calculateNewBackgroundPosition(value) {
	  var idx = value.indexOf('.');
	  if (idx === -1) {
	    value = 100 - parseFloat(value) + '%';
	  } else {
	    // Two off, one for the "%" at the end, one for the dot itself
	    var len = value.length - idx - 2;
	    value = 100 - parseFloat(value);
	    value = value.toFixed(len) + '%';
	  }
	  return value;
	}

	/**
	 * This takes a list of CSS values and converts it to an array
	 * @param {String} value - something like `1px`, `1px 2em`, or `3pt rgb(150, 230, 550) 40px calc(100% - 5px)`
	 * @return {Array} the split values (for example: `['3pt', 'rgb(150, 230, 550)', '40px', 'calc(100% - 5px)']`)
	 */
	function getValuesAsList(value) {
	  return value.replace(/ +/g, ' ') // remove all extraneous spaces
	  .split(' ').map(function (i) {
	    return i.trim();
	  }) // get rid of extra space before/after each item
	  .filter(Boolean) // get rid of empty strings
	  // join items which are within parenthese
	  // luckily `calc (100% - 5px)` is invalid syntax and it must be `calc(100% - 5px)`, otherwise this would be even more complex
	  .reduce(function (_ref3, item) {
	    var list = _ref3.list,
	        state = _ref3.state;

	    var openParansCount = (item.match(/\(/g) || []).length;
	    var closedParansCount = (item.match(/\)/g) || []).length;
	    if (state.parensDepth > 0) {
	      list[list.length - 1] = list[list.length - 1] + ' ' + item;
	    } else {
	      list.push(item);
	    }
	    state.parensDepth += openParansCount - closedParansCount;
	    return { list: list, state: state };
	  }, { list: [], state: { parensDepth: 0 } }).list;
	}

	/**
	 * This is intended for properties that are `top right bottom left` and will switch them to `top left bottom right`
	 * @param {String} value - `1px 2px 3px 4px` for example, but also handles cases where there are too few/too many and
	 * simply returns the value in those cases (which is the correct behavior)
	 * @return {String} the result - `1px 4px 3px 2px` for example.
	 */
	function handleQuartetValues(value) {
	  var splitValues = getValuesAsList(value);
	  if (splitValues.length <= 3 || splitValues.length > 4) {
	    return value;
	  }

	  var _splitValues = slicedToArray(splitValues, 4),
	      top = _splitValues[0],
	      right = _splitValues[1],
	      bottom = _splitValues[2],
	      left = _splitValues[3];

	  return [top, left, bottom, right].join(' ');
	}

	// some values require a little fudging, that fudging goes here.
	var propertyValueConverters = {
	  padding: function padding(_ref) {
	    var value = _ref.value;

	    if (isNumber(value)) {
	      return value;
	    }
	    return handleQuartetValues(value);
	  },
	  textShadow: function textShadow(_ref2) {
	    var value = _ref2.value;

	    // intentionally leaving off the `g` flag here because we only want to change the first number (which is the offset-x)
	    return value.replace(/(-*)([.|\d]+)/, function (match, negative, number) {
	      if (number === '0') {
	        return match;
	      }
	      var doubleNegative = negative === '' ? '-' : '';
	      return '' + doubleNegative + number;
	    });
	  },
	  borderColor: function borderColor(_ref3) {
	    var value = _ref3.value;

	    return handleQuartetValues(value);
	  },
	  borderRadius: function borderRadius(_ref4) {
	    var value = _ref4.value;

	    if (isNumber(value)) {
	      return value;
	    }
	    if (includes(value, '/')) {
	      var _value$split = value.split('/'),
	          _value$split2 = slicedToArray(_value$split, 2),
	          radius1 = _value$split2[0],
	          radius2 = _value$split2[1];

	      var convertedRadius1 = propertyValueConverters.borderRadius({
	        value: radius1.trim()
	      });
	      var convertedRadius2 = propertyValueConverters.borderRadius({
	        value: radius2.trim()
	      });
	      return convertedRadius1 + ' / ' + convertedRadius2;
	    }
	    var splitValues = getValuesAsList(value);
	    switch (splitValues.length) {
	      case 2:
	        {
	          return splitValues.reverse().join(' ');
	        }
	      case 4:
	        {
	          var _splitValues = slicedToArray(splitValues, 4),
	              topLeft = _splitValues[0],
	              topRight = _splitValues[1],
	              bottomRight = _splitValues[2],
	              bottomLeft = _splitValues[3];

	          return [topRight, topLeft, bottomLeft, bottomRight].join(' ');
	        }
	      default:
	        {
	          return value;
	        }
	    }
	  },
	  background: function background(_ref5) {
	    var value = _ref5.value,
	        valuesToConvert = _ref5.valuesToConvert,
	        isRtl = _ref5.isRtl,
	        bgImgDirectionRegex = _ref5.bgImgDirectionRegex,
	        bgPosDirectionRegex = _ref5.bgPosDirectionRegex;

	    // Yeah, this is in need of a refactor 🙃...
	    // but this property is a tough cookie 🍪
	    // get the backgroundPosition out of the string by removing everything that couldn't be the backgroundPosition value
	    var backgroundPositionValue = value.replace(/(url\(.*?\))|(rgba?\(.*?\))|(hsl\(.*?\))|(#[a-fA-F0-9]+)|((^| )(\D)+( |$))/g, '').trim();
	    // replace that backgroundPosition value with the converted version
	    value = value.replace(backgroundPositionValue, propertyValueConverters.backgroundPosition({
	      value: backgroundPositionValue,
	      valuesToConvert: valuesToConvert,
	      isRtl: isRtl,
	      bgPosDirectionRegex: bgPosDirectionRegex
	    }));
	    // do the backgroundImage value replacing on the whole value (because why not?)
	    return propertyValueConverters.backgroundImage({
	      value: value,
	      valuesToConvert: valuesToConvert,
	      bgImgDirectionRegex: bgImgDirectionRegex
	    });
	  },
	  backgroundImage: function backgroundImage(_ref6) {
	    var value = _ref6.value,
	        valuesToConvert = _ref6.valuesToConvert,
	        bgImgDirectionRegex = _ref6.bgImgDirectionRegex;

	    if (!includes(value, 'url(') && !includes(value, 'linear-gradient(')) {
	      return value;
	    }
	    return value.replace(bgImgDirectionRegex, function (match, g1, group2) {
	      return match.replace(group2, valuesToConvert[group2]);
	    });
	  },
	  backgroundPosition: function backgroundPosition(_ref7) {
	    var value = _ref7.value,
	        valuesToConvert = _ref7.valuesToConvert,
	        isRtl = _ref7.isRtl,
	        bgPosDirectionRegex = _ref7.bgPosDirectionRegex;

	    return value
	    // intentionally only grabbing the first instance of this because that represents `left`
	    .replace(isRtl ? /^((-|\d|\.)+%)/ : null, function (match, group) {
	      return calculateNewBackgroundPosition(group);
	    }).replace(bgPosDirectionRegex, function (match) {
	      return valuesToConvert[match];
	    });
	  },
	  backgroundPositionX: function backgroundPositionX(_ref8) {
	    var value = _ref8.value,
	        valuesToConvert = _ref8.valuesToConvert,
	        isRtl = _ref8.isRtl,
	        bgPosDirectionRegex = _ref8.bgPosDirectionRegex;

	    if (isNumber(value)) {
	      return value;
	    }
	    return propertyValueConverters.backgroundPosition({
	      value: value,
	      valuesToConvert: valuesToConvert,
	      isRtl: isRtl,
	      bgPosDirectionRegex: bgPosDirectionRegex
	    });
	  },
	  transform: function transform(_ref9) {
	    var value = _ref9.value;

	    // This was copied and modified from CSSJanus:
	    // https://github.com/cssjanus/cssjanus/blob/4a40f001b1ba35567112d8b8e1d9d95eda4234c3/src/cssjanus.js#L152-L153
	    var nonAsciiPattern = '[^\\u0020-\\u007e]';

	    var escapePattern = '(?:' + '(?:(?:\\[0-9a-f]{1,6})(?:\\r\\n|\\s)?)' + '|\\\\[^\\r\\n\\f0-9a-f])';

	    var signedQuantPattern = '((?:-?' + ('(?:[0-9]*\\.[0-9]+|[0-9]+)' + '(?:\\s*' + '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)' + '|' + ('-?' + ('(?:[_a-z]|' + nonAsciiPattern + '|' + escapePattern + ')') + ('(?:[_a-z0-9-]|' + nonAsciiPattern + '|' + escapePattern + ')') + '*') + ')?') + ')|(?:inherit|auto))';
	    var translateXRegExp = new RegExp('(translateX\\s*\\(\\s*)' + signedQuantPattern + '(\\s*\\))', 'gi');
	    var translateRegExp = new RegExp('(translate\\s*\\(\\s*)' + signedQuantPattern + '((?:\\s*,\\s*' + signedQuantPattern + '){0,1}\\s*\\))', 'gi');
	    var translate3dRegExp = new RegExp('(translate3d\\s*\\(\\s*)' + signedQuantPattern + '((?:\\s*,\\s*' + signedQuantPattern + '){0,2}\\s*\\))', 'gi');
	    return value.replace(translateXRegExp, calculateNewTranslate).replace(translateRegExp, calculateNewTranslate).replace(translate3dRegExp, calculateNewTranslate);
	  }
	};

	propertyValueConverters.margin = propertyValueConverters.padding;
	propertyValueConverters.borderWidth = propertyValueConverters.padding;
	propertyValueConverters.boxShadow = propertyValueConverters.textShadow;
	propertyValueConverters.webkitBoxShadow = propertyValueConverters.textShadow;
	propertyValueConverters.mozBoxShadow = propertyValueConverters.textShadow;
	propertyValueConverters.borderStyle = propertyValueConverters.borderColor;
	propertyValueConverters.webkitTransform = propertyValueConverters.transform;
	propertyValueConverters.mozTransform = propertyValueConverters.transform;

	// kebab-case versions

	propertyValueConverters['text-shadow'] = propertyValueConverters.textShadow;
	propertyValueConverters['border-color'] = propertyValueConverters.borderColor;
	propertyValueConverters['border-radius'] = propertyValueConverters.borderRadius;
	propertyValueConverters['background-image'] = propertyValueConverters.backgroundImage;
	propertyValueConverters['background-position'] = propertyValueConverters.backgroundPosition;
	propertyValueConverters['background-position-x'] = propertyValueConverters.backgroundPositionX;
	propertyValueConverters['border-width'] = propertyValueConverters.padding;
	propertyValueConverters['box-shadow'] = propertyValueConverters.textShadow;
	propertyValueConverters['-webkit-box-shadow'] = propertyValueConverters.textShadow;
	propertyValueConverters['-moz-box-shadow'] = propertyValueConverters.textShadow;
	propertyValueConverters['border-style'] = propertyValueConverters.borderColor;
	propertyValueConverters['-webkit-transform'] = propertyValueConverters.transform;
	propertyValueConverters['-moz-transform'] = propertyValueConverters.transform;

	// this will be an object of properties that map to their corresponding rtl property (their doppelganger)
	var propertiesToConvert = arrayToObject([['paddingLeft', 'paddingRight'], ['marginLeft', 'marginRight'], ['left', 'right'], ['borderLeft', 'borderRight'], ['borderLeftColor', 'borderRightColor'], ['borderLeftStyle', 'borderRightStyle'], ['borderLeftWidth', 'borderRightWidth'], ['borderTopLeftRadius', 'borderTopRightRadius'], ['borderBottomLeftRadius', 'borderBottomRightRadius'],
	// kebab-case versions
	['padding-left', 'padding-right'], ['margin-left', 'margin-right'], ['border-left', 'border-right'], ['border-left-color', 'border-right-color'], ['border-left-style', 'border-right-style'], ['border-left-width', 'border-right-width'], ['border-top-left-radius', 'border-top-right-radius'], ['border-bottom-left-radius', 'border-bottom-right-radius']]);

	var propsToIgnore = ['content'];

	// this is the same as the propertiesToConvert except for values
	var valuesToConvert = arrayToObject([['ltr', 'rtl'], ['left', 'right'], ['w-resize', 'e-resize'], ['sw-resize', 'se-resize'], ['nw-resize', 'ne-resize']]);

	// Sorry for the regex 😞, but basically thisis used to replace _every_ instance of
	// `ltr`, `rtl`, `right`, and `left` in `backgroundimage` with the corresponding opposite.
	// A situation we're accepting here:
	// url('/left/right/rtl/ltr.png') will be changed to url('/right/left/ltr/rtl.png')
	// Definite trade-offs here, but I think it's a good call.
	var bgImgDirectionRegex = new RegExp('(^|\\W|_)((ltr)|(rtl)|(left)|(right))(\\W|_|$)', 'g');
	var bgPosDirectionRegex = new RegExp('(left)|(right)');

	/**
	 * converts properties and values in the CSS in JS object to their corresponding RTL values
	 * @param {Object} object the CSS in JS object
	 * @return {Object} the RTL converted object
	 */
	function convert(object) {
	  return Object.keys(object).reduce(function (newObj, originalKey) {
	    var originalValue = object[originalKey];
	    if (isString(originalValue)) {
	      // you're welcome to later code 😺
	      originalValue = originalValue.trim();
	    }

	    // Some properties should never be transformed
	    if (includes(propsToIgnore, originalKey)) {
	      newObj[originalKey] = originalValue;
	      return newObj;
	    }

	    var _convertProperty = convertProperty(originalKey, originalValue),
	        key = _convertProperty.key,
	        value = _convertProperty.value;

	    newObj[key] = value;
	    return newObj;
	  }, {});
	}

	/**
	 * Converts a property and its value to the corresponding RTL key and value
	 * @param {String} originalKey the original property key
	 * @param {Number|String|Object} originalValue the original css property value
	 * @return {Object} the new {key, value} pair
	 */
	function convertProperty(originalKey, originalValue) {
	  var isNoFlip = /\/\*\s?@noflip\s?\*\//.test(originalValue);
	  var key = isNoFlip ? originalKey : getPropertyDoppelganger(originalKey);
	  var value = isNoFlip ? originalValue : getValueDoppelganger(key, originalValue);
	  return { key: key, value: value };
	}

	/**
	 * This gets the RTL version of the given property if it has a corresponding RTL property
	 * @param {String} property the name of the property
	 * @return {String} the name of the RTL property
	 */
	function getPropertyDoppelganger(property) {
	  return propertiesToConvert[property] || property;
	}

	/**
	 * This converts the given value to the RTL version of that value based on the key
	 * @param {String} key this is the key (note: this should be the RTL version of the originalKey)
	 * @param {String|Number|Object} originalValue the original css property value. If it's an object, then we'll convert that as well
	 * @return {String|Number|Object} the converted value
	 */
	function getValueDoppelganger(key, originalValue) {
	  /* eslint complexity:[2, 8] */ // let's try to keep the complexity down... If we have to do this much more, let's break this up
	  if (isNullOrUndefined(originalValue) || isBoolean(originalValue)) {
	    return originalValue;
	  }

	  if (isObject(originalValue)) {
	    return convert(originalValue); // recurssion 🌀
	  }
	  var isNum = isNumber(originalValue);
	  var importantlessValue = isNum ? originalValue : originalValue.replace(/ !important.*?$/, '');
	  var isImportant = !isNum && importantlessValue.length !== originalValue.length;
	  var valueConverter = propertyValueConverters[key];
	  var newValue = void 0;
	  if (valueConverter) {
	    newValue = valueConverter({
	      value: importantlessValue,
	      valuesToConvert: valuesToConvert,
	      isRtl: true,
	      bgImgDirectionRegex: bgImgDirectionRegex,
	      bgPosDirectionRegex: bgPosDirectionRegex
	    });
	  } else {
	    newValue = valuesToConvert[importantlessValue] || importantlessValue;
	  }
	  if (isImportant) {
	    return newValue + ' !important';
	  }
	  return newValue;
	}

	module.exports = convert;


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _deepmerge = __webpack_require__(499);

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	var _createTypography = __webpack_require__(500);

	var _createTypography2 = _interopRequireDefault(_createTypography);

	var _createBreakpoints = __webpack_require__(501);

	var _createBreakpoints2 = _interopRequireDefault(_createBreakpoints);

	var _createPalette = __webpack_require__(502);

	var _createPalette2 = _interopRequireDefault(_createPalette);

	var _createMixins = __webpack_require__(509);

	var _createMixins2 = _interopRequireDefault(_createMixins);

	var _shadows = __webpack_require__(510);

	var _shadows2 = _interopRequireDefault(_shadows);

	var _transitions = __webpack_require__(511);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _zIndex = __webpack_require__(515);

	var _zIndex2 = _interopRequireDefault(_zIndex);

	var _spacing = __webpack_require__(516);

	var _spacing2 = _interopRequireDefault(_spacing);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// < 1kb payload overhead when lodash/merge is > 3kb.
	function createMuiTheme() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _options$palette = options.palette,
	      paletteInput = _options$palette === undefined ? {} : _options$palette,
	      _options$breakpoints = options.breakpoints,
	      breakpointsInput = _options$breakpoints === undefined ? {} : _options$breakpoints,
	      _options$mixins = options.mixins,
	      mixinsInput = _options$mixins === undefined ? {} : _options$mixins,
	      _options$typography = options.typography,
	      typographyInput = _options$typography === undefined ? {} : _options$typography,
	      other = (0, _objectWithoutProperties3.default)(options, ['palette', 'breakpoints', 'mixins', 'typography']);


	  var palette = (0, _createPalette2.default)(paletteInput);
	  var breakpoints = (0, _createBreakpoints2.default)(breakpointsInput);

	  return (0, _extends3.default)({
	    direction: 'ltr',
	    palette: palette,
	    typography: (0, _createTypography2.default)(palette, typographyInput),
	    mixins: (0, _createMixins2.default)(breakpoints, _spacing2.default, mixinsInput),
	    breakpoints: breakpoints
	  }, (0, _deepmerge2.default)({
	    shadows: _shadows2.default,
	    transitions: _transitions2.default,
	    spacing: _spacing2.default,
	    zIndex: _zIndex2.default
	  }, other));
	}

	exports.default = createMuiTheme;

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.deepmerge = factory());
	}(this, (function () { 'use strict';

	var isMergeableObject = function isMergeableObject(value) {
		return isNonNullObject(value)
			&& !isSpecial(value)
	};

	function isNonNullObject(value) {
		return !!value && typeof value === 'object'
	}

	function isSpecial(value) {
		var stringValue = Object.prototype.toString.call(value);

		return stringValue === '[object RegExp]'
			|| stringValue === '[object Date]'
			|| isReactElement(value)
	}

	// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
	var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
	var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

	function isReactElement(value) {
		return value.$$typeof === REACT_ELEMENT_TYPE
	}

	function emptyTarget(val) {
		return Array.isArray(val) ? [] : {}
	}

	function cloneUnlessOtherwiseSpecified(value, optionsArgument) {
		var clone = !optionsArgument || optionsArgument.clone !== false;

		return (clone && isMergeableObject(value))
			? deepmerge(emptyTarget(value), value, optionsArgument)
			: value
	}

	function defaultArrayMerge(target, source, optionsArgument) {
		return target.concat(source).map(function(element) {
			return cloneUnlessOtherwiseSpecified(element, optionsArgument)
		})
	}

	function mergeObject(target, source, optionsArgument) {
		var destination = {};
		if (isMergeableObject(target)) {
			Object.keys(target).forEach(function(key) {
				destination[key] = cloneUnlessOtherwiseSpecified(target[key], optionsArgument);
			});
		}
		Object.keys(source).forEach(function(key) {
			if (!isMergeableObject(source[key]) || !target[key]) {
				destination[key] = cloneUnlessOtherwiseSpecified(source[key], optionsArgument);
			} else {
				destination[key] = deepmerge(target[key], source[key], optionsArgument);
			}
		});
		return destination
	}

	function deepmerge(target, source, optionsArgument) {
		var sourceIsArray = Array.isArray(source);
		var targetIsArray = Array.isArray(target);
		var options = optionsArgument || { arrayMerge: defaultArrayMerge };
		var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

		if (!sourceAndTargetTypesMatch) {
			return cloneUnlessOtherwiseSpecified(source, optionsArgument)
		} else if (sourceIsArray) {
			var arrayMerge = options.arrayMerge || defaultArrayMerge;
			return arrayMerge(target, source, optionsArgument)
		} else {
			return mergeObject(target, source, optionsArgument)
		}
	}

	deepmerge.all = function deepmergeAll(array, optionsArgument) {
		if (!Array.isArray(array)) {
			throw new Error('first argument should be an array')
		}

		return array.reduce(function(prev, next) {
			return deepmerge(prev, next, optionsArgument)
		}, {})
	};

	var deepmerge_1 = deepmerge;

	return deepmerge_1;

	})));


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	exports.default = createTypography;

	var _deepmerge = __webpack_require__(499);

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// < 1kb payload overhead when lodash/merge is > 3kb.

	function round(value) {
	  return Math.round(value * 1e5) / 1e5;
	}

	function createTypography(palette, typography) {
	  var _ref = typeof typography === 'function' ? typography(palette) : typography,
	      _ref$fontFamily = _ref.fontFamily,
	      fontFamily = _ref$fontFamily === undefined ? '"Roboto", "Helvetica", "Arial", sans-serif' : _ref$fontFamily,
	      _ref$fontSize = _ref.fontSize,
	      fontSize = _ref$fontSize === undefined ? 14 : _ref$fontSize,
	      _ref$fontWeightLight = _ref.fontWeightLight,
	      fontWeightLight = _ref$fontWeightLight === undefined ? 300 : _ref$fontWeightLight,
	      _ref$fontWeightRegula = _ref.fontWeightRegular,
	      fontWeightRegular = _ref$fontWeightRegula === undefined ? 400 : _ref$fontWeightRegula,
	      _ref$fontWeightMedium = _ref.fontWeightMedium,
	      fontWeightMedium = _ref$fontWeightMedium === undefined ? 500 : _ref$fontWeightMedium,
	      other = (0, _objectWithoutProperties3.default)(_ref, ['fontFamily', 'fontSize', 'fontWeightLight', 'fontWeightRegular', 'fontWeightMedium']);

	  var defaultSize = 16; // Assumes the browser default, typically `16px`

	  return (0, _deepmerge2.default)({
	    fontFamily: fontFamily,
	    fontSize: fontSize,
	    fontWeightLight: fontWeightLight,
	    fontWeightRegular: fontWeightRegular,
	    fontWeightMedium: fontWeightMedium,
	    display4: {
	      fontSize: 112 / defaultSize + 'rem',
	      fontWeight: fontWeightLight,
	      fontFamily: fontFamily,
	      letterSpacing: '-.04em',
	      lineHeight: round(128 / 112) + 'em',
	      marginLeft: '-.06em',
	      color: palette.text.secondary
	    },
	    display3: {
	      fontSize: 56 / defaultSize + 'rem',
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      letterSpacing: '-.02em',
	      lineHeight: round(73 / 56) + 'em',
	      marginLeft: '-.04em',
	      color: palette.text.secondary
	    },
	    display2: {
	      fontSize: 45 / defaultSize + 'rem',
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: round(48 / 45) + 'em',
	      marginLeft: '-.04em',
	      color: palette.text.secondary
	    },
	    display1: {
	      fontSize: 34 / defaultSize + 'rem',
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: round(41 / 34) + 'em',
	      marginLeft: '-.04em',
	      color: palette.text.secondary
	    },
	    headline: {
	      fontSize: 24 / defaultSize + 'rem',
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: round(32.5 / 24) + 'em',
	      color: palette.text.primary
	    },
	    title: {
	      fontSize: 21 / defaultSize + 'rem',
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      lineHeight: round(24.5 / 21) + 'em',
	      color: palette.text.primary
	    },
	    subheading: {
	      fontSize: 16 / defaultSize + 'rem',
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: round(24 / 16) + 'em',
	      color: palette.text.primary
	    },
	    body2: {
	      fontSize: 14 / defaultSize + 'rem',
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily,
	      lineHeight: round(24 / 14) + 'em',
	      color: palette.text.primary
	    },
	    body1: {
	      fontSize: 14 / defaultSize + 'rem',
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: round(20.5 / 14) + 'em',
	      color: palette.text.primary
	    },
	    caption: {
	      fontSize: 12 / defaultSize + 'rem',
	      fontWeight: fontWeightRegular,
	      fontFamily: fontFamily,
	      lineHeight: round(16.5 / 12) + 'em',
	      color: palette.text.secondary
	    },
	    button: {
	      fontSize: fontSize,
	      textTransform: 'uppercase',
	      fontWeight: fontWeightMedium,
	      fontFamily: fontFamily
	    }
	  }, other, {
	    clone: false // No need to clone deep
	  });
	}

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.keys = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	exports.default = createBreakpoints;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Breakpoint = __webpack_require__(174).oneOf(['xs', 'sm', 'md', 'lg', 'xl']);

	// Sorted ASC by size. That's important.
	// It can't be configured as it's used statically for propTypes.
	var keys = exports.keys = ['xs', 'sm', 'md', 'lg', 'xl'];

	// Keep in mind that @media is inclusive by the CSS specification.
	function createBreakpoints(breakpoints) {
	  var _breakpoints$values = breakpoints.values,
	      values = _breakpoints$values === undefined ? {
	    xs: 360,
	    sm: 600,
	    md: 960,
	    lg: 1280,
	    xl: 1920
	  } : _breakpoints$values,
	      _breakpoints$unit = breakpoints.unit,
	      unit = _breakpoints$unit === undefined ? 'px' : _breakpoints$unit,
	      _breakpoints$step = breakpoints.step,
	      step = _breakpoints$step === undefined ? 1 : _breakpoints$step,
	      other = (0, _objectWithoutProperties3.default)(breakpoints, ['values', 'unit', 'step']);


	  function up(key) {
	    var value = void 0;
	    // min-width of xs starts at 0
	    if (key === 'xs') {
	      value = 0;
	    } else {
	      value = values[key] || key;
	    }
	    return '@media (min-width:' + value + unit + ')';
	  }

	  function down(key) {
	    var value = values[key] || key;
	    return '@media (max-width:' + (value - step / 100) + unit + ')';
	  }

	  function between(start, end) {
	    var startIndex = keys.indexOf(start);
	    var endIndex = keys.indexOf(end);
	    return '@media (min-width:' + values[keys[startIndex]] + unit + ') and ' + ('(max-width:' + (values[keys[endIndex + 1]] - step / 100) + unit + ')');
	  }

	  function only(key) {
	    var keyIndex = keys.indexOf(key);
	    if (keyIndex === keys.length - 1) {
	      return up(key);
	    }
	    return between(key, key);
	  }

	  function width(key) {
	    return values[key];
	  }

	  return (0, _extends3.default)({
	    keys: keys,
	    values: values,
	    up: up,
	    down: down,
	    between: between,
	    only: only,
	    width: width
	  }, other);
	}

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.dark = exports.light = undefined;

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	exports.default = createPalette;

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _deepmerge = __webpack_require__(499);

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	var _indigo = __webpack_require__(503);

	var _indigo2 = _interopRequireDefault(_indigo);

	var _pink = __webpack_require__(504);

	var _pink2 = _interopRequireDefault(_pink);

	var _grey = __webpack_require__(505);

	var _grey2 = _interopRequireDefault(_grey);

	var _red = __webpack_require__(506);

	var _red2 = _interopRequireDefault(_red);

	var _common = __webpack_require__(507);

	var _common2 = _interopRequireDefault(_common);

	var _colorManipulator = __webpack_require__(508);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// < 1kb payload overhead when lodash/merge is > 3kb.
	var light = exports.light = {
	  text: {
	    primary: 'rgba(0, 0, 0, 0.87)',
	    secondary: 'rgba(0, 0, 0, 0.54)',
	    disabled: 'rgba(0, 0, 0, 0.38)',
	    hint: 'rgba(0, 0, 0, 0.38)',
	    icon: 'rgba(0, 0, 0, 0.38)',
	    divider: 'rgba(0, 0, 0, 0.12)',
	    lightDivider: 'rgba(0, 0, 0, 0.075)'
	  },
	  input: {
	    bottomLine: 'rgba(0, 0, 0, 0.42)',
	    helperText: 'rgba(0, 0, 0, 0.54)',
	    labelText: 'rgba(0, 0, 0, 0.54)',
	    inputText: 'rgba(0, 0, 0, 0.87)',
	    disabled: 'rgba(0, 0, 0, 0.42)'
	  },
	  action: {
	    active: 'rgba(0, 0, 0, 0.54)',
	    disabled: 'rgba(0, 0, 0, 0.26)'
	  },
	  background: {
	    default: _grey2.default[50],
	    paper: _common2.default.white,
	    appBar: _grey2.default[100],
	    contentFrame: _grey2.default[200]
	  }
	};

	var dark = exports.dark = {
	  text: {
	    primary: 'rgba(255, 255, 255, 1)',
	    secondary: 'rgba(255, 255, 255, 0.7)',
	    disabled: 'rgba(255, 255, 255, 0.5)',
	    hint: 'rgba(255, 255, 255, 0.5)',
	    icon: 'rgba(255, 255, 255, 0.5)',
	    divider: 'rgba(255, 255, 255, 0.12)',
	    lightDivider: 'rgba(255, 255, 255, 0.075)'
	  },
	  input: {
	    bottomLine: 'rgba(255, 255, 255, 0.7)',
	    helperText: 'rgba(255, 255, 255, 0.7)',
	    labelText: 'rgba(255, 255, 255, 0.7)',
	    inputText: 'rgba(255, 255, 255, 1)',
	    disabled: 'rgba(255, 255, 255, 0.5)'
	  },
	  action: {
	    active: 'rgba(255, 255, 255, 1)',
	    disabled: 'rgba(255, 255, 255, 0.3)'
	  },
	  background: {
	    default: '#303030',
	    paper: _grey2.default[800],
	    appBar: _grey2.default[900],
	    contentFrame: _grey2.default[900]
	  }
	};

	function getContrastText(color) {
	  if ((0, _colorManipulator.getContrastRatio)(color, _common2.default.black) < 7) {
	    return dark.text.primary;
	  }
	  return light.text.primary;
	}

	function createPalette(palette) {
	  var _palette$primary = palette.primary,
	      primary = _palette$primary === undefined ? _indigo2.default : _palette$primary,
	      _palette$secondary = palette.secondary,
	      secondary = _palette$secondary === undefined ? _pink2.default : _palette$secondary,
	      _palette$error = palette.error,
	      error = _palette$error === undefined ? _red2.default : _palette$error,
	      _palette$type = palette.type,
	      type = _palette$type === undefined ? 'light' : _palette$type,
	      other = (0, _objectWithoutProperties3.default)(palette, ['primary', 'secondary', 'error', 'type']);

	  var shades = { dark: dark, light: light };

	   false ? (0, _warning2.default)(shades[type], 'Material-UI: the palette type `' + type + '` is not supported.') : void 0;

	  var paletteOutput = (0, _deepmerge2.default)({
	    common: _common2.default,
	    type: type,
	    primary: primary,
	    secondary: secondary,
	    error: error,
	    grey: _grey2.default,
	    shades: shades,
	    text: shades[type].text,
	    input: shades[type].input,
	    action: shades[type].action,
	    background: shades[type].background,
	    getContrastText: getContrastText
	  }, other, {
	    clone: false // No need to clone deep
	  });

	  // Dev warnings
	  if (false) {
	    var difference = function difference(base, compare) {
	      if (!compare) {
	        compare = {};
	      }

	      return (0, _keys2.default)(base).filter(function (hue) {
	        return !compare[hue];
	      });
	    };

	    var paletteColorError = function paletteColorError(name, base, compare) {
	      var missing = difference(base, compare);
	      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(missing.length === 0, ['Material-UI: ' + name + ' color is missing the following hues: ' + missing.join(','), 'See the default colors, indigo, or pink, as exported from material-ui/colors.'].join('\n')) : void 0;
	    };

	    paletteColorError('primary', _indigo2.default, paletteOutput.primary);
	    paletteColorError('secondary', _pink2.default, paletteOutput.secondary);
	    paletteColorError('error', _red2.default, paletteOutput.error);
	    paletteColorError('grey', _red2.default, paletteOutput.grey);
	  }

	  return paletteOutput;
	}

/***/ }),
/* 503 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var indigo = {
	  50: '#e8eaf6',
	  100: '#c5cae9',
	  200: '#9fa8da',
	  300: '#7986cb',
	  400: '#5c6bc0',
	  500: '#3f51b5',
	  600: '#3949ab',
	  700: '#303f9f',
	  800: '#283593',
	  900: '#1a237e',
	  A100: '#8c9eff',
	  A200: '#536dfe',
	  A400: '#3d5afe',
	  A700: '#304ffe',
	  contrastDefaultColor: 'light'
	};

	exports.default = indigo;

/***/ }),
/* 504 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var pink = {
	  50: '#fce4ec',
	  100: '#f8bbd0',
	  200: '#f48fb1',
	  300: '#f06292',
	  400: '#ec407a',
	  500: '#e91e63',
	  600: '#d81b60',
	  700: '#c2185b',
	  800: '#ad1457',
	  900: '#880e4f',
	  A100: '#ff80ab',
	  A200: '#ff4081',
	  A400: '#f50057',
	  A700: '#c51162',
	  contrastDefaultColor: 'light'
	};

	exports.default = pink;

/***/ }),
/* 505 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var grey = {
	  50: '#fafafa',
	  100: '#f5f5f5',
	  200: '#eeeeee',
	  300: '#e0e0e0',
	  400: '#bdbdbd',
	  500: '#9e9e9e',
	  600: '#757575',
	  700: '#616161',
	  800: '#424242',
	  900: '#212121',
	  A100: '#d5d5d5',
	  A200: '#aaaaaa',
	  A400: '#303030',
	  A700: '#616161',
	  contrastDefaultColor: 'dark'
	};

	exports.default = grey;

/***/ }),
/* 506 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var red = {
	  50: '#ffebee',
	  100: '#ffcdd2',
	  200: '#ef9a9a',
	  300: '#e57373',
	  400: '#ef5350',
	  500: '#f44336',
	  600: '#e53935',
	  700: '#d32f2f',
	  800: '#c62828',
	  900: '#b71c1c',
	  A100: '#ff8a80',
	  A200: '#ff5252',
	  A400: '#ff1744',
	  A700: '#d50000',
	  contrastDefaultColor: 'light'
	};

	exports.default = red;

/***/ }),
/* 507 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var common = {
	  black: '#000',
	  white: '#fff',
	  transparent: 'rgba(0, 0, 0, 0)',
	  fullBlack: 'rgba(0, 0, 0, 1)',
	  darkBlack: 'rgba(0, 0, 0, 0.87)',
	  lightBlack: 'rgba(0, 0, 0, 0.54)',
	  minBlack: 'rgba(0, 0, 0, 0.26)',
	  faintBlack: 'rgba(0, 0, 0, 0.12)',
	  fullWhite: 'rgba(255, 255, 255, 1)',
	  darkWhite: 'rgba(255, 255, 255, 0.87)',
	  lightWhite: 'rgba(255, 255, 255, 0.54)'
	};

	exports.default = common;

/***/ }),
/* 508 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.convertColorToString = convertColorToString;
	exports.convertHexToRGB = convertHexToRGB;
	exports.decomposeColor = decomposeColor;
	exports.getContrastRatio = getContrastRatio;
	exports.getLuminance = getLuminance;
	exports.emphasize = emphasize;
	exports.fade = fade;
	exports.darken = darken;
	exports.lighten = lighten;
	//  weak
	/* eslint-disable no-use-before-define */

	/**
	 * Returns a number whose value is limited to the given range.
	 *
	 * @param {number} value The value to be clamped
	 * @param {number} min The lower boundary of the output range
	 * @param {number} max The upper boundary of the output range
	 * @returns {number} A number in the range [min, max]
	 */
	function clamp(value, min, max) {
	  if (value < min) {
	    return min;
	  }
	  if (value > max) {
	    return max;
	  }
	  return value;
	}

	/**
	 * Converts a color object with type and values to a string.
	 *
	 * @param {object} color - Decomposed color
	 * @param {string} color.type - One of, 'rgb', 'rgba', 'hsl', 'hsla'
	 * @param {array} color.values - [n,n,n] or [n,n,n,n]
	 * @returns {string} A CSS color string
	 */
	function convertColorToString(color) {
	  var type = color.type,
	      values = color.values;


	  if (type.indexOf('rgb') > -1) {
	    // Only convert the first 3 values to int (i.e. not alpha)
	    for (var i = 0; i < 3; i += 1) {
	      values[i] = parseInt(values[i], 10);
	    }
	  }

	  var colorString = void 0;

	  if (type.indexOf('hsl') > -1) {
	    colorString = color.type + '(' + values[0] + ', ' + values[1] + '%, ' + values[2] + '%';
	  } else {
	    colorString = color.type + '(' + values[0] + ', ' + values[1] + ', ' + values[2];
	  }

	  if (values.length === 4) {
	    colorString += ', ' + color.values[3] + ')';
	  } else {
	    colorString += ')';
	  }

	  return colorString;
	}

	/**
	 * Converts a color from CSS hex format to CSS rgb format.
	 *
	 *  @param {string} color - Hex color, i.e. #nnn or #nnnnnn
	 *  @returns {string} A CSS rgb color string
	 */
	function convertHexToRGB(color) {
	  if (color.length === 4) {
	    var extendedColor = '#';
	    for (var i = 1; i < color.length; i += 1) {
	      extendedColor += color.charAt(i) + color.charAt(i);
	    }
	    color = extendedColor;
	  }

	  var values = {
	    r: parseInt(color.substr(1, 2), 16),
	    g: parseInt(color.substr(3, 2), 16),
	    b: parseInt(color.substr(5, 2), 16)
	  };

	  return 'rgb(' + values.r + ', ' + values.g + ', ' + values.b + ')';
	}

	/**
	 * Returns an object with the type and values of a color.
	 *
	 * Note: Does not support rgb % values.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {{type: string, values: number[]}} A MUI color object
	 */
	function decomposeColor(color) {
	  if (color.charAt(0) === '#') {
	    return decomposeColor(convertHexToRGB(color));
	  }

	  var marker = color.indexOf('(');
	  var type = color.substring(0, marker);
	  var values = color.substring(marker + 1, color.length - 1).split(',');
	  values = values.map(function (value) {
	    return parseFloat(value);
	  });

	  return { type: type, values: values };
	}

	/**
	 * Calculates the contrast ratio between two colors.
	 *
	 * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
	 *
	 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} A contrast ratio value in the range 0 - 21 with 2 digit precision.
	 */
	function getContrastRatio(foreground, background) {
	  var lumA = getLuminance(foreground);
	  var lumB = getLuminance(background);
	  var contrastRatio = (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);

	  return Number(contrastRatio.toFixed(2)); // Truncate at two digits
	}

	/**
	 * The relative brightness of any point in a color space,
	 * normalized to 0 for darkest black and 1 for lightest white.
	 *
	 * Formula: https://www.w3.org/WAI/GL/wiki/Relative_luminance
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} The relative brightness of the color in the range 0 - 1
	 */
	function getLuminance(color) {
	  var decomposedColor = decomposeColor(color);

	  if (decomposedColor.type.indexOf('rgb') > -1) {
	    var rgb = decomposedColor.values.map(function (val) {
	      val /= 255; // normalized
	      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
	    });
	    // Truncate at 3 digits
	    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
	  } else if (decomposedColor.type.indexOf('hsl') > -1) {
	    return decomposedColor.values[2] / 100;
	  }

	  throw new Error('Material-UI: unsupported `' + color + '` color.');
	}

	/**
	 * Darken or lighten a colour, depending on its luminance.
	 * Light colors are darkened, dark colors are lightened.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function emphasize(color) {
	  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;

	  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
	}

	/**
	 * Set the absolute transparency of a color.
	 * Any existing alpha values are overwritten.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} value - value to set the alpha channel to in the range 0 -1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function fade(color, value) {
	  color = decomposeColor(color);
	  value = clamp(value, 0, 1);

	  if (color.type === 'rgb' || color.type === 'hsl') {
	    color.type += 'a';
	  }
	  color.values[3] = value;

	  return convertColorToString(color);
	}

	/**
	 * Darkens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function darken(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient, 0, 1);

	  if (color.type.indexOf('hsl') > -1) {
	    color.values[2] *= 1 - coefficient;
	  } else if (color.type.indexOf('rgb') > -1) {
	    for (var i = 0; i < 3; i += 1) {
	      color.values[i] *= 1 - coefficient;
	    }
	  }
	  return convertColorToString(color);
	}

	/**
	 * Lightens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function lighten(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient, 0, 1);

	  if (color.type.indexOf('hsl') > -1) {
	    color.values[2] += (100 - color.values[2]) * coefficient;
	  } else if (color.type.indexOf('rgb') > -1) {
	    for (var i = 0; i < 3; i += 1) {
	      color.values[i] += (255 - color.values[i]) * coefficient;
	    }
	  }

	  return convertColorToString(color);
	}

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	exports.default = createMixins;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createMixins(breakpoints, spacing, mixins) {
	  var _toolbar;

	  return (0, _extends3.default)({
	    gutters: function gutters(styles) {
	      styles.paddingLeft = spacing.unit * 2;
	      styles.paddingRight = spacing.unit * 2;
	      styles[breakpoints.up('sm')] = {
	        paddingLeft: spacing.unit * 3,
	        paddingRight: spacing.unit * 3
	      };
	      return styles;
	    },
	    toolbar: (_toolbar = {
	      minHeight: 56
	    }, (0, _defineProperty3.default)(_toolbar, breakpoints.up('xs') + ' and (orientation: landscape)', {
	      minHeight: 48
	    }), (0, _defineProperty3.default)(_toolbar, breakpoints.up('sm'), {
	      minHeight: 64
	    }), _toolbar)
	  }, mixins);
	}

/***/ }),
/* 510 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var shadowKeyUmbraOpacity = 0.2;
	var shadowKeyPenumbraOpacity = 0.14;
	var shadowAmbientShadowOpacity = 0.12;

	function createShadow() {
	  return [(arguments.length <= 0 ? undefined : arguments[0]) + 'px ' + (arguments.length <= 1 ? undefined : arguments[1]) + 'px ' + (arguments.length <= 2 ? undefined : arguments[2]) + 'px ' + (arguments.length <= 3 ? undefined : arguments[3]) + 'px rgba(0, 0, 0, ' + shadowKeyUmbraOpacity + ')', (arguments.length <= 4 ? undefined : arguments[4]) + 'px ' + (arguments.length <= 5 ? undefined : arguments[5]) + 'px ' + (arguments.length <= 6 ? undefined : arguments[6]) + 'px ' + (arguments.length <= 7 ? undefined : arguments[7]) + 'px rgba(0, 0, 0, ' + shadowKeyPenumbraOpacity + ')', (arguments.length <= 8 ? undefined : arguments[8]) + 'px ' + (arguments.length <= 9 ? undefined : arguments[9]) + 'px ' + (arguments.length <= 10 ? undefined : arguments[10]) + 'px ' + (arguments.length <= 11 ? undefined : arguments[11]) + 'px rgba(0, 0, 0, ' + shadowAmbientShadowOpacity + ')'].join(',');
	}

	var shadows = ['none', createShadow(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1), createShadow(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2), createShadow(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];

	exports.default = shadows;

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isNumber = exports.isString = exports.formatMs = exports.duration = exports.easing = undefined;

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _isNan = __webpack_require__(512);

	var _isNan2 = _interopRequireDefault(_isNan);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
	// to learn the context in which each easing should be used.
	var easing = exports.easing = {
	  // This is the most common easing curve.
	  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
	  // Objects enter the screen at full velocity from off-screen and
	  // slowly decelerate to a resting point.
	  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
	  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
	  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
	  // The sharp curve is used by objects that may return to the screen at any time.
	  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
	};

	// Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
	// to learn when use what timing

	/* eslint-disable no-param-reassign */

	var duration = exports.duration = {
	  shortest: 150,
	  shorter: 200,
	  short: 250,
	  // most basic recommended timing
	  standard: 300,
	  // this is to be used in complex animations
	  complex: 375,
	  // recommended when something is entering screen
	  enteringScreen: 225,
	  // recommended when something is leaving screen
	  leavingScreen: 195
	};

	var formatMs = exports.formatMs = function formatMs(milliseconds) {
	  return Math.round(milliseconds) + 'ms';
	};
	var isString = exports.isString = function isString(value) {
	  return typeof value === 'string';
	};
	var isNumber = exports.isNumber = function isNumber(value) {
	  return !(0, _isNan2.default)(parseFloat(value));
	};

	/**
	 * @param {string|Array} props
	 * @param {object} param
	 * @param {string} param.prop
	 * @param {number} param.duration
	 * @param {string} param.easing
	 * @param {number} param.delay
	 */
	exports.default = {
	  easing: easing,
	  duration: duration,
	  create: function create() {
	    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var _options$duration = options.duration,
	        durationOption = _options$duration === undefined ? duration.standard : _options$duration,
	        _options$easing = options.easing,
	        easingOption = _options$easing === undefined ? easing.easeInOut : _options$easing,
	        _options$delay = options.delay,
	        delay = _options$delay === undefined ? 0 : _options$delay,
	        other = (0, _objectWithoutProperties3.default)(options, ['duration', 'easing', 'delay']);


	     false ? (0, _warning2.default)(isString(props) || Array.isArray(props), 'Material-UI: argument "props" must be a string or Array') : void 0;
	     false ? (0, _warning2.default)(isNumber(durationOption), 'Material-UI: argument "duration" must be a number but found ' + durationOption) : void 0;
	     false ? (0, _warning2.default)(isString(easingOption), 'Material-UI: argument "easing" must be a string') : void 0;
	     false ? (0, _warning2.default)(isNumber(delay), 'Material-UI: argument "delay" must be a string') : void 0;
	     false ? (0, _warning2.default)((0, _keys2.default)(other).length === 0, 'Material-UI: unrecognized argument(s) [' + (0, _keys2.default)(other).join(',') + ']') : void 0;

	    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {
	      return animatedProp + ' ' + formatMs(durationOption) + ' ' + easingOption + ' ' + formatMs(delay);
	    }).join(',');
	  },
	  getAutoHeightDuration: function getAutoHeightDuration(height) {
	    if (!height) {
	      return 0;
	    }

	    var constant = height / 36;

	    // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
	    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
	  }
	};

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(513), __esModule: true };

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(514);
	module.exports = __webpack_require__(322).Number.isNaN;


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(320);

	$export($export.S, 'Number', {
	  isNaN: function isNaN(number) {
	    // eslint-disable-next-line no-self-compare
	    return number != number;
	  }
	});


/***/ }),
/* 515 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});


	// Needed as the zIndex works with absolute values.
	exports.default = {
	  mobileStepper: 900,
	  menu: 1000,
	  appBar: 1100,
	  drawerOverlay: 1200,
	  navDrawer: 1300,
	  dialogOverlay: 1400,
	  dialog: 1500,
	  layer: 2000,
	  popover: 2100,
	  snackbar: 2900,
	  tooltip: 3000
	};

/***/ }),
/* 516 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.
	  // https://material.io/guidelines/layout/metrics-keylines.html#metrics-keylines-baseline-grids
	  unit: 8
	};

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CHANNEL = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var CHANNEL = exports.CHANNEL = 'material-ui';

	var themeListener = {
	  contextTypes: (0, _defineProperty3.default)({}, CHANNEL, _propTypes2.default.object),
	  initial: function initial(context) {
	    if (!context[CHANNEL]) {
	      return null;
	    }

	    return context[CHANNEL].getState();
	  },
	  subscribe: function subscribe(context, cb) {
	    if (!context[CHANNEL]) {
	      return null;
	    }

	    return context[CHANNEL].subscribe(cb);
	  },
	  unsubscribe: function unsubscribe(context, subscriptionId) {
	    if (context[CHANNEL]) {
	      context[CHANNEL].unsubscribe(subscriptionId);
	    }
	  }
	};

	exports.default = themeListener;

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createGenerateClassName;

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_StyleSheet = __webpack_require__(466).babelPluginFlowReactPropTypes_proptype_StyleSheet || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_generateClassName = __webpack_require__(519).babelPluginFlowReactPropTypes_proptype_generateClassName || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Rule = __webpack_require__(519).babelPluginFlowReactPropTypes_proptype_Rule || __webpack_require__(174).any;

	var generatorCounter = 0;

	// Returns a function which generates unique class names based on counters.
	// When new generator function is created, rule counter is reset.
	// We need to reset the rule counter for SSR for each request.
	//
	// It's an improved version of
	// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js
	function createGenerateClassName() {
	  var ruleCounter = 0;

	  if (("production") === 'production' && typeof window !== 'undefined') {
	    generatorCounter += 1;

	    if (generatorCounter > 2) {
	      // eslint-disable-next-line no-console
	      console.error(['Material-UI: we have detected more than needed creation of the class name generator.', 'You should only use one class name generator on the client side.', 'If you do otherwise, you take the risk to have conflicting class names in production.'].join('\n'));
	    }
	  }

	  return function (rule, sheet) {
	    ruleCounter += 1;
	     false ? (0, _warning2.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0;

	    if (true) {
	      return 'c' + ruleCounter;
	    }

	    if (sheet && sheet.options.meta) {
	      return sheet.options.meta + '-' + rule.key + '-' + ruleCounter;
	    }

	    return rule.key + '-' + ruleCounter;
	  };
	}

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Jss = __webpack_require__(465);

	var _Jss2 = _interopRequireDefault(_Jss);

	var _StyleSheet = __webpack_require__(466);

	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

	var _ConditionalRule = __webpack_require__(471);

	var _ConditionalRule2 = _interopRequireDefault(_ConditionalRule);

	var _KeyframesRule = __webpack_require__(470);

	var _KeyframesRule2 = _interopRequireDefault(_KeyframesRule);

	var _StyleRule = __webpack_require__(458);

	var _StyleRule2 = _interopRequireDefault(_StyleRule);

	var _ViewportRule = __webpack_require__(473);

	var _ViewportRule2 = _interopRequireDefault(_ViewportRule);

	var _SimpleRule = __webpack_require__(469);

	var _SimpleRule2 = _interopRequireDefault(_SimpleRule);

	var _FontFaceRule = __webpack_require__(472);

	var _FontFaceRule2 = _interopRequireDefault(_FontFaceRule);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _deepmerge = __webpack_require__(499);

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// < 1kb payload overhead when lodash/merge is > 3kb.

	function getStylesCreator(stylesOrCreator) {
	  function create(theme, name) {
	    var styles = typeof stylesOrCreator === 'function' ? stylesOrCreator(theme) : stylesOrCreator;

	    if (!theme.overrides || !theme.overrides[name]) {
	      return styles;
	    }

	    var overrides = theme.overrides[name];
	    var stylesWithOverrides = (0, _extends3.default)({}, styles);

	    (0, _keys2.default)(overrides).forEach(function (key) {
	       false ? (0, _warning2.default)(stylesWithOverrides[key], 'You are trying to overrides a style that do not exist.') : void 0;
	      stylesWithOverrides[key] = (0, _deepmerge2.default)(stylesWithOverrides[key], overrides[key]);
	    });

	    return stylesWithOverrides;
	  }

	  return {
	    create: create,
	    options: {
	      index: undefined
	    },
	    themingEnabled: typeof stylesOrCreator === 'function'
	  };
	}

	exports.default = getStylesCreator;

/***/ }),
/* 521 */
/***/ (function(module, exports) {

	

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ButtonBase = __webpack_require__(523);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ButtonBase).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _keyboardFocus = __webpack_require__(525);

	var _TouchRipple = __webpack_require__(531);

	var _TouchRipple2 = _interopRequireDefault(_TouchRipple);

	var _createRippleHandler = __webpack_require__(537);

	var _createRippleHandler2 = _interopRequireDefault(_createRippleHandler);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any; //  weak

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'inline-flex',
	      alignItems: 'center',
	      justifyContent: 'center',
	      position: 'relative',
	      // Remove grey highlight
	      WebkitTapHighlightColor: theme.palette.common.transparent,
	      backgroundColor: 'transparent', // Reset default value
	      outline: 'none',
	      border: 0,
	      borderRadius: 0,
	      cursor: 'pointer',
	      userSelect: 'none',
	      appearance: 'none',
	      textDecoration: 'none',
	      // So we take precedent over the style of a native <a /> element.
	      color: 'inherit'
	    },
	    disabled: {
	      pointerEvents: 'none', // Disable link interactions
	      cursor: 'default'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  centerRipple: __webpack_require__(174).bool,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  disabled: __webpack_require__(174).bool,
	  disableRipple: __webpack_require__(174).bool,
	  focusRipple: __webpack_require__(174).bool,
	  keyboardFocusedClassName: __webpack_require__(174).string,
	  onBlur: __webpack_require__(174).func,
	  onClick: __webpack_require__(174).func,
	  onFocus: __webpack_require__(174).func,
	  onKeyboardFocus: __webpack_require__(174).func,
	  onKeyDown: __webpack_require__(174).func,
	  onKeyUp: __webpack_require__(174).func,
	  onMouseDown: __webpack_require__(174).func,
	  onMouseLeave: __webpack_require__(174).func,
	  onMouseUp: __webpack_require__(174).func,
	  onTouchEnd: __webpack_require__(174).func,
	  onTouchMove: __webpack_require__(174).func,
	  onTouchStart: __webpack_require__(174).func,
	  role: __webpack_require__(174).string,
	  rootRef: __webpack_require__(174).func,
	  tabIndex: __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).string]),
	  type: __webpack_require__(174).string.isRequired
	};

	var ButtonBase = function (_React$Component) {
	  (0, _inherits3.default)(ButtonBase, _React$Component);

	  function ButtonBase() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, ButtonBase);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ButtonBase.__proto__ || (0, _getPrototypeOf2.default)(ButtonBase)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      keyboardFocused: false
	    }, _this.ripple = null, _this.keyDown = false, _this.button = null, _this.keyboardFocusTimeout = null, _this.keyboardFocusCheckTime = 40, _this.keyboardFocusMaxCheckTimes = 5, _this.handleKeyDown = function (event) {
	      var _this$props = _this.props,
	          component = _this$props.component,
	          focusRipple = _this$props.focusRipple,
	          onKeyDown = _this$props.onKeyDown,
	          onClick = _this$props.onClick;

	      var key = (0, _keycode2.default)(event);

	      // Check if key is already down to avoid repeats being counted as multiple activations
	      if (focusRipple && !_this.keyDown && _this.state.keyboardFocused && key === 'space') {
	        _this.keyDown = true;
	        event.persist();
	        _this.ripple.stop(event, function () {
	          _this.ripple.start(event);
	        });
	      }

	      if (onKeyDown) {
	        onKeyDown(event);
	      }

	      // Keyboard accessibility for non interactive elements
	      if (event.target === _this.button && onClick && component && component !== 'a' && component !== 'button' && (key === 'space' || key === 'enter')) {
	        event.preventDefault();
	        onClick(event);
	      }
	    }, _this.handleKeyUp = function (event) {
	      if (_this.props.focusRipple && (0, _keycode2.default)(event) === 'space' && _this.state.keyboardFocused) {
	        _this.keyDown = false;
	        event.persist();
	        _this.ripple.stop(event, function () {
	          return _this.ripple.pulsate(event);
	        });
	      }
	      if (_this.props.onKeyUp) {
	        _this.props.onKeyUp(event);
	      }
	    }, _this.handleMouseDown = (0, _createRippleHandler2.default)(_this, 'MouseDown', 'start', function () {
	      clearTimeout(_this.keyboardFocusTimeout);
	      (0, _keyboardFocus.focusKeyPressed)(false);
	      if (_this.state.keyboardFocused) {
	        _this.setState({ keyboardFocused: false });
	      }
	    }), _this.handleMouseUp = (0, _createRippleHandler2.default)(_this, 'MouseUp', 'stop'), _this.handleMouseLeave = (0, _createRippleHandler2.default)(_this, 'MouseLeave', 'stop', function (event) {
	      if (_this.state.keyboardFocused) {
	        event.preventDefault();
	      }
	    }), _this.handleTouchStart = (0, _createRippleHandler2.default)(_this, 'TouchStart', 'start'), _this.handleTouchEnd = (0, _createRippleHandler2.default)(_this, 'TouchEnd', 'stop'), _this.handleTouchMove = (0, _createRippleHandler2.default)(_this, 'TouchEnd', 'stop'), _this.handleBlur = (0, _createRippleHandler2.default)(_this, 'Blur', 'stop', function () {
	      _this.setState({ keyboardFocused: false });
	    }), _this.handleFocus = function (event) {
	      if (_this.props.disabled) {
	        return;
	      }

	      if (_this.button) {
	        event.persist();

	        var keyboardFocusCallback = _this.onKeyboardFocusHandler.bind(_this, event);
	        (0, _keyboardFocus.detectKeyboardFocus)(_this, _this.button, keyboardFocusCallback);
	      }

	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    }, _this.onKeyboardFocusHandler = function (event) {
	      _this.keyDown = false;
	      _this.setState({ keyboardFocused: true });

	      if (_this.props.onKeyboardFocus) {
	        _this.props.onKeyboardFocus(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(ButtonBase, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.button = (0, _reactDom.findDOMNode)(this);
	      (0, _keyboardFocus.listenForFocusKeys)();
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate(nextProps, nextState) {
	      if (this.props.focusRipple && nextState.keyboardFocused && !this.state.keyboardFocused && !this.props.disableRipple) {
	        this.ripple.pulsate();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.button = null;
	      clearTimeout(this.keyboardFocusTimeout);
	    } // Used to help track keyboard activation keyDown

	  }, {
	    key: 'renderRipple',
	    value: function renderRipple() {
	      var _this2 = this;

	      if (!this.props.disableRipple && !this.props.disabled) {
	        return _react2.default.createElement(_TouchRipple2.default, {
	          innerRef: function innerRef(node) {
	            _this2.ripple = node;
	          },
	          center: this.props.centerRipple
	        });
	      }

	      return null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames;

	      var _props = this.props,
	          centerRipple = _props.centerRipple,
	          children = _props.children,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          component = _props.component,
	          disabled = _props.disabled,
	          disableRipple = _props.disableRipple,
	          focusRipple = _props.focusRipple,
	          keyboardFocusedClassName = _props.keyboardFocusedClassName,
	          onBlur = _props.onBlur,
	          onFocus = _props.onFocus,
	          onKeyboardFocus = _props.onKeyboardFocus,
	          onKeyDown = _props.onKeyDown,
	          onKeyUp = _props.onKeyUp,
	          onMouseDown = _props.onMouseDown,
	          onMouseLeave = _props.onMouseLeave,
	          onMouseUp = _props.onMouseUp,
	          onTouchEnd = _props.onTouchEnd,
	          onTouchMove = _props.onTouchMove,
	          onTouchStart = _props.onTouchStart,
	          rootRef = _props.rootRef,
	          tabIndex = _props.tabIndex,
	          type = _props.type,
	          other = (0, _objectWithoutProperties3.default)(_props, ['centerRipple', 'children', 'classes', 'className', 'component', 'disabled', 'disableRipple', 'focusRipple', 'keyboardFocusedClassName', 'onBlur', 'onFocus', 'onKeyboardFocus', 'onKeyDown', 'onKeyUp', 'onMouseDown', 'onMouseLeave', 'onMouseUp', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'rootRef', 'tabIndex', 'type']);


	      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, keyboardFocusedClassName || '', this.state.keyboardFocused), _classNames), classNameProp);

	      var buttonProps = {};

	      var ComponentProp = component;

	      if (!ComponentProp) {
	        if (other.href) {
	          ComponentProp = 'a';
	        } else {
	          ComponentProp = 'button';
	        }
	      }

	      if (ComponentProp === 'button') {
	        buttonProps.type = type || 'button';
	      }

	      if (ComponentProp !== 'a') {
	        buttonProps.role = buttonProps.role || 'button';
	        buttonProps.disabled = disabled;
	      }

	      return _react2.default.createElement(
	        ComponentProp,
	        (0, _extends3.default)({
	          onBlur: this.handleBlur,
	          onFocus: this.handleFocus,
	          onKeyDown: this.handleKeyDown,
	          onKeyUp: this.handleKeyUp,
	          onMouseDown: this.handleMouseDown,
	          onMouseLeave: this.handleMouseLeave,
	          onMouseUp: this.handleMouseUp,
	          onTouchEnd: this.handleTouchEnd,
	          onTouchMove: this.handleTouchMove,
	          onTouchStart: this.handleTouchStart,
	          ref: rootRef,
	          tabIndex: disabled ? -1 : tabIndex,
	          className: className
	        }, buttonProps, other),
	        children,
	        this.renderRipple()
	      );
	    }
	  }]);
	  return ButtonBase;
	}(_react2.default.Component);

	ButtonBase.defaultProps = {
	  centerRipple: false,
	  focusRipple: false,
	  disableRipple: false,
	  tabIndex: 0,
	  type: 'button'
	};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiButtonBase' })(ButtonBase);

/***/ }),
/* 524 */
/***/ (function(module, exports) {

	// Source: http://jsfiddle.net/vWx8V/
	// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

	/**
	 * Conenience method returns corresponding value for given keyName or keyCode.
	 *
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Mixed}
	 * @api public
	 */

	exports = module.exports = function(searchInput) {
	  // Keyboard Events
	  if (searchInput && 'object' === typeof searchInput) {
	    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
	    if (hasKeyCode) searchInput = hasKeyCode
	  }

	  // Numbers
	  if ('number' === typeof searchInput) return names[searchInput]

	  // Everything else (cast to string)
	  var search = String(searchInput)

	  // check codes
	  var foundNamedKey = codes[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // check aliases
	  var foundNamedKey = aliases[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // weird character?
	  if (search.length === 1) return search.charCodeAt(0)

	  return undefined
	}

	/**
	 * Get by name
	 *
	 *   exports.code['enter'] // => 13
	 */

	var codes = exports.code = exports.codes = {
	  'backspace': 8,
	  'tab': 9,
	  'enter': 13,
	  'shift': 16,
	  'ctrl': 17,
	  'alt': 18,
	  'pause/break': 19,
	  'caps lock': 20,
	  'esc': 27,
	  'space': 32,
	  'page up': 33,
	  'page down': 34,
	  'end': 35,
	  'home': 36,
	  'left': 37,
	  'up': 38,
	  'right': 39,
	  'down': 40,
	  'insert': 45,
	  'delete': 46,
	  'command': 91,
	  'left command': 91,
	  'right command': 93,
	  'numpad *': 106,
	  'numpad +': 107,
	  'numpad -': 109,
	  'numpad .': 110,
	  'numpad /': 111,
	  'num lock': 144,
	  'scroll lock': 145,
	  'my computer': 182,
	  'my calculator': 183,
	  ';': 186,
	  '=': 187,
	  ',': 188,
	  '-': 189,
	  '.': 190,
	  '/': 191,
	  '`': 192,
	  '[': 219,
	  '\\': 220,
	  ']': 221,
	  "'": 222
	}

	// Helper aliases

	var aliases = exports.aliases = {
	  'windows': 91,
	  '⇧': 16,
	  '⌥': 18,
	  '⌃': 17,
	  '⌘': 91,
	  'ctl': 17,
	  'control': 17,
	  'option': 18,
	  'pause': 19,
	  'break': 19,
	  'caps': 20,
	  'return': 13,
	  'escape': 27,
	  'spc': 32,
	  'pgup': 33,
	  'pgdn': 34,
	  'ins': 45,
	  'del': 46,
	  'cmd': 91
	}


	/*!
	 * Programatically add the following
	 */

	// lower case chars
	for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32

	// numbers
	for (var i = 48; i < 58; i++) codes[i - 48] = i

	// function keys
	for (i = 1; i < 13; i++) codes['f'+i] = i + 111

	// numpad keys
	for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96

	/**
	 * Get by code
	 *
	 *   exports.name[13] // => 'Enter'
	 */

	var names = exports.names = exports.title = {} // title for backward compat

	// Create reverse mapping
	for (i in codes) names[codes[i]] = i

	// Add aliases
	for (var alias in aliases) {
	  codes[alias] = aliases[alias]
	}


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.focusKeyPressed = focusKeyPressed;
	exports.detectKeyboardFocus = detectKeyboardFocus;
	exports.listenForFocusKeys = listenForFocusKeys;

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _contains = __webpack_require__(526);

	var _contains2 = _interopRequireDefault(_contains);

	var _addEventListener = __webpack_require__(528);

	var _addEventListener2 = _interopRequireDefault(_addEventListener);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//  weak

	var FOCUS_KEYS = ['tab', 'enter', 'space', 'esc', 'up', 'down', 'left', 'right'];

	var internal = {
	  listening: false,
	  focusKeyPressed: false
	};

	function isFocusKey(event) {
	  return FOCUS_KEYS.indexOf((0, _keycode2.default)(event)) !== -1;
	}

	function focusKeyPressed(pressed) {
	  if (typeof pressed !== 'undefined') {
	    internal.focusKeyPressed = Boolean(pressed);
	  }

	  return internal.focusKeyPressed;
	}

	function detectKeyboardFocus(instance, element, callback) {
	  var attempt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

	   false ? (0, _warning2.default)(instance.keyboardFocusCheckTime, 'Material-UI: missing instance.keyboardFocusCheckTime') : void 0;
	   false ? (0, _warning2.default)(instance.keyboardFocusMaxCheckTimes, 'Material-UI: missing instance.keyboardFocusMaxCheckTimes') : void 0;

	  instance.keyboardFocusTimeout = setTimeout(function () {
	    if (focusKeyPressed() && (document.activeElement === element || (0, _contains2.default)(element, document.activeElement))) {
	      callback();
	    } else if (attempt < instance.keyboardFocusMaxCheckTimes) {
	      detectKeyboardFocus(instance, element, callback, attempt + 1);
	    }
	  }, instance.keyboardFocusCheckTime);
	}

	function listenForFocusKeys() {
	  if (!internal.listening) {
	    (0, _addEventListener2.default)(window, 'keyup', function (event) {
	      if (isFocusKey(event)) {
	        internal.focusKeyPressed = true;
	      }
	    });
	    internal.listening = true;
	  }
	}

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  // HTML DOM and SVG DOM may have different support levels,
	  // so we need to check on context instead of a document root element.
	  return _inDOM2.default ? function (context, node) {
	    if (context.contains) {
	      return context.contains(node);
	    } else if (context.compareDocumentPosition) {
	      return context === node || !!(context.compareDocumentPosition(node) & 16);
	    } else {
	      return fallback(context, node);
	    }
	  } : fallback;
	}();

	function fallback(context, node) {
	  if (node) do {
	    if (node === context) return true;
	  } while (node = node.parentNode);

	  return false;
	}
	module.exports = exports['default'];

/***/ }),
/* 527 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	module.exports = exports['default'];

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (node, event, handler, capture) {
	  (0, _on2.default)(node, event, handler, capture);
	  return {
	    remove: function remove() {
	      (0, _off2.default)(node, event, handler, capture);
	    }
	  };
	};

	var _on = __webpack_require__(529);

	var _on2 = _interopRequireDefault(_on);

	var _off = __webpack_require__(530);

	var _off2 = _interopRequireDefault(_off);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var on = function on() {};
	if (_inDOM2.default) {
	  on = function () {

	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.addEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.attachEvent('on' + eventName, function (e) {
	        e = e || window.event;
	        e.target = e.target || e.srcElement;
	        e.currentTarget = node;
	        handler.call(node, e);
	      });
	    };
	  }();
	}

	exports.default = on;
	module.exports = exports['default'];

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var off = function off() {};
	if (_inDOM2.default) {
	  off = function () {
	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.removeEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.detachEvent('on' + eventName, handler);
	    };
	  }();
	}

	exports.default = off;
	module.exports = exports['default'];

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = exports.DELAY_RIPPLE = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _toConsumableArray2 = __webpack_require__(440);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _TransitionGroup = __webpack_require__(532);

	var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Ripple = __webpack_require__(534);

	var _Ripple2 = _interopRequireDefault(_Ripple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//  weak

	var DURATION = 550;
	var DELAY_RIPPLE = exports.DELAY_RIPPLE = 80;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'block',
	      position: 'absolute',
	      overflow: 'hidden',
	      borderRadius: 'inherit',
	      width: '100%',
	      height: '100%',
	      left: 0,
	      top: 0,
	      pointerEvents: 'none',
	      zIndex: 0
	    },
	    wrapper: {
	      opacity: 1
	    },
	    wrapperLeaving: {
	      opacity: 0,
	      animation: 'mui-ripple-exit ' + DURATION + 'ms ' + theme.transitions.easing.easeInOut
	    },
	    wrapperPulsating: {
	      position: 'absolute',
	      left: 0,
	      top: 0,
	      display: 'block',
	      width: '100%',
	      height: '100%',
	      animation: 'mui-ripple-pulsate 1500ms ' + theme.transitions.easing.easeInOut + ' 200ms infinite',
	      rippleVisible: {
	        opacity: 0.2
	      }
	    },
	    '@keyframes mui-ripple-enter': {
	      '0%': {
	        transform: 'scale(0)'
	      },
	      '100%': {
	        transform: 'scale(1)'
	      }
	    },
	    '@keyframes mui-ripple-exit': {
	      '0%': {
	        opacity: 1
	      },
	      '100%': {
	        opacity: 0
	      }
	    },
	    '@keyframes mui-ripple-pulsate': {
	      '0%': {
	        transform: 'scale(1)'
	      },
	      '50%': {
	        transform: 'scale(0.9)'
	      },
	      '100%': {
	        transform: 'scale(1)'
	      }
	    },
	    ripple: {
	      width: 50,
	      height: 50,
	      left: 0,
	      top: 0,
	      opacity: 0,
	      position: 'absolute',
	      borderRadius: '50%',
	      background: 'currentColor'
	    },
	    rippleVisible: {
	      opacity: 0.3,
	      transform: 'scale(1)',
	      animation: 'mui-ripple-enter ' + DURATION + 'ms ' + theme.transitions.easing.easeInOut
	    },
	    rippleFast: {
	      animationDuration: '200ms'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  center: __webpack_require__(174).bool,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string
	};

	/**
	 * @ignore - internal component.
	 */
	var TouchRipple = function (_React$Component) {
	  (0, _inherits3.default)(TouchRipple, _React$Component);

	  function TouchRipple() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TouchRipple);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TouchRipple.__proto__ || (0, _getPrototypeOf2.default)(TouchRipple)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      nextKey: 0,
	      ripples: []
	    }, _this.ignoringMouseDown = false, _this.startTimer = null, _this.startTimerCommit = null, _this.pulsate = function () {
	      _this.start({}, { pulsate: true });
	    }, _this.start = function () {
	      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var cb = arguments[2];
	      var _options$pulsate = options.pulsate,
	          pulsate = _options$pulsate === undefined ? false : _options$pulsate,
	          _options$center = options.center,
	          center = _options$center === undefined ? _this.props.center || options.pulsate : _options$center;


	      if (event.type === 'mousedown' && _this.ignoringMouseDown) {
	        _this.ignoringMouseDown = false;
	        return;
	      }

	      if (event.type === 'touchstart') {
	        _this.ignoringMouseDown = true;
	      }

	      var element = _reactDom2.default.findDOMNode(_this);
	      var rect = element ? // $FlowFixMe
	      element.getBoundingClientRect() : {
	        width: 0,
	        height: 0,
	        left: 0,
	        top: 0
	      };

	      // Get the size of the ripple
	      var rippleX = void 0;
	      var rippleY = void 0;
	      var rippleSize = void 0;

	      if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
	        rippleX = Math.round(rect.width / 2);
	        rippleY = Math.round(rect.height / 2);
	      } else {
	        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
	        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
	        rippleX = Math.round(clientX - rect.left);
	        rippleY = Math.round(clientY - rect.top);
	      }

	      if (center) {
	        rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3);

	        // For some reason the animation is broken on Mobile Chrome if the size if even.
	        if (rippleSize % 2 === 0) {
	          rippleSize += 1;
	        }
	      } else {
	        var sizeX = Math.max(
	        // $FlowFixMe
	        Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
	        var sizeY = Math.max(
	        // $FlowFixMe
	        Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
	        rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
	      }

	      // Touche devices
	      if (event.touches) {
	        // Prepare the ripple effect.
	        _this.startTimerCommit = function () {
	          _this.startCommit({ pulsate: pulsate, rippleX: rippleX, rippleY: rippleY, rippleSize: rippleSize, cb: cb });
	        };
	        // Deplay the execution of the ripple effect.
	        _this.startTimer = setTimeout(function () {
	          _this.startTimerCommit();
	          _this.startTimerCommit = null;
	        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
	      } else {
	        _this.startCommit({ pulsate: pulsate, rippleX: rippleX, rippleY: rippleY, rippleSize: rippleSize, cb: cb });
	      }
	    }, _this.startCommit = function (params) {
	      var pulsate = params.pulsate,
	          rippleX = params.rippleX,
	          rippleY = params.rippleY,
	          rippleSize = params.rippleSize,
	          cb = params.cb;

	      var ripples = _this.state.ripples;

	      // Add a ripple to the ripples array
	      ripples = [].concat((0, _toConsumableArray3.default)(ripples), [_react2.default.createElement(_Ripple2.default, {
	        key: _this.state.nextKey,
	        classes: _this.props.classes,
	        timeout: {
	          exit: DURATION,
	          enter: DURATION
	        },
	        pulsate: pulsate,
	        rippleX: rippleX,
	        rippleY: rippleY,
	        rippleSize: rippleSize
	      })]);

	      _this.setState({
	        nextKey: _this.state.nextKey + 1,
	        ripples: ripples
	      }, cb);
	    }, _this.stop = function (event, cb) {
	      clearTimeout(_this.startTimer);
	      var ripples = _this.state.ripples;

	      // The touch interaction occures to quickly.
	      // We still want to show ripple effect.

	      if (event.type === 'touchend' && _this.startTimerCommit) {
	        event.persist();
	        _this.startTimerCommit();
	        _this.startTimerCommit = null;
	        _this.startTimer = setTimeout(function () {
	          _this.stop(event, cb);
	        }, 0);
	        return;
	      }

	      _this.startTimerCommit = null;

	      if (ripples && ripples.length) {
	        _this.setState({
	          ripples: ripples.slice(1)
	        }, cb);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TouchRipple, [{
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.startTimer);
	    }

	    // Used to filter out mouse emulated events on mobile.

	    // We use a timer in order to only show the ripples for touch "click" like events.
	    // We don't want to display the ripple for touch scroll events.

	    // This is the hook called once the previous timeout is ready.

	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          center = _props.center,
	          classes = _props.classes,
	          className = _props.className,
	          other = (0, _objectWithoutProperties3.default)(_props, ['center', 'classes', 'className']);


	      return _react2.default.createElement(
	        _TransitionGroup2.default,
	        (0, _extends3.default)({
	          component: 'span',
	          enter: true,
	          exit: true,
	          className: (0, _classnames2.default)(classes.root, className)
	        }, other),
	        this.state.ripples
	      );
	    }
	  }]);
	  return TouchRipple;
	}(_react2.default.Component);

	TouchRipple.defaultProps = {
	  center: false
	};
	exports.default = (0, _withStyles2.default)(styles, { flip: false, name: 'MuiTouchRipple' })(TouchRipple);

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _ChildMapping = __webpack_require__(533);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var values = Object.values || function (obj) {
	  return Object.keys(obj).map(function (k) {
	    return obj[k];
	  });
	};

	var propTypes = {
	  /**
	   * `<TransitionGroup>` renders a `<div>` by default. You can change this
	   * behavior by providing a `component` prop.
	   */
	  component: _propTypes2.default.any,
	  /**
	   * A set of `<Transition>` components, that are toggled `in` and out as they
	   * leave. the `<TransitionGroup>` will inject specific transition props, so
	   * remember to spread them through if you are wrapping the `<Transition>` as
	   * with our `<Fade>` example.
	   */
	  children: _propTypes2.default.node,

	  /**
	   * A convenience prop that enables or disabled appear animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  appear: _propTypes2.default.bool,
	  /**
	   * A convenience prop that enables or disabled enter animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  enter: _propTypes2.default.bool,
	  /**
	    * A convenience prop that enables or disabled exit animations
	    * for all children. Note that specifying this will override any defaults set
	    * on individual children Transitions.
	    */
	  exit: _propTypes2.default.bool,

	  /**
	   * You may need to apply reactive updates to a child as it is exiting.
	   * This is generally done by using `cloneElement` however in the case of an exiting
	   * child the element has already been removed and not accessible to the consumer.
	   *
	   * If you do need to update a child as it leaves you can provide a `childFactory`
	   * to wrap every child, even the ones that are leaving.
	   *
	   * @type Function(child: ReactElement) -> ReactElement
	   */
	  childFactory: _propTypes2.default.func
	};

	var defaultProps = {
	  component: 'div',
	  childFactory: function childFactory(child) {
	    return child;
	  }
	};

	/**
	 * The `<TransitionGroup>` component manages a set of `<Transition>` components
	 * in a list. Like with the `<Transition>` component, `<TransitionGroup>`, is a
	 * state machine for managing the mounting and unmounting of components over
	 * time.
	 *
	 * Consider the example below using the `Fade` CSS transition from before.
	 * As items are removed or added to the TodoList the `in` prop is toggled
	 * automatically by the `<TransitionGroup>`. You can use _any_ `<Transition>`
	 * component in a `<TransitionGroup>`, not just css.
	 *
	 * ```jsx
	 * import TransitionGroup from 'react-transition-group/TransitionGroup';
	 *
	 * class TodoList extends React.Component {
	 *   constructor(props) {
	 *     super(props)
	 *     this.state = {items: ['hello', 'world', 'click', 'me']}
	 *   }
	 *   handleAdd() {
	 *     const newItems = this.state.items.concat([
	 *       prompt('Enter some text')
	 *     ]);
	 *     this.setState({ items: newItems });
	 *   }
	 *   handleRemove(i) {
	 *     let newItems = this.state.items.slice();
	 *     newItems.splice(i, 1);
	 *     this.setState({items: newItems});
	 *   }
	 *   render() {
	 *     return (
	 *       <div>
	 *         <button onClick={() => this.handleAdd()}>Add Item</button>
	 *         <TransitionGroup>
	 *           {this.state.items.map((item, i) => (
	 *             <FadeTransition key={item}>
	 *               <div>
	 *                 {item}{' '}
	 *                 <button onClick={() => this.handleRemove(i)}>
	 *                   remove
	 *                 </button>
	 *               </div>
	 *             </FadeTransition>
	 *           ))}
	 *         </TransitionGroup>
	 *       </div>
	 *     );
	 *   }
	 * }
	 * ```
	 *
	 * Note that `<TransitionGroup>`  does not define any animation behavior!
	 * Exactly _how_ a list item animates is up to the individual `<Transition>`
	 * components. This means you can mix and match animations across different
	 * list items.
	 */

	var TransitionGroup = function (_React$Component) {
	  _inherits(TransitionGroup, _React$Component);

	  function TransitionGroup(props, context) {
	    _classCallCheck(this, TransitionGroup);

	    // Initial children should all be entering, dependent on appear
	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

	    _this.handleExited = function (key, node, originalHandler) {
	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

	      if (key in currentChildMapping) return;

	      if (originalHandler) originalHandler(node);

	      _this.setState(function (state) {
	        var children = _extends({}, state.children);

	        delete children[key];
	        return { children: children };
	      });
	    };

	    _this.state = {
	      children: (0, _ChildMapping.getChildMapping)(props.children, function (child) {
	        var onExited = function onExited(node) {
	          _this.handleExited(child.key, node, child.props.onExited);
	        };

	        return (0, _react.cloneElement)(child, {
	          onExited: onExited,
	          in: true,
	          appear: _this.getProp(child, 'appear'),
	          enter: _this.getProp(child, 'enter'),
	          exit: _this.getProp(child, 'exit')
	        });
	      })
	    };
	    return _this;
	  }

	  TransitionGroup.prototype.getChildContext = function getChildContext() {
	    return {
	      transitionGroup: { isMounting: !this.appeared }
	    };
	  };
	  // use child config unless explictly set by the Group


	  TransitionGroup.prototype.getProp = function getProp(child, prop) {
	    var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;

	    return props[prop] != null ? props[prop] : child.props[prop];
	  };

	  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
	    this.appeared = true;
	  };

	  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _this2 = this;

	    var prevChildMapping = this.state.children;
	    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);

	    var children = (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping);

	    Object.keys(children).forEach(function (key) {
	      var child = children[key];

	      if (!(0, _react.isValidElement)(child)) return;

	      var onExited = function onExited(node) {
	        _this2.handleExited(child.key, node, child.props.onExited);
	      };

	      var hasPrev = key in prevChildMapping;
	      var hasNext = key in nextChildMapping;

	      var prevChild = prevChildMapping[key];
	      var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;

	      // item is new (entering)
	      if (hasNext && (!hasPrev || isLeaving)) {
	        // console.log('entering', key)
	        children[key] = (0, _react.cloneElement)(child, {
	          onExited: onExited,
	          in: true,
	          exit: _this2.getProp(child, 'exit', nextProps),
	          enter: _this2.getProp(child, 'enter', nextProps)
	        });
	      }
	      // item is old (exiting)
	      else if (!hasNext && hasPrev && !isLeaving) {
	          // console.log('leaving', key)
	          children[key] = (0, _react.cloneElement)(child, { in: false });
	        }
	        // item hasn't changed transition states
	        // copy over the last transition props;
	        else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
	            // console.log('unchanged', key)
	            children[key] = (0, _react.cloneElement)(child, {
	              onExited: onExited,
	              in: prevChild.props.in,
	              exit: _this2.getProp(child, 'exit', nextProps),
	              enter: _this2.getProp(child, 'enter', nextProps)
	            });
	          }
	    });

	    this.setState({ children: children });
	  };

	  TransitionGroup.prototype.render = function render() {
	    var _props = this.props,
	        Component = _props.component,
	        childFactory = _props.childFactory,
	        props = _objectWithoutProperties(_props, ['component', 'childFactory']);

	    var children = this.state.children;


	    delete props.appear;
	    delete props.enter;
	    delete props.exit;

	    return _react2.default.createElement(
	      Component,
	      props,
	      values(children).map(childFactory)
	    );
	  };

	  return TransitionGroup;
	}(_react2.default.Component);

	TransitionGroup.childContextTypes = {
	  transitionGroup: _propTypes2.default.object.isRequired
	};


	TransitionGroup.propTypes =  false ? propTypes : {};
	TransitionGroup.defaultProps = defaultProps;

	exports.default = TransitionGroup;
	module.exports = exports['default'];

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.getChildMapping = getChildMapping;
	exports.mergeChildMappings = mergeChildMappings;

	var _react = __webpack_require__(3);

	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {*} children `this.props.children`
	 * @return {object} Mapping of key to child
	 */
	function getChildMapping(children, mapFn) {
	  var mapper = function mapper(child) {
	    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
	  };

	  var result = Object.create(null);
	  if (children) _react.Children.map(children, function (c) {
	    return c;
	  }).forEach(function (child) {
	    // run the map function here instead so that the key is the computed one
	    result[child.key] = mapper(child);
	  });
	  return result;
	}

	/**
	 * When you're adding or removing children some may be added or removed in the
	 * same render pass. We want to show *both* since we want to simultaneously
	 * animate elements in and out. This function takes a previous set of keys
	 * and a new set of keys and merges them with its best guess of the correct
	 * ordering. In the future we may expose some of the utilities in
	 * ReactMultiChild to make this easy, but for now React itself does not
	 * directly have this concept of the union of prevChildren and nextChildren
	 * so we implement it here.
	 *
	 * @param {object} prev prev children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @param {object} next next children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @return {object} a key set that contains all keys in `prev` and all keys
	 * in `next` in a reasonable order.
	 */
	function mergeChildMappings(prev, next) {
	  prev = prev || {};
	  next = next || {};

	  function getValueForKey(key) {
	    return key in next ? next[key] : prev[key];
	  }

	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextKeysPending = Object.create(null);

	  var pendingKeys = [];
	  for (var prevKey in prev) {
	    if (prevKey in next) {
	      if (pendingKeys.length) {
	        nextKeysPending[prevKey] = pendingKeys;
	        pendingKeys = [];
	      }
	    } else {
	      pendingKeys.push(prevKey);
	    }
	  }

	  var i = void 0;
	  var childMapping = {};
	  for (var nextKey in next) {
	    if (nextKeysPending[nextKey]) {
	      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	        var pendingNextKey = nextKeysPending[nextKey][i];
	        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	      }
	    }
	    childMapping[nextKey] = getValueForKey(nextKey);
	  }

	  // Finally, add the keys which didn't appear before any key in `next`
	  for (i = 0; i < pendingKeys.length; i++) {
	    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	  }

	  return childMapping;
	}

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _Transition = __webpack_require__(535);

	var _Transition2 = _interopRequireDefault(_Transition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  pulsate: __webpack_require__(174).bool,
	  rippleSize: __webpack_require__(174).number.isRequired,
	  rippleX: __webpack_require__(174).number.isRequired,
	  rippleY: __webpack_require__(174).number.isRequired
	}; //  weak

	/**
	 * @ignore - internal component.
	 */
	var Ripple = function (_React$Component) {
	  (0, _inherits3.default)(Ripple, _React$Component);

	  function Ripple() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Ripple);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Ripple.__proto__ || (0, _getPrototypeOf2.default)(Ripple)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      rippleVisible: false,
	      rippleLeaving: false
	    }, _this.handleEnter = function () {
	      _this.setState({
	        rippleVisible: true
	      });
	    }, _this.handleExit = function () {
	      _this.setState({
	        rippleLeaving: true
	      });
	    }, _this.getRippleStyles = function (props) {
	      var rippleSize = props.rippleSize,
	          rippleX = props.rippleX,
	          rippleY = props.rippleY;


	      return {
	        width: rippleSize,
	        height: rippleSize,
	        top: -(rippleSize / 2) + rippleY,
	        left: -(rippleSize / 2) + rippleX
	      };
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Ripple, [{
	    key: 'render',
	    value: function render() {
	      var _classNames, _classNames2;

	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          pulsate = _props.pulsate,
	          rippleX = _props.rippleX,
	          rippleY = _props.rippleY,
	          rippleSize = _props.rippleSize,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'pulsate', 'rippleX', 'rippleY', 'rippleSize']);
	      var _state = this.state,
	          rippleVisible = _state.rippleVisible,
	          rippleLeaving = _state.rippleLeaving;


	      var className = (0, _classnames2.default)(classes.wrapper, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.wrapperLeaving, rippleLeaving), (0, _defineProperty3.default)(_classNames, classes.wrapperPulsating, pulsate), _classNames), classNameProp);

	      var rippleClassName = (0, _classnames2.default)(classes.ripple, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.rippleVisible, rippleVisible), (0, _defineProperty3.default)(_classNames2, classes.rippleFast, pulsate), _classNames2));

	      return _react2.default.createElement(
	        _Transition2.default,
	        (0, _extends3.default)({ onEnter: this.handleEnter, onExit: this.handleExit }, other),
	        _react2.default.createElement(
	          'span',
	          { className: className },
	          _react2.default.createElement('span', { className: rippleClassName, style: this.getRippleStyles(this.props) })
	        )
	      );
	    }
	  }]);
	  return Ripple;
	}(_react2.default.Component);

	Ripple.defaultProps = {
	  pulsate: false
	};
	exports.default = Ripple;

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;

	var _propTypes = __webpack_require__(174);

	var PropTypes = _interopRequireWildcard(_propTypes);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _PropTypes = __webpack_require__(536);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var UNMOUNTED = exports.UNMOUNTED = 'unmounted';
	var EXITED = exports.EXITED = 'exited';
	var ENTERING = exports.ENTERING = 'entering';
	var ENTERED = exports.ENTERED = 'entered';
	var EXITING = exports.EXITING = 'exiting';

	/**
	 * The Transition component lets you describe a transition from one component
	 * state to another _over time_ with a simple declarative API. Most commonly
	 * it's used to animate the mounting and unmounting of a component, but can also
	 * be used to describe in-place transition states as well.
	 *
	 * By default the `Transition` component does not alter the behavior of the
	 * component it renders, it only tracks "enter" and "exit" states for the components.
	 * It's up to you to give meaning and effect to those states. For example we can
	 * add styles to a component when it enters or exits:
	 *
	 * ```jsx
	 * import Transition from 'react-transition-group/Transition';
	 *
	 * const duration = 300;
	 *
	 * const defaultStyle = {
	 *   transition: `opacity ${duration}ms ease-in-out`,
	 *   opacity: 0,
	 * }
	 *
	 * const transitionStyles = {
	 *   entering: { opacity: 0 },
	 *   entered:  { opacity: 1 },
	 * };
	 *
	 * const Fade = ({ in: inProp }) => (
	 *   <Transition in={inProp} timeout={duration}>
	 *     {(state) => (
	 *       <div style={{
	 *         ...defaultStyle,
	 *         ...transitionStyles[state]
	 *       }}>
	 *         I'm A fade Transition!
	 *       </div>
	 *     )}
	 *   </Transition>
	 * );
	 * ```
	 *
	 * As noted the `Transition` component doesn't _do_ anything by itself to its child component.
	 * What it does do is track transition states over time so you can update the
	 * component (such as by adding styles or classes) when it changes states.
	 *
	 * There are 4 main states a Transition can be in:
	 *  - `ENTERING`
	 *  - `ENTERED`
	 *  - `EXITING`
	 *  - `EXITED`
	 *
	 * Transition state is toggled via the `in` prop. When `true` the component begins the
	 * "Enter" stage. During this stage, the component will shift from its current transition state,
	 * to `'entering'` for the duration of the transition and then to the `'entered'` stage once
	 * it's complete. Let's take the following example:
	 *
	 * ```jsx
	 * state= { in: false };
	 *
	 * toggleEnterState = () => {
	 *   this.setState({ in: true });
	 * }
	 *
	 * render() {
	 *   return (
	 *     <div>
	 *       <Transition in={this.state.in} timeout={500} />
	 *       <button onClick={this.toggleEnterState}>Click to Enter</button>
	 *     </div>
	 *   );
	 * }
	 * ```
	 *
	 * When the button is clicked the component will shift to the `'entering'` state and
	 * stay there for 500ms (the value of `timeout`) when finally switches to `'entered'`.
	 *
	 * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.
	 */

	var Transition = function (_React$Component) {
	  _inherits(Transition, _React$Component);

	  function Transition(props, context) {
	    _classCallCheck(this, Transition);

	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

	    var parentGroup = context.transitionGroup;
	    // In the context of a TransitionGroup all enters are really appears
	    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;

	    var initialStatus = void 0;
	    _this.nextStatus = null;

	    if (props.in) {
	      if (appear) {
	        initialStatus = EXITED;
	        _this.nextStatus = ENTERING;
	      } else {
	        initialStatus = ENTERED;
	      }
	    } else {
	      if (props.unmountOnExit || props.mountOnEnter) {
	        initialStatus = UNMOUNTED;
	      } else {
	        initialStatus = EXITED;
	      }
	    }

	    _this.state = { status: initialStatus };

	    _this.nextCallback = null;
	    return _this;
	  }

	  Transition.prototype.getChildContext = function getChildContext() {
	    return { transitionGroup: null }; // allows for nested Transitions
	  };

	  Transition.prototype.componentDidMount = function componentDidMount() {
	    this.updateStatus(true);
	  };

	  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _ref = this.pendingState || this.state,
	        status = _ref.status;

	    if (nextProps.in) {
	      if (status === UNMOUNTED) {
	        this.setState({ status: EXITED });
	      }
	      if (status !== ENTERING && status !== ENTERED) {
	        this.nextStatus = ENTERING;
	      }
	    } else {
	      if (status === ENTERING || status === ENTERED) {
	        this.nextStatus = EXITING;
	      }
	    }
	  };

	  Transition.prototype.componentDidUpdate = function componentDidUpdate() {
	    this.updateStatus();
	  };

	  Transition.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.cancelNextCallback();
	  };

	  Transition.prototype.getTimeouts = function getTimeouts() {
	    var timeout = this.props.timeout;

	    var exit = void 0,
	        enter = void 0,
	        appear = void 0;

	    exit = enter = appear = timeout;

	    if (timeout != null && typeof timeout !== 'number') {
	      exit = timeout.exit;
	      enter = timeout.enter;
	      appear = timeout.appear;
	    }
	    return { exit: exit, enter: enter, appear: appear };
	  };

	  Transition.prototype.updateStatus = function updateStatus() {
	    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var nextStatus = this.nextStatus;

	    if (nextStatus !== null) {
	      this.nextStatus = null;
	      // nextStatus will always be ENTERING or EXITING.
	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);

	      if (nextStatus === ENTERING) {
	        this.performEnter(node, mounting);
	      } else {
	        this.performExit(node);
	      }
	    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
	      this.setState({ status: UNMOUNTED });
	    }
	  };

	  Transition.prototype.performEnter = function performEnter(node, mounting) {
	    var _this2 = this;

	    var enter = this.props.enter;

	    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;

	    var timeouts = this.getTimeouts();

	    // no enter animation skip right to ENTERED
	    // if we are mounting and running this it means appear _must_ be set
	    if (!mounting && !enter) {
	      this.safeSetState({ status: ENTERED }, function () {
	        _this2.props.onEntered(node);
	      });
	      return;
	    }

	    this.props.onEnter(node, appearing);

	    this.safeSetState({ status: ENTERING }, function () {
	      _this2.props.onEntering(node, appearing);

	      // FIXME: appear timeout?
	      _this2.onTransitionEnd(node, timeouts.enter, function () {
	        _this2.safeSetState({ status: ENTERED }, function () {
	          _this2.props.onEntered(node, appearing);
	        });
	      });
	    });
	  };

	  Transition.prototype.performExit = function performExit(node) {
	    var _this3 = this;

	    var exit = this.props.exit;

	    var timeouts = this.getTimeouts();

	    // no exit animation skip right to EXITED
	    if (!exit) {
	      this.safeSetState({ status: EXITED }, function () {
	        _this3.props.onExited(node);
	      });
	      return;
	    }
	    this.props.onExit(node);

	    this.safeSetState({ status: EXITING }, function () {
	      _this3.props.onExiting(node);

	      _this3.onTransitionEnd(node, timeouts.exit, function () {
	        _this3.safeSetState({ status: EXITED }, function () {
	          _this3.props.onExited(node);
	        });
	      });
	    });
	  };

	  Transition.prototype.cancelNextCallback = function cancelNextCallback() {
	    if (this.nextCallback !== null) {
	      this.nextCallback.cancel();
	      this.nextCallback = null;
	    }
	  };

	  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {
	    var _this4 = this;

	    // We need to track pending updates for instances where a cWRP fires quickly
	    // after cDM and before the state flushes, which would double trigger a
	    // transition
	    this.pendingState = nextState;

	    // This shouldn't be necessary, but there are weird race conditions with
	    // setState callbacks and unmounting in testing, so always make sure that
	    // we can cancel any pending setState callbacks after we unmount.
	    callback = this.setNextCallback(callback);
	    this.setState(nextState, function () {
	      _this4.pendingState = null;
	      callback();
	    });
	  };

	  Transition.prototype.setNextCallback = function setNextCallback(callback) {
	    var _this5 = this;

	    var active = true;

	    this.nextCallback = function (event) {
	      if (active) {
	        active = false;
	        _this5.nextCallback = null;

	        callback(event);
	      }
	    };

	    this.nextCallback.cancel = function () {
	      active = false;
	    };

	    return this.nextCallback;
	  };

	  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
	    this.setNextCallback(handler);

	    if (node) {
	      if (this.props.addEndListener) {
	        this.props.addEndListener(node, this.nextCallback);
	      }
	      if (timeout != null) {
	        setTimeout(this.nextCallback, timeout);
	      }
	    } else {
	      setTimeout(this.nextCallback, 0);
	    }
	  };

	  Transition.prototype.render = function render() {
	    var status = this.state.status;
	    if (status === UNMOUNTED) {
	      return null;
	    }

	    var _props = this.props,
	        children = _props.children,
	        childProps = _objectWithoutProperties(_props, ['children']);
	    // filter props for Transtition


	    delete childProps.in;
	    delete childProps.mountOnEnter;
	    delete childProps.unmountOnExit;
	    delete childProps.appear;
	    delete childProps.enter;
	    delete childProps.exit;
	    delete childProps.timeout;
	    delete childProps.addEndListener;
	    delete childProps.onEnter;
	    delete childProps.onEntering;
	    delete childProps.onEntered;
	    delete childProps.onExit;
	    delete childProps.onExiting;
	    delete childProps.onExited;

	    if (typeof children === 'function') {
	      return children(status, childProps);
	    }

	    var child = _react2.default.Children.only(children);
	    return _react2.default.cloneElement(child, childProps);
	  };

	  return Transition;
	}(_react2.default.Component);

	Transition.contextTypes = {
	  transitionGroup: PropTypes.object
	};
	Transition.childContextTypes = {
	  transitionGroup: function transitionGroup() {}
	};


	Transition.propTypes =  false ? {
	  /**
	   * A `function` child can be used instead of a React element.
	   * This function is called with the current transition status
	   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can used
	   * to apply context specific props to a component.
	   *
	   * ```jsx
	   * <Transition timeout={150}>
	   *   {(status) => (
	   *     <MyComponent className={`fade fade-${status}`} />
	   *   )}
	   * </Transition>
	   * ```
	   */
	  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

	  /**
	   * Show the component; triggers the enter or exit states
	   */
	  in: PropTypes.bool,

	  /**
	   * By default the child component is mounted immediately along with
	   * the parent `Transition` component. If you want to "lazy mount" the component on the
	   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
	   * mounted, even on "exited", unless you also specify `unmountOnExit`.
	   */
	  mountOnEnter: PropTypes.bool,

	  /**
	   * By default the child component stays mounted after it reaches the `'exited'` state.
	   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
	   */
	  unmountOnExit: PropTypes.bool,

	  /**
	   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
	   * If you want to transition on the first mount set `appear` to `true`, and the
	   * component will transition in as soon as the `<Transition>` mounts.
	   *
	   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
	   */
	  appear: PropTypes.bool,

	  /**
	   * Enable or disable enter transitions.
	   */
	  enter: PropTypes.bool,

	  /**
	   * Enable or disable exit transitions.
	   */
	  exit: PropTypes.bool,

	  /**
	   * The duration of the transition, in milliseconds.
	   * Required unless `addEventListener` is provided
	   *
	   * You may specify a single timeout for all transitions like: `timeout={500}`,
	   * or individually like:
	   *
	   * ```jsx
	   * timeout={{
	   *  enter: 300,
	   *  exit: 500,
	   * }}
	   * ```
	   *
	   * @type {number | { enter?: number, exit?: number }}
	   */
	  timeout: function timeout(props) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var pt = _PropTypes.timeoutsShape;
	    if (!props.addEndListener) pt = pt.isRequired;
	    return pt.apply(undefined, [props].concat(args));
	  },

	  /**
	   * Add a custom transition end trigger. Called with the transitioning
	   * DOM node and a `done` callback. Allows for more fine grained transition end
	   * logic. **Note:** Timeouts are still used as a fallback if provided.
	   *
	   * ```jsx
	   * addEndListener={(node, done) => {
	   *   // use the css transitionend event to mark the finish of a transition
	   *   node.addEventListener('transitionend', done, false);
	   * }}
	   * ```
	   */
	  addEndListener: PropTypes.func,

	  /**
	   * Callback fired before the "entering" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool) -> void
	   */
	  onEnter: PropTypes.func,

	  /**
	   * Callback fired after the "entering" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool)
	   */
	  onEntering: PropTypes.func,

	  /**
	   * Callback fired after the "entered" status is applied. An extra parameter
	   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
	   *
	   * @type Function(node: HtmlElement, isAppearing: bool) -> void
	   */
	  onEntered: PropTypes.func,

	  /**
	   * Callback fired before the "exiting" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExit: PropTypes.func,

	  /**
	   * Callback fired after the "exiting" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExiting: PropTypes.func,

	  /**
	   * Callback fired after the "exited" status is applied.
	   *
	   * @type Function(node: HtmlElement) -> void
	   */
	  onExited: PropTypes.func
	} : {};

	// Name the function so it is clearer in the documentation
	function noop() {}

	Transition.defaultProps = {
	  in: false,
	  mountOnEnter: false,
	  unmountOnExit: false,
	  appear: false,
	  enter: true,
	  exit: true,

	  onEnter: noop,
	  onEntering: noop,
	  onEntered: noop,

	  onExit: noop,
	  onExiting: noop,
	  onExited: noop
	};

	Transition.UNMOUNTED = 0;
	Transition.EXITED = 1;
	Transition.ENTERING = 2;
	Transition.ENTERED = 3;
	Transition.EXITING = 4;

	exports.default = Transition;

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.classNamesShape = exports.timeoutsShape = undefined;
	exports.transitionTimeout = transitionTimeout;

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function transitionTimeout(transitionType) {
	  var timeoutPropName = 'transition' + transitionType + 'Timeout';
	  var enabledPropName = 'transition' + transitionType;

	  return function (props) {
	    // If the transition is enabled
	    if (props[enabledPropName]) {
	      // If no timeout duration is provided
	      if (props[timeoutPropName] == null) {
	        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');

	        // If the duration isn't a number
	      } else if (typeof props[timeoutPropName] !== 'number') {
	        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
	      }
	    }

	    return null;
	  };
	}

	var timeoutsShape = exports.timeoutsShape = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({
	  enter: _propTypes2.default.number,
	  exit: _propTypes2.default.number
	}).isRequired]);

	var classNamesShape = exports.classNamesShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
	  enter: _propTypes2.default.string,
	  exit: _propTypes2.default.string,
	  active: _propTypes2.default.string
	}), _propTypes2.default.shape({
	  enter: _propTypes2.default.string,
	  enterActive: _propTypes2.default.string,
	  exit: _propTypes2.default.string,
	  exitActive: _propTypes2.default.string
	})]);

/***/ }),
/* 537 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	function createRippleHandler(instance, eventName, action, cb) {
	  return function handleEvent(event) {
	    if (cb) {
	      cb.call(instance, event);
	    }

	    if (event.defaultPrevented) {
	      return false;
	    }

	    if (instance.ripple) {
	      instance.ripple[action](event);
	    }

	    if (instance.props && typeof instance.props['on' + eventName] === 'function') {
	      instance.props['on' + eventName](event);
	    }

	    return true;
	  };
	}

	exports.default = createRippleHandler;

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  width: ', 'px;\n  height: ', 'px;\n  background-color: #FFF;\n  margin: auto;\n'], ['\n  width: ', 'px;\n  height: ', 'px;\n  background-color: #FFF;\n  margin: auto;\n']),
	    _templateObject2 = _taggedTemplateLiteral(['\n  text-align: center;\n  margin: 0;\n  padding: 40px 40px 20px 40px;\n  font-size: 36px;\n'], ['\n  text-align: center;\n  margin: 0;\n  padding: 40px 40px 20px 40px;\n  font-size: 36px;\n']),
	    _templateObject3 = _taggedTemplateLiteral(['\n  padding: 20px;\n  text-align: center;\n'], ['\n  padding: 20px;\n  text-align: center;\n']),
	    _templateObject4 = _taggedTemplateLiteral(['\n  font-size: 20px;\n  width: 200px;\n  text-overflow: ellipsis;\n'], ['\n  font-size: 20px;\n  width: 200px;\n  text-overflow: ellipsis;\n']),
	    _templateObject5 = _taggedTemplateLiteral(['\n  font-size: 20px;\n  width: 200px;\n  text-overflow: ellipsis;\n  line-height: 1.2;\n'], ['\n  font-size: 20px;\n  width: 200px;\n  text-overflow: ellipsis;\n  line-height: 1.2;\n']),
	    _templateObject6 = _taggedTemplateLiteral(['\n  color: ', ';\n  text-align: center;\n  display: inline-block;\n  padding: 10px;\n  border: 5px solid;\n  margin-top: 10px;\n  height: 323px;\n  vertical-align: top;\n  border-color: ', ';\n\n  p {\n    font-size: 10px;\n  }\n  '], ['\n  color: ', ';\n  text-align: center;\n  display: inline-block;\n  padding: 10px;\n  border: 5px solid;\n  margin-top: 10px;\n  height: 323px;\n  vertical-align: top;\n  border-color: ', ';\n\n  p {\n    font-size: 10px;\n  }\n  ']),
	    _templateObject7 = _taggedTemplateLiteral(['\n  display: inline-block;\n  padding-top: 30px;\n'], ['\n  display: inline-block;\n  padding-top: 30px;\n']),
	    _templateObject8 = _taggedTemplateLiteral(['\n  font-size: 24px;\n  padding: 40px 80px 20px 80px;\n  line-height: 1.4;\n'], ['\n  font-size: 24px;\n  padding: 40px 80px 20px 80px;\n  line-height: 1.4;\n']),
	    _templateObject9 = _taggedTemplateLiteral(['\n  font-size: 18px;\n  padding: 10px 80px;\n'], ['\n  font-size: 18px;\n  padding: 10px 80px;\n']),
	    _templateObject10 = _taggedTemplateLiteral(['\n  position: absolute;\n  margin: 670px 0 0 755px;\n'], ['\n  position: absolute;\n  margin: 670px 0 0 755px;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _socket = __webpack_require__(215);

	var _socket2 = _interopRequireDefault(_socket);

	var _pccLogo2x = __webpack_require__(237);

	var _pccLogo2x2 = _interopRequireDefault(_pccLogo2x);

	var _riderImages = __webpack_require__(539);

	var _riderImages2 = _interopRequireDefault(_riderImages);

	var _settings = __webpack_require__(301);

	var _ff = __webpack_require__(310);

	var _ff2 = _interopRequireDefault(_ff);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var QUOTES = [{
	  quote: 'Ride as much or as little, as long or as short as you feel. But ride.',
	  saidBy: 'Eddy Merckx'
	}, {
	  quote: 'Don’t buy upgrades, ride up grades',
	  saidBy: 'Eddy Merckx'
	}, {
	  quote: 'When your legs scream stop and your lungs are bursting, that\'s when it starts. That\'s the hurt locker. Winners love it in there',
	  saidBy: 'Chris McCormack'
	}, {
	  quote: 'When my legs hurt, I say: “Shut up legs! Do what I tell you to do!',
	  saidBy: 'Jens Voigt'
	}, {
	  quote: 'It never gets easier, you just get faster',
	  saidBy: 'Greg LeMond'
	}, {
	  quote: 'You can’t get good by staying home. If you want to get fast, you have to go where the fast guys are',
	  saidBy: 'Steve Larsen'
	}, {
	  quote: 'Give a man a fish and feed him for a day. Teach a man to fish and feed him for a lifetime. Teach a man to cycle and he will realize fishing is stupid and boring',
	  saidBy: 'Desmond Tutu'
	}, {
	  quote: 'The race is won by the rider who can suffer the most',
	  saidBy: 'Eddy Merckx'
	}, {
	  quote: 'Cycling isn’t a game, it\'s a sport. Tough, hard and unpitying, and it requires great sacrifices. One plays football, or tennis, or hockey. One doesn’t play at cycling',
	  saidBy: 'Jean de Gribaldy'
	}, {
	  quote: 'If you never confront pain, you\'re missing the essence of the sport',
	  saidBy: 'Scott Martin'
	}, {
	  quote: 'When it\'s hurting you, that\'s when you can make a difference',
	  saidBy: 'Eddy Merckx'
	}, {
	  quote: 'If you don\'t go for it, you definitely won\'t win',
	  saidBy: 'Jens Voigt'
	}, {
	  quote: 'As long as I breathe, I attack',
	  saidBy: 'Bernard Hinault'
	}, {
	  quote: 'If you brake, you don’t win',
	  saidBy: 'Mario Cipollini'
	}, {
	  quote: 'Embrace your sweat. It is your essence and your emancipation.',
	  saidBy: 'Kristin Armstrong'
	}, {
	  quote: 'Ride a bike. Ride a bike. Ride a bike.',
	  saidBy: 'Fausto Coppi (how to improve)'
	}, {
	  quote: 'When you ride hard on a mountain bike, sometimes you fall, otherwise you’re not riding hard.',
	  saidBy: 'George W Bush'
	}, {
	  quote: 'If it’s not raining, it’s not training',
	  saidBy: 'Anon'
	}, {
	  quote: 'Training is like wrestling a bear – you don’t stop just because you’re tired',
	  saidBy: 'Anon'
	}, {
	  quote: 'Pain is temporary, quitting lasts forever',
	  saidBy: 'Lance Armstrong'
	}, {
	  quote: 'There\'s a terrible delight in watching a rival sink without a trace',
	  saidBy: 'Bernard Hinault'
	}, {
	  quote: 'At cycling\'s core lies pain, hard and bitter as the pit inside a juicy peach',
	  saidBy: 'Scott Martin'
	}, {
	  quote: 'If you can\'t crank when the crunch comes, you\'ll be left behind',
	  saidBy: 'Fred Matheny'
	}, {
	  quote: 'I believe in pacing. I go as hard as I can, and whether I\'m leading or not I\'ll keep the same pace. So far, this has been good enough.',
	  saidBy: 'Juli Furtado'
	}, {
	  quote: 'The Tour is the only race in the world where you have to get a haircut halfway through',
	  saidBy: 'Chris Boardman'
	}, {
	  quote: 'Variable gears are only for people over forty-five. Isn’t it better to triumph by the strength of your muscles rather than by the artifice of a derailleur?',
	  saidBy: 'Henri Desgrange'
	}, {
	  quote: 'Running would be much better if they invented a little seat to sit on and maybe some kind of platforms for your feet to push',
	  saidBy: 'Liz Hatch'
	}, {
	  quote: 'I get paid to hurt other people, how good is that?',
	  saidBy: 'Jens Voigt'
	}, {
	  quote: 'Even Spartacus falls',
	  saidBy: 'Rob Whitworth'
	}, {
	  quote: 'Thanks Jon',
	  saidBy: 'Eric \'Epic\' Richardson'
	}, {
	  quote: 'I\'m at home',
	  saidBy: 'Ben Rogers'
	}];

	var Wrapper = _styledComponents2.default.div(_templateObject, _settings.STAGE_WIDTH, _settings.STAGE_HEIGHT);

	var WinnerText = _styledComponents2.default.div(_templateObject2);

	var Riders = _styledComponents2.default.div(_templateObject3);

	var SelectedRiderTitle = _styledComponents2.default.div(_templateObject4);

	var SelectedRiderName = _styledComponents2.default.div(_templateObject5);

	var SelectedRider = _styledComponents2.default.div(_templateObject6, function (props) {
	  return props.selected ? 'blue' : 'black';
	}, function (props) {
	  if (props.bike === 'A') {
	    return 'red';
	  }

	  if (props.bike === 'B') {
	    return 'blue';
	  }

	  return 'white';
	});

	var ClubLogo = _styledComponents2.default.div(_templateObject7);

	var Quote = _styledComponents2.default.div(_templateObject8);

	var AttributedTo = _styledComponents2.default.div(_templateObject9);

	var NextRace = _ff2.default.extend(_templateObject10);

	var Victory = (_temp2 = _class = function (_Component) {
	  _inherits(Victory, _Component);

	  function Victory() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Victory);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Victory.__proto__ || Object.getPrototypeOf(Victory)).call.apply(_ref, [this].concat(args))), _this), _this.nextRace = function () {
	      _socket2.default.emit('admin:game:continue', _this.props.adminToken);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Victory, [{
	    key: 'render',
	    value: function render() {
	      var quote = QUOTES[Math.floor(Math.random() * QUOTES.length)];
	      var player1 = this.props.riders.find(function (rider) {
	        return rider.bike === 'A';
	      });
	      var player2 = this.props.riders.find(function (rider) {
	        return rider.bike === 'B';
	      });

	      return _react2.default.createElement(
	        Wrapper,
	        { className: 'game-over', onClick: this.nextRace },
	        _react2.default.createElement(
	          NextRace,
	          null,
	          _react2.default.createElement(
	            _Button2.default,
	            { onClick: this.nextRace },
	            'Next Race >'
	          )
	        ),
	        _react2.default.createElement(
	          WinnerText,
	          null,
	          (player1.winner ? player1 : player2).name,
	          ' Wins!'
	        ),
	        _react2.default.createElement(
	          Riders,
	          null,
	          _react2.default.createElement(
	            SelectedRider,
	            { bike: player1.bike },
	            _react2.default.createElement(
	              SelectedRiderTitle,
	              null,
	              '1P'
	            ),
	            _react2.default.createElement('img', {
	              src: (player1.winner ? player1.photoWin : player1.photoLose) || _riderImages2.default[player1.gender][player1.image],
	              width: '200',
	              height: '225'
	            }),
	            _react2.default.createElement(
	              SelectedRiderName,
	              null,
	              player1.name
	            )
	          ),
	          _react2.default.createElement(
	            ClubLogo,
	            null,
	            _react2.default.createElement('img', { src: _pccLogo2x2.default, height: '300' })
	          ),
	          _react2.default.createElement(
	            SelectedRider,
	            { bike: player2.bike },
	            _react2.default.createElement(
	              SelectedRiderTitle,
	              null,
	              '2P'
	            ),
	            _react2.default.createElement('img', {
	              src: (player2.winner ? player2.photoWin : player2.photoLose) || _riderImages2.default[player2.gender][player2.image],
	              width: '200',
	              height: '225'
	            }),
	            _react2.default.createElement(
	              SelectedRiderName,
	              null,
	              player2.name
	            )
	          )
	        ),
	        _react2.default.createElement(
	          Quote,
	          null,
	          '"',
	          quote.quote,
	          '"'
	        ),
	        _react2.default.createElement(
	          AttributedTo,
	          null,
	          '\xA0- ',
	          quote.saidBy
	        )
	      );
	    }
	  }]);

	  return Victory;
	}(_react.Component), _class.propTypes = {
	  adminToken: _propTypes2.default.string.isRequired,
	  riders: _propTypes2.default.array.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var token = _ref2.admin.token,
	      riders = _ref2.riders.riders;
	  return {
	    adminToken: token,
	    riders: riders
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Victory);

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _riderMale = __webpack_require__(246);

	var _riderMale2 = _interopRequireDefault(_riderMale);

	var _riderMale3 = __webpack_require__(247);

	var _riderMale4 = _interopRequireDefault(_riderMale3);

	var _riderMale5 = __webpack_require__(248);

	var _riderMale6 = _interopRequireDefault(_riderMale5);

	var _riderFemale = __webpack_require__(249);

	var _riderFemale2 = _interopRequireDefault(_riderFemale);

	var _riderFemale3 = __webpack_require__(250);

	var _riderFemale4 = _interopRequireDefault(_riderFemale3);

	var _riderFemale5 = __webpack_require__(251);

	var _riderFemale6 = _interopRequireDefault(_riderFemale5);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var images = {
	  male: [_riderMale2.default, _riderMale4.default, _riderMale6.default],
	  female: [_riderFemale2.default, _riderFemale4.default, _riderFemale6.default]
	};

	exports.default = images;

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _templateObject = _taggedTemplateLiteral(['\n  color: #F10\n'], ['\n  color: #F10\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var ConnectingPanel = _styledComponents2.default.div(_templateObject);

	var Connecting = function Connecting() {
	  return _react2.default.createElement(
	    ConnectingPanel,
	    null,
	    'Connecting'
	  );
	};

	exports.default = Connecting;

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _styles = __webpack_require__(542);

	var _colors = __webpack_require__(547);

	var _createGenerateClassName = __webpack_require__(518);

	var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var theme = (0, _styles.createMuiTheme)({
	  palette: {
	    primary: _colors.grey,
	    secondary: _colors.grey
	  }
	});

	// Apply some reset
	var styles = function styles(theme) {
	  return {
	    '@global': {
	      html: {
	        background: theme.palette.background.default,
	        WebkitFontSmoothing: 'antialiased', // Antialiasing.
	        MozOsxFontSmoothing: 'grayscale', // Antialiasing.
	        fontSize: 16
	      },
	      body: {
	        margin: 0
	      }
	    }
	  };
	};

	var context = {
	  theme: theme
	};

	var App = function (_Component) {
	  _inherits(App, _Component);

	  function App() {
	    _classCallCheck(this, App);

	    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
	  }

	  _createClass(App, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _styles.MuiThemeProvider,
	        { theme: context.theme, sheetsManager: context.sheetsManager },
	        _react2.default.createElement(
	          'div',
	          null,
	          this.props.children
	        )
	      );
	    }
	  }]);

	  return App;
	}(_react.Component);

	exports.default = (0, _styles.withStyles)(styles)(App);

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MuiThemeProvider = __webpack_require__(543);

	Object.defineProperty(exports, 'MuiThemeProvider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MuiThemeProvider).default;
	  }
	});

	var _withStyles = __webpack_require__(360);

	Object.defineProperty(exports, 'withStyles', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_withStyles).default;
	  }
	});

	var _withTheme = __webpack_require__(546);

	Object.defineProperty(exports, 'withTheme', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_withTheme).default;
	  }
	});

	var _createMuiTheme = __webpack_require__(498);

	Object.defineProperty(exports, 'createMuiTheme', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_createMuiTheme).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _brcast = __webpack_require__(544);

	var _brcast2 = _interopRequireDefault(_brcast);

	var _themeListener = __webpack_require__(517);

	var _themeListener2 = _interopRequireDefault(_themeListener);

	var _exactProp = __webpack_require__(545);

	var _exactProp2 = _interopRequireDefault(_exactProp);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var MuiThemeProvider = function (_React$Component) {
	  (0, _inherits3.default)(MuiThemeProvider, _React$Component);

	  function MuiThemeProvider(props, context) {
	    (0, _classCallCheck3.default)(this, MuiThemeProvider);

	    // Get the outer theme from the context, can be null
	    var _this = (0, _possibleConstructorReturn3.default)(this, (MuiThemeProvider.__proto__ || (0, _getPrototypeOf2.default)(MuiThemeProvider)).call(this, props, context));

	    _this.broadcast = (0, _brcast2.default)();
	    _this.unsubscribeId = null;
	    _this.outerTheme = null;
	    _this.outerTheme = _themeListener2.default.initial(context);
	    // Propagate the theme so it can be accessed by the children
	    _this.broadcast.setState(_this.mergeOuterLocalTheme(_this.props.theme));
	    return _this;
	  }

	  (0, _createClass3.default)(MuiThemeProvider, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      if (this.props.sheetsManager) {
	        var _ref;

	        return _ref = {}, (0, _defineProperty3.default)(_ref, _themeListener.CHANNEL, this.broadcast), (0, _defineProperty3.default)(_ref, 'sheetsManager', this.props.sheetsManager), _ref;
	      }

	      return (0, _defineProperty3.default)({}, _themeListener.CHANNEL, this.broadcast);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      // Subscribe on the outer theme, if present
	      this.unsubscribeId = _themeListener2.default.subscribe(this.context, function (outerTheme) {
	        _this2.outerTheme = outerTheme;
	        // Forward the parent theme update to the children
	        _this2.broadcast.setState(_this2.mergeOuterLocalTheme(_this2.props.theme));
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      // Propagate a local theme update
	      if (this.props.theme !== nextProps.theme) {
	        this.broadcast.setState(this.mergeOuterLocalTheme(nextProps.theme));
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.unsubscribeId !== null) {
	        _themeListener2.default.unsubscribe(this.context, this.unsubscribeId);
	      }
	    }
	    // We are not using the React state in order to avoid unnecessary rerender.

	  }, {
	    key: 'mergeOuterLocalTheme',


	    // Simple merge between the outer theme and the local theme
	    value: function mergeOuterLocalTheme(localTheme) {
	      // To support composition of theme.
	      if (typeof localTheme === 'function') {
	        return localTheme(this.outerTheme);
	      }

	      if (!this.outerTheme) {
	        return localTheme;
	      }

	      return (0, _extends3.default)({}, this.outerTheme, localTheme);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return MuiThemeProvider;
	}(_react2.default.Component);

	MuiThemeProvider.propTypes =  false ? {
	  /**
	   * You can only provide a single element.
	   */
	  children: _propTypes2.default.element.isRequired,
	  /**
	   * The sheetsManager is used in order to only inject once a style sheet in a page for
	   * a given theme object.
	   * You should provide on the server.
	   */
	  sheetsManager: _propTypes2.default.object,
	  /**
	   * A theme object.
	   */
	  theme: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]).isRequired
	} : {};

	MuiThemeProvider.childContextTypes = (0, _extends3.default)({}, _themeListener2.default.contextTypes, {
	  sheetsManager: _propTypes2.default.object
	});

	MuiThemeProvider.contextTypes = _themeListener2.default.contextTypes;

	// Add a wrapper component to generate some helper messages in the development
	// environment.
	// eslint-disable-next-line import/no-mutable-exports
	var MuiThemeProviderWrapper = MuiThemeProvider;

	if (false) {
	  MuiThemeProviderWrapper = function MuiThemeProviderWrapper(props) {
	    return _react2.default.createElement(MuiThemeProvider, props);
	  };
	  MuiThemeProviderWrapper.propTypes = (0, _exactProp2.default)(MuiThemeProvider.propTypes, 'MuiThemeProvider');
	}

	exports.default = MuiThemeProviderWrapper;

/***/ }),
/* 544 */
/***/ (function(module, exports) {

	function createBroadcast (initialState) {
	  var listeners = {};
	  var id = 1;
	  var _state = initialState;

	  function getState () {
	    return _state
	  }

	  function setState (state) {
	    _state = state;
	    var keys = Object.keys(listeners);
	    var i = 0;
	    var len = keys.length;
	    for (; i < len; i++) {
	      // if a listener gets unsubscribed during setState we just skip it
	      if (listeners[keys[i]]) { listeners[keys[i]](state); }
	    }
	  }

	  // subscribe to changes and return the subscriptionId
	  function subscribe (listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('listener must be a function.')
	    }
	    var currentId = id;
	    listeners[currentId] = listener;
	    id += 1;
	    return currentId
	  }

	  // remove subscription by removing the listener function
	  function unsubscribe (id) {
	    listeners[id] = undefined;
	  }

	  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }
	}

	module.exports = createBroadcast;


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.specialProperty = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _extends3 = __webpack_require__(336);

	var _extends4 = _interopRequireDefault(_extends3);

	exports.default = exactProp;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// This module is based on https://github.com/airbnb/prop-types-exact repository.
	// However, in order to reduce the number of dependencies and to remove some extra safe checks
	// the module was forked.

	var specialProperty = exports.specialProperty = 'exact-prop: \u200B';

	function exactProp(propTypes, componentNameInError) {
	  return (0, _extends4.default)({}, propTypes, (0, _defineProperty3.default)({}, specialProperty, function (props) {
	    var unknownProps = (0, _keys2.default)(props).filter(function (prop) {
	      return !propTypes.hasOwnProperty(prop);
	    });
	    if (unknownProps.length > 0) {
	      return new TypeError(componentNameInError + ': unknown props found: ' + unknownProps.join(', ') + '. Please remove the unknown properties.');
	    }
	    return null;
	  }));
	}

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _wrapDisplayName = __webpack_require__(447);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	var _createMuiTheme = __webpack_require__(498);

	var _createMuiTheme2 = _interopRequireDefault(_createMuiTheme);

	var _themeListener = __webpack_require__(517);

	var _themeListener2 = _interopRequireDefault(_themeListener);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//  weak

	// flow sanity check (DO NOT DELETE) https://flow.org/try/#0JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4AoUSWOGATzCTgG84BhXSAOyS5gBUGTAL5xsuAkXQwy5OQHp5cALSq16jZuVwdccorgB3YDAAW-U0hBMAEgHk25JAA9qWAK5cMwCFyMnzS2sAHgAFHDAAZwAuFmEAPgAKcl12Tl9eGFiOcAy+QUZg1jMrJFi7ACMAKyQMOFEAMjhwiCj4gBpyAEps9J58oTCIyPiWOR00ABsUSMi4AHUAi1K4FxheABM55GkAOhzuTKHWyPaWWiCyuEqauoSx1KIuDaQoRK6H1LgiGHcoP2CBzy8GYuzBZmAkV2YGGohK1gAvMwIVDIjAUOtdvCkKJ5PEKKlhAT6ilvkhfv8FktLuRhAolFpGUy1PolMYzMtrHAAKqRFAAcyQ5CmMzmAEFVs51s9tsQYPs+kdipdytVavBGiwULEuO4QBVXmcKjq9QaoPdmHS0L40XBOUgNkD+vAEf4OZdEmKuhQDPMmBtfPh4DwHbQIHAwKK4MA-AADbGx1YAN14Fwg7n5pjgsYAsnQnZlE0QAI7uYBEOYmXbkYL2x2KvhwFBIgCMogqSIATLj4vSVMyB6lWW7TIsNmY4PZHC43LQhHAAEJSADWkBjLoIzki+DgAB8CJEQDv9-gQBtjwRJvyL-hnJNZOR6IwqePTC0onBXcxSTGTMAUJMY5mAA-LES6oKuEDrp0OjGK+oGLiua58J0dJOK40AeF4MA+H47KjsAr7vJ8mCeN4virFwpgoF4SDHFEsRAW+wxJKSqQFnwvS5M6BR0cwcFmGBSFQShcBgrs76RAkMFwD0aTcZkvH0SMYxsXAIqzFSZhMZK0pbIgcoKgpfDKaM35fGSzyvMR5kWepNogr+OEAUxZwCaYoiuii0LDGpjzkn8AIcSC4neTCJyiO5SL4Ie+A9sShIJSSak-IFWkEa+xJEuMZIUn4vDUbRFBoQYA5leow7uHygrCtMmkLrpmyynswVFO5QkQchMBnNqcC6vqhrGn1pqvBapJPC8bwfLZEwOSw7meRckI+ScKUBZSwQbMASZwHipJ0lac1MQ6wWfiOTHvIkC7esOfpwAGXBBn1SChjA4aRppMbZu5iZICmfhmOmmbZnmwVFkgpblkglbyjWx31sZ8DNswbZwB2zDdrt+JAA
	var babelPluginFlowReactPropTypes_proptype_HigherOrderComponent = __webpack_require__(521).babelPluginFlowReactPropTypes_proptype_HigherOrderComponent || __webpack_require__(174).any;

	var defaultTheme = void 0;

	function getDefaultTheme() {
	  if (defaultTheme) {
	    return defaultTheme;
	  }

	  defaultTheme = (0, _createMuiTheme2.default)();
	  return defaultTheme;
	}

	var babelPluginFlowReactPropTypes_proptype_InjectedProps = {
	  theme: __webpack_require__(174).object.isRequired
	};


	// Provide the theme object as a property to the input component.
	var withTheme = function withTheme() {
	  return function (Component) {
	    var WithTheme = function (_React$Component) {
	      (0, _inherits3.default)(WithTheme, _React$Component);

	      function WithTheme(props, context) {
	        (0, _classCallCheck3.default)(this, WithTheme);

	        var _this = (0, _possibleConstructorReturn3.default)(this, (WithTheme.__proto__ || (0, _getPrototypeOf2.default)(WithTheme)).call(this, props, context));

	        _this.state = {};
	        _this.unsubscribeId = null;

	        _this.state = {
	          // We use || as it's lazy evaluated.
	          theme: _themeListener2.default.initial(context) || getDefaultTheme()
	        };
	        return _this;
	      }

	      // Exposed for test purposes.


	      (0, _createClass3.default)(WithTheme, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	          var _this2 = this;

	          this.unsubscribeId = _themeListener2.default.subscribe(this.context, function (theme) {
	            _this2.setState({ theme: theme });
	          });
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          if (this.unsubscribeId !== null) {
	            _themeListener2.default.unsubscribe(this.context, this.unsubscribeId);
	          }
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          return _react2.default.createElement(Component, (0, _extends3.default)({ theme: this.state.theme }, this.props));
	        }
	      }]);
	      return WithTheme;
	    }(_react2.default.Component);

	    WithTheme.contextTypes = _themeListener2.default.contextTypes;
	    WithTheme.displayName = (0, _wrapDisplayName2.default)(Component, 'withTheme');
	    WithTheme.Naked = Component;


	    return WithTheme;
	  };
	};

	exports.default = withTheme;

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _common = __webpack_require__(507);

	Object.defineProperty(exports, 'common', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_common).default;
	  }
	});

	var _red = __webpack_require__(506);

	Object.defineProperty(exports, 'red', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_red).default;
	  }
	});

	var _pink = __webpack_require__(504);

	Object.defineProperty(exports, 'pink', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_pink).default;
	  }
	});

	var _purple = __webpack_require__(548);

	Object.defineProperty(exports, 'purple', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_purple).default;
	  }
	});

	var _deepPurple = __webpack_require__(549);

	Object.defineProperty(exports, 'deepPurple', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_deepPurple).default;
	  }
	});

	var _indigo = __webpack_require__(503);

	Object.defineProperty(exports, 'indigo', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_indigo).default;
	  }
	});

	var _blue = __webpack_require__(550);

	Object.defineProperty(exports, 'blue', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_blue).default;
	  }
	});

	var _lightBlue = __webpack_require__(551);

	Object.defineProperty(exports, 'lightBlue', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_lightBlue).default;
	  }
	});

	var _cyan = __webpack_require__(552);

	Object.defineProperty(exports, 'cyan', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_cyan).default;
	  }
	});

	var _teal = __webpack_require__(553);

	Object.defineProperty(exports, 'teal', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_teal).default;
	  }
	});

	var _green = __webpack_require__(554);

	Object.defineProperty(exports, 'green', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_green).default;
	  }
	});

	var _lightGreen = __webpack_require__(555);

	Object.defineProperty(exports, 'lightGreen', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_lightGreen).default;
	  }
	});

	var _lime = __webpack_require__(556);

	Object.defineProperty(exports, 'lime', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_lime).default;
	  }
	});

	var _yellow = __webpack_require__(557);

	Object.defineProperty(exports, 'yellow', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_yellow).default;
	  }
	});

	var _amber = __webpack_require__(558);

	Object.defineProperty(exports, 'amber', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_amber).default;
	  }
	});

	var _orange = __webpack_require__(559);

	Object.defineProperty(exports, 'orange', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_orange).default;
	  }
	});

	var _deepOrange = __webpack_require__(560);

	Object.defineProperty(exports, 'deepOrange', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_deepOrange).default;
	  }
	});

	var _brown = __webpack_require__(561);

	Object.defineProperty(exports, 'brown', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_brown).default;
	  }
	});

	var _grey = __webpack_require__(505);

	Object.defineProperty(exports, 'grey', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_grey).default;
	  }
	});

	var _blueGrey = __webpack_require__(562);

	Object.defineProperty(exports, 'blueGrey', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_blueGrey).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 548 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var purple = {
	  50: '#f3e5f5',
	  100: '#e1bee7',
	  200: '#ce93d8',
	  300: '#ba68c8',
	  400: '#ab47bc',
	  500: '#9c27b0',
	  600: '#8e24aa',
	  700: '#7b1fa2',
	  800: '#6a1b9a',
	  900: '#4a148c',
	  A100: '#ea80fc',
	  A200: '#e040fb',
	  A400: '#d500f9',
	  A700: '#aa00ff',
	  contrastDefaultColor: 'light'
	};

	exports.default = purple;

/***/ }),
/* 549 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var deepPurple = {
	  50: '#ede7f6',
	  100: '#d1c4e9',
	  200: '#b39ddb',
	  300: '#9575cd',
	  400: '#7e57c2',
	  500: '#673ab7',
	  600: '#5e35b1',
	  700: '#512da8',
	  800: '#4527a0',
	  900: '#311b92',
	  A100: '#b388ff',
	  A200: '#7c4dff',
	  A400: '#651fff',
	  A700: '#6200ea',
	  contrastDefaultColor: 'light'
	};

	exports.default = deepPurple;

/***/ }),
/* 550 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var blue = {
	  50: '#e3f2fd',
	  100: '#bbdefb',
	  200: '#90caf9',
	  300: '#64b5f6',
	  400: '#42a5f5',
	  500: '#2196f3',
	  600: '#1e88e5',
	  700: '#1976d2',
	  800: '#1565c0',
	  900: '#0d47a1',
	  A100: '#82b1ff',
	  A200: '#448aff',
	  A400: '#2979ff',
	  A700: '#2962ff',
	  contrastDefaultColor: 'light'
	};

	exports.default = blue;

/***/ }),
/* 551 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var lightBlue = {
	  50: '#e1f5fe',
	  100: '#b3e5fc',
	  200: '#81d4fa',
	  300: '#4fc3f7',
	  400: '#29b6f6',
	  500: '#03a9f4',
	  600: '#039be5',
	  700: '#0288d1',
	  800: '#0277bd',
	  900: '#01579b',
	  A100: '#80d8ff',
	  A200: '#40c4ff',
	  A400: '#00b0ff',
	  A700: '#0091ea',
	  contrastDefaultColor: 'dark'
	};

	exports.default = lightBlue;

/***/ }),
/* 552 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var cyan = {
	  50: '#e0f7fa',
	  100: '#b2ebf2',
	  200: '#80deea',
	  300: '#4dd0e1',
	  400: '#26c6da',
	  500: '#00bcd4',
	  600: '#00acc1',
	  700: '#0097a7',
	  800: '#00838f',
	  900: '#006064',
	  A100: '#84ffff',
	  A200: '#18ffff',
	  A400: '#00e5ff',
	  A700: '#00b8d4',
	  contrastDefaultColor: 'dark'
	};

	exports.default = cyan;

/***/ }),
/* 553 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var teal = {
	  50: '#e0f2f1',
	  100: '#b2dfdb',
	  200: '#80cbc4',
	  300: '#4db6ac',
	  400: '#26a69a',
	  500: '#009688',
	  600: '#00897b',
	  700: '#00796b',
	  800: '#00695c',
	  900: '#004d40',
	  A100: '#a7ffeb',
	  A200: '#64ffda',
	  A400: '#1de9b6',
	  A700: '#00bfa5',
	  contrastDefaultColor: 'dark'
	};

	exports.default = teal;

/***/ }),
/* 554 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var green = {
	  50: '#e8f5e9',
	  100: '#c8e6c9',
	  200: '#a5d6a7',
	  300: '#81c784',
	  400: '#66bb6a',
	  500: '#4caf50',
	  600: '#43a047',
	  700: '#388e3c',
	  800: '#2e7d32',
	  900: '#1b5e20',
	  A100: '#b9f6ca',
	  A200: '#69f0ae',
	  A400: '#00e676',
	  A700: '#00c853',
	  contrastDefaultColor: 'dark'
	};

	exports.default = green;

/***/ }),
/* 555 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var lightGreen = {
	  50: '#f1f8e9',
	  100: '#dcedc8',
	  200: '#c5e1a5',
	  300: '#aed581',
	  400: '#9ccc65',
	  500: '#8bc34a',
	  600: '#7cb342',
	  700: '#689f38',
	  800: '#558b2f',
	  900: '#33691e',
	  A100: '#ccff90',
	  A200: '#b2ff59',
	  A400: '#76ff03',
	  A700: '#64dd17',
	  contrastDefaultColor: 'dark'
	};

	exports.default = lightGreen;

/***/ }),
/* 556 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var lime = {
	  50: '#f9fbe7',
	  100: '#f0f4c3',
	  200: '#e6ee9c',
	  300: '#dce775',
	  400: '#d4e157',
	  500: '#cddc39',
	  600: '#c0ca33',
	  700: '#afb42b',
	  800: '#9e9d24',
	  900: '#827717',
	  A100: '#f4ff81',
	  A200: '#eeff41',
	  A400: '#c6ff00',
	  A700: '#aeea00',
	  contrastDefaultColor: 'dark'
	};

	exports.default = lime;

/***/ }),
/* 557 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var yellow = {
	  50: '#fffde7',
	  100: '#fff9c4',
	  200: '#fff59d',
	  300: '#fff176',
	  400: '#ffee58',
	  500: '#ffeb3b',
	  600: '#fdd835',
	  700: '#fbc02d',
	  800: '#f9a825',
	  900: '#f57f17',
	  A100: '#ffff8d',
	  A200: '#ffff00',
	  A400: '#ffea00',
	  A700: '#ffd600',
	  contrastDefaultColor: 'dark'
	};

	exports.default = yellow;

/***/ }),
/* 558 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var amber = {
	  50: '#fff8e1',
	  100: '#ffecb3',
	  200: '#ffe082',
	  300: '#ffd54f',
	  400: '#ffca28',
	  500: '#ffc107',
	  600: '#ffb300',
	  700: '#ffa000',
	  800: '#ff8f00',
	  900: '#ff6f00',
	  A100: '#ffe57f',
	  A200: '#ffd740',
	  A400: '#ffc400',
	  A700: '#ffab00',
	  contrastDefaultColor: 'dark'
	};

	exports.default = amber;

/***/ }),
/* 559 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var orange = {
	  50: '#fff3e0',
	  100: '#ffe0b2',
	  200: '#ffcc80',
	  300: '#ffb74d',
	  400: '#ffa726',
	  500: '#ff9800',
	  600: '#fb8c00',
	  700: '#f57c00',
	  800: '#ef6c00',
	  900: '#e65100',
	  A100: '#ffd180',
	  A200: '#ffab40',
	  A400: '#ff9100',
	  A700: '#ff6d00',
	  contrastDefaultColor: 'dark'
	};

	exports.default = orange;

/***/ }),
/* 560 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var deepOrange = {
	  50: '#fbe9e7',
	  100: '#ffccbc',
	  200: '#ffab91',
	  300: '#ff8a65',
	  400: '#ff7043',
	  500: '#ff5722',
	  600: '#f4511e',
	  700: '#e64a19',
	  800: '#d84315',
	  900: '#bf360c',
	  A100: '#ff9e80',
	  A200: '#ff6e40',
	  A400: '#ff3d00',
	  A700: '#dd2c00',
	  contrastDefaultColor: 'light'
	};

	exports.default = deepOrange;

/***/ }),
/* 561 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var brown = {
	  50: '#efebe9',
	  100: '#d7ccc8',
	  200: '#bcaaa4',
	  300: '#a1887f',
	  400: '#8d6e63',
	  500: '#795548',
	  600: '#6d4c41',
	  700: '#5d4037',
	  800: '#4e342e',
	  900: '#3e2723',
	  A100: '#d7ccc8',
	  A200: '#bcaaa4',
	  A400: '#8d6e63',
	  A700: '#5d4037',
	  contrastDefaultColor: 'brown'
	};

	exports.default = brown;

/***/ }),
/* 562 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Wait https://github.com/facebook/flow/issues/380 to be fixed
	/* eslint-disable flowtype/require-valid-file-annotation */

	var blueGrey = {
	  50: '#eceff1',
	  100: '#cfd8dc',
	  200: '#b0bec5',
	  300: '#90a4ae',
	  400: '#78909c',
	  500: '#607d8b',
	  600: '#546e7a',
	  700: '#455a64',
	  800: '#37474f',
	  900: '#263238',
	  A100: '#cfd8dc',
	  A200: '#b0bec5',
	  A400: '#78909c',
	  A700: '#455a64',
	  contrastDefaultColor: 'light'
	};

	exports.default = blueGrey;

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  width: ', 'px;\n  height: ', 'px;\n  text-align: center;\n  margin: auto;\n  background-color: #FFF;\n'], ['\n  width: ', 'px;\n  height: ', 'px;\n  text-align: center;\n  margin: auto;\n  background-color: #FFF;\n']),
	    _templateObject2 = _taggedTemplateLiteral(['\n  padding: 10px;\n  margin-top: 20px;\n'], ['\n  padding: 10px;\n  margin-top: 20px;\n']),
	    _templateObject3 = _taggedTemplateLiteral(['\n  color: ', ';\n  text-align: center;\n  display: inline-block;\n  border: 5px solid;\n  border-color: ', ';\n\n  img {\n    filter: ', ';\n  }\n'], ['\n  color: ', ';\n  text-align: center;\n  display: inline-block;\n  border: 5px solid;\n  border-color: ', ';\n\n  img {\n    filter: ', ';\n  }\n']),
	    _templateObject4 = _taggedTemplateLiteral(['\n  position: absolute;\n  top: 0;\n  left: 0;\n'], ['\n  position: absolute;\n  top: 0;\n  left: 0;\n']),
	    _templateObject5 = _taggedTemplateLiteral(['\n  font-size: 20px;\n'], ['\n  font-size: 20px;\n']),
	    _templateObject6 = _taggedTemplateLiteral(['\n  font-size: 20px;\n  line-height: 1.2;\n  width: 200px;\n  margin-left: 26px;\n  text-overflow: ellipsis;\n  height: 50px;\n  overflow: hidden;\n'], ['\n  font-size: 20px;\n  line-height: 1.2;\n  width: 200px;\n  margin-left: 26px;\n  text-overflow: ellipsis;\n  height: 50px;\n  overflow: hidden;\n']),
	    _templateObject7 = _taggedTemplateLiteral(['\n  text-align: center;\n  display: inline-block;\n  margin-top: 10px;\n  height: 323px;\n  width: 254px;\n  vertical-align: top;\n  position: relative;\n'], ['\n  text-align: center;\n  display: inline-block;\n  margin-top: 10px;\n  height: 323px;\n  width: 254px;\n  vertical-align: top;\n  position: relative;\n']),
	    _templateObject8 = _taggedTemplateLiteral(['\n  margin: 26px 0 10px 0;\n'], ['\n  margin: 26px 0 10px 0;\n']),
	    _templateObject9 = _taggedTemplateLiteral(['\n  display: inline-block;\n  margin-top: 30px;\n'], ['\n  display: inline-block;\n  margin-top: 30px;\n']),
	    _templateObject10 = _taggedTemplateLiteral(['\n  position: absolute;\n  margin: 670px 0 0 755px;\n'], ['\n  position: absolute;\n  margin: 670px 0 0 755px;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _socket = __webpack_require__(215);

	var _socket2 = _interopRequireDefault(_socket);

	var _pccLogo2x = __webpack_require__(237);

	var _pccLogo2x2 = _interopRequireDefault(_pccLogo2x);

	var _riderImages = __webpack_require__(539);

	var _riderImages2 = _interopRequireDefault(_riderImages);

	var _settings = __webpack_require__(301);

	var _ff = __webpack_require__(310);

	var _ff2 = _interopRequireDefault(_ff);

	var _player1Outline = __webpack_require__(252);

	var _player1Outline2 = _interopRequireDefault(_player1Outline);

	var _player2Outline = __webpack_require__(253);

	var _player2Outline2 = _interopRequireDefault(_player2Outline);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var RiderContainer = _styledComponents2.default.div(_templateObject, _settings.STAGE_WIDTH, _settings.STAGE_HEIGHT);

	var Riders = _styledComponents2.default.div(_templateObject2);

	var Rider = _styledComponents2.default.div(_templateObject3, function (props) {
	  return props.selected ? 'blue' : 'black';
	}, function (props) {
	  if (props.bike === 'A') {
	    return '#ea3423';
	  }

	  if (props.bike === 'B') {
	    return '#2354b3';
	  }

	  return 'white';
	}, function (props) {
	  if (props.eliminated) {
	    return 'grayscale(100%)';
	  }

	  return 'none';
	});

	var PlayerOutline = _styledComponents2.default.img(_templateObject4);

	var SelectedRiderTitle = _styledComponents2.default.div(_templateObject5);

	var SelectedRiderName = _styledComponents2.default.div(_templateObject6);

	var SelectedRider = _styledComponents2.default.div(_templateObject7);

	var SelectedRiderImage = _styledComponents2.default.img(_templateObject8);

	var ClubLogo = _styledComponents2.default.div(_templateObject9);

	var StartRace = _ff2.default.extend(_templateObject10);

	var findRider = function findRider(riders, id) {
	  var output = void 0;

	  while (!output) {
	    output = riders[Math.floor(Math.random() * riders.length)];

	    if (output.eliminated || output.id === id) {
	      output = null;
	    }
	  }

	  return output;
	};

	var ChooseRiders = (_temp2 = _class = function (_Component) {
	  _inherits(ChooseRiders, _Component);

	  function ChooseRiders() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, ChooseRiders);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ChooseRiders.__proto__ || Object.getPrototypeOf(ChooseRiders)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      riders: [],
	      player1Index: 0,
	      player2Index: 1,
	      player1StartingIndex: 0,
	      player2StartingIndex: 1,
	      loop: 0,
	      done: false,
	      timeout: 100
	    }, _this.selectRiders = function () {
	      if (_this.state.loop === 15) {
	        _this.setState({
	          done: true
	        });

	        return;
	      }

	      var riders = _this.props.riders.map(function (rider) {
	        var r = JSON.parse(JSON.stringify(rider));
	        delete r.selected;
	        delete r.bike;

	        return r;
	      });

	      var looped = false;

	      var findNextIndex = function findNextIndex(riders, lastIndex, notIndex) {
	        for (var nextIndex = lastIndex + 1; nextIndex !== lastIndex; nextIndex++) {
	          if (nextIndex === riders.length) {
	            nextIndex = 0;
	            looped = true;
	          }

	          var rider = riders[nextIndex];

	          if (!rider.eliminated && nextIndex !== notIndex) {
	            return nextIndex;
	          }
	        }

	        return -1;
	      };

	      var nextPlayer1Index = findNextIndex(riders, _this.state.player1Index);

	      if (_this.state.loop > 10) {
	        nextPlayer1Index = _this.props.riders.findIndex(function (rider) {
	          return rider.bike === 'A';
	        });
	      }

	      var nextPlayer2Index = findNextIndex(riders, _this.state.player2Index, nextPlayer1Index);

	      if (nextPlayer1Index === -1 || nextPlayer2Index === -1) {
	        _this.setState({
	          done: true
	        });

	        return;
	      }

	      var riderA = riders[nextPlayer1Index];
	      var riderB = riders[nextPlayer2Index];

	      riderA.selected = true;
	      riderA.bike = 'A';
	      riderB.selected = true;
	      riderB.bike = 'B';

	      _this.setState(function (s) {
	        return {
	          riders: riders,
	          loop: looped ? s.loop + 1 : s.loop,
	          player1Index: nextPlayer1Index,
	          player2Index: nextPlayer2Index,
	          timeout: looped ? s.timeout > 300 ? 300 : s.timeout *= 1.1 : s.timeout
	        };
	      });

	      _this.timeout = setTimeout(_this.selectRiders, _this.state.timeout);
	    }, _this.onStart = function () {
	      _socket2.default.emit('admin:game:start', _this.props.adminToken, _this.props.trackLength);
	    }, _this.onDropOut = function (rider) {
	      return function () {
	        if (confirm('Are you sure?')) {
	          _socket2.default.emit('admin:game:rider-quit', _this.props.adminToken, rider);
	        }
	      };
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(ChooseRiders, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        riders: [],
	        player1Index: 0,
	        player2Index: 1,
	        loop: 0,
	        done: false,
	        timeout: 50
	      });

	      this.selectRiders();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.timeout);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var riders = this.state.riders;

	      if (this.state.done) {
	        riders = this.props.riders;
	      }

	      var player1 = riders.find(function (rider) {
	        return rider.bike === 'A';
	      });
	      var player2 = riders.find(function (rider) {
	        return rider.bike === 'B';
	      });

	      return _react2.default.createElement(
	        RiderContainer,
	        null,
	        this.state.done && _react2.default.createElement(
	          StartRace,
	          null,
	          _react2.default.createElement(
	            _Button2.default,
	            { onClick: this.onStart },
	            'Start Race >'
	          )
	        ),
	        _react2.default.createElement(
	          SelectedRider,
	          { bike: player1.bike },
	          _react2.default.createElement(PlayerOutline, { src: _player1Outline2.default, width: '254', height: '338' }),
	          _react2.default.createElement(SelectedRiderImage, {
	            src: player1.photoSelect || _riderImages2.default[player1.gender][player1.image],
	            width: '200',
	            height: '225',
	            onClick: this.onDropOut(player1)
	          }),
	          _react2.default.createElement(
	            SelectedRiderName,
	            null,
	            player1.name
	          )
	        ),
	        _react2.default.createElement(
	          ClubLogo,
	          null,
	          _react2.default.createElement('img', { src: _pccLogo2x2.default, height: '300', onClick: this.onStart })
	        ),
	        _react2.default.createElement(
	          SelectedRider,
	          { bike: player2.bike },
	          _react2.default.createElement(PlayerOutline, { src: _player2Outline2.default, width: '253', height: '338' }),
	          _react2.default.createElement(SelectedRiderImage, {
	            src: player2.photoSelect || _riderImages2.default[player2.gender][player2.image],
	            width: '200',
	            height: '225',
	            onClick: this.onDropOut(player2)
	          }),
	          _react2.default.createElement(
	            SelectedRiderName,
	            null,
	            player2.name
	          )
	        ),
	        _react2.default.createElement(
	          Riders,
	          null,
	          riders.map(function (rider) {
	            return _react2.default.createElement(
	              Rider,
	              { key: rider.id, selected: rider.selected, bike: rider.bike, eliminated: rider.eliminated },
	              _react2.default.createElement('img', {
	                src: rider.eliminated ? rider.photoLose : rider.photoSelect,
	                width: '100',
	                height: '120'
	              })
	            );
	          })
	        )
	      );
	    }
	  }]);

	  return ChooseRiders;
	}(_react.Component), _class.propTypes = {
	  adminToken: _propTypes2.default.string.isRequired,
	  riders: _propTypes2.default.array.isRequired,
	  trackLength: _propTypes2.default.number.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var token = _ref2.admin.token,
	      riders = _ref2.riders.riders,
	      trackLength = _ref2.game.trackLength;
	  return {
	    adminToken: token,
	    riders: riders,
	    trackLength: trackLength
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ChooseRiders);

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  width: ', 'px;\n  height: ', 'px;\n  background-color: #FFF;\n  margin: auto;\n'], ['\n  width: ', 'px;\n  height: ', 'px;\n  background-color: #FFF;\n  margin: auto;\n']),
	    _templateObject2 = _taggedTemplateLiteral(['\n  text-align: center;\n  margin: 0;\n  padding: 40px 40px 20px 40px;\n  font-size: 36px;\n'], ['\n  text-align: center;\n  margin: 0;\n  padding: 40px 40px 20px 40px;\n  font-size: 36px;\n']),
	    _templateObject3 = _taggedTemplateLiteral(['\n  font-size: 20px;\n  width: 200px;\n  text-overflow: ellipsis;\n  line-height: 1.2;\n'], ['\n  font-size: 20px;\n  width: 200px;\n  text-overflow: ellipsis;\n  line-height: 1.2;\n']),
	    _templateObject4 = _taggedTemplateLiteral(['\n  color: ', ';\n  text-align: center;\n  display: inline-block;\n  padding: 10px;\n  border: 5px solid;\n  margin-top: 10px;\n  height: 323px;\n  vertical-align: top;\n  border-color: ', ';\n\n  p {\n    font-size: 10px;\n  }\n  '], ['\n  color: ', ';\n  text-align: center;\n  display: inline-block;\n  padding: 10px;\n  border: 5px solid;\n  margin-top: 10px;\n  height: 323px;\n  vertical-align: top;\n  border-color: ', ';\n\n  p {\n    font-size: 10px;\n  }\n  ']),
	    _templateObject5 = _taggedTemplateLiteral(['\n  display: inline-block;\n'], ['\n  display: inline-block;\n']),
	    _templateObject6 = _taggedTemplateLiteral(['\n  position: absolute;\n  margin: 670px 0 0 755px;\n'], ['\n  position: absolute;\n  margin: 670px 0 0 755px;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _socket = __webpack_require__(215);

	var _socket2 = _interopRequireDefault(_socket);

	var _pccLogo2x = __webpack_require__(237);

	var _pccLogo2x2 = _interopRequireDefault(_pccLogo2x);

	var _riderImages = __webpack_require__(539);

	var _riderImages2 = _interopRequireDefault(_riderImages);

	var _settings = __webpack_require__(301);

	var _ff = __webpack_require__(310);

	var _ff2 = _interopRequireDefault(_ff);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var Wrapper = _styledComponents2.default.div(_templateObject, _settings.STAGE_WIDTH, _settings.STAGE_HEIGHT);

	var WinnerText = _styledComponents2.default.div(_templateObject2);

	var SelectedRiderName = _styledComponents2.default.div(_templateObject3);

	var SelectedRider = _styledComponents2.default.div(_templateObject4, function (props) {
	  return props.selected ? 'blue' : 'black';
	}, function (props) {
	  if (props.bike === 'A') {
	    return 'red';
	  }

	  if (props.bike === 'B') {
	    return 'blue';
	  }

	  return 'white';
	});

	var ClubLogo = _styledComponents2.default.div(_templateObject5);

	var NewGame = _ff2.default.extend(_templateObject6);

	var Champion = (_temp2 = _class = function (_Component) {
	  _inherits(Champion, _Component);

	  function Champion() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Champion);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Champion.__proto__ || Object.getPrototypeOf(Champion)).call.apply(_ref, [this].concat(args))), _this), _this.newGame = function () {
	      _socket2.default.emit('admin:game:new', _this.props.adminToken);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Champion, [{
	    key: 'render',
	    value: function render() {
	      var champion = this.props.riders.find(function (rider) {
	        return rider.winner;
	      });

	      if (!champion) {
	        return null;
	      }

	      return _react2.default.createElement(
	        Wrapper,
	        { className: 'game-over', onClick: this.newGame },
	        _react2.default.createElement(
	          NewGame,
	          null,
	          _react2.default.createElement(
	            _Button2.default,
	            { onClick: this.newGame },
	            'New Game >'
	          )
	        ),
	        _react2.default.createElement(
	          WinnerText,
	          null,
	          'Winner: ',
	          champion.name,
	          '!'
	        ),
	        _react2.default.createElement(
	          SelectedRider,
	          null,
	          _react2.default.createElement('img', {
	            src: champion.photoWin || _riderImages2.default[champion.gender][champion.image],
	            width: '200',
	            height: '225'
	          }),
	          _react2.default.createElement(
	            SelectedRiderName,
	            null,
	            champion.name
	          )
	        ),
	        _react2.default.createElement(
	          ClubLogo,
	          null,
	          _react2.default.createElement('img', { src: _pccLogo2x2.default, height: '300' })
	        )
	      );
	    }
	  }]);

	  return Champion;
	}(_react.Component), _class.propTypes = {
	  adminToken: _propTypes2.default.string.isRequired,
	  riders: _propTypes2.default.array.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var token = _ref2.admin.token,
	      riders = _ref2.riders.riders;
	  return {
	    adminToken: token,
	    riders: riders
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Champion);

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(172);

	var _AppBar = __webpack_require__(566);

	var _AppBar2 = _interopRequireDefault(_AppBar);

	var _Toolbar = __webpack_require__(571);

	var _Toolbar2 = _interopRequireDefault(_Toolbar);

	var _bluetoothState = __webpack_require__(573);

	var _bluetoothState2 = _interopRequireDefault(_bluetoothState);

	var _settings = __webpack_require__(592);

	var _settings2 = _interopRequireDefault(_settings);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var toolbar = function toolbar(_ref) {
	  var demo = _ref.demo,
	      gameState = _ref.gameState;

	  if (demo) {
	    return null;
	  }

	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(_bluetoothState2.default, null),
	    _react2.default.createElement(_settings2.default, null)
	  );

	  return null;
	};

	var mapStateToProps = function mapStateToProps(_ref2) {
	  var _ref2$game = _ref2.game,
	      demo = _ref2$game.demo,
	      state = _ref2$game.state;
	  return {
	    demo: demo,
	    gameState: state
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(toolbar);

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _AppBar = __webpack_require__(567);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AppBar).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;
	// @inheritedComponent Paper

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _helpers = __webpack_require__(568);

	var _Paper = __webpack_require__(569);

	var _Paper2 = _interopRequireDefault(_Paper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'flex',
	      flexDirection: 'column',
	      width: '100%',
	      zIndex: theme.zIndex.appBar,
	      flexShrink: 0
	    },
	    positionFixed: {
	      position: 'fixed',
	      top: 0,
	      left: 'auto',
	      right: 0
	    },
	    positionAbsolute: {
	      position: 'absolute',
	      top: 0,
	      left: 'auto',
	      right: 0
	    },
	    positionStatic: {
	      position: 'static',
	      flexShrink: 0
	    },
	    colorDefault: {
	      backgroundColor: theme.palette.background.appBar,
	      color: theme.palette.getContrastText(theme.palette.background.appBar)
	    },
	    colorPrimary: {
	      backgroundColor: theme.palette.primary[500],
	      color: theme.palette.getContrastText(theme.palette.primary[500])
	    },
	    colorAccent: {
	      backgroundColor: theme.palette.secondary.A200,
	      color: theme.palette.getContrastText(theme.palette.secondary.A200)
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Color = __webpack_require__(174).oneOf(['inherit', 'primary', 'accent', 'default']);

	var babelPluginFlowReactPropTypes_proptype_Position = __webpack_require__(174).oneOf(['static', 'fixed', 'absolute']);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  color: __webpack_require__(174).oneOf(['inherit', 'primary', 'accent', 'default']),
	  position: __webpack_require__(174).oneOf(['static', 'fixed', 'absolute'])
	};


	function AppBar(props) {
	  var _classNames;

	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      position = props.position,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'position']);


	  var className = (0, _classnames2.default)(classes.root, classes['position' + (0, _helpers.capitalizeFirstLetter)(position)], (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'inherit'), (0, _defineProperty3.default)(_classNames, 'mui-fixed', position === 'fixed'), _classNames), classNameProp);

	  return _react2.default.createElement(
	    _Paper2.default,
	    (0, _extends3.default)({ square: true, component: 'header', elevation: 4, className: className }, other),
	    children
	  );
	}

	AppBar.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  color: require('prop-types').oneOf(['inherit', 'primary', 'accent', 'default']).isRequired,
	  position: require('prop-types').oneOf(['static', 'fixed', 'absolute']).isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'color', require('prop-types').oneOf(['inherit', 'primary', 'accent', 'default'])), (0, _defineProperty3.default)(_ref, 'position', require('prop-types').oneOf(['static', 'fixed', 'absolute'])), _ref) : {};
	AppBar.defaultProps = {
	  color: 'primary',
	  position: 'fixed'
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiAppBar' })(AppBar);

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof2 = __webpack_require__(372);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	exports.capitalizeFirstLetter = capitalizeFirstLetter;
	exports.contains = contains;
	exports.findIndex = findIndex;
	exports.find = find;
	exports.createChainedFunction = createChainedFunction;

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function capitalizeFirstLetter(string) {
	   false ? (0, _warning2.default)(typeof string === 'string', 'Material-UI: capitalizeFirstLetter(string) expects a string argument.') : void 0;

	  return string.charAt(0).toUpperCase() + string.slice(1);
	} //  weak

	function contains(obj, pred) {
	  return (0, _keys2.default)(pred).every(function (key) {
	    return obj.hasOwnProperty(key) && obj[key] === pred[key];
	  });
	}

	function findIndex(arr, pred) {
	  var predType = typeof pred === 'undefined' ? 'undefined' : (0, _typeof3.default)(pred);
	  for (var i = 0; i < arr.length; i += 1) {
	    if (predType === 'function' && !!pred(arr[i], i, arr) === true) {
	      return i;
	    }
	    if (predType === 'object' && contains(arr[i], pred)) {
	      return i;
	    }
	    if (['string', 'number', 'boolean'].indexOf(predType) !== -1) {
	      return arr.indexOf(pred);
	    }
	  }
	  return -1;
	}

	function find(arr, pred) {
	  var index = findIndex(arr, pred);
	  return index > -1 ? arr[index] : undefined;
	}

	/**
	 * Safe chained function
	 *
	 * Will only create a new function if needed,
	 * otherwise will pass back existing functions or null.
	 *
	 * @param {function} functions to chain
	 * @returns {function|null}
	 */
	function createChainedFunction() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  return funcs.filter(function (func) {
	    return func != null;
	  }).reduce(function (acc, func) {
	     false ? (0, _warning2.default)(typeof func === 'function', 'Material-UI: invalid Argument Type, must only provide functions, undefined, or null.') : void 0;

	    if (acc === null) {
	      return func;
	    }

	    return function chainedFunction() {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      acc.apply(this, args);
	      func.apply(this, args);
	    };
	  }, null);
	}

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Paper = __webpack_require__(570);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Paper).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  var shadows = {};

	  theme.shadows.forEach(function (shadow, index) {
	    shadows['shadow' + index] = {
	      boxShadow: shadow
	    };
	  });

	  return (0, _extends3.default)({
	    root: {
	      backgroundColor: theme.palette.background.paper
	    },
	    rounded: {
	      borderRadius: 2
	    }
	  }, shadows);
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  elevation: __webpack_require__(174).number,
	  square: __webpack_require__(174).bool
	};


	function Paper(props) {
	  var classes = props.classes,
	      classNameProp = props.className,
	      ComponentProp = props.component,
	      square = props.square,
	      elevation = props.elevation,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'component', 'square', 'elevation']);


	   false ? (0, _warning2.default)(elevation >= 0 && elevation < 25, 'Material-UI: this elevation `' + elevation + '` is not implemented.') : void 0;

	  var className = (0, _classnames2.default)(classes.root, classes['shadow' + (elevation >= 0 ? elevation : 0)], (0, _defineProperty3.default)({}, classes.rounded, !square), classNameProp);

	  return _react2.default.createElement(ComponentProp, (0, _extends3.default)({ className: className }, other));
	}

	Paper.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType.isRequired ? babelPluginFlowReactPropTypes_proptype_ElementType.isRequired : babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType).isRequired,
	  elevation: require('prop-types').number.isRequired,
	  square: require('prop-types').bool.isRequired
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'component', typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType)), (0, _defineProperty3.default)(_ref, 'elevation', require('prop-types').number), (0, _defineProperty3.default)(_ref, 'square', require('prop-types').bool), _ref) : {};
	Paper.defaultProps = {
	  component: 'div',
	  elevation: 2,
	  square: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiPaper' })(Paper);

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Toolbar = __webpack_require__(572);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Toolbar).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _ref; //  weak

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: (0, _extends3.default)({
	      position: 'relative',
	      display: 'flex',
	      alignItems: 'center'
	    }, theme.mixins.toolbar),
	    gutters: theme.mixins.gutters({})
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  className: __webpack_require__(174).string,
	  disableGutters: __webpack_require__(174).bool
	};


	function Toolbar(props) {
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      disableGutters = props.disableGutters,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'disableGutters']);


	  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.gutters, !disableGutters), classNameProp);

	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: className }, other),
	    children
	  );
	}

	Toolbar.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'children', typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'disableGutters', require('prop-types').bool), _ref) : {};
	Toolbar.defaultProps = {
	  disableGutters: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiToolbar' })(Toolbar);

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _templateObject = _taggedTemplateLiteral(['\n  position: absolute;\n  top: 0;\n  left: 0;\n'], ['\n  position: absolute;\n  top: 0;\n  left: 0;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _debug = __webpack_require__(574);

	var _debug2 = _interopRequireDefault(_debug);

	var _reactRedux = __webpack_require__(172);

	var _bluetooth = __webpack_require__(257);

	var _bluetooth2 = _interopRequireDefault(_bluetooth);

	var _IconButton = __webpack_require__(577);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _Bluetooth = __webpack_require__(582);

	var _Bluetooth2 = _interopRequireDefault(_Bluetooth);

	var _BluetoothDisabled = __webpack_require__(590);

	var _BluetoothDisabled2 = _interopRequireDefault(_BluetoothDisabled);

	var _Error = __webpack_require__(591);

	var _Error2 = _interopRequireDefault(_Error);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var log = (0, _debug2.default)('BluetoothState');

	var Wrapper = _styledComponents2.default.div(_templateObject);

	var BluetoothState = function BluetoothState(_ref) {
	  var status = _ref.status;

	  return _react2.default.createElement(
	    Wrapper,
	    null,
	    _react2.default.createElement(
	      _IconButton2.default,
	      { 'aria-label': 'Bluetooth status' },
	      status === 'unknown' && _react2.default.createElement(_Error2.default, null),
	      status === 'poweredOff' && _react2.default.createElement(_BluetoothDisabled2.default, null),
	      status === 'poweredOn' && _react2.default.createElement(_Bluetooth2.default, null)
	    )
	  );
	};

	BluetoothState.propTypes = {
	  status: _propTypes2.default.string.isRequired
	};

	BluetoothState.defaultProps = {
	  status: 'poweredOff'
	};

	var mapStateToProps = function mapStateToProps(_ref2) {
	  var status = _ref2.bluetooth.status;
	  return {
	    status: status
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BluetoothState);

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = __webpack_require__(575);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();

	/**
	 * Colors.
	 */

	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];

	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */

	function useColors() {
	  // NB: In an Electron preload script, document will be defined but not fully
	  // initialized. Since we know we're in Chrome, we'll just detect this case
	  // explicitly
	  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
	    return true;
	  }

	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
	    // is firebug? http://stackoverflow.com/a/398120/376773
	    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
	    // is firefox >= v31?
	    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
	    // double check webkit in userAgent just in case we are in a worker
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
	}

	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */

	exports.formatters.j = function(v) {
	  try {
	    return JSON.stringify(v);
	  } catch (err) {
	    return '[UnexpectedJSONParseError]: ' + err.message;
	  }
	};


	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */

	function formatArgs(args) {
	  var useColors = this.useColors;

	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);

	  if (!useColors) return;

	  var c = 'color: ' + this.color;
	  args.splice(1, 0, c, 'color: inherit')

	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-zA-Z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });

	  args.splice(lastC, 0, c);
	}

	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */

	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}

	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */

	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}

	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */

	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch(e) {}

	  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	  if (!r && typeof process !== 'undefined' && 'env' in process) {
	    r = ({"NODE_ENV":"production"}).DEBUG;
	  }

	  return r;
	}

	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */

	exports.enable(load());

	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */

	function localstorage() {
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(115)))

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(576);

	/**
	 * The currently active debug mode names, and names to skip.
	 */

	exports.names = [];
	exports.skips = [];

	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	 */

	exports.formatters = {};

	/**
	 * Previous log timestamp.
	 */

	var prevTime;

	/**
	 * Select a color.
	 * @param {String} namespace
	 * @return {Number}
	 * @api private
	 */

	function selectColor(namespace) {
	  var hash = 0, i;

	  for (i in namespace) {
	    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
	    hash |= 0; // Convert to 32bit integer
	  }

	  return exports.colors[Math.abs(hash) % exports.colors.length];
	}

	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */

	function createDebug(namespace) {

	  function debug() {
	    // disabled?
	    if (!debug.enabled) return;

	    var self = debug;

	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;

	    // turn the `arguments` into a proper Array
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }

	    args[0] = exports.coerce(args[0]);

	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %O
	      args.unshift('%O');
	    }

	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);

	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });

	    // apply env-specific formatting (colors, etc.)
	    exports.formatArgs.call(self, args);

	    var logFn = debug.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }

	  debug.namespace = namespace;
	  debug.enabled = exports.enabled(namespace);
	  debug.useColors = exports.useColors();
	  debug.color = selectColor(namespace);

	  // env-specific initialization logic for debug instances
	  if ('function' === typeof exports.init) {
	    exports.init(debug);
	  }

	  return debug;
	}

	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */

	function enable(namespaces) {
	  exports.save(namespaces);

	  exports.names = [];
	  exports.skips = [];

	  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
	  var len = split.length;

	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}

	/**
	 * Disable debug output.
	 *
	 * @api public
	 */

	function disable() {
	  exports.enable('');
	}

	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */

	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}

	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */

	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


/***/ }),
/* 576 */
/***/ (function(module, exports) {

	/**
	 * Helpers.
	 */

	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var y = d * 365.25;

	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} [options]
	 * @throws {Error} throw an error if val is not a non-empty string or a number
	 * @return {String|Number}
	 * @api public
	 */

	module.exports = function(val, options) {
	  options = options || {};
	  var type = typeof val;
	  if (type === 'string' && val.length > 0) {
	    return parse(val);
	  } else if (type === 'number' && isNaN(val) === false) {
	    return options.long ? fmtLong(val) : fmtShort(val);
	  }
	  throw new Error(
	    'val is not a non-empty string or a valid number. val=' +
	      JSON.stringify(val)
	  );
	};

	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */

	function parse(str) {
	  str = String(str);
	  if (str.length > 100) {
	    return;
	  }
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
	    str
	  );
	  if (!match) {
	    return;
	  }
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	    default:
	      return undefined;
	  }
	}

	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function fmtShort(ms) {
	  if (ms >= d) {
	    return Math.round(ms / d) + 'd';
	  }
	  if (ms >= h) {
	    return Math.round(ms / h) + 'h';
	  }
	  if (ms >= m) {
	    return Math.round(ms / m) + 'm';
	  }
	  if (ms >= s) {
	    return Math.round(ms / s) + 's';
	  }
	  return ms + 'ms';
	}

	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function fmtLong(ms) {
	  return plural(ms, d, 'day') ||
	    plural(ms, h, 'hour') ||
	    plural(ms, m, 'minute') ||
	    plural(ms, s, 'second') ||
	    ms + ' ms';
	}

	/**
	 * Pluralization helper.
	 */

	function plural(ms, n, name) {
	  if (ms < n) {
	    return;
	  }
	  if (ms < n * 1.5) {
	    return Math.floor(ms / n) + ' ' + name;
	  }
	  return Math.ceil(ms / n) + ' ' + name + 's';
	}


/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _IconButton = __webpack_require__(578);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_IconButton).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref; //  weak
	// @inheritedComponent ButtonBase

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _ButtonBase = __webpack_require__(522);

	var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

	var _helpers = __webpack_require__(568);

	var _Icon = __webpack_require__(579);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _reactHelpers = __webpack_require__(581);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      textAlign: 'center',
	      flex: '0 0 auto',
	      fontSize: 24,
	      width: theme.spacing.unit * 6,
	      height: theme.spacing.unit * 6,
	      padding: 0,
	      borderRadius: '50%',
	      color: theme.palette.action.active,
	      transition: theme.transitions.create('background-color', {
	        duration: theme.transitions.duration.shortest
	      })
	    },
	    colorAccent: {
	      color: theme.palette.secondary.A200
	    },
	    colorContrast: {
	      color: theme.palette.getContrastText(theme.palette.primary[500])
	    },
	    colorPrimary: {
	      color: theme.palette.primary[500]
	    },
	    colorInherit: {
	      color: 'inherit'
	    },
	    disabled: {
	      color: theme.palette.action.disabled
	    },
	    label: {
	      width: '100%',
	      display: 'flex',
	      alignItems: 'inherit',
	      justifyContent: 'inherit'
	    },
	    icon: {
	      width: '1em',
	      height: '1em'
	    },
	    keyboardFocused: {
	      backgroundColor: theme.palette.text.divider
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  color: __webpack_require__(174).oneOf(['default', 'inherit', 'primary', 'contrast', 'accent']),
	  disabled: __webpack_require__(174).bool,
	  disableRipple: __webpack_require__(174).bool,
	  rootRef: __webpack_require__(174).func
	};


	/**
	 * Refer to the [Icons](/style/icons) section of the documentation
	 * regarding the available icon options.
	 */
	function IconButton(props) {
	  var _classNames;

	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      color = props.color,
	      disabled = props.disabled,
	      rootRef = props.rootRef,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'disabled', 'rootRef']);


	  return _react2.default.createElement(
	    _ButtonBase2.default,
	    (0, _extends3.default)({
	      className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames), className),
	      centerRipple: true,
	      keyboardFocusedClassName: classes.keyboardFocused,
	      disabled: disabled,
	      ref: rootRef
	    }, other),
	    _react2.default.createElement(
	      'span',
	      { className: classes.label },
	      typeof children === 'string' ? _react2.default.createElement(
	        _Icon2.default,
	        { className: classes.icon },
	        children
	      ) : _react2.default.Children.map(children, function (child) {
	        if ((0, _reactHelpers.isMuiElement)(child, ['Icon', 'SvgIcon'])) {
	          return _react2.default.cloneElement(child, {
	            className: (0, _classnames2.default)(classes.icon, child.props.className)
	          });
	        }

	        return child;
	      })
	    )
	  );
	}

	IconButton.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'color', require('prop-types').oneOf(['default', 'inherit', 'primary', 'contrast', 'accent'])), (0, _defineProperty3.default)(_ref, 'disabled', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'disableRipple', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'rootRef', require('prop-types').func), _ref) : {};
	IconButton.defaultProps = {
	  color: 'default',
	  disabled: false,
	  disableRipple: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiIconButton' })(IconButton);

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Icon = __webpack_require__(580);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Icon).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _helpers = __webpack_require__(568);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      userSelect: 'none'
	    },
	    colorAccent: {
	      color: theme.palette.secondary.A200
	    },
	    colorAction: {
	      color: theme.palette.action.active
	    },
	    colorContrast: {
	      color: theme.palette.getContrastText(theme.palette.primary[500])
	    },
	    colorDisabled: {
	      color: theme.palette.action.disabled
	    },
	    colorError: {
	      color: theme.palette.error[500]
	    },
	    colorPrimary: {
	      color: theme.palette.primary[500]
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Color = __webpack_require__(174).oneOf(['inherit', 'accent', 'action', 'contrast', 'disabled', 'error', 'primary']);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  color: __webpack_require__(174).oneOf(['inherit', 'accent', 'action', 'contrast', 'disabled', 'error', 'primary'])
	};


	function Icon(props) {
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color']);


	  var className = (0, _classnames2.default)('material-icons', classes.root, (0, _defineProperty3.default)({}, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'inherit'), classNameProp);

	  return _react2.default.createElement(
	    'span',
	    (0, _extends3.default)({ className: className, 'aria-hidden': 'true' }, other),
	    children
	  );
	}

	Icon.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  color: require('prop-types').oneOf(['inherit', 'accent', 'action', 'contrast', 'disabled', 'error', 'primary']).isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'color', require('prop-types').oneOf(['inherit', 'accent', 'action', 'contrast', 'disabled', 'error', 'primary'])), _ref) : {};
	Icon.defaultProps = {
	  color: 'inherit'
	};

	Icon.muiName = 'Icon';

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiIcon' })(Icon);

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.cloneChildrenWithClassName = cloneChildrenWithClassName;
	exports.isMuiElement = isMuiElement;
	exports.isMuiComponent = isMuiComponent;

	var _react = __webpack_require__(3);

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;
	/* eslint-disable import/prefer-default-export */

	function cloneChildrenWithClassName(children, className) {
	  return _react.Children.map(children, function (child) {
	    return (0, _react.isValidElement)(child) && (0, _react.cloneElement)(child, {
	      className: child.props.hasOwnProperty('className') ? child.props.className + ' ' + className : className
	    });
	  });
	}

	function isMuiElement(element, muiNames) {
	  return (0, _react.isValidElement)(element) && muiNames.indexOf(element.type.muiName) !== -1;
	}

	function isMuiComponent(element, muiNames) {
	  return muiNames.indexOf(element.muiName) !== -1;
	}

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M17.71 7.71L12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88z' });

	var Bluetooth = function Bluetooth(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Bluetooth = (0, _pure2.default)(Bluetooth);
	Bluetooth.muiName = 'SvgIcon';

	exports.default = Bluetooth;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _shouldUpdate = __webpack_require__(584);

	var _shouldUpdate2 = _interopRequireDefault(_shouldUpdate);

	var _shallowEqual = __webpack_require__(587);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _setDisplayName = __webpack_require__(585);

	var _setDisplayName2 = _interopRequireDefault(_setDisplayName);

	var _wrapDisplayName = __webpack_require__(447);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var pure = function pure(BaseComponent) {
	  var hoc = (0, _shouldUpdate2.default)(function (props, nextProps) {
	    return !(0, _shallowEqual2.default)(props, nextProps);
	  });

	  if (false) {
	    return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
	  }

	  return hoc(BaseComponent);
	};

	exports.default = pure;

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _setDisplayName = __webpack_require__(585);

	var _setDisplayName2 = _interopRequireDefault(_setDisplayName);

	var _wrapDisplayName = __webpack_require__(447);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var shouldUpdate = function shouldUpdate(test) {
	  return function (BaseComponent) {
	    var factory = (0, _react.createFactory)(BaseComponent);

	    var ShouldUpdate = function (_Component) {
	      _inherits(ShouldUpdate, _Component);

	      function ShouldUpdate() {
	        _classCallCheck(this, ShouldUpdate);

	        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	      }

	      ShouldUpdate.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return test(this.props, nextProps);
	      };

	      ShouldUpdate.prototype.render = function render() {
	        return factory(this.props);
	      };

	      return ShouldUpdate;
	    }(_react.Component);

	    if (false) {
	      return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
	    }
	    return ShouldUpdate;
	  };
	};

	exports.default = shouldUpdate;

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _setStatic = __webpack_require__(586);

	var _setStatic2 = _interopRequireDefault(_setStatic);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var setDisplayName = function setDisplayName(displayName) {
	  return (0, _setStatic2.default)('displayName', displayName);
	};

	exports.default = setDisplayName;

/***/ }),
/* 586 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var setStatic = function setStatic(key, value) {
	  return function (BaseComponent) {
	    /* eslint-disable no-param-reassign */
	    BaseComponent[key] = value;
	    /* eslint-enable no-param-reassign */
	    return BaseComponent;
	  };
	};

	exports.default = setStatic;

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _shallowEqual = __webpack_require__(119);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _shallowEqual2.default;

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _SvgIcon = __webpack_require__(589);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SvgIcon).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'inline-block',
	      fill: 'currentColor',
	      height: 24,
	      width: 24,
	      userSelect: 'none',
	      flexShrink: 0,
	      transition: theme.transitions.create('fill', {
	        duration: theme.transitions.duration.shorter
	      })
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  titleAccess: __webpack_require__(174).string,
	  viewBox: __webpack_require__(174).string
	};


	function SvgIcon(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      titleAccess = props.titleAccess,
	      viewBox = props.viewBox,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'titleAccess', 'viewBox']);


	  return _react2.default.createElement(
	    'svg',
	    (0, _extends3.default)({
	      className: (0, _classnames2.default)(classes.root, className),
	      focusable: 'false',
	      viewBox: viewBox,
	      'aria-hidden': titleAccess ? 'false' : 'true'
	    }, other),
	    titleAccess ? _react2.default.createElement(
	      'title',
	      null,
	      titleAccess
	    ) : null,
	    children
	  );
	}

	SvgIcon.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'titleAccess', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'viewBox', require('prop-types').string), _ref) : {};
	SvgIcon.defaultProps = {
	  viewBox: '0 0 24 24'
	};

	SvgIcon.muiName = 'SvgIcon';

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiSvgIcon' })(SvgIcon);

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M13 5.83l1.88 1.88-1.6 1.6 1.41 1.41 3.02-3.02L12 2h-1v5.03l2 2v-3.2zM5.41 4L4 5.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l4.29-4.29 2.3 2.29L20 18.59 5.41 4zM13 18.17v-3.76l1.88 1.88L13 18.17z' });

	var BluetoothDisabled = function BluetoothDisabled(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	BluetoothDisabled = (0, _pure2.default)(BluetoothDisabled);
	BluetoothDisabled.muiName = 'SvgIcon';

	exports.default = BluetoothDisabled;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z' });

	var Error = function Error(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Error = (0, _pure2.default)(Error);
	Error.muiName = 'SvgIcon';

	exports.default = Error;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _templateObject = _taggedTemplateLiteral(['\n  position: absolute;\n  bottom: 0;\n  left: 0;\n'], ['\n  position: absolute;\n  bottom: 0;\n  left: 0;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _Dialog = __webpack_require__(593);

	var _Dialog2 = _interopRequireDefault(_Dialog);

	var _Tabs = __webpack_require__(624);

	var _Tabs2 = _interopRequireDefault(_Tabs);

	var _Typography = __webpack_require__(610);

	var _Typography2 = _interopRequireDefault(_Typography);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _IconButton = __webpack_require__(577);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _Settings = __webpack_require__(638);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _devices = __webpack_require__(639);

	var _devices2 = _interopRequireDefault(_devices);

	var _riders = __webpack_require__(708);

	var _riders2 = _interopRequireDefault(_riders);

	var _authentication = __webpack_require__(714);

	var _authentication2 = _interopRequireDefault(_authentication);

	var _gameState = __webpack_require__(232);

	var _gameState2 = _interopRequireDefault(_gameState);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var styles = {
	  root: {
	    textAlign: 'center',
	    paddingTop: 200
	  }
	};

	var Wrapper = _styledComponents2.default.div(_templateObject);

	var tabs = [_devices2.default, _riders2.default, _authentication2.default];

	var Settings = function (_Component) {
	  _inherits(Settings, _Component);

	  function Settings() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Settings);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Settings.__proto__ || Object.getPrototypeOf(Settings)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      tab: 0,
	      open: false
	    }, _this.showSettings = function () {
	      _this.setState({
	        open: true
	      });
	    }, _this.hideSettings = function () {
	      _this.setState({
	        open: false
	      });
	    }, _this.showDevices = function () {
	      _this.setState({
	        tab: tabs.devices
	      });
	    }, _this.showRiders = function () {
	      _this.setState({
	        tab: tabs.riders
	      });
	    }, _this.handleTabChange = function (event, value) {
	      _this.setState({
	        tab: value
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Settings, [{
	    key: 'render',
	    value: function render() {
	      var _state = this.state,
	          tab = _state.tab,
	          open = _state.open;

	      var Panel = tabs[this.state.tab];

	      return _react2.default.createElement(
	        Wrapper,
	        null,
	        _react2.default.createElement(
	          _IconButton2.default,
	          { 'aria-label': 'Delete', onClick: this.showSettings },
	          _react2.default.createElement(_Settings2.default, null),
	          _react2.default.createElement(
	            _Dialog2.default,
	            { open: this.state.open, onRequestClose: this.hideSettings },
	            _react2.default.createElement(
	              _Dialog.DialogTitle,
	              null,
	              'SETTINGS'
	            ),
	            _react2.default.createElement(
	              _Dialog.DialogContent,
	              null,
	              _react2.default.createElement(
	                _Tabs2.default,
	                { value: this.state.tab, onChange: this.handleTabChange },
	                _react2.default.createElement(_Tabs.Tab, { label: 'DEVICES' }),
	                _react2.default.createElement(_Tabs.Tab, { label: 'RIDERS' }),
	                _react2.default.createElement(_Tabs.Tab, { label: 'AUTHENTICATION' })
	              ),
	              _react2.default.createElement(Panel, { socket: this.props.socket })
	            ),
	            _react2.default.createElement(
	              _Dialog.DialogActions,
	              null,
	              _react2.default.createElement(
	                _Button2.default,
	                { color: 'primary', onClick: this.hideSettings },
	                'OK'
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Settings;
	}(_react.Component);

	exports.default = Settings;

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Dialog = __webpack_require__(594);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dialog).default;
	  }
	});

	var _DialogActions = __webpack_require__(608);

	Object.defineProperty(exports, 'DialogActions', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DialogActions).default;
	  }
	});

	var _DialogTitle = __webpack_require__(609);

	Object.defineProperty(exports, 'DialogTitle', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DialogTitle).default;
	  }
	});

	var _DialogContent = __webpack_require__(612);

	Object.defineProperty(exports, 'DialogContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DialogContent).default;
	  }
	});

	var _DialogContentText = __webpack_require__(613);

	Object.defineProperty(exports, 'DialogContentText', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DialogContentText).default;
	  }
	});

	var _withResponsiveFullScreen = __webpack_require__(614);

	Object.defineProperty(exports, 'withResponsiveFullScreen', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_withResponsiveFullScreen).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _helpers = __webpack_require__(568);

	var _Modal = __webpack_require__(595);

	var _Modal2 = _interopRequireDefault(_Modal);

	var _Fade = __webpack_require__(598);

	var _Fade2 = _interopRequireDefault(_Fade);

	var _transitions = __webpack_require__(511);

	var _Paper = __webpack_require__(569);

	var _Paper2 = _interopRequireDefault(_Paper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ComponentType = __webpack_require__(174).func;

	var babelPluginFlowReactPropTypes_proptype_TransitionCallback = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionCallback || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_TransitionDuration = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionDuration || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      justifyContent: 'center',
	      alignItems: 'center'
	    },
	    paper: {
	      display: 'flex',
	      margin: theme.spacing.unit * 4,
	      flexDirection: 'column',
	      flex: '0 1 auto',
	      position: 'relative',
	      maxHeight: '90vh',
	      '&:focus': {
	        outline: 'none'
	      }
	    },
	    paperWidthXs: {
	      maxWidth: theme.breakpoints.values.xs
	    },
	    paperWidthSm: {
	      maxWidth: theme.breakpoints.values.sm
	    },
	    paperWidthMd: {
	      maxWidth: theme.breakpoints.values.md
	    },
	    fullWidth: {
	      width: '100%'
	    },
	    fullScreen: {
	      margin: 0,
	      width: '100%',
	      maxWidth: '100%',
	      height: '100%',
	      maxHeight: '100%',
	      borderRadius: 0
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  fullScreen: __webpack_require__(174).bool,
	  ignoreBackdropClick: __webpack_require__(174).bool,
	  ignoreEscapeKeyUp: __webpack_require__(174).bool,
	  transitionDuration: typeof babelPluginFlowReactPropTypes_proptype_TransitionDuration === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionDuration : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionDuration),
	  maxWidth: __webpack_require__(174).oneOf(['xs', 'sm', 'md']),
	  fullWidth: __webpack_require__(174).bool,
	  onBackdropClick: __webpack_require__(174).func,
	  onEnter: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntering: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntered: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEscapeKeyUp: __webpack_require__(174).func,
	  onExit: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExiting: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExited: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onRequestClose: __webpack_require__(174).func,
	  open: __webpack_require__(174).bool,
	  transition: __webpack_require__(174).oneOfType([typeof babelPluginFlowReactPropTypes_proptype_ComponentType === 'function' ? babelPluginFlowReactPropTypes_proptype_ComponentType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ComponentType), typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element)])
	};


	/**
	 * Dialogs are overlaid modal paper based components with a backdrop.
	 */
	function Dialog(props) {
	  var _classNames;

	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      fullScreen = props.fullScreen,
	      ignoreBackdropClick = props.ignoreBackdropClick,
	      ignoreEscapeKeyUp = props.ignoreEscapeKeyUp,
	      transitionDuration = props.transitionDuration,
	      maxWidth = props.maxWidth,
	      fullWidth = props.fullWidth,
	      open = props.open,
	      onBackdropClick = props.onBackdropClick,
	      onEscapeKeyUp = props.onEscapeKeyUp,
	      onEnter = props.onEnter,
	      onEntering = props.onEntering,
	      onEntered = props.onEntered,
	      onExit = props.onExit,
	      onExiting = props.onExiting,
	      onExited = props.onExited,
	      onRequestClose = props.onRequestClose,
	      transition = props.transition,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'fullScreen', 'ignoreBackdropClick', 'ignoreEscapeKeyUp', 'transitionDuration', 'maxWidth', 'fullWidth', 'open', 'onBackdropClick', 'onEscapeKeyUp', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'onRequestClose', 'transition']);


	  var createTransitionFn = typeof transition === 'function' ? _react2.default.createElement : _react2.default.cloneElement;

	  return _react2.default.createElement(
	    _Modal2.default,
	    (0, _extends3.default)({
	      className: (0, _classnames2.default)(classes.root, className),
	      backdropTransitionDuration: transitionDuration,
	      ignoreBackdropClick: ignoreBackdropClick,
	      ignoreEscapeKeyUp: ignoreEscapeKeyUp,
	      onBackdropClick: onBackdropClick,
	      onEscapeKeyUp: onEscapeKeyUp,
	      onRequestClose: onRequestClose,
	      show: open
	    }, other),
	    createTransitionFn(
	    /* $FlowFixMe - FIXME See Snackbar for similar create vs clone example */
	    transition, {
	      in: open,
	      transitionAppear: true,
	      transitionDuration: transitionDuration,
	      onEnter: onEnter,
	      onEntering: onEntering,
	      onEntered: onEntered,
	      onExit: onExit,
	      onExiting: onExiting,
	      onExited: onExited
	    }, _react2.default.createElement(
	      _Paper2.default,
	      {
	        elevation: 24,
	        className: (0, _classnames2.default)(classes.paper, classes['paperWidth' + (0, _helpers.capitalizeFirstLetter)(maxWidth)], (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.fullScreen, fullScreen), (0, _defineProperty3.default)(_classNames, classes.fullWidth, fullWidth), _classNames))
	      },
	      children
	    ))
	  );
	}

	Dialog.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'fullScreen', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'ignoreBackdropClick', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'ignoreEscapeKeyUp', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'transitionDuration', typeof babelPluginFlowReactPropTypes_proptype_TransitionDuration === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionDuration : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_TransitionDuration)), (0, _defineProperty3.default)(_ref, 'maxWidth', require('prop-types').oneOf(['xs', 'sm', 'md'])), (0, _defineProperty3.default)(_ref, 'fullWidth', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'onBackdropClick', require('prop-types').func), (0, _defineProperty3.default)(_ref, 'onEnter', typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback)), (0, _defineProperty3.default)(_ref, 'onEntering', typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback)), (0, _defineProperty3.default)(_ref, 'onEntered', typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback)), (0, _defineProperty3.default)(_ref, 'onEscapeKeyUp', require('prop-types').func), (0, _defineProperty3.default)(_ref, 'onExit', typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback)), (0, _defineProperty3.default)(_ref, 'onExiting', typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback)), (0, _defineProperty3.default)(_ref, 'onExited', typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback)), (0, _defineProperty3.default)(_ref, 'onRequestClose', require('prop-types').func), (0, _defineProperty3.default)(_ref, 'open', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'transition', require('prop-types').oneOfType([typeof babelPluginFlowReactPropTypes_proptype_ComponentType === 'function' ? babelPluginFlowReactPropTypes_proptype_ComponentType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ComponentType), typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Element)])), _ref) : {};
	Dialog.defaultProps = {
	  fullScreen: false,
	  ignoreBackdropClick: false,
	  ignoreEscapeKeyUp: false,
	  transitionDuration: {
	    enter: _transitions.duration.enteringScreen,
	    exit: _transitions.duration.leavingScreen
	  },
	  maxWidth: 'sm',
	  fullWidth: false,
	  open: false,
	  transition: _Fade2.default
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialog' })(Dialog);

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	var _contains = __webpack_require__(526);

	var _contains2 = _interopRequireDefault(_contains);

	var _activeElement = __webpack_require__(596);

	var _activeElement2 = _interopRequireDefault(_activeElement);

	var _ownerDocument = __webpack_require__(597);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _addEventListener = __webpack_require__(528);

	var _addEventListener2 = _interopRequireDefault(_addEventListener);

	var _helpers = __webpack_require__(568);

	var _Fade = __webpack_require__(598);

	var _Fade2 = _interopRequireDefault(_Fade);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _modalManager = __webpack_require__(602);

	var _modalManager2 = _interopRequireDefault(_modalManager);

	var _Backdrop = __webpack_require__(606);

	var _Backdrop2 = _interopRequireDefault(_Backdrop);

	var _Portal = __webpack_require__(607);

	var _Portal2 = _interopRequireDefault(_Portal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	// Modals don't open on the server so this won't break concurrency.
	// Could also put this on context.
	var babelPluginFlowReactPropTypes_proptype_TransitionCallback = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionCallback || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_TransitionDuration = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionDuration || __webpack_require__(174).any;

	var modalManager = (0, _modalManager2.default)();

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'flex',
	      width: '100%',
	      height: '100%',
	      position: 'fixed',
	      zIndex: theme.zIndex.dialog,
	      top: 0,
	      left: 0
	    },
	    hidden: {
	      visibility: 'hidden'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  backdropClassName: __webpack_require__(174).string,
	  backdropComponent: __webpack_require__(174).func,
	  backdropInvisible: __webpack_require__(174).bool,
	  backdropTransitionDuration: typeof babelPluginFlowReactPropTypes_proptype_TransitionDuration === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionDuration : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionDuration),
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  keepMounted: __webpack_require__(174).bool,
	  disableBackdrop: __webpack_require__(174).bool,
	  ignoreBackdropClick: __webpack_require__(174).bool,
	  ignoreEscapeKeyUp: __webpack_require__(174).bool,
	  modalManager: __webpack_require__(174).object,
	  onBackdropClick: __webpack_require__(174).func,
	  onEnter: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntering: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntered: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEscapeKeyUp: __webpack_require__(174).func,
	  onExit: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExiting: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExited: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onRequestClose: __webpack_require__(174).func,
	  show: __webpack_require__(174).bool
	};

	/**
	 * @ignore - internal component.
	 */
	var Modal = function (_React$Component) {
	  (0, _inherits3.default)(Modal, _React$Component);

	  function Modal() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Modal);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Modal.__proto__ || (0, _getPrototypeOf2.default)(Modal)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Modal, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      if (!this.props.show) {
	        this.setState({ exited: true });
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.mounted = true;
	      if (this.props.show) {
	        this.handleShow();
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.show && this.state.exited) {
	        this.setState({ exited: false });
	      }
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate(nextProps) {
	      if (!this.props.show && nextProps.show) {
	        this.checkForFocus();
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (!prevProps.show && this.props.show) {
	        this.handleShow();
	      }
	      // We are waiting for the onExited callback to call handleHide.
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.props.show || !this.state.exited) {
	        this.handleHide();
	      }
	      this.mounted = false;
	    }
	  }, {
	    key: 'checkForFocus',
	    value: function checkForFocus() {
	      if (_inDOM2.default) {
	        this.lastFocus = (0, _activeElement2.default)();
	      }
	    }
	  }, {
	    key: 'restoreLastFocus',
	    value: function restoreLastFocus() {
	      if (this.lastFocus && this.lastFocus.focus) {
	        this.lastFocus.focus();
	        this.lastFocus = undefined;
	      }
	    }
	  }, {
	    key: 'handleShow',
	    value: function handleShow() {
	      var doc = (0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(this));
	      this.props.modalManager.add(this);
	      this.onDocumentKeyUpListener = (0, _addEventListener2.default)(doc, 'keyup', this.handleDocumentKeyUp);
	      this.onFocusListener = (0, _addEventListener2.default)(doc, 'focus', this.handleFocusListener, true);
	      this.focus();
	    }
	  }, {
	    key: 'focus',
	    value: function focus() {
	      var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(this)));
	      var modalContent = this.modal && this.modal.lastChild;
	      var focusInModal = currentFocus && (0, _contains2.default)(modalContent, currentFocus);

	      if (modalContent && !focusInModal) {
	        if (!modalContent.hasAttribute('tabIndex')) {
	          modalContent.setAttribute('tabIndex', -1);
	           false ? (0, _warning2.default)(false, 'Material-UI: the modal content node does not accept focus. ' + 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to "-1".') : void 0;
	        }

	        modalContent.focus();
	      }
	    }
	  }, {
	    key: 'handleHide',
	    value: function handleHide() {
	      this.props.modalManager.remove(this);
	      if (this.onDocumentKeyUpListener) this.onDocumentKeyUpListener.remove();
	      if (this.onFocusListener) this.onFocusListener.remove();
	      this.restoreLastFocus();
	    }
	  }, {
	    key: 'renderBackdrop',
	    value: function renderBackdrop() {
	      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var _props = this.props,
	          BackdropComponent = _props.backdropComponent,
	          backdropClassName = _props.backdropClassName,
	          backdropTransitionDuration = _props.backdropTransitionDuration,
	          backdropInvisible = _props.backdropInvisible,
	          show = _props.show;


	      return _react2.default.createElement(
	        _Fade2.default,
	        (0, _extends3.default)({ 'in': show, transitionAppear: true, transitionDuration: backdropTransitionDuration }, other),
	        _react2.default.createElement(BackdropComponent, {
	          invisible: backdropInvisible,
	          className: backdropClassName,
	          onClick: this.handleBackdropClick
	        })
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props2 = this.props,
	          disableBackdrop = _props2.disableBackdrop,
	          backdropComponent = _props2.backdropComponent,
	          backdropClassName = _props2.backdropClassName,
	          backdropTransitionDuration = _props2.backdropTransitionDuration,
	          backdropInvisible = _props2.backdropInvisible,
	          ignoreBackdropClick = _props2.ignoreBackdropClick,
	          ignoreEscapeKeyUp = _props2.ignoreEscapeKeyUp,
	          children = _props2.children,
	          classes = _props2.classes,
	          className = _props2.className,
	          keepMounted = _props2.keepMounted,
	          modalManagerProp = _props2.modalManager,
	          onBackdropClick = _props2.onBackdropClick,
	          onEscapeKeyUp = _props2.onEscapeKeyUp,
	          onRequestClose = _props2.onRequestClose,
	          onEnter = _props2.onEnter,
	          onEntering = _props2.onEntering,
	          onEntered = _props2.onEntered,
	          onExit = _props2.onExit,
	          onExiting = _props2.onExiting,
	          onExited = _props2.onExited,
	          show = _props2.show,
	          other = (0, _objectWithoutProperties3.default)(_props2, ['disableBackdrop', 'backdropComponent', 'backdropClassName', 'backdropTransitionDuration', 'backdropInvisible', 'ignoreBackdropClick', 'ignoreEscapeKeyUp', 'children', 'classes', 'className', 'keepMounted', 'modalManager', 'onBackdropClick', 'onEscapeKeyUp', 'onRequestClose', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'show']);


	      if (!keepMounted && !show && this.state.exited) {
	        return null;
	      }

	      var transitionCallbacks = {
	        onEnter: onEnter,
	        onEntering: onEntering,
	        onEntered: onEntered,
	        onExit: onExit,
	        onExiting: onExiting,
	        onExited: this.handleTransitionExited
	      };

	      var modalChild = _react2.default.Children.only(children);
	      var _modalChild$props = modalChild.props,
	          role = _modalChild$props.role,
	          tabIndex = _modalChild$props.tabIndex;

	      var childProps = {};

	      if (role === undefined) {
	        childProps.role = role === undefined ? 'document' : role;
	      }

	      if (tabIndex === undefined) {
	        childProps.tabIndex = tabIndex == null ? -1 : tabIndex;
	      }

	      var backdropProps = void 0;

	      // It's a Transition like component
	      if (modalChild.props.hasOwnProperty('in')) {
	        (0, _keys2.default)(transitionCallbacks).forEach(function (key) {
	          childProps[key] = (0, _helpers.createChainedFunction)(transitionCallbacks[key], modalChild.props[key]);
	        });
	      } else {
	        backdropProps = transitionCallbacks;
	      }

	      if ((0, _keys2.default)(childProps).length) {
	        modalChild = _react2.default.cloneElement(modalChild, childProps);
	      }

	      return _react2.default.createElement(
	        _Portal2.default,
	        {
	          open: true,
	          ref: function ref(node) {
	            _this2.mountNode = node ? node.getLayer() : null;
	          }
	        },
	        _react2.default.createElement(
	          'div',
	          (0, _extends3.default)({
	            className: (0, _classnames2.default)(classes.root, className, (0, _defineProperty3.default)({}, classes.hidden, this.state.exited)),
	            ref: function ref(node) {
	              _this2.modal = node;
	            }
	          }, other),
	          !disableBackdrop && (!keepMounted || show || !this.state.exited) && this.renderBackdrop(backdropProps),
	          modalChild
	        )
	      );
	    }
	  }]);
	  return Modal;
	}(_react2.default.Component);

	Modal.defaultProps = {
	  backdropComponent: _Backdrop2.default,
	  backdropTransitionDuration: 300,
	  backdropInvisible: false,
	  keepMounted: false,
	  disableBackdrop: false,
	  ignoreBackdropClick: false,
	  ignoreEscapeKeyUp: false,
	  modalManager: modalManager,
	  show: false
	};

	var _initialiseProps = function _initialiseProps() {
	  var _this3 = this;

	  this.state = {
	    exited: false
	  };
	  this.mounted = false;
	  this.lastFocus = undefined;
	  this.modal = null;
	  this.mountNode = null;
	  this.onDocumentKeyUpListener = null;
	  this.onFocusListener = null;

	  this.handleFocusListener = function () {
	    if (!_this3.mounted || !_this3.props.modalManager.isTopModal(_this3)) {
	      return;
	    }

	    var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(_this3)));
	    var modalContent = _this3.modal && _this3.modal.lastChild;

	    if (modalContent && modalContent !== currentFocus && !(0, _contains2.default)(modalContent, currentFocus)) {
	      modalContent.focus();
	    }
	  };

	  this.handleDocumentKeyUp = function (event) {
	    if (!_this3.mounted || !_this3.props.modalManager.isTopModal(_this3)) {
	      return;
	    }

	    if ((0, _keycode2.default)(event) !== 'esc') {
	      return;
	    }

	    var _props3 = _this3.props,
	        onEscapeKeyUp = _props3.onEscapeKeyUp,
	        onRequestClose = _props3.onRequestClose,
	        ignoreEscapeKeyUp = _props3.ignoreEscapeKeyUp;


	    if (onEscapeKeyUp) {
	      onEscapeKeyUp(event);
	    }

	    if (onRequestClose && !ignoreEscapeKeyUp) {
	      onRequestClose(event);
	    }
	  };

	  this.handleBackdropClick = function (event) {
	    if (event.target !== event.currentTarget) {
	      return;
	    }

	    var _props4 = _this3.props,
	        onBackdropClick = _props4.onBackdropClick,
	        onRequestClose = _props4.onRequestClose,
	        ignoreBackdropClick = _props4.ignoreBackdropClick;


	    if (onBackdropClick) {
	      onBackdropClick(event);
	    }

	    if (onRequestClose && !ignoreBackdropClick) {
	      onRequestClose(event);
	    }
	  };

	  this.handleTransitionExited = function () {
	    if (_this3.props.onExited) {
	      var _props5;

	      (_props5 = _this3.props).onExited.apply(_props5, arguments);
	    }

	    _this3.setState({ exited: true });
	    _this3.handleHide();
	  };
	};

	exports.default = (0, _withStyles2.default)(styles, { flip: false, name: 'MuiModal' })(Modal);

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = activeElement;

	var _ownerDocument = __webpack_require__(597);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function activeElement() {
	  var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _ownerDocument2.default)();

	  try {
	    return doc.activeElement;
	  } catch (e) {/* ie throws if no active element */}
	}
	module.exports = exports['default'];

/***/ }),
/* 597 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = ownerDocument;
	function ownerDocument(node) {
	  return node && node.ownerDocument || document;
	}
	module.exports = exports["default"];

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Transition = __webpack_require__(599);

	var _Transition2 = _interopRequireDefault(_Transition);

	var _transitions = __webpack_require__(511);

	var _withTheme = __webpack_require__(546);

	var _withTheme2 = _interopRequireDefault(_withTheme);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any; //  weak

	var babelPluginFlowReactPropTypes_proptype_TransitionCallback = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionCallback || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_TransitionDuration = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionDuration || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element),
	  in: __webpack_require__(174).bool,
	  onEnter: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntering: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntered: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExit: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExiting: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExited: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  theme: __webpack_require__(174).object,
	  transitionDuration: typeof babelPluginFlowReactPropTypes_proptype_TransitionDuration === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionDuration : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionDuration)
	};

	var Fade = function (_React$Component) {
	  (0, _inherits3.default)(Fade, _React$Component);

	  function Fade() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Fade);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Fade.__proto__ || (0, _getPrototypeOf2.default)(Fade)).call.apply(_ref, [this].concat(args))), _this), _this.handleEnter = function (element) {
	      element.style.opacity = 0;
	      if (_this.props.onEnter) {
	        _this.props.onEnter(element);
	      }
	    }, _this.handleEntering = function (element) {
	      var _this$props = _this.props,
	          theme = _this$props.theme,
	          transitionDuration = _this$props.transitionDuration;

	      element.style.transition = theme.transitions.create('opacity', {
	        duration: typeof transitionDuration === 'number' ? transitionDuration : transitionDuration.enter
	      });
	      element.style.WebkitTransition = theme.transitions.create('opacity', {
	        duration: typeof transitionDuration === 'number' ? transitionDuration : transitionDuration.enter
	      });
	      element.style.opacity = 1;
	      if (_this.props.onEntering) {
	        _this.props.onEntering(element);
	      }
	    }, _this.handleExit = function (element) {
	      var _this$props2 = _this.props,
	          theme = _this$props2.theme,
	          transitionDuration = _this$props2.transitionDuration;

	      element.style.transition = theme.transitions.create('opacity', {
	        duration: typeof transitionDuration === 'number' ? transitionDuration : transitionDuration.enter
	      });
	      element.style.WebkitTransition = theme.transitions.create('opacity', {
	        duration: typeof transitionDuration === 'number' ? transitionDuration : transitionDuration.enter
	      });
	      element.style.opacity = 0;
	      if (_this.props.onExit) {
	        _this.props.onExit(element);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Fade, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          transitionDuration = _props.transitionDuration,
	          onEnter = _props.onEnter,
	          onEntering = _props.onEntering,
	          onExit = _props.onExit,
	          theme = _props.theme,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'transitionDuration', 'onEnter', 'onEntering', 'onExit', 'theme']);


	      return _react2.default.createElement(
	        _Transition2.default,
	        (0, _extends3.default)({
	          onEnter: this.handleEnter,
	          onEntering: this.handleEntering,
	          onExit: this.handleExit,
	          timeout: transitionDuration,
	          transitionAppear: true
	        }, other),
	        children
	      );
	    }
	  }]);
	  return Fade;
	}(_react2.default.Component);

	Fade.defaultProps = {
	  in: false,
	  transitionDuration: {
	    enter: _transitions.duration.enteringScreen,
	    exit: _transitions.duration.leavingScreen
	  }
	};
	exports.default = (0, _withTheme2.default)()(Fade);

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _properties = __webpack_require__(600);

	var _properties2 = _interopRequireDefault(_properties);

	var _on = __webpack_require__(529);

	var _on2 = _interopRequireDefault(_on);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_SyntheticUIEventHandler = __webpack_require__(601).babelPluginFlowReactPropTypes_proptype_SyntheticUIEventHandler || __webpack_require__(174).any;

	var transitionEndEvent = _properties2.default.end;

	var UNMOUNTED = exports.UNMOUNTED = 0;
	var EXITED = exports.EXITED = 1;
	var ENTERING = exports.ENTERING = 2;
	var ENTERED = exports.ENTERED = 3;
	var EXITING = exports.EXITING = 4;

	/**
	 * A helper function that calls back when any pending animations have started This is needed as the
	 * callback hooks might be setting some style properties that needs a frame to take effect.
	 */
	function requestAnimationStart(callback) {
	  // Feature detect rAF, fallback to setTimeout
	  if (window.requestAnimationFrame) {
	    // Chrome and Safari have a bug where calling rAF once returns the current
	    // frame instead of the next frame, so we need to call a double rAF here.
	    // See https://crbug.com/675795 for more.
	    window.requestAnimationFrame(function () {
	      window.requestAnimationFrame(callback);
	    });
	  } else {
	    setTimeout(callback, 0);
	  }
	}

	var babelPluginFlowReactPropTypes_proptype_TransitionDuration = __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).shape({
	  enter: __webpack_require__(174).number.isRequired,
	  exit: __webpack_require__(174).number.isRequired
	})]);

	var babelPluginFlowReactPropTypes_proptype_TransitionCallback = __webpack_require__(174).func;

	var babelPluginFlowReactPropTypes_proptype_TransitionRequestTimeout = __webpack_require__(174).func;

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element),
	  className: __webpack_require__(174).string,
	  enteredClassName: __webpack_require__(174).string,
	  enteringClassName: __webpack_require__(174).string,
	  exitedClassName: __webpack_require__(174).string,
	  exitingClassName: __webpack_require__(174).string,
	  in: __webpack_require__(174).bool,
	  onEnter: __webpack_require__(174).func,
	  onEntering: __webpack_require__(174).func,
	  onEntered: __webpack_require__(174).func,
	  onExit: __webpack_require__(174).func,
	  onExiting: __webpack_require__(174).func,
	  onExited: __webpack_require__(174).func,
	  onRequestTimeout: __webpack_require__(174).func,
	  timeout: __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).shape({
	    enter: __webpack_require__(174).number.isRequired,
	    exit: __webpack_require__(174).number.isRequired
	  })]),
	  transitionAppear: __webpack_require__(174).bool,
	  unmountOnExit: __webpack_require__(174).bool
	};


	var defaultTimeout = 5000;

	/**
	 * @ignore - internal component.
	 *
	 * Drawn from https://raw.githubusercontent.com/react-bootstrap/react-overlays/master/src/Transition.js
	 *
	 * The Transition component lets you define and run CSS transitions with a simple declarative api.
	 * It works similarly to React's own CSSTransitionGroup
	 * but is specifically optimized for transitioning a single child "in" or "out".
	 *
	 * You don't even need to use class based CSS transitions if you don't want to (but it is easiest).
	 * The extensive set of lifecyle callbacks means you have control over
	 * the transitioning now at each step of the way.
	 */

	var Transition = function (_React$Component) {
	  (0, _inherits3.default)(Transition, _React$Component);

	  function Transition() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Transition);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Transition.__proto__ || (0, _getPrototypeOf2.default)(Transition)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      status: UNMOUNTED
	    }, _this.nextCallback = null, _this.needsUpdate = false, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Transition, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var status = void 0;

	      if (this.props.in) {
	        // Start enter transition in componentDidMount.
	        status = this.props.transitionAppear ? EXITED : ENTERED;
	      } else {
	        status = this.props.unmountOnExit ? UNMOUNTED : EXITED;
	      }

	      this.setState({ status: status });
	      this.nextCallback = null;
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.transitionAppear && this.props.in) {
	        this.performEnter(this.props);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.in && this.props.unmountOnExit) {
	        if (this.state.status === UNMOUNTED) {
	          // Start enter transition in componentDidUpdate.
	          this.setState({ status: EXITED });
	        }
	      } else {
	        this.needsUpdate = true;
	      }
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      if (this.props.in && this.state.status === EXITED && this.state.status === nextState.status) {
	        return false;
	      }

	      return true;
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      var status = this.state.status;

	      if (this.props.unmountOnExit && status === EXITED) {
	        // EXITED is always a transitional state to either ENTERING or UNMOUNTED
	        // when using unmountOnExit.
	        if (this.props.in) {
	          this.performEnter(this.props);
	        } else {
	          this.setState({ status: UNMOUNTED }); // eslint-disable-line react/no-did-update-set-state
	        }

	        return;
	      }

	      // guard ensures we are only responding to prop changes
	      if (this.needsUpdate) {
	        this.needsUpdate = false;

	        if (this.props.in) {
	          if (status === EXITING) {
	            this.performEnter(this.props);
	          } else if (status === EXITED) {
	            this.performEnter(this.props);
	          }
	          // Otherwise we're already entering or entered.
	        } else if (status === ENTERING || status === ENTERED) {
	          this.performExit(this.props);
	        }
	        // Otherwise we're already exited or exiting.
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.cancelNextCallback();
	    }
	  }, {
	    key: 'performEnter',
	    value: function performEnter(props) {
	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);
	      if (node instanceof HTMLElement) {
	        if (props.onEnter) {
	          props.onEnter(node);
	        }
	        this.performEntering(node);
	      }
	    }
	  }, {
	    key: 'performEntering',
	    value: function performEntering(element) {
	      var _this2 = this;

	      this.safeSetState({ status: ENTERING }, function () {
	        if (_this2.props.onEntering) {
	          _this2.props.onEntering(element);
	        }

	        _this2.onTransitionEnd(element, 'enter', function () {
	          _this2.safeSetState({ status: ENTERED }, function () {
	            if (_this2.props.onEntered) {
	              _this2.props.onEntered(element);
	            }
	          });
	        });
	      });
	    }
	  }, {
	    key: 'performExit',
	    value: function performExit(props) {
	      var _this3 = this;

	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);
	      if (node instanceof HTMLElement) {
	        // Not this.props, because we might be about to receive new props.
	        if (props.onExit) {
	          props.onExit(node);
	        }

	        this.safeSetState({ status: EXITING }, function () {
	          if (_this3.props.onExiting) {
	            _this3.props.onExiting(node);
	          }

	          _this3.onTransitionEnd(node, 'exit', function () {
	            _this3.safeSetState({ status: EXITED }, function () {
	              if (_this3.props.onExited) {
	                _this3.props.onExited(node);
	              }
	            });
	          });
	        });
	      }
	    }
	  }, {
	    key: 'cancelNextCallback',
	    value: function cancelNextCallback() {
	      if (this.nextCallback !== null) {
	        this.nextCallback.cancel();
	        this.nextCallback = null;
	      }
	    }
	  }, {
	    key: 'safeSetState',
	    value: function safeSetState(nextState, callback) {
	      // This shouldn't be necessary, but there are weird race conditions with
	      // setState callbacks and unmounting in testing, so always make sure that
	      // we can cancel any pending setState callbacks after we unmount.
	      this.setState(nextState, this.setNextCallback(callback));
	    }
	  }, {
	    key: 'setNextCallback',
	    value: function setNextCallback(callback) {
	      var _this4 = this;

	      var active = true;

	      // FIXME: These next two blocks are a real enigma for flow typing outside of weak mode.
	      // FIXME: I suggest we refactor - rosskevin
	      this.nextCallback = function (event) {
	        requestAnimationStart(function () {
	          if (active) {
	            active = false;
	            _this4.nextCallback = null;

	            callback(event);
	          }
	        });
	      };

	      this.nextCallback.cancel = function () {
	        active = false;
	      };

	      return this.nextCallback;
	    }
	  }, {
	    key: 'onTransitionEnd',
	    value: function onTransitionEnd(element, eventType, handler) {
	      var _this5 = this;

	      this.setNextCallback(handler);

	      if (element) {
	        (0, _on2.default)(element, transitionEndEvent, function (event) {
	          if (event.target === element && _this5.nextCallback) {
	            _this5.nextCallback();
	          }
	        });
	        setTimeout(this.nextCallback, this.getTimeouts(element)[eventType]);
	      } else {
	        setTimeout(this.nextCallback, 0);
	      }
	    }
	  }, {
	    key: 'getTimeouts',
	    value: function getTimeouts(element) {
	      var timeout = void 0;

	      if (this.props.onRequestTimeout && element instanceof HTMLElement) {
	        timeout = this.props.onRequestTimeout(element);
	      }

	      if (timeout === undefined) {
	        timeout = this.props.timeout;
	      }

	      var enter = void 0;
	      var exit = void 0;

	      if (typeof timeout === 'number' || !timeout) {
	        enter = timeout;
	        exit = timeout;
	      } else {
	        enter = timeout.enter;
	        exit = timeout.exit;
	      }

	      return { enter: enter, exit: exit };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var status = this.state.status;

	      if (status === UNMOUNTED) {
	        return null;
	      }

	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          inProp = _props.in,
	          enteredClassName = _props.enteredClassName,
	          enteringClassName = _props.enteringClassName,
	          exitedClassName = _props.exitedClassName,
	          exitingClassName = _props.exitingClassName,
	          onEnter = _props.onEnter,
	          onEntering = _props.onEntering,
	          onEntered = _props.onEntered,
	          onExit = _props.onExit,
	          onExiting = _props.onExiting,
	          onExited = _props.onExited,
	          onRequestTimeout = _props.onRequestTimeout,
	          timeout = _props.timeout,
	          transitionAppear = _props.transitionAppear,
	          unmountOnExit = _props.unmountOnExit,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'className', 'in', 'enteredClassName', 'enteringClassName', 'exitedClassName', 'exitingClassName', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'onRequestTimeout', 'timeout', 'transitionAppear', 'unmountOnExit']);


	      var transitionClassName = void 0;
	      if (status === EXITED) {
	        transitionClassName = this.props.exitedClassName;
	      } else if (status === ENTERING) {
	        transitionClassName = this.props.enteringClassName;
	      } else if (status === ENTERED) {
	        transitionClassName = this.props.enteredClassName;
	      } else if (status === EXITING) {
	        transitionClassName = this.props.exitingClassName;
	      }

	      var child = _react2.default.Children.only(children);
	      return _react2.default.cloneElement(child, (0, _extends3.default)({
	        className: (0, _classnames2.default)(child.props.className, className, transitionClassName)
	      }, other));
	    }
	  }]);
	  return Transition;
	}(_react2.default.Component);

	Transition.defaultProps = {
	  in: false,
	  unmountOnExit: false,
	  transitionAppear: false,
	  timeout: defaultTimeout
	};
	Transition.propTypes =  false ? {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Element),
	  className: require('prop-types').string,
	  enteredClassName: require('prop-types').string,
	  enteringClassName: require('prop-types').string,
	  exitedClassName: require('prop-types').string,
	  exitingClassName: require('prop-types').string,
	  in: require('prop-types').bool,
	  onEnter: require('prop-types').func,
	  onEntering: require('prop-types').func,
	  onEntered: require('prop-types').func,
	  onExit: require('prop-types').func,
	  onExiting: require('prop-types').func,
	  onExited: require('prop-types').func,
	  onRequestTimeout: require('prop-types').func,
	  timeout: require('prop-types').oneOfType([require('prop-types').number, require('prop-types').shape({
	    enter: require('prop-types').number.isRequired,
	    exit: require('prop-types').number.isRequired
	  })]),
	  transitionAppear: require('prop-types').bool,
	  unmountOnExit: require('prop-types').bool
	} : {};
	exports.default = Transition;

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var transform = 'transform';
	var prefix = void 0,
	    transitionEnd = void 0,
	    animationEnd = void 0;
	var transitionProperty = void 0,
	    transitionDuration = void 0,
	    transitionTiming = void 0,
	    transitionDelay = void 0;
	var animationName = void 0,
	    animationDuration = void 0,
	    animationTiming = void 0,
	    animationDelay = void 0;

	if (_inDOM2.default) {
	  var _getTransitionPropert = getTransitionProperties();

	  prefix = _getTransitionPropert.prefix;
	  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
	  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;


	  exports.transform = transform = prefix + '-' + transform;
	  exports.transitionProperty = transitionProperty = prefix + '-transition-property';
	  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';
	  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';
	  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';

	  exports.animationName = animationName = prefix + '-animation-name';
	  exports.animationDuration = animationDuration = prefix + '-animation-duration';
	  exports.animationTiming = animationTiming = prefix + '-animation-delay';
	  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';
	}

	exports.transform = transform;
	exports.transitionProperty = transitionProperty;
	exports.transitionTiming = transitionTiming;
	exports.transitionDelay = transitionDelay;
	exports.transitionDuration = transitionDuration;
	exports.transitionEnd = transitionEnd;
	exports.animationName = animationName;
	exports.animationDuration = animationDuration;
	exports.animationTiming = animationTiming;
	exports.animationDelay = animationDelay;
	exports.animationEnd = animationEnd;
	exports.default = {
	  transform: transform,
	  end: transitionEnd,
	  property: transitionProperty,
	  timing: transitionTiming,
	  delay: transitionDelay,
	  duration: transitionDuration
	};


	function getTransitionProperties() {
	  var style = document.createElement('div').style;

	  var vendorMap = {
	    O: function O(e) {
	      return 'o' + e.toLowerCase();
	    },
	    Moz: function Moz(e) {
	      return e.toLowerCase();
	    },
	    Webkit: function Webkit(e) {
	      return 'webkit' + e;
	    },
	    ms: function ms(e) {
	      return 'MS' + e;
	    }
	  };

	  var vendors = Object.keys(vendorMap);

	  var transitionEnd = void 0,
	      animationEnd = void 0;
	  var prefix = '';

	  for (var i = 0; i < vendors.length; i++) {
	    var vendor = vendors[i];

	    if (vendor + 'TransitionProperty' in style) {
	      prefix = '-' + vendor.toLowerCase();
	      transitionEnd = vendorMap[vendor]('TransitionEnd');
	      animationEnd = vendorMap[vendor]('AnimationEnd');
	      break;
	    }
	  }

	  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';

	  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';

	  style = null;

	  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };
	}

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var babelPluginFlowReactPropTypes_proptype_SyntheticUIEventHandler = __webpack_require__(174).func;

	var babelPluginFlowReactPropTypes_proptype_DOMNode = __webpack_require__(174).oneOfType([__webpack_require__(174).any, __webpack_require__(174).any]);

	/**
	 * return type of ReactDOM.findDOMNode()
	 *
	 * NOTE: `Element` is NOT the same as `type { Element } from 'react'` a.k.a React$Element
	 *
	 * To use it as a typical node, check with `if (node instanceof HTMLElement) { ... }`
	 */
	// Actual flow type:
	// export type DOMNode = Element | Text | null;

	// Workaround type (results in `any`) due to https://github.com/brigand/babel-plugin-flow-react-proptypes/issues/115

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _isWindow = __webpack_require__(603);

	var _isWindow2 = _interopRequireDefault(_isWindow);

	var _ownerDocument = __webpack_require__(597);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	var _scrollbarSize = __webpack_require__(604);

	var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);

	var _manageAriaHidden = __webpack_require__(605);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Taken from https://github.com/react-bootstrap/react-overlays/blob/master/src/ModalManager.js

	function getPaddingRight(node) {
	  return parseInt(node.style.paddingRight || 0, 10);
	}

	// Do we have a scroll bar?
	function bodyIsOverflowing(node) {
	  var doc = (0, _ownerDocument2.default)(node);
	  var win = (0, _isWindow2.default)(doc);

	  // Takes in account potential non zero margin on the body.
	  var style = window.getComputedStyle(doc.body);
	  var marginLeft = parseInt(style.getPropertyValue('margin-left'), 10);
	  var marginRight = parseInt(style.getPropertyValue('margin-right'), 10);

	  return marginLeft + doc.body.clientWidth + marginRight < win.innerWidth;
	}

	// The container shouldn't be used on the server.
	var defaultContainer = _inDOM2.default ? window.document.body : {};

	/**
	 * State management helper for modals/layers.
	 * Simplified, but inspired by react-overlay's ModalManager class
	 *
	 * @internal Used by the Modal to ensure proper focus management.
	 */
	function createModalManager() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$container = _ref.container,
	      container = _ref$container === undefined ? defaultContainer : _ref$container,
	      _ref$hideSiblingNodes = _ref.hideSiblingNodes,
	      hideSiblingNodes = _ref$hideSiblingNodes === undefined ? true : _ref$hideSiblingNodes;

	   false ? (0, _warning2.default)(container !== null, '\nMaterial-UI: you are most likely evaluating the code before the\nbrowser has a chance to reach the <body>.\nPlease move the import at the end of the <body>.\n  ') : void 0;

	  var modals = [];

	  var prevOverflow = void 0;
	  var prevPaddings = [];

	  function add(modal) {
	    var modalIdx = modals.indexOf(modal);

	    if (modalIdx !== -1) {
	      return modalIdx;
	    }

	    modalIdx = modals.length;
	    modals.push(modal);

	    if (hideSiblingNodes) {
	      (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);
	    }

	    if (modals.length === 1) {
	      // Save our current overflow so we can revert
	      // back to it when all modals are closed!
	      prevOverflow = container.style.overflow;

	      if (bodyIsOverflowing(container)) {
	        prevPaddings = [getPaddingRight(container)];
	        var scrollbarSize = (0, _scrollbarSize2.default)();
	        container.style.paddingRight = prevPaddings[0] + scrollbarSize + 'px';

	        var fixedNodes = document.querySelectorAll('.mui-fixed');
	        for (var i = 0; i < fixedNodes.length; i += 1) {
	          var paddingRight = getPaddingRight(fixedNodes[i]);
	          prevPaddings.push(paddingRight);
	          fixedNodes[i].style.paddingRight = paddingRight + scrollbarSize + 'px';
	        }
	      }

	      container.style.overflow = 'hidden';
	    }

	    return modalIdx;
	  }

	  function remove(modal) {
	    var modalIdx = modals.indexOf(modal);

	    if (modalIdx === -1) {
	      return modalIdx;
	    }

	    modals.splice(modalIdx, 1);

	    if (modals.length === 0) {
	      container.style.overflow = prevOverflow;
	      container.style.paddingRight = prevPaddings[0];

	      var fixedNodes = document.querySelectorAll('.mui-fixed');
	      for (var i = 0; i < fixedNodes.length; i += 1) {
	        fixedNodes[i].style.paddingRight = prevPaddings[i + 1] + 'px';
	      }

	      prevOverflow = undefined;
	      prevPaddings = [];
	      if (hideSiblingNodes) {
	        (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);
	      }
	    } else if (hideSiblingNodes) {
	      // otherwise make sure the next top modal is visible to a SR
	      (0, _manageAriaHidden.ariaHidden)(false, modals[modals.length - 1].mountNode);
	    }

	    return modalIdx;
	  }

	  function isTopModal(modal) {
	    return !!modals.length && modals[modals.length - 1] === modal;
	  }

	  var modalManager = { add: add, remove: remove, isTopModal: isTopModal };

	  return modalManager;
	}

	exports.default = createModalManager;

/***/ }),
/* 603 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getWindow;
	function getWindow(node) {
	  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
	}
	module.exports = exports["default"];

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (recalc) {
	  if (!size || recalc) {
	    if (_inDOM2.default) {
	      var scrollDiv = document.createElement('div');

	      scrollDiv.style.position = 'absolute';
	      scrollDiv.style.top = '-9999px';
	      scrollDiv.style.width = '50px';
	      scrollDiv.style.height = '50px';
	      scrollDiv.style.overflow = 'scroll';

	      document.body.appendChild(scrollDiv);
	      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
	      document.body.removeChild(scrollDiv);
	    }
	  }

	  return size;
	};

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var size = void 0;

	module.exports = exports['default'];

/***/ }),
/* 605 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ariaHidden = ariaHidden;
	exports.hideSiblings = hideSiblings;
	exports.showSiblings = showSiblings;
	//  weak

	var BLACKLIST = ['template', 'script', 'style'];

	var isHidable = function isHidable(_ref) {
	  var nodeType = _ref.nodeType,
	      tagName = _ref.tagName;
	  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;
	};

	var siblings = function siblings(container, mount, cb) {
	  mount = [].concat(mount); // eslint-disable-line no-param-reassign
	  [].forEach.call(container.children, function (node) {
	    if (mount.indexOf(node) === -1 && isHidable(node)) {
	      cb(node);
	    }
	  });
	};

	function ariaHidden(show, node) {
	  if (!node) {
	    return;
	  }
	  if (show) {
	    node.setAttribute('aria-hidden', 'true');
	  } else {
	    node.removeAttribute('aria-hidden');
	  }
	}

	function hideSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(true, node);
	  });
	}

	function showSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(false, node);
	  });
	}

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      zIndex: -1,
	      width: '100%',
	      height: '100%',
	      position: 'fixed',
	      top: 0,
	      left: 0,
	      // Remove grey highlight
	      WebkitTapHighlightColor: theme.palette.common.transparent,
	      backgroundColor: theme.palette.common.lightBlack,
	      transition: theme.transitions.create('opacity'),
	      willChange: 'opacity',
	      opacity: 0
	    },
	    invisible: {
	      backgroundColor: theme.palette.common.transparent
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  invisible: __webpack_require__(174).bool
	};


	/**
	 * @ignore - internal component.
	 */
	function Backdrop(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      invisible = props.invisible,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'invisible']);


	  var backdropClass = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.invisible, invisible), className);

	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: backdropClass, 'aria-hidden': 'true' }, other),
	    children
	  );
	}

	Backdrop.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'invisible', require('prop-types').bool), _ref) : {};
	Backdrop.defaultProps = {
	  invisible: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiBackdrop' })(Backdrop);

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _inDOM = __webpack_require__(527);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  open: __webpack_require__(174).bool
	};

	/**
	 * @ignore - internal component.
	 */
	var Portal = function (_React$Component) {
	  (0, _inherits3.default)(Portal, _React$Component);

	  function Portal() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Portal);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Portal.__proto__ || (0, _getPrototypeOf2.default)(Portal)).call.apply(_ref, [this].concat(args))), _this), _this.layer = null, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Portal, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // Support react@15.x, will be removed at some point
	      if (!_reactDom2.default.unstable_createPortal) {
	        this.renderLayer();
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      // Support react@15.x, will be removed at some point
	      if (!_reactDom2.default.unstable_createPortal) {
	        this.renderLayer();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.unrenderLayer();
	    }
	  }, {
	    key: 'getLayer',
	    value: function getLayer() {
	      if (!this.layer) {
	        this.layer = document.createElement('div');
	        this.layer.setAttribute('data-mui-portal', 'true');
	        if (document.body && this.layer) {
	          document.body.appendChild(this.layer);
	        }
	      }

	      return this.layer;
	    }
	  }, {
	    key: 'unrenderLayer',
	    value: function unrenderLayer() {
	      if (!this.layer) {
	        return;
	      }

	      // Support react@15.x, will be removed at some point
	      if (!_reactDom2.default.unstable_createPortal) {
	        _reactDom2.default.unmountComponentAtNode(this.layer);
	      }

	      if (document.body) {
	        document.body.removeChild(this.layer);
	      }
	      this.layer = null;
	    }
	  }, {
	    key: 'renderLayer',
	    value: function renderLayer() {
	      var _props = this.props,
	          children = _props.children,
	          open = _props.open;


	      if (open) {
	        // By calling this method in componentDidMount() and
	        // componentDidUpdate(), you're effectively creating a "wormhole" that
	        // funnels React's hierarchical updates through to a DOM node on an
	        // entirely different part of the page.
	        var layerElement = _react2.default.Children.only(children);
	        // $FlowFixMe
	        _reactDom2.default.unstable_renderSubtreeIntoContainer(this, layerElement, this.getLayer());
	      } else {
	        this.unrenderLayer();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          children = _props2.children,
	          open = _props2.open;

	      // Support react@15.x, will be removed at some point

	      if (!_reactDom2.default.unstable_createPortal) {
	        return null;
	      }

	      // Can't be rendered server-side.
	      if (_inDOM2.default) {
	        if (open) {
	          return _reactDom2.default.unstable_createPortal(children, this.getLayer());
	        }

	        this.unrenderLayer();
	      }

	      return null;
	    }
	  }]);
	  return Portal;
	}(_react2.default.Component);

	Portal.defaultProps = {
	  open: false
	};
	Portal.propTypes =  false ? {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node),
	  open: require('prop-types').bool
	} : {};
	exports.default = Portal;

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	__webpack_require__(314);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	// So we don't have any override priority issue.

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'flex',
	      justifyContent: 'flex-end',
	      alignItems: 'center',
	      margin: theme.spacing.unit + 'px ' + theme.spacing.unit / 2 + 'px',
	      flex: '0 0 auto'
	    },
	    action: {
	      margin: '0 ' + theme.spacing.unit / 2 + 'px'
	    },
	    button: {
	      minWidth: 64
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string
	};


	function DialogActions(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
	    _react2.default.Children.map(children, function (button) {
	      return _react2.default.isValidElement(button) && _react2.default.createElement(
	        'div',
	        { className: classes.action },
	        _react2.default.cloneElement(button, {
	          className: (0, _classnames2.default)(classes.button, button.props.className)
	        })
	      );
	    })
	  );
	}

	DialogActions.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), _ref) : {};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogActions' })(DialogActions);

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Typography = __webpack_require__(610);

	var _Typography2 = _interopRequireDefault(_Typography);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      margin: 0,
	      padding: theme.spacing.unit * 3 + 'px ' + theme.spacing.unit * 3 + 'px       20px ' + theme.spacing.unit * 3 + 'px',
	      flex: '0 0 auto'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  disableTypography: __webpack_require__(174).bool
	};


	function DialogTitle(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      disableTypography = props.disableTypography,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'disableTypography']);


	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
	    disableTypography ? children : _react2.default.createElement(
	      _Typography2.default,
	      { type: 'title' },
	      children
	    )
	  );
	}

	DialogTitle.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'disableTypography', require('prop-types').bool), _ref) : {};
	DialogTitle.defaultProps = {
	  disableTypography: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogTitle' })(DialogTitle);

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Typography = __webpack_require__(611);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Typography).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _helpers = __webpack_require__(568);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'block',
	      margin: 0
	    },
	    display4: theme.typography.display4,
	    display3: theme.typography.display3,
	    display2: theme.typography.display2,
	    display1: theme.typography.display1,
	    headline: theme.typography.headline,
	    title: theme.typography.title,
	    subheading: theme.typography.subheading,
	    body2: theme.typography.body2,
	    body1: theme.typography.body1,
	    caption: theme.typography.caption,
	    button: theme.typography.button,
	    alignLeft: {
	      textAlign: 'left'
	    },
	    alignCenter: {
	      textAlign: 'center'
	    },
	    alignRight: {
	      textAlign: 'right'
	    },
	    alignJustify: {
	      textAlign: 'justify'
	    },
	    noWrap: {
	      overflow: 'hidden',
	      textOverflow: 'ellipsis',
	      whiteSpace: 'nowrap'
	    },
	    gutterBottom: {
	      marginBottom: '0.35em'
	    },
	    paragraph: {
	      marginBottom: theme.spacing.unit * 2
	    },
	    colorInherit: {
	      color: 'inherit'
	    },
	    colorPrimary: {
	      color: theme.palette.primary[500]
	    },
	    colorSecondary: {
	      color: theme.palette.text.secondary
	    },
	    colorAccent: {
	      color: theme.palette.secondary.A400
	    },
	    colorError: {
	      color: theme.palette.error.A400
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Type = __webpack_require__(174).oneOf(['display4', 'display3', 'display2', 'display1', 'headline', 'title', 'subheading', 'body2', 'body1', 'caption', 'button']);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  align: __webpack_require__(174).oneOf(['inherit', 'left', 'center', 'right', 'justify']),
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  color: __webpack_require__(174).oneOf(['inherit', 'primary', 'secondary', 'accent', 'error', 'default']),
	  gutterBottom: __webpack_require__(174).bool,
	  headlineMapping: __webpack_require__(174).shape({}),
	  noWrap: __webpack_require__(174).bool,
	  paragraph: __webpack_require__(174).bool,
	  type: __webpack_require__(174).oneOf(['display4', 'display3', 'display2', 'display1', 'headline', 'title', 'subheading', 'body2', 'body1', 'caption', 'button'])
	};


	function Typography(props) {
	  var _classNames;

	  var align = props.align,
	      classes = props.classes,
	      classNameProp = props.className,
	      componentProp = props.component,
	      color = props.color,
	      gutterBottom = props.gutterBottom,
	      headlineMapping = props.headlineMapping,
	      noWrap = props.noWrap,
	      paragraph = props.paragraph,
	      type = props.type,
	      other = (0, _objectWithoutProperties3.default)(props, ['align', 'classes', 'className', 'component', 'color', 'gutterBottom', 'headlineMapping', 'noWrap', 'paragraph', 'type']);


	  var className = (0, _classnames2.default)(classes.root, classes[type], (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.noWrap, noWrap), (0, _defineProperty3.default)(_classNames, classes.gutterBottom, gutterBottom), (0, _defineProperty3.default)(_classNames, classes.paragraph, paragraph), (0, _defineProperty3.default)(_classNames, classes['align' + (0, _helpers.capitalizeFirstLetter)(align)], align !== 'inherit'), _classNames), classNameProp);

	  var Component = componentProp || (paragraph ? 'p' : headlineMapping[type]) || 'span';

	  return _react2.default.createElement(Component, (0, _extends3.default)({ className: className }, other));
	}

	Typography.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  headlineMapping: require('prop-types').shape({}).isRequired,
	  type: require('prop-types').oneOf(['display4', 'display3', 'display2', 'display1', 'headline', 'title', 'subheading', 'body2', 'body1', 'caption', 'button']).isRequired,
	  align: require('prop-types').oneOf(['inherit', 'left', 'center', 'right', 'justify']),
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'component', typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType)), (0, _defineProperty3.default)(_ref, 'color', require('prop-types').oneOf(['inherit', 'primary', 'secondary', 'accent', 'error', 'default'])), (0, _defineProperty3.default)(_ref, 'gutterBottom', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'headlineMapping', require('prop-types').shape({})), (0, _defineProperty3.default)(_ref, 'noWrap', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'paragraph', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'type', require('prop-types').oneOf(['display4', 'display3', 'display2', 'display1', 'headline', 'title', 'subheading', 'body2', 'body1', 'caption', 'button'])), _ref) : {};
	Typography.defaultProps = {
	  align: 'inherit',
	  color: 'default',
	  gutterBottom: false,
	  headlineMapping: {
	    display4: 'h1',
	    display3: 'h1',
	    display2: 'h1',
	    display1: 'h1',
	    headline: 'h1',
	    title: 'h2',
	    subheading: 'h3',
	    body2: 'aside',
	    body1: 'p'
	  },
	  noWrap: false,
	  paragraph: false,
	  type: 'body1'
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTypography' })(Typography);

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  var spacing = theme.spacing.unit * 3;
	  return {
	    root: {
	      flex: '1 1 auto',
	      overflowY: 'auto',
	      padding: '0 ' + spacing + 'px ' + spacing + 'px ' + spacing + 'px',
	      '&:first-child': {
	        paddingTop: spacing
	      }
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string
	};


	function DialogContent(props) {
	  var classes = props.classes,
	      children = props.children,
	      className = props.className,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'children', 'className']);


	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
	    children
	  );
	}

	DialogContent.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), _ref) : {};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogContent' })(DialogContent);

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: (0, _extends3.default)({}, theme.typography.subheading, {
	      color: theme.palette.text.secondary,
	      margin: 0
	    })
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string
	};


	function DialogContentText(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


	  return _react2.default.createElement(
	    'p',
	    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
	    children
	  );
	}

	DialogContentText.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), _ref) : {};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogContentText' })(DialogContentText);

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _wrapDisplayName = __webpack_require__(447);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	var _withWidth = __webpack_require__(615);

	var _withWidth2 = _interopRequireDefault(_withWidth);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_HigherOrderComponent = __webpack_require__(521).babelPluginFlowReactPropTypes_proptype_HigherOrderComponent || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Breakpoint = __webpack_require__(501).babelPluginFlowReactPropTypes_proptype_Breakpoint || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_InjectedProps = {
	  fullScreen: __webpack_require__(174).bool.isRequired
	};


	/**
	 * Dialog will responsively be full screen *at or below* the given breakpoint
	 * (defaults to 'sm' for mobile devices).
	 * Notice that this Higher-order Component is incompatible with server side rendering.
	 */
	var withResponsiveFullScreen = function withResponsiveFullScreen() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { breakpoint: 'sm' };
	  return function (Component) {
	    var breakpoint = options.breakpoint;


	    function ResponsiveFullScreen(props) {
	      return _react2.default.createElement(Component, (0, _extends3.default)({ fullScreen: (0, _withWidth.isWidthDown)(breakpoint, props.width) }, props));
	    }

	    ResponsiveFullScreen.propTypes =  false ? {
	      width: require('prop-types').string.isRequired
	    } : {};
	    if (false) {
	      ResponsiveFullScreen.displayName = (0, _wrapDisplayName2.default)(Component, 'withResponsiveFullScreen');
	    }

	    return (0, _withWidth2.default)()(ResponsiveFullScreen);
	  };
	};

	exports.default = withResponsiveFullScreen;

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isWidthDown = exports.isWidthUp = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactEventListener = __webpack_require__(616);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _debounce = __webpack_require__(619);

	var _debounce2 = _interopRequireDefault(_debounce);

	var _wrapDisplayName = __webpack_require__(447);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	var _withTheme = __webpack_require__(546);

	var _withTheme2 = _interopRequireDefault(_withTheme);

	var _createBreakpoints = __webpack_require__(501);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_HigherOrderComponent = __webpack_require__(521).babelPluginFlowReactPropTypes_proptype_HigherOrderComponent || __webpack_require__(174).any; //  weak

	// flow sanity check (DO NOT DELETE) https://flow.org/try/#0JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4AoUSWOGATzCTgG84BhXSAOyS5gBUGTAL5xsuAkXQwy5OQHp5cALSq16jZuVwdccorgB3YDAAW-U0hBMAEgHk25JAA9qWAK5cMwCFyMnzS2sAHgAFHDAAZwAuFmEAPgAKcl12Tl9eGFiOcAy+QUZg1jMrJFi7ACMAKyQMOFEAMjhwiCj4gBpyAEps9J58oTCIyPiWOR00ABsUSMi4AHUAi1K4FxheABM55GkAOhzuTKHWyPaWWiCyuEqauoSx1KIuDaQoRK6H1LgiGHcoP2CBzy8GYuzBZmAkV2YGGohK1gAvMwIVDIjAUOtdvCkKJ5PEKKlhAT6ilvkhfv8FktLuRhAolFpGUy1PolMYzMtrHAAKqRFAAcyQ5CmMzmAEFVs51s9tsQYPs+kdipdytVavBGiwULEuO4QBVXmcKjq9QaoPdmHS0L40XBOUgNkD+vAEf4OZdEmKuhQDPMmBtfPh4DwHbQIHAwKK4MA-AADbGx1YAN14Fwg7n5pjgsYAsnQnZlE0QAI7uYBEOYmXbkYL2x2KvhwFBIgCMogqSIATLj4vSVMyB6lWW7TIsNmY4PZHC43LQhHAAEJSADWkBjLoIzki+DgAB8CJEQDv9-gQBtjwRJvyL-hnJNZOR6IwqePTC0onBXcxSTGTMAUJMY5mAA-LES6oKuEDrp0OjGK+oGLiua58J0dJOK40AeF4MA+H47KjsAr7vJ8mCeN4virFwpgoF4SDHFEsRAW+wxJKSqQFnwvS5M6BR0cwcFmGBSFQShcBgrs76RAkMFwD0aTcZkvH0SMYxsXAIqzFSZhMZK0pbIgcoKgpfDKaM35fGSzyvMR5kWepNogr+OEAUxZwCaYoiuii0LDGpjzkn8AIcSC4neTCJyiO5SL4Ie+A9sShIJSSak-IFWkEa+xJEuMZIUn4vDUbRFBoQYA5leow7uHygrCtMmkLrpmyynswVFO5QkQchMBnNqcC6vqhrGn1pqvBapJPC8bwfLZEwOSw7meRckI+ScKUBZSwQbMASZwHipJ0lac1MQ6wWfiOTHvIkC7esOfpwAGXBBn1SChjA4aRppMbZu5iZICmfhmOmmbZnmwVFkgpblkglbyjWx31sZ8DNswbZwB2zDdrt+JAA


	/**
	 * By default, returns true if screen width is the same or greater than the given breakpoint.
	 *
	 * @param screenWidth
	 * @param breakpoint
	 * @param inclusive - defaults to true
	 */
	var babelPluginFlowReactPropTypes_proptype_Breakpoint = __webpack_require__(501).babelPluginFlowReactPropTypes_proptype_Breakpoint || __webpack_require__(174).any;

	var isWidthUp = exports.isWidthUp = function isWidthUp(breakpoint, screenWidth) {
	  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

	  if (inclusive) {
	    return _createBreakpoints.keys.indexOf(breakpoint) <= _createBreakpoints.keys.indexOf(screenWidth);
	  }
	  return _createBreakpoints.keys.indexOf(breakpoint) < _createBreakpoints.keys.indexOf(screenWidth);
	};

	/**
	 * By default, returns true if screen width is the same or less than the given breakpoint.
	 *
	 * @param screenWidth
	 * @param breakpoint
	 * @param inclusive - defaults to true
	 */
	var isWidthDown = exports.isWidthDown = function isWidthDown(breakpoint, screenWidth) {
	  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

	  if (inclusive) {
	    return _createBreakpoints.keys.indexOf(screenWidth) <= _createBreakpoints.keys.indexOf(breakpoint);
	  }
	  return _createBreakpoints.keys.indexOf(screenWidth) < _createBreakpoints.keys.indexOf(breakpoint);
	};

	// optional props introduced by this HOC
	var babelPluginFlowReactPropTypes_proptype_HOCProps = {
	  initialWidth: typeof babelPluginFlowReactPropTypes_proptype_Breakpoint === 'function' ? babelPluginFlowReactPropTypes_proptype_Breakpoint : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Breakpoint),
	  width: typeof babelPluginFlowReactPropTypes_proptype_Breakpoint === 'function' ? babelPluginFlowReactPropTypes_proptype_Breakpoint : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Breakpoint)
	};
	var babelPluginFlowReactPropTypes_proptype_InjectedProps = {
	  width: typeof babelPluginFlowReactPropTypes_proptype_Breakpoint === 'function' ? babelPluginFlowReactPropTypes_proptype_Breakpoint.isRequired ? babelPluginFlowReactPropTypes_proptype_Breakpoint.isRequired : babelPluginFlowReactPropTypes_proptype_Breakpoint : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Breakpoint).isRequired
	};


	var withWidth = function withWidth() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  return function (Component) {
	    var _options$resizeInterv = options.resizeInterval,
	        resizeInterval = _options$resizeInterv === undefined ? 166 : _options$resizeInterv;

	    // `theme` is injected below by withTheme

	    var Width = function (_React$Component) {
	      (0, _inherits3.default)(Width, _React$Component);

	      function Width() {
	        var _ref;

	        var _temp, _this, _ret;

	        (0, _classCallCheck3.default)(this, Width);

	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }

	        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Width.__proto__ || (0, _getPrototypeOf2.default)(Width)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	          width: undefined
	        }, _this.handleResize = (0, _debounce2.default)(function () {
	          _this.updateWidth(window.innerWidth);
	        }, resizeInterval), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	      }

	      (0, _createClass3.default)(Width, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	          this.updateWidth(window.innerWidth);
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          this.handleResize.cancel();
	        }
	      }, {
	        key: 'updateWidth',
	        value: function updateWidth(innerWidth) {
	          if (this.props.theme) {
	            var breakpoints = this.props.theme.breakpoints;
	            var _width = null;

	            /**
	             * Start with the slowest value as low end devices often have a small screen.
	             *
	             * innerWidth |0      xs      sm      md      lg      xl
	             *            |-------|-------|-------|-------|-------|------>
	             * width      |  xs   |  xs   |  sm   |  md   |  lg   |  xl
	             */
	            var index = 1;
	            while (_width === null && index < _createBreakpoints.keys.length) {
	              var currentWidth = _createBreakpoints.keys[index];

	              // @media are inclusive, so reproduce the behavior here.
	              if (innerWidth < breakpoints.values[currentWidth]) {
	                _width = _createBreakpoints.keys[index - 1];
	                break;
	              }

	              index += 1;
	            }

	            _width = _width || 'xl';

	            if (_width !== this.state.width) {
	              this.setState({
	                width: _width
	              });
	            }
	          }
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var _props = this.props,
	              initialWidth = _props.initialWidth,
	              theme = _props.theme,
	              width = _props.width,
	              other = (0, _objectWithoutProperties3.default)(_props, ['initialWidth', 'theme', 'width']);

	          var props = (0, _extends3.default)({
	            width: width || this.state.width || initialWidth
	          }, other);

	          /**
	           * When rendering the component on the server,
	           * we have no idea about the client browser screen width.
	           * In order to prevent blinks and help the reconciliation of the React tree
	           * we are not rendering the child component.
	           *
	           * An alternative is to use the `initialWidth` property.
	           */
	          if (props.width === undefined) {
	            return null;
	          }

	          return _react2.default.createElement(
	            _reactEventListener2.default,
	            { target: 'window', onResize: this.handleResize },
	            _react2.default.createElement(Component, props)
	          );
	        }
	      }]);
	      return Width;
	    }(_react2.default.Component);

	    if (false) {
	      Width.displayName = (0, _wrapDisplayName2.default)(Component, 'withWidth');
	    }

	    return (0, _withTheme2.default)()(Width);
	  };
	};

	exports.default = withWidth;

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _typeof2 = __webpack_require__(372);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _assign = __webpack_require__(337);

	var _assign2 = _interopRequireDefault(_assign);

	exports.withOptions = withOptions;

	var _react = __webpack_require__(3);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _shallowEqual = __webpack_require__(119);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _supports = __webpack_require__(617);

	var supports = _interopRequireWildcard(_supports);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var defaultEventOptions = {
	  capture: false,
	  passive: false
	};
	/* eslint-disable prefer-spread */

	function mergeDefaultEventOptions(options) {
	  return (0, _assign2.default)({}, defaultEventOptions, options);
	}

	function getEventListenerArgs(eventName, callback, options) {
	  var args = [eventName, callback];
	  args.push(supports.passiveOption ? options : options.capture);
	  return args;
	}

	function on(target, eventName, callback, options) {
	  if (supports.addEventListener) {
	    target.addEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	  } else if (supports.attachEvent) {
	    // IE8+ Support
	    target.attachEvent('on' + eventName, function () {
	      callback.call(target);
	    });
	  }
	}

	function off(target, eventName, callback, options) {
	  if (supports.removeEventListener) {
	    target.removeEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	  } else if (supports.detachEvent) {
	    // IE8+ Support
	    target.detachEvent('on' + eventName, callback);
	  }
	}

	function forEachListener(props, iteratee) {
	  var children = props.children,
	      target = props.target,
	      eventProps = (0, _objectWithoutProperties3.default)(props, ['children', 'target']);


	  (0, _keys2.default)(eventProps).forEach(function (name) {
	    if (name.substring(0, 2) !== 'on') {
	      return;
	    }

	    var prop = eventProps[name];
	    var type = typeof prop === 'undefined' ? 'undefined' : (0, _typeof3.default)(prop);
	    var isObject = type === 'object';
	    var isFunction = type === 'function';

	    if (!isObject && !isFunction) {
	      return;
	    }

	    var capture = name.substr(-7).toLowerCase() === 'capture';
	    var eventName = name.substring(2).toLowerCase();
	    eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;

	    if (isObject) {
	      iteratee(eventName, prop.handler, prop.options);
	    } else {
	      iteratee(eventName, prop, mergeDefaultEventOptions({ capture: capture }));
	    }
	  });
	}

	function withOptions(handler, options) {
	   false ? (0, _warning2.default)(options, 'react-event-listener: Should be specified options in withOptions.') : void 0;

	  return {
	    handler: handler,
	    options: mergeDefaultEventOptions(options)
	  };
	}

	var EventListener = function (_Component) {
	  (0, _inherits3.default)(EventListener, _Component);

	  function EventListener() {
	    (0, _classCallCheck3.default)(this, EventListener);
	    return (0, _possibleConstructorReturn3.default)(this, (EventListener.__proto__ || (0, _getPrototypeOf2.default)(EventListener)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(EventListener, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.addListeners();
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps);
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate() {
	      this.removeListeners();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.addListeners();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.removeListeners();
	    }
	  }, {
	    key: 'addListeners',
	    value: function addListeners() {
	      this.applyListeners(on);
	    }
	  }, {
	    key: 'removeListeners',
	    value: function removeListeners() {
	      this.applyListeners(off);
	    }
	  }, {
	    key: 'applyListeners',
	    value: function applyListeners(onOrOff) {
	      var target = this.props.target;


	      if (target) {
	        var element = target;

	        if (typeof target === 'string') {
	          element = window[target];
	        }

	        forEachListener(this.props, onOrOff.bind(null, element));
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children || null;
	    }
	  }]);
	  return EventListener;
	}(_react.Component);

	EventListener.propTypes =  false ? {
	  /**
	   * You can provide a single child too.
	   */
	  children: _propTypes2.default.element,
	  /**
	   * The DOM target to listen to.
	   */
	  target: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired
	} : {};
	exports.default = EventListener;

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.passiveOption = exports.detachEvent = exports.attachEvent = exports.removeEventListener = exports.addEventListener = exports.canUseDOM = undefined;

	var _defineProperty = __webpack_require__(618);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Inspired by https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/ExecutionEnvironment.js
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	var addEventListener = exports.addEventListener = canUseDOM && 'addEventListener' in window;
	var removeEventListener = exports.removeEventListener = canUseDOM && 'removeEventListener' in window;

	// IE8+ Support
	var attachEvent = exports.attachEvent = canUseDOM && 'attachEvent' in window;
	var detachEvent = exports.detachEvent = canUseDOM && 'detachEvent' in window;

	// Passive options
	// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js
	var passiveOption = exports.passiveOption = function () {
	  var cache = null;

	  return function () {
	    if (cache !== null) {
	      return cache;
	    }

	    var supportsPassiveOption = false;

	    try {
	      window.addEventListener('test', null, (0, _defineProperty2.default)({}, 'passive', {
	        get: function get() {
	          supportsPassiveOption = true;
	        }
	      }));
	    } catch (e) {} // eslint-disable-line no-empty

	    cache = supportsPassiveOption;

	    return supportsPassiveOption;
	  }();
	}();

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _defineProperty = __webpack_require__(317);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	exports.default = defineProperty;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//  weak

	function defineProperty(o, p, attr) {
	  return (0, _defineProperty2.default)(o, p, attr);
	}

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(620),
	    now = __webpack_require__(621),
	    toNumber = __webpack_require__(622);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;

	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;

	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }

	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;

	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }

	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }

	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;

	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }

	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;

	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }

	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }

	  function trailingEdge(time) {
	    timerId = undefined;

	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }

	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }

	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }

	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);

	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;

	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}

	module.exports = debounce;


/***/ }),
/* 620 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(190);

	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};

	module.exports = now;


/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(620),
	    isSymbol = __webpack_require__(623);

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = toNumber;


/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(188),
	    isObjectLike = __webpack_require__(196);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Tabs = __webpack_require__(625);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Tabs).default;
	  }
	});

	var _Tab = __webpack_require__(637);

	Object.defineProperty(exports, 'Tab', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Tab).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _reactEventListener = __webpack_require__(616);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _debounce = __webpack_require__(619);

	var _debounce2 = _interopRequireDefault(_debounce);

	var _reactScrollbarSize = __webpack_require__(626);

	var _reactScrollbarSize2 = _interopRequireDefault(_reactScrollbarSize);

	var _normalizeScrollLeft = __webpack_require__(629);

	var _scroll = __webpack_require__(630);

	var _scroll2 = _interopRequireDefault(_scroll);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _TabIndicator = __webpack_require__(633);

	var _TabIndicator2 = _interopRequireDefault(_TabIndicator);

	var _TabScrollButton = __webpack_require__(634);

	var _TabScrollButton2 = _interopRequireDefault(_TabScrollButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_ComponentType = __webpack_require__(174).func;

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_IndicatorStyle = __webpack_require__(633).babelPluginFlowReactPropTypes_proptype_IndicatorStyle || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      overflow: 'hidden',
	      minHeight: 48,
	      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.
	    },
	    flexContainer: {
	      display: 'flex'
	    },
	    scrollingContainer: {
	      position: 'relative',
	      display: 'inline-block',
	      flex: '1 1 auto',
	      whiteSpace: 'nowrap'
	    },
	    fixed: {
	      overflowX: 'hidden',
	      width: '100%'
	    },
	    scrollable: {
	      overflowX: 'scroll'
	    },
	    centered: {
	      justifyContent: 'center'
	    },
	    buttonAuto: (0, _defineProperty3.default)({}, theme.breakpoints.down('sm'), {
	      display: 'none'
	    })
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  buttonClassName: __webpack_require__(174).string,
	  centered: __webpack_require__(174).bool,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  fullWidth: __webpack_require__(174).bool,
	  indicatorClassName: __webpack_require__(174).string,
	  indicatorColor: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['accent']), __webpack_require__(174).oneOf(['primary']), __webpack_require__(174).string]),
	  onChange: __webpack_require__(174).func.isRequired,
	  scrollable: __webpack_require__(174).bool,
	  scrollButtons: __webpack_require__(174).oneOf(['auto', 'on', 'off']),
	  TabScrollButton: typeof babelPluginFlowReactPropTypes_proptype_ComponentType === 'function' ? babelPluginFlowReactPropTypes_proptype_ComponentType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ComponentType),
	  textColor: __webpack_require__(174).oneOf(['accent', 'primary', 'inherit']),
	  theme: __webpack_require__(174).object,
	  value: __webpack_require__(174).any.isRequired
	};
	var babelPluginFlowReactPropTypes_proptype_TabsMeta = {
	  clientWidth: __webpack_require__(174).number.isRequired,
	  scrollLeft: __webpack_require__(174).number.isRequired,
	  scrollLeftNormalized: __webpack_require__(174).number.isRequired,
	  scrollWidth: __webpack_require__(174).number.isRequired,
	  left: __webpack_require__(174).number.isRequired,
	  right: __webpack_require__(174).number.isRequired
	};

	/**
	 * Notice that this Component is incompatible with server side rendering.
	 */
	var Tabs = function (_React$Component) {
	  (0, _inherits3.default)(Tabs, _React$Component);

	  function Tabs() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Tabs);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Tabs.__proto__ || (0, _getPrototypeOf2.default)(Tabs)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      indicatorStyle: {
	        left: 0,
	        width: 0
	      },
	      scrollerStyle: {
	        marginBottom: 0
	      },
	      showLeftScroll: false,
	      showRightScroll: false,
	      mounted: false
	    }, _this.tabs = undefined, _this.valueToIndex = {}, _this.handleResize = (0, _debounce2.default)(function () {
	      _this.updateIndicatorState(_this.props);
	      _this.updateScrollButtonState();
	    }, 166), _this.handleLeftScrollClick = function () {
	      if (_this.tabs) {
	        _this.moveTabsScroll(-_this.tabs.clientWidth);
	      }
	    }, _this.handleRightScrollClick = function () {
	      if (_this.tabs) {
	        _this.moveTabsScroll(_this.tabs.clientWidth);
	      }
	    }, _this.handleScrollbarSizeChange = function (_ref2) {
	      var scrollbarHeight = _ref2.scrollbarHeight;

	      _this.setState({
	        scrollerStyle: {
	          marginBottom: -scrollbarHeight
	        }
	      });
	    }, _this.handleTabsScroll = (0, _debounce2.default)(function () {
	      _this.updateScrollButtonState();
	    }, 166), _this.getConditionalElements = function () {
	      var _this$props = _this.props,
	          classes = _this$props.classes,
	          buttonClassName = _this$props.buttonClassName,
	          scrollable = _this$props.scrollable,
	          scrollButtons = _this$props.scrollButtons,
	          TabScrollButtonProp = _this$props.TabScrollButton,
	          theme = _this$props.theme;

	      var conditionalElements = {};
	      conditionalElements.scrollbarSizeListener = scrollable ? _react2.default.createElement(_reactScrollbarSize2.default, {
	        onLoad: _this.handleScrollbarSizeChange,
	        onChange: _this.handleScrollbarSizeChange
	      }) : null;

	      var showScrollButtons = scrollable && (scrollButtons === 'auto' || scrollButtons === 'on');

	      conditionalElements.scrollButtonLeft = showScrollButtons ? _react2.default.createElement(TabScrollButtonProp, {
	        direction: theme.direction === 'rtl' ? 'right' : 'left',
	        onClick: _this.handleLeftScrollClick,
	        visible: _this.state.showLeftScroll,
	        className: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.buttonAuto, scrollButtons === 'auto'), buttonClassName)
	      }) : null;

	      conditionalElements.scrollButtonRight = showScrollButtons ? _react2.default.createElement(TabScrollButtonProp, {
	        direction: theme.direction === 'rtl' ? 'left' : 'right',
	        onClick: _this.handleRightScrollClick,
	        visible: _this.state.showRightScroll,
	        className: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.buttonAuto, scrollButtons === 'auto'), buttonClassName)
	      }) : null;

	      return conditionalElements;
	    }, _this.getTabsMeta = function (value, direction) {
	      var tabsMeta = void 0;
	      if (_this.tabs) {
	        var rect = _this.tabs.getBoundingClientRect();
	        // create a new object with ClientRect class props + scrollLeft
	        tabsMeta = {
	          clientWidth: _this.tabs ? _this.tabs.clientWidth : 0,
	          scrollLeft: _this.tabs ? _this.tabs.scrollLeft : 0,
	          scrollLeftNormalized: _this.tabs ? (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabs, direction) : 0,
	          scrollWidth: _this.tabs ? _this.tabs.scrollWidth : 0,
	          left: rect.left,
	          right: rect.right
	        };
	      }

	      var tabMeta = void 0;
	      if (_this.tabs && value !== false) {
	        var _children = _this.tabs.children[0].children;

	        if (_children.length > 0) {
	          var tab = _children[_this.valueToIndex[value]];
	           false ? (0, _warning2.default)(tab, 'Material-UI: the value provided `' + value + '` is invalid') : void 0;
	          tabMeta = tab ? tab.getBoundingClientRect() : null;
	        }
	      }
	      return { tabsMeta: tabsMeta, tabMeta: tabMeta };
	    }, _this.moveTabsScroll = function (delta) {
	      var theme = _this.props.theme;


	      if (_this.tabs) {
	        var multiplier = theme.direction === 'rtl' ? -1 : 1;
	        var nextScrollLeft = _this.tabs.scrollLeft + delta * multiplier;
	        // Fix for Edge
	        var invert = theme.direction === 'rtl' && (0, _normalizeScrollLeft.detectScrollType)() === 'reverse' ? -1 : 1;
	        _scroll2.default.left(_this.tabs, invert * nextScrollLeft);
	      }
	    }, _this.scrollSelectedIntoView = function () {
	      var _this$props2 = _this.props,
	          theme = _this$props2.theme,
	          value = _this$props2.value;

	      var _this$getTabsMeta = _this.getTabsMeta(value, theme.direction),
	          tabsMeta = _this$getTabsMeta.tabsMeta,
	          tabMeta = _this$getTabsMeta.tabMeta;

	      if (!tabMeta || !tabsMeta) {
	        return;
	      }

	      if (tabMeta.left < tabsMeta.left) {
	        // left side of button is out of view
	        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);
	        _scroll2.default.left(_this.tabs, nextScrollLeft);
	      } else if (tabMeta.right > tabsMeta.right) {
	        // right side of button is out of view
	        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);
	        _scroll2.default.left(_this.tabs, _nextScrollLeft);
	      }
	    }, _this.updateScrollButtonState = function () {
	      var _this$props3 = _this.props,
	          scrollable = _this$props3.scrollable,
	          scrollButtons = _this$props3.scrollButtons,
	          theme = _this$props3.theme;


	      if (_this.tabs && scrollable && scrollButtons !== 'off') {
	        var _this$tabs = _this.tabs,
	            _scrollWidth = _this$tabs.scrollWidth,
	            _clientWidth = _this$tabs.clientWidth;

	        var _scrollLeft = (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabs, theme.direction);

	        var _showLeftScroll = theme.direction === 'rtl' ? _scrollWidth > _clientWidth + _scrollLeft : _scrollLeft > 0;

	        var _showRightScroll = theme.direction === 'rtl' ? _scrollLeft > 0 : _scrollWidth > _clientWidth + _scrollLeft;

	        if (_showLeftScroll !== _this.state.showLeftScroll || _showRightScroll !== _this.state.showRightScroll) {
	          _this.setState({ showLeftScroll: _showLeftScroll, showRightScroll: _showRightScroll });
	        }
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Tabs, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // eslint-disable-next-line react/no-did-mount-set-state
	      this.setState({ mounted: true });
	      this.updateIndicatorState(this.props);
	      this.updateScrollButtonState();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      this.updateScrollButtonState();
	      if (this.state.indicatorStyle !== prevState.indicatorStyle) {
	        this.scrollSelectedIntoView();
	      } else {
	        this.updateIndicatorState(this.props);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.handleResize.cancel();
	      this.handleTabsScroll.cancel();
	    }
	  }, {
	    key: 'updateIndicatorState',
	    value: function updateIndicatorState(props) {
	      var theme = props.theme,
	          value = props.value;

	      var _getTabsMeta = this.getTabsMeta(value, theme.direction),
	          tabsMeta = _getTabsMeta.tabsMeta,
	          tabMeta = _getTabsMeta.tabMeta;

	      var left = 0;

	      if (tabMeta && tabsMeta) {
	        var correction = theme.direction === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
	        left = tabMeta.left - tabsMeta.left + correction;
	      }

	      var indicatorStyle = {
	        left: left,
	        // May be wrong until the font is loaded.
	        width: tabMeta ? tabMeta.width : 0
	      };

	      if (indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) {
	        this.setState({ indicatorStyle: indicatorStyle });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames3,
	          _this2 = this;

	      var _props = this.props,
	          buttonClassName = _props.buttonClassName,
	          centered = _props.centered,
	          classes = _props.classes,
	          childrenProp = _props.children,
	          classNameProp = _props.className,
	          fullWidth = _props.fullWidth,
	          indicatorClassName = _props.indicatorClassName,
	          indicatorColor = _props.indicatorColor,
	          onChange = _props.onChange,
	          scrollable = _props.scrollable,
	          scrollButtons = _props.scrollButtons,
	          TabScrollButtonProp = _props.TabScrollButton,
	          textColor = _props.textColor,
	          theme = _props.theme,
	          value = _props.value,
	          other = (0, _objectWithoutProperties3.default)(_props, ['buttonClassName', 'centered', 'classes', 'children', 'className', 'fullWidth', 'indicatorClassName', 'indicatorColor', 'onChange', 'scrollable', 'scrollButtons', 'TabScrollButton', 'textColor', 'theme', 'value']);


	      var className = (0, _classnames2.default)(classes.root, classNameProp);
	      var scrollerClassName = (0, _classnames2.default)(classes.scrollingContainer, (_classNames3 = {}, (0, _defineProperty3.default)(_classNames3, classes.fixed, !scrollable), (0, _defineProperty3.default)(_classNames3, classes.scrollable, scrollable), _classNames3));
	      var tabItemContainerClassName = (0, _classnames2.default)(classes.flexContainer, (0, _defineProperty3.default)({}, classes.centered, centered && !scrollable));

	      var indicator = _react2.default.createElement(_TabIndicator2.default, {
	        style: this.state.indicatorStyle,
	        className: indicatorClassName,
	        color: indicatorColor
	      });

	      this.valueToIndex = {};
	      var childIndex = 0;
	      var children = _react2.default.Children.map(childrenProp, function (child) {
	        if (!_react2.default.isValidElement(child)) {
	          return null;
	        }

	        var childValue = child.props.value || childIndex;
	        _this2.valueToIndex[childValue] = childIndex;
	        var selected = childValue === value;

	        childIndex += 1;
	        return _react2.default.cloneElement(child, {
	          fullWidth: fullWidth,
	          indicator: selected && !_this2.state.mounted && indicator,
	          selected: selected,
	          onChange: onChange,
	          textColor: textColor,
	          value: childValue
	        });
	      });

	      var conditionalElements = this.getConditionalElements();

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({ className: className }, other),
	        _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }),
	        conditionalElements.scrollbarSizeListener,
	        _react2.default.createElement(
	          'div',
	          { className: classes.flexContainer },
	          conditionalElements.scrollButtonLeft,
	          _react2.default.createElement(
	            'div',
	            {
	              className: scrollerClassName,
	              style: this.state.scrollerStyle,
	              ref: function ref(node) {
	                _this2.tabs = node;
	              },
	              role: 'tablist',
	              onScroll: this.handleTabsScroll
	            },
	            _react2.default.createElement(
	              'div',
	              { className: tabItemContainerClassName },
	              children
	            ),
	            this.state.mounted && indicator
	          ),
	          conditionalElements.scrollButtonRight
	        )
	      );
	    }
	  }]);
	  return Tabs;
	}(_react2.default.Component);

	Tabs.defaultProps = {
	  centered: false,
	  fullWidth: false,
	  indicatorColor: 'accent',
	  scrollable: false,
	  scrollButtons: 'auto',
	  TabScrollButton: _TabScrollButton2.default,
	  textColor: 'inherit'
	};
	exports.default = (0, _withStyles2.default)(styles, { withTheme: true, name: 'MuiTabs' })(Tabs);

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ScrollbarSize = __webpack_require__(627);

	var _ScrollbarSize2 = _interopRequireDefault(_ScrollbarSize);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ScrollbarSize2.default;

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactEventListener = __webpack_require__(616);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _throttle = __webpack_require__(628);

	var _throttle2 = _interopRequireDefault(_throttle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var styles = {
		width: '100px',
		height: '100px',
		position: 'absolute',
		top: '-100000px',
		overflow: 'scroll',
		msOverflowStyle: 'scrollbar'
	};

	var ScrollbarSize = function (_Component) {
		(0, _inherits3.default)(ScrollbarSize, _Component);

		function ScrollbarSize() {
			var _ref;

			var _temp, _this, _ret;

			(0, _classCallCheck3.default)(this, ScrollbarSize);

			for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
				args[_key] = arguments[_key];
			}

			return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ScrollbarSize.__proto__ || (0, _getPrototypeOf2.default)(ScrollbarSize)).call.apply(_ref, [this].concat(args))), _this), _this.setMeasurements = function () {
				_this.scrollbarHeight = _this.node.offsetHeight - _this.node.clientHeight;
				_this.scrollbarWidth = _this.node.offsetWidth - _this.node.clientWidth;
			}, _this.handleResize = (0, _throttle2.default)(function () {
				var onChange = _this.props.onChange;


				var prevHeight = _this.scrollbarHeight;
				var prevWidth = _this.scrollbarWidth;
				_this.setMeasurements();
				if (prevHeight !== _this.scrollbarHeight || prevWidth !== _this.scrollbarWidth) {
					onChange({ scrollbarHeight: _this.scrollbarHeight, scrollbarWidth: _this.scrollbarWidth });
				}
			}, 166), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		}

		(0, _createClass3.default)(ScrollbarSize, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				var onLoad = this.props.onLoad;


				if (onLoad) {
					this.setMeasurements();
					onLoad({ scrollbarHeight: this.scrollbarHeight, scrollbarWidth: this.scrollbarWidth });
				}
			}
		}, {
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				this.handleResize.cancel();
			}
		}, {
			key: 'render',
			// Corresponds to 10 frames at 60 Hz.

			value: function render() {
				var _this2 = this;

				var onChange = this.props.onChange;


				return _react2.default.createElement(
					'div',
					null,
					onChange ? _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }) : null,
					_react2.default.createElement('div', {
						style: styles,
						ref: function ref(node) {
							_this2.node = node;
						}
					})
				);
			}
		}]);
		return ScrollbarSize;
	}(_react.Component);

	ScrollbarSize.defaultProps = {
		onLoad: null,
		onChange: null
	};
	exports.default = ScrollbarSize;

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

	var debounce = __webpack_require__(619),
	    isObject = __webpack_require__(620);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a throttled function that only invokes `func` at most once per
	 * every `wait` milliseconds. The throttled function comes with a `cancel`
	 * method to cancel delayed `func` invocations and a `flush` method to
	 * immediately invoke them. Provide `options` to indicate whether `func`
	 * should be invoked on the leading and/or trailing edge of the `wait`
	 * timeout. The `func` is invoked with the last arguments provided to the
	 * throttled function. Subsequent calls to the throttled function return the
	 * result of the last `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the throttled function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.throttle` and `_.debounce`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to throttle.
	 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=true]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new throttled function.
	 * @example
	 *
	 * // Avoid excessively updating the position while scrolling.
	 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	 *
	 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	 * jQuery(element).on('click', throttled);
	 *
	 * // Cancel the trailing throttled invocation.
	 * jQuery(window).on('popstate', throttled.cancel);
	 */
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;

	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, {
	    'leading': leading,
	    'maxWait': wait,
	    'trailing': trailing
	  });
	}

	module.exports = throttle;


/***/ }),
/* 629 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js
	var inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	var cachedType;
	function _setScrollType(type) {
	    cachedType = type;
	}
	exports._setScrollType = _setScrollType;
	// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type
	function detectScrollType() {
	    if (cachedType) {
	        return cachedType;
	    }
	    if (!inDOM || !window.document.body) {
	        return 'indeterminate';
	    }
	    var dummy = window.document.createElement('div');
	    dummy.appendChild(document.createTextNode('ABCD'));
	    dummy.dir = 'rtl';
	    dummy.style.fontSize = '14px';
	    dummy.style.width = '4px';
	    dummy.style.height = '1px';
	    dummy.style.position = 'absolute';
	    dummy.style.top = '-1000px';
	    dummy.style.overflow = 'scroll';
	    document.body.appendChild(dummy);
	    cachedType = 'reverse';
	    if (dummy.scrollLeft > 0) {
	        cachedType = 'default';
	    }
	    else {
	        dummy.scrollLeft = 1;
	        if (dummy.scrollLeft === 0) {
	            cachedType = 'negative';
	        }
	    }
	    document.body.removeChild(dummy);
	    return cachedType;
	}
	exports.detectScrollType = detectScrollType;
	// Based on https://stackoverflow.com/a/24394376
	function getNormalizedScrollLeft(element, direction) {
	    var scrollLeft = element.scrollLeft;
	    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior
	    if (direction !== 'rtl') {
	        return scrollLeft;
	    }
	    var type = detectScrollType();
	    if (type === 'indeterminate') {
	        return Number.NaN;
	    }
	    switch (type) {
	        case 'negative':
	            return element.scrollWidth - element.clientWidth + scrollLeft;
	        case 'reverse':
	            return element.scrollWidth - element.clientWidth - scrollLeft;
	    }
	    return scrollLeft;
	}
	exports.getNormalizedScrollLeft = getNormalizedScrollLeft;
	function setNormalizedScrollLeft(element, scrollLeft, direction) {
	    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior
	    if (direction !== 'rtl') {
	        element.scrollLeft = scrollLeft;
	        return;
	    }
	    var type = detectScrollType();
	    if (type === 'indeterminate') {
	        return;
	    }
	    switch (type) {
	        case 'negative':
	            element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;
	            break;
	        case 'reverse':
	            element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;
	            break;
	        default:
	            element.scrollLeft = scrollLeft;
	            break;
	    }
	}
	exports.setNormalizedScrollLeft = setNormalizedScrollLeft;


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	var raf = __webpack_require__(631)

	function scroll (prop, element, to, options, callback) {
	  var start = +new Date
	  var from = element[prop]
	  var cancelled = false

	  var ease = inOutSine
	  var duration = 350

	  if (typeof options === 'function') {
	    callback = options
	  }
	  else {
	    options = options || {}
	    ease = options.ease || ease
	    duration = options.duration || duration
	    callback = callback || function () {}
	  }

	  if (from === to) {
	    return callback(
	      new Error('Element already at target scroll position'),
	      element[prop]
	    )
	  }

	  function cancel () {
	    cancelled = true
	  }

	  function animate (timestamp) {
	    if (cancelled) {
	      return callback(
	        new Error('Scroll cancelled'),
	        element[prop]
	      )
	    }

	    var now = +new Date
	    var time = Math.min(1, ((now - start) / duration))
	    var eased = ease(time)

	    element[prop] = (eased * (to - from)) + from

	    time < 1 ? raf(animate) : raf(function () {
	      callback(null, element[prop])
	    })
	  }

	  raf(animate)

	  return cancel
	}

	function inOutSine (n) {
	  return .5 * (1 - Math.cos(Math.PI * n))
	}

	module.exports = {
	  top: function (element, to, options, callback) {
	    return scroll('scrollTop', element, to, options, callback)
	  },
	  left: function (element, to, options, callback) {
	    return scroll('scrollLeft', element, to, options, callback)
	  }
	}


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(632)

	/**
	 * `requestAnimationFrame()`
	 */

	var request = global.requestAnimationFrame
	  || global.webkitRequestAnimationFrame
	  || global.mozRequestAnimationFrame
	  || fallback

	var prev = +new Date
	function fallback (fn) {
	  var curr = +new Date
	  var ms = Math.max(0, 16 - (curr - prev))
	  var req = setTimeout(fn, ms)
	  return prev = curr, req
	}

	/**
	 * `cancelAnimationFrame()`
	 */

	var cancel = global.cancelAnimationFrame
	  || global.webkitCancelAnimationFrame
	  || global.mozCancelAnimationFrame
	  || clearTimeout

	if (Function.prototype.bind) {
	  request = request.bind(global)
	  cancel = cancel.bind(global)
	}

	exports = module.exports = request
	exports.cancel = cancel


/***/ }),
/* 632 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {var win;

	if (typeof window !== "undefined") {
	    win = window;
	} else if (typeof global !== "undefined") {
	    win = global;
	} else if (typeof self !== "undefined"){
	    win = self;
	} else {
	    win = {};
	}

	module.exports = win;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _ref; //  weak

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _helpers = __webpack_require__(568);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      position: 'absolute',
	      height: 2,
	      bottom: 0,
	      width: '100%',
	      transition: theme.transitions.create(),
	      willChange: 'left, width'
	    },
	    colorAccent: {
	      backgroundColor: theme.palette.secondary.A200
	    },
	    colorPrimary: {
	      backgroundColor: theme.palette.primary[500]
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_IndicatorStyle = {
	  left: __webpack_require__(174).number.isRequired,
	  width: __webpack_require__(174).number.isRequired
	};
	var babelPluginFlowReactPropTypes_proptype_ProvidedProps = {
	  classes: __webpack_require__(174).object.isRequired
	};
	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  color: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['accent']), __webpack_require__(174).oneOf(['primary']), __webpack_require__(174).string]).isRequired,
	  style: __webpack_require__(174).shape({
	    left: __webpack_require__(174).number.isRequired,
	    width: __webpack_require__(174).number.isRequired
	  }).isRequired
	};


	/**
	 * @ignore - internal component.
	 */
	function TabIndicator(props) {
	  var classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      styleProp = props.style;

	  var colorPredefined = ['primary', 'accent'].indexOf(color) !== -1;
	  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], colorPredefined), classNameProp);

	  var style = colorPredefined ? styleProp : (0, _extends3.default)({}, styleProp, {
	    backgroundColor: color
	  });

	  return _react2.default.createElement('div', { className: className, style: style });
	}

	TabIndicator.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'color', require('prop-types').oneOfType([require('prop-types').oneOf(['accent']), require('prop-types').oneOf(['primary']), require('prop-types').string]).isRequired), (0, _defineProperty3.default)(_ref, 'style', require('prop-types').shape({
	  left: require('prop-types').number.isRequired,
	  width: require('prop-types').number.isRequired
	}).isRequired), _ref) : {};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTabIndicator' })(TabIndicator);

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref3; //  weak

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _ButtonBase = __webpack_require__(522);

	var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

	var _KeyboardArrowLeft = __webpack_require__(635);

	var _KeyboardArrowLeft2 = _interopRequireDefault(_KeyboardArrowLeft);

	var _KeyboardArrowRight = __webpack_require__(636);

	var _KeyboardArrowRight2 = _interopRequireDefault(_KeyboardArrowRight);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      color: 'inherit',
	      flex: '0 0 ' + theme.spacing.unit * 7 + 'px'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  direction: __webpack_require__(174).oneOf(['left', 'right']).isRequired,
	  onClick: __webpack_require__(174).func,
	  visible: __webpack_require__(174).bool
	};

	var _ref = _react2.default.createElement(_KeyboardArrowLeft2.default, null);

	var _ref2 = _react2.default.createElement(_KeyboardArrowRight2.default, null);

	/**
	 * @ignore - internal component.
	 */
	function TabScrollButton(props) {
	  var classes = props.classes,
	      classNameProp = props.className,
	      direction = props.direction,
	      onClick = props.onClick,
	      visible = props.visible,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'direction', 'onClick', 'visible']);


	  var className = (0, _classnames2.default)(classes.root, classNameProp);

	  if (!visible) {
	    return _react2.default.createElement('div', { className: className });
	  }

	  return _react2.default.createElement(
	    _ButtonBase2.default,
	    (0, _extends3.default)({ className: className, onClick: onClick, tabIndex: -1 }, other),
	    direction === 'left' ? _ref : _ref2
	  );
	}

	TabScrollButton.propTypes =  false ? (_ref3 = {
	  classes: require('prop-types').object.isRequired
	}, (0, _defineProperty3.default)(_ref3, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref3, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref3, 'direction', require('prop-types').oneOf(['left', 'right']).isRequired), (0, _defineProperty3.default)(_ref3, 'onClick', require('prop-types').func), (0, _defineProperty3.default)(_ref3, 'visible', require('prop-types').bool), _ref3) : {};
	TabScrollButton.defaultProps = {
	  visible: true
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTabScrollButton' })(TabScrollButton);

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @ignore - internal component.
	 */
	var _ref = _react2.default.createElement('path', { d: 'M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z' });

	var KeyboardArrowLeft = function KeyboardArrowLeft(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _ref
	  );
	};
	KeyboardArrowLeft = (0, _pure2.default)(KeyboardArrowLeft);
	KeyboardArrowLeft.muiName = 'SvgIcon';

	exports.default = KeyboardArrowLeft;

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @ignore - internal component.
	 */
	var _ref = _react2.default.createElement('path', { d: 'M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z' });

	var KeyboardArrowRight = function KeyboardArrowRight(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _ref
	  );
	};
	KeyboardArrowRight = (0, _pure2.default)(KeyboardArrowRight);
	KeyboardArrowRight.muiName = 'SvgIcon';

	exports.default = KeyboardArrowRight;

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _keys = __webpack_require__(361);

	var _keys2 = _interopRequireDefault(_keys);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends3 = __webpack_require__(336);

	var _extends4 = _interopRequireDefault(_extends3);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _ButtonBase = __webpack_require__(522);

	var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

	var _helpers = __webpack_require__(568);

	var _Icon = __webpack_require__(579);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;
	// @inheritedComponent ButtonBase

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: (0, _extends4.default)({}, theme.typography.button, (0, _defineProperty3.default)({
	      maxWidth: 264,
	      position: 'relative',
	      minWidth: 72,
	      padding: 0,
	      height: 48,
	      flex: 'none',
	      overflow: 'hidden'
	    }, theme.breakpoints.up('md'), {
	      minWidth: 160
	    })),
	    rootLabelIcon: {
	      height: 72
	    },
	    rootAccent: {
	      color: theme.palette.text.secondary
	    },
	    rootAccentSelected: {
	      color: theme.palette.secondary.A200
	    },
	    rootAccentDisabled: {
	      color: theme.palette.text.disabled
	    },
	    rootPrimary: {
	      color: theme.palette.text.secondary
	    },
	    rootPrimarySelected: {
	      color: theme.palette.primary[500]
	    },
	    rootPrimaryDisabled: {
	      color: theme.palette.text.disabled
	    },
	    rootInherit: {
	      color: 'inherit',
	      opacity: 0.7
	    },
	    rootInheritSelected: {
	      opacity: 1
	    },
	    rootInheritDisabled: {
	      opacity: 0.4
	    },
	    fullWidth: {
	      flexGrow: 1
	    },
	    wrapper: {
	      display: 'inline-flex',
	      alignItems: 'center',
	      justifyContent: 'center',
	      width: '100%',
	      flexDirection: 'column'
	    },
	    labelContainer: (0, _defineProperty3.default)({
	      paddingTop: 6,
	      paddingBottom: 6,
	      paddingLeft: 12,
	      paddingRight: 12
	    }, theme.breakpoints.up('md'), {
	      paddingLeft: theme.spacing.unit * 3,
	      paddingRight: theme.spacing.unit * 3
	    }),
	    label: (0, _defineProperty3.default)({
	      fontSize: theme.typography.fontSize,
	      whiteSpace: 'normal'
	    }, theme.breakpoints.up('md'), {
	      fontSize: theme.typography.fontSize - 1
	    }),
	    labelWrapped: (0, _defineProperty3.default)({}, theme.breakpoints.down('md'), {
	      fontSize: theme.typography.fontSize - 2
	    })
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  disabled: __webpack_require__(174).bool,
	  fullWidth: __webpack_require__(174).bool,
	  icon: __webpack_require__(174).oneOfType([__webpack_require__(174).string, typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element)]),
	  indicator: __webpack_require__(174).oneOfType([__webpack_require__(174).string, typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element)]),
	  label: __webpack_require__(174).oneOfType([__webpack_require__(174).string, typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element)]),
	  onChange: __webpack_require__(174).func,
	  onClick: __webpack_require__(174).func,
	  selected: __webpack_require__(174).bool,
	  style: __webpack_require__(174).object,
	  textColor: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['accent']), __webpack_require__(174).oneOf(['primary']), __webpack_require__(174).oneOf(['inherit']), __webpack_require__(174).string]),
	  value: __webpack_require__(174).any
	};

	var Tab = function (_React$Component) {
	  (0, _inherits3.default)(Tab, _React$Component);

	  function Tab() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Tab);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Tab.__proto__ || (0, _getPrototypeOf2.default)(Tab)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      wrappedText: false
	    }, _this.handleChange = function (event) {
	      var _this$props = _this.props,
	          onChange = _this$props.onChange,
	          value = _this$props.value,
	          onClick = _this$props.onClick;


	      if (onChange) {
	        onChange(event, value);
	      }

	      if (onClick) {
	        onClick(event);
	      }
	    }, _this.label = undefined, _this.checkTextWrap = function () {
	      if (_this.label) {
	        var _wrappedText = _this.label.getClientRects().length > 1;
	        if (_this.state.wrappedText !== _wrappedText) {
	          _this.setState({ wrappedText: _wrappedText });
	        }
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Tab, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.checkTextWrap();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (this.state.wrappedText === prevState.wrappedText) {
	        /**
	         * At certain text and tab lengths, a larger font size may wrap to two lines while the smaller
	         * font size still only requires one line.  This check will prevent an infinite render loop
	         * fron occurring in that scenario.
	         */
	        this.checkTextWrap();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this,
	          _classNames2;

	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          disabled = _props.disabled,
	          fullWidth = _props.fullWidth,
	          iconProp = _props.icon,
	          indicator = _props.indicator,
	          labelProp = _props.label,
	          onChange = _props.onChange,
	          selected = _props.selected,
	          styleProp = _props.style,
	          textColor = _props.textColor,
	          value = _props.value,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'disabled', 'fullWidth', 'icon', 'indicator', 'label', 'onChange', 'selected', 'style', 'textColor', 'value']);


	      var icon = void 0;

	      if (iconProp !== undefined) {
	        icon = _react2.default.isValidElement(iconProp) ? iconProp : _react2.default.createElement(
	          _Icon2.default,
	          null,
	          iconProp
	        );
	      }

	      var label = void 0;

	      if (labelProp !== undefined) {
	        label = _react2.default.createElement(
	          'div',
	          { className: classes.labelContainer },
	          _react2.default.createElement(
	            'span',
	            {
	              className: (0, _classnames2.default)(classes.label, (0, _defineProperty3.default)({}, classes.labelWrapped, this.state.wrappedText)),
	              ref: function ref(node) {
	                _this2.label = node;
	              }
	            },
	            labelProp
	          )
	        );
	      }

	      var className = (0, _classnames2.default)(classes.root, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes['root' + (0, _helpers.capitalizeFirstLetter)(textColor)], true), (0, _defineProperty3.default)(_classNames2, classes['root' + (0, _helpers.capitalizeFirstLetter)(textColor) + 'Disabled'], disabled), (0, _defineProperty3.default)(_classNames2, classes['root' + (0, _helpers.capitalizeFirstLetter)(textColor) + 'Selected'], selected), (0, _defineProperty3.default)(_classNames2, classes.rootLabelIcon, icon && label), (0, _defineProperty3.default)(_classNames2, classes.fullWidth, fullWidth), _classNames2), classNameProp);

	      var style = {};

	      if (textColor !== 'accent' && textColor !== 'inherit') {
	        style.color = textColor;
	      }

	      style = (0, _keys2.default)(style).length > 0 ? (0, _extends4.default)({}, style, styleProp) : styleProp;

	      return _react2.default.createElement(
	        _ButtonBase2.default,
	        (0, _extends4.default)({
	          focusRipple: true,
	          className: className,
	          style: style,
	          role: 'tab',
	          'aria-selected': selected,
	          disabled: disabled
	        }, other, {
	          onClick: this.handleChange
	        }),
	        _react2.default.createElement(
	          'span',
	          { className: classes.wrapper },
	          icon,
	          label
	        ),
	        indicator
	      );
	    }
	  }]);
	  return Tab;
	}(_react2.default.Component);

	Tab.defaultProps = {
	  disabled: false
	};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTab' })(Tab);

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z' });

	var Settings = function Settings(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Settings = (0, _pure2.default)(Settings);
	Settings.muiName = 'SvgIcon';

	exports.default = Settings;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _socket = __webpack_require__(215);

	var _socket2 = _interopRequireDefault(_socket);

	var _actions = __webpack_require__(235);

	var _styles = __webpack_require__(542);

	var _AppBar = __webpack_require__(566);

	var _AppBar2 = _interopRequireDefault(_AppBar);

	var _Toolbar = __webpack_require__(571);

	var _Toolbar2 = _interopRequireDefault(_Toolbar);

	var _Typography = __webpack_require__(610);

	var _Typography2 = _interopRequireDefault(_Typography);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _IconButton = __webpack_require__(577);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _Menu = __webpack_require__(640);

	var _Menu2 = _interopRequireDefault(_Menu);

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _Table = __webpack_require__(641);

	var _Table2 = _interopRequireDefault(_Table);

	var _Paper = __webpack_require__(569);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _Checkbox = __webpack_require__(680);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _Tooltip = __webpack_require__(686);

	var _Tooltip2 = _interopRequireDefault(_Tooltip);

	var _Delete = __webpack_require__(694);

	var _Delete2 = _interopRequireDefault(_Delete);

	var _Search = __webpack_require__(695);

	var _Search2 = _interopRequireDefault(_Search);

	var _Stop = __webpack_require__(696);

	var _Stop2 = _interopRequireDefault(_Stop);

	var _Power = __webpack_require__(697);

	var _Power2 = _interopRequireDefault(_Power);

	var _Info = __webpack_require__(698);

	var _Info2 = _interopRequireDefault(_Info);

	var _Cached = __webpack_require__(699);

	var _Cached2 = _interopRequireDefault(_Cached);

	var _BatteryStd = __webpack_require__(700);

	var _BatteryStd2 = _interopRequireDefault(_BatteryStd);

	var _BluetoothConnected = __webpack_require__(701);

	var _BluetoothConnected2 = _interopRequireDefault(_BluetoothConnected);

	var _FlashOn = __webpack_require__(702);

	var _FlashOn2 = _interopRequireDefault(_FlashOn);

	var _AddBox = __webpack_require__(703);

	var _AddBox2 = _interopRequireDefault(_AddBox);

	var _Refresh = __webpack_require__(704);

	var _Refresh2 = _interopRequireDefault(_Refresh);

	var _Warning = __webpack_require__(705);

	var _Warning2 = _interopRequireDefault(_Warning);

	var _TextField = __webpack_require__(706);

	var _TextField2 = _interopRequireDefault(_TextField);

	var _MenuItem = __webpack_require__(672);

	var _MenuItem2 = _interopRequireDefault(_MenuItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var styles = {};

	var Devices = (_temp2 = _class = function (_Component) {
	  _inherits(Devices, _Component);

	  function Devices() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Devices);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Devices.__proto__ || Object.getPrototypeOf(Devices)).call.apply(_ref, [this].concat(args))), _this), _this.startScan = function () {
	      _socket2.default.emit('admin:devices:search:start', _this.props.adminToken);
	    }, _this.stopScan = function () {
	      _socket2.default.emit('admin:devices:search:stop', _this.props.adminToken);
	    }, _this.connect = function (device) {
	      return function () {
	        return _socket2.default.emit('admin:devices:connect', _this.props.adminToken, device.id);
	      };
	    }, _this.assignDevice = function (device) {
	      return function (event) {
	        return _socket2.default.emit('admin:devices:assign', _this.props.adminToken, device.id, event.target.value);
	      };
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Devices, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          _AppBar2.default,
	          { position: 'static' },
	          _react2.default.createElement(
	            _Toolbar2.default,
	            null,
	            !this.props.scanning && _react2.default.createElement(
	              _IconButton2.default,
	              { color: 'contrast', 'aria-label': 'Search for devices', onClick: this.startScan },
	              _react2.default.createElement(_Search2.default, null)
	            ),
	            this.props.scanning && _react2.default.createElement(
	              _IconButton2.default,
	              { color: 'contrast', 'aria-label': 'Stop searching', onClick: this.stopScan },
	              _react2.default.createElement(_Stop2.default, null)
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _Table2.default,
	          null,
	          _react2.default.createElement(
	            _Table.TableBody,
	            null,
	            this.props.devices.filter(function (device) {
	              console.info('device services', device.services);
	              if (!device.services.length) {
	                return false;
	              }

	              // power
	              if (!device.services.includes('1818')) {
	                return false;
	              }

	              // cadence
	              if (!device.services.includes('1816')) {
	                return false;
	              }

	              return true;
	            }).sort(function (a, b) {
	              return a.name - b.name;
	            }).map(function (device) {
	              var serviceIcons = {
	                '1818': _react2.default.createElement(_FlashOn2.default, { key: 'power' }),
	                '180f': _react2.default.createElement(_BatteryStd2.default, { key: 'battery' }),
	                '1816': _react2.default.createElement(_Cached2.default, { key: 'speed/cadence' }),
	                '180a': _react2.default.createElement(_Info2.default, { key: 'deviceinfo' })
	              };

	              var services = [];

	              device.services.forEach(function (id) {
	                if (serviceIcons[id]) {
	                  services.push(serviceIcons[id]);
	                } else {
	                  console.warn('Do not know what to do with', id);
	                }
	              });

	              if (!services.length) {
	                return null;
	              }

	              var statuses = [_react2.default.createElement(_Warning2.default, null), _react2.default.createElement(_AddBox2.default, { onClick: _this2.connect(device) }), _react2.default.createElement(_Refresh2.default, null), _react2.default.createElement(
	                _TextField2.default,
	                {
	                  id: 'assign-to',
	                  label: 'Assign to',
	                  margin: 'normal',
	                  className: _this2.props.classes.textField,
	                  onChange: _this2.assignDevice(device),
	                  value: device.player || 'none',
	                  select: true
	                },
	                _react2.default.createElement(
	                  _MenuItem2.default,
	                  { key: 'none', value: 'none' },
	                  'None'
	                ),
	                _react2.default.createElement(
	                  _MenuItem2.default,
	                  { key: 'a', value: 'A' },
	                  'Player A'
	                ),
	                _react2.default.createElement(
	                  _MenuItem2.default,
	                  { key: 'b', value: 'B' },
	                  'Player B'
	                )
	              )];

	              return _react2.default.createElement(
	                _Table.TableRow,
	                {
	                  key: device.id
	                },
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  { padding: 'none' },
	                  device.name
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  null,
	                  services
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  null,
	                  device.power === undefined ? '-' : device.power
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  null,
	                  device.cadence === undefined ? '-' : device.cadence
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  null,
	                  statuses[device.status]
	                )
	              );
	            })
	          )
	        )
	      );
	    }
	  }]);

	  return Devices;
	}(_react.Component), _class.propTypes = {
	  adminToken: _propTypes2.default.string.isRequired,
	  devices: _propTypes2.default.array.isRequired,
	  addDevice: _propTypes2.default.func.isRequired,
	  scanning: _propTypes2.default.bool.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var token = _ref2.admin.token,
	      devices = _ref2.devices.devices,
	      searching = _ref2.bluetooth.searching;
	  return {
	    adminToken: token,
	    devices: devices,
	    scanning: searching
	  };
	};

	var mapDispatchToProps = {
	  addDevice: _actions.addDevice
	};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _styles.withStyles)(styles)(Devices));

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' });

	var Menu = function Menu(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Menu = (0, _pure2.default)(Menu);
	Menu.muiName = 'SvgIcon';

	exports.default = Menu;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Table = __webpack_require__(642);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Table).default;
	  }
	});

	var _TableBody = __webpack_require__(643);

	Object.defineProperty(exports, 'TableBody', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableBody).default;
	  }
	});

	var _TableCell = __webpack_require__(644);

	Object.defineProperty(exports, 'TableCell', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableCell).default;
	  }
	});

	var _TableFooter = __webpack_require__(645);

	Object.defineProperty(exports, 'TableFooter', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableFooter).default;
	  }
	});

	var _TableHead = __webpack_require__(646);

	Object.defineProperty(exports, 'TableHead', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableHead).default;
	  }
	});

	var _TablePagination = __webpack_require__(647);

	Object.defineProperty(exports, 'TablePagination', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TablePagination).default;
	  }
	});

	var _TableRow = __webpack_require__(677);

	Object.defineProperty(exports, 'TableRow', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableRow).default;
	  }
	});

	var _TableSortLabel = __webpack_require__(678);

	Object.defineProperty(exports, 'TableSortLabel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableSortLabel).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      fontFamily: theme.typography.fontFamily,
	      width: '100%',
	      borderCollapse: 'collapse',
	      borderSpacing: 0,
	      overflow: 'hidden'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType)
	};

	var Table = function (_React$Component) {
	  (0, _inherits3.default)(Table, _React$Component);

	  function Table() {
	    (0, _classCallCheck3.default)(this, Table);
	    return (0, _possibleConstructorReturn3.default)(this, (Table.__proto__ || (0, _getPrototypeOf2.default)(Table)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(Table, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      // eslint-disable-line class-methods-use-this
	      return {
	        table: {}
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          children = _props.children,
	          ComponentProp = _props.component,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'children', 'component']);

	      var className = (0, _classnames2.default)(classes.root, classNameProp);

	      return _react2.default.createElement(
	        ComponentProp,
	        (0, _extends3.default)({ className: className }, other),
	        children
	      );
	    }
	  }]);
	  return Table;
	}(_react2.default.Component);

	Table.defaultProps = {
	  component: 'table'
	};


	Table.childContextTypes = {
	  table: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTable' })(Table);

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      fontSize: 13,
	      color: theme.palette.text.primary
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType)
	};

	var TableBody = function (_React$Component) {
	  (0, _inherits3.default)(TableBody, _React$Component);

	  function TableBody() {
	    (0, _classCallCheck3.default)(this, TableBody);
	    return (0, _possibleConstructorReturn3.default)(this, (TableBody.__proto__ || (0, _getPrototypeOf2.default)(TableBody)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(TableBody, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      // eslint-disable-line class-methods-use-this
	      return {
	        table: {
	          body: true
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          children = _props.children,
	          ComponentProp = _props.component,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'children', 'component']);

	      var className = (0, _classnames2.default)(classes.root, classNameProp);

	      return _react2.default.createElement(
	        ComponentProp,
	        (0, _extends3.default)({ className: className }, other),
	        children
	      );
	    }
	  }]);
	  return TableBody;
	}(_react2.default.Component);

	TableBody.defaultProps = {
	  component: 'tbody'
	};


	TableBody.childContextTypes = {
	  table: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableBody' })(TableBody);

/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _helpers = __webpack_require__(568);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Context = {
	  table: __webpack_require__(174).object.isRequired
	};

	var babelPluginFlowReactPropTypes_proptype_Padding = __webpack_require__(174).oneOf(['default', 'checkbox', 'dense', 'none']);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  numeric: __webpack_require__(174).bool,
	  padding: __webpack_require__(174).oneOf(['default', 'checkbox', 'dense', 'none'])
	};
	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      borderBottom: '1px solid ' + theme.palette.text.lightDivider,
	      textAlign: 'left'
	    },
	    numeric: {
	      textAlign: 'right',
	      flexDirection: 'row-reverse' // can be dynamically inherited at runtime by contents
	    },
	    head: {
	      fontWeight: theme.typography.fontWeightMedium,
	      position: 'relative' // Workaround for Tooltip positioning issue.
	    },
	    paddingDefault: {
	      padding: theme.spacing.unit / 2 + 'px ' + theme.spacing.unit * 7 + 'px ' + theme.spacing.unit / 2 + 'px ' + theme.spacing.unit * 3 + 'px',
	      '&:last-child': {
	        paddingRight: theme.spacing.unit * 3
	      }
	    },
	    paddingDense: {
	      paddingRight: theme.spacing.unit * 3
	    },
	    paddingCheckbox: {
	      padding: '0 12px'
	    },
	    footer: {
	      borderBottom: 0
	    }
	  };
	};

	function TableCell(props, context) {
	  var _classNames;

	  var classes = props.classes,
	      classNameProp = props.className,
	      children = props.children,
	      numeric = props.numeric,
	      padding = props.padding,
	      component = props.component,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'children', 'numeric', 'padding', 'component']);
	  var table = context.table;

	  var Component = void 0;
	  if (component) {
	    Component = component;
	  } else {
	    Component = table && table.head ? 'th' : 'td';
	  }

	  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.numeric, numeric), (0, _defineProperty3.default)(_classNames, classes['padding' + (0, _helpers.capitalizeFirstLetter)(padding)], padding !== 'none' && padding !== 'default'), (0, _defineProperty3.default)(_classNames, classes.paddingDefault, padding !== 'none'), (0, _defineProperty3.default)(_classNames, classes.head, table && table.head), (0, _defineProperty3.default)(_classNames, classes.footer, table && table.footer), _classNames), classNameProp);

	  return _react2.default.createElement(
	    Component,
	    (0, _extends3.default)({ className: className }, other),
	    children
	  );
	}

	TableCell.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  padding: require('prop-types').oneOf(['default', 'checkbox', 'dense', 'none']).isRequired,
	  numeric: require('prop-types').bool.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'component', typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType)), (0, _defineProperty3.default)(_ref, 'numeric', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'padding', require('prop-types').oneOf(['default', 'checkbox', 'dense', 'none'])), _ref) : {};
	TableCell.defaultProps = {
	  numeric: false,
	  padding: 'default'
	};

	TableCell.contextTypes = {
	  table: _propTypes2.default.object.isRequired
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableCell' })(TableCell);

/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      fontSize: 12,
	      color: theme.palette.text.secondary
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType)
	};

	var TableFooter = function (_React$Component) {
	  (0, _inherits3.default)(TableFooter, _React$Component);

	  function TableFooter() {
	    (0, _classCallCheck3.default)(this, TableFooter);
	    return (0, _possibleConstructorReturn3.default)(this, (TableFooter.__proto__ || (0, _getPrototypeOf2.default)(TableFooter)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(TableFooter, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      // eslint-disable-line class-methods-use-this
	      return {
	        table: {
	          footer: true
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          children = _props.children,
	          ComponentProp = _props.component,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'children', 'component']);


	      return _react2.default.createElement(
	        ComponentProp,
	        (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, classNameProp) }, other),
	        children
	      );
	    }
	  }]);
	  return TableFooter;
	}(_react2.default.Component);

	TableFooter.defaultProps = {
	  component: 'tfoot'
	};


	TableFooter.childContextTypes = {
	  table: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableFooter' })(TableFooter);

/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      fontSize: 12,
	      fontWeight: theme.typography.fontWeightMedium,
	      color: theme.palette.text.secondary
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType)
	};

	var TableHead = function (_React$Component) {
	  (0, _inherits3.default)(TableHead, _React$Component);

	  function TableHead() {
	    (0, _classCallCheck3.default)(this, TableHead);
	    return (0, _possibleConstructorReturn3.default)(this, (TableHead.__proto__ || (0, _getPrototypeOf2.default)(TableHead)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(TableHead, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      // eslint-disable-line class-methods-use-this
	      return {
	        table: {
	          head: true
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          children = _props.children,
	          ComponentProp = _props.component,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'children', 'component']);

	      var className = (0, _classnames2.default)(classes.root, classNameProp);

	      return _react2.default.createElement(
	        ComponentProp,
	        (0, _extends3.default)({ className: className }, other),
	        children
	      );
	    }
	  }]);
	  return TableHead;
	}(_react2.default.Component);

	TableHead.defaultProps = {
	  component: 'thead'
	};


	TableHead.childContextTypes = {
	  table: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableHead' })(TableHead);

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _IconButton = __webpack_require__(577);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _Input = __webpack_require__(648);

	var _Input2 = _interopRequireDefault(_Input);

	var _Menu = __webpack_require__(658);

	var _Select = __webpack_require__(673);

	var _Select2 = _interopRequireDefault(_Select);

	var _TableCell = __webpack_require__(644);

	var _TableCell2 = _interopRequireDefault(_TableCell);

	var _Toolbar = __webpack_require__(571);

	var _Toolbar2 = _interopRequireDefault(_Toolbar);

	var _Typography = __webpack_require__(610);

	var _Typography2 = _interopRequireDefault(_Typography);

	var _KeyboardArrowLeft = __webpack_require__(635);

	var _KeyboardArrowLeft2 = _interopRequireDefault(_KeyboardArrowLeft);

	var _KeyboardArrowRight = __webpack_require__(636);

	var _KeyboardArrowRight2 = _interopRequireDefault(_KeyboardArrowRight);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;
	// @inheritedComponent TableCell

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      // Increase the specificity to override TableCell.
	      '&:last-child': {
	        padding: 0
	      }
	    },
	    toolbar: {
	      height: 56,
	      minHeight: 56,
	      paddingRight: 2
	    },
	    spacer: {
	      flex: '1 1 100%'
	    },
	    caption: {
	      flexShrink: 0
	    },
	    selectRoot: {
	      marginRight: theme.spacing.unit * 4
	    },
	    select: {
	      marginLeft: theme.spacing.unit,
	      width: 34,
	      textAlign: 'right',
	      paddingRight: 22,
	      color: theme.palette.text.secondary,
	      height: 32,
	      lineHeight: '32px'
	    },
	    actions: {
	      flexShrink: 0,
	      color: theme.palette.text.secondary,
	      marginLeft: theme.spacing.unit * 2.5
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_LabelDisplayedRowsArgs = {
	  from: __webpack_require__(174).number.isRequired,
	  to: __webpack_require__(174).number.isRequired,
	  count: __webpack_require__(174).number.isRequired,
	  page: __webpack_require__(174).number.isRequired
	};
	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  colSpan: __webpack_require__(174).number,
	  count: __webpack_require__(174).number.isRequired,
	  labelDisplayedRows: __webpack_require__(174).func,
	  labelRowsPerPage: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  onChangePage: __webpack_require__(174).func.isRequired,
	  onChangeRowsPerPage: __webpack_require__(174).func.isRequired,
	  page: __webpack_require__(174).number.isRequired,
	  rowsPerPage: __webpack_require__(174).number.isRequired,
	  rowsPerPageOptions: __webpack_require__(174).arrayOf(__webpack_require__(174).number),
	  theme: __webpack_require__(174).object
	};

	var _ref3 = _react2.default.createElement(_Input2.default, { disableUnderline: true });

	var _ref4 = _react2.default.createElement(_KeyboardArrowRight2.default, null);

	var _ref5 = _react2.default.createElement(_KeyboardArrowLeft2.default, null);

	var _ref6 = _react2.default.createElement(_KeyboardArrowLeft2.default, null);

	var _ref7 = _react2.default.createElement(_KeyboardArrowRight2.default, null);

	/**
	 * A `TableRow` based component for placing inside `TableFooter` for pagination.
	 */
	var TablePagination = function (_React$Component) {
	  (0, _inherits3.default)(TablePagination, _React$Component);

	  function TablePagination() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TablePagination);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TablePagination.__proto__ || (0, _getPrototypeOf2.default)(TablePagination)).call.apply(_ref, [this].concat(args))), _this), _this.handleBackButtonClick = function (event) {
	      _this.props.onChangePage(event, _this.props.page - 1);
	    }, _this.handleNextButtonClick = function (event) {
	      _this.props.onChangePage(event, _this.props.page + 1);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TablePagination, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(_ref2) {
	      var count = _ref2.count,
	          onChangePage = _ref2.onChangePage,
	          rowsPerPage = _ref2.rowsPerPage;

	      var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);
	      if (this.props.page > newLastPage) {
	        onChangePage(null, newLastPage);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          classes = _props.classes,
	          Component = _props.component,
	          colSpanProp = _props.colSpan,
	          count = _props.count,
	          labelDisplayedRows = _props.labelDisplayedRows,
	          labelRowsPerPage = _props.labelRowsPerPage,
	          onChangePage = _props.onChangePage,
	          onChangeRowsPerPage = _props.onChangeRowsPerPage,
	          page = _props.page,
	          rowsPerPage = _props.rowsPerPage,
	          rowsPerPageOptions = _props.rowsPerPageOptions,
	          theme = _props.theme,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'component', 'colSpan', 'count', 'labelDisplayedRows', 'labelRowsPerPage', 'onChangePage', 'onChangeRowsPerPage', 'page', 'rowsPerPage', 'rowsPerPageOptions', 'theme']);


	      var colSpan = void 0;

	      if (Component === _TableCell2.default || Component === 'td') {
	        colSpan = colSpanProp || 9001; // col-span over everything
	      }

	      return _react2.default.createElement(
	        Component,
	        (0, _extends3.default)({ className: classes.root, colSpan: colSpan }, other),
	        _react2.default.createElement(
	          _Toolbar2.default,
	          { className: classes.toolbar },
	          _react2.default.createElement('div', { className: classes.spacer }),
	          _react2.default.createElement(
	            _Typography2.default,
	            { type: 'caption', className: classes.caption },
	            labelRowsPerPage
	          ),
	          _react2.default.createElement(
	            _Select2.default,
	            {
	              classes: { root: classes.selectRoot, select: classes.select },
	              input: _ref3,
	              value: rowsPerPage,
	              onChange: onChangeRowsPerPage
	            },
	            rowsPerPageOptions.map(function (rowsPerPageOption) {
	              return _react2.default.createElement(
	                _Menu.MenuItem,
	                { key: rowsPerPageOption, value: rowsPerPageOption },
	                rowsPerPageOption
	              );
	            })
	          ),
	          _react2.default.createElement(
	            _Typography2.default,
	            { type: 'caption', className: classes.caption },
	            labelDisplayedRows({
	              from: count === 0 ? 0 : page * rowsPerPage + 1,
	              to: Math.min(count, (page + 1) * rowsPerPage),
	              count: count,
	              page: page
	            })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: classes.actions },
	            _react2.default.createElement(
	              _IconButton2.default,
	              { onClick: this.handleBackButtonClick, disabled: page === 0 },
	              theme.direction === 'rtl' ? _ref4 : _ref5
	            ),
	            _react2.default.createElement(
	              _IconButton2.default,
	              {
	                onClick: this.handleNextButtonClick,
	                disabled: page >= Math.ceil(count / rowsPerPage) - 1
	              },
	              theme.direction === 'rtl' ? _ref6 : _ref7
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TablePagination;
	}(_react2.default.Component);

	TablePagination.defaultProps = {
	  component: _TableCell2.default,
	  labelRowsPerPage: 'Rows per page:',
	  labelDisplayedRows: function labelDisplayedRows(_ref8) {
	    var from = _ref8.from,
	        to = _ref8.to,
	        count = _ref8.count;
	    return from + '-' + to + ' of ' + count;
	  },
	  rowsPerPageOptions: [5, 10, 25]
	};
	exports.default = (0, _withStyles2.default)(styles, { withTheme: true, name: 'MuiTablePagination' })(TablePagination);

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Input = __webpack_require__(649);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Input).default;
	  }
	});

	var _InputLabel = __webpack_require__(651);

	Object.defineProperty(exports, 'InputLabel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_InputLabel).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	exports.hasValue = hasValue;
	exports.isDirty = isDirty;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _reactHelpers = __webpack_require__(581);

	var _Textarea = __webpack_require__(650);

	var _Textarea2 = _interopRequireDefault(_Textarea);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_ComponentType = __webpack_require__(174).func; //  weak

	// Supports determination of isControlled().
	// Controlled input accepts its current value as a prop.
	//
	// @see https://facebook.github.io/react/docs/forms.html#controlled-components
	// @param value
	// @returns {boolean} true if string (including '') or number (including zero)
	function hasValue(value) {
	  return value !== undefined && value !== null && !(Array.isArray(value) && value.length === 0);
	}

	// Determine if field is dirty (a.k.a. filled).
	//
	// Response determines if label is presented above field or as placeholder.
	//
	// @param obj
	// @param SSR
	// @returns {boolean} False when not present or empty string.
	//                    True when any number or string with length.
	function isDirty(obj) {
	  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
	}

	var styles = exports.styles = function styles(theme) {
	  var placeholder = {
	    color: 'currentColor',
	    opacity: theme.palette.type === 'light' ? 0.42 : 0.5,
	    transition: theme.transitions.create('opacity', {
	      duration: theme.transitions.duration.shorter,
	      easing: theme.transitions.easing.ease
	    })
	  };
	  var placeholderHidden = {
	    opacity: 0
	  };
	  var placeholderVisible = {
	    opacity: theme.palette.type === 'light' ? 0.42 : 0.5
	  };

	  return {
	    root: {
	      // Mimics the default input display property used by browsers for an input.
	      display: 'inline-block',
	      position: 'relative',
	      fontFamily: theme.typography.fontFamily,
	      color: theme.palette.input.inputText
	    },
	    formControl: {
	      'label + &': {
	        marginTop: theme.spacing.unit * 2
	      }
	    },
	    inkbar: {
	      '&:after': {
	        backgroundColor: theme.palette.primary[theme.palette.type === 'light' ? 'A700' : 'A200'],
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '""',
	        height: 2,
	        position: 'absolute',
	        right: 0,
	        transform: 'scaleX(0)',
	        transition: theme.transitions.create('transform', {
	          duration: theme.transitions.duration.shorter,
	          easing: theme.transitions.easing.easeOut
	        }),
	        pointerEvent: 'none' // Transparent to the hover style.
	      },
	      '&$focused:after': {
	        transform: 'scaleX(1)'
	      }
	    },
	    error: {
	      '&:after': {
	        backgroundColor: theme.palette.error.A400,
	        transform: 'scaleX(1)' // error is always underlined in red
	      }
	    },
	    input: {
	      font: 'inherit',
	      color: 'currentColor',
	      // slight alteration to spec spacing to match visual spec result
	      padding: theme.spacing.unit - 1 + 'px 0 ' + (theme.spacing.unit + 1) + 'px',
	      border: 0,
	      display: 'block',
	      boxSizing: 'content-box',
	      verticalAlign: 'middle',
	      background: 'none',
	      margin: 0, // Reset for Safari
	      width: '100%',
	      '&::-webkit-input-placeholder': placeholder,
	      '&::-moz-placeholder': placeholder, // Firefox 19+
	      '&:-ms-input-placeholder': placeholder, // IE 11
	      '&::-ms-input-placeholder': placeholder, // Edge
	      '&:focus': {
	        outline: 0
	      },
	      // Reset Firefox invalid required input style
	      '&:invalid': {
	        boxShadow: 'none'
	      },
	      '&::-webkit-search-decoration': {
	        // Remove the padding when type=search.
	        appearance: 'none'
	      },
	      // Show and hide the placeholder logic
	      'label[data-shrink=false] + $formControl &': {
	        '&::-webkit-input-placeholder': placeholderHidden,
	        '&::-moz-placeholder': placeholderHidden, // Firefox 19+
	        '&:-ms-input-placeholder': placeholderHidden, // IE 11
	        '&::-ms-input-placeholder': placeholderHidden, // Edge
	        '&:focus::-webkit-input-placeholder': placeholderVisible,
	        '&:focus::-moz-placeholder': placeholderVisible, // Firefox 19+
	        '&:focus:-ms-input-placeholder': placeholderVisible, // IE 11
	        '&:focus::-ms-input-placeholder': placeholderVisible // Edge
	      }
	    },
	    inputDense: {
	      paddingTop: theme.spacing.unit / 2
	    },
	    disabled: {
	      color: theme.palette.text.disabled
	    },
	    focused: {},
	    underline: {
	      '&:before': {
	        backgroundColor: theme.palette.input.bottomLine,
	        left: 0,
	        bottom: 0,
	        // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
	        content: '""',
	        height: 1,
	        position: 'absolute',
	        right: 0,
	        transition: theme.transitions.create('background-color', {
	          duration: theme.transitions.duration.shorter,
	          easing: theme.transitions.easing.ease
	        }),
	        pointerEvent: 'none' // Transparent to the hover style.
	      },
	      '&:hover:not($disabled):before': {
	        backgroundColor: theme.palette.text.primary,
	        height: 2
	      },
	      '&$disabled:before': {
	        background: 'transparent',
	        backgroundImage: 'linear-gradient(to right, ' + theme.palette.input.bottomLine + ' 33%, transparent 0%)',
	        backgroundPosition: 'left top',
	        backgroundRepeat: 'repeat-x',
	        backgroundSize: '5px 1px'
	      }
	    },
	    multiline: {
	      padding: theme.spacing.unit - 2 + 'px 0 ' + (theme.spacing.unit - 1) + 'px'
	    },
	    inputDisabled: {
	      opacity: 1 // Reset iOS opacity
	    },
	    inputSingleline: {
	      height: '1em'
	    },
	    inputSearch: {
	      appearance: 'textfield' // Improve type search style.
	    },
	    inputMultiline: {
	      resize: 'none',
	      padding: 0
	    },
	    fullWidth: {
	      width: '100%'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  autoComplete: __webpack_require__(174).string,
	  autoFocus: __webpack_require__(174).bool,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  defaultValue: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  disabled: __webpack_require__(174).bool,
	  disableUnderline: __webpack_require__(174).bool,
	  error: __webpack_require__(174).bool,
	  fullWidth: __webpack_require__(174).bool,
	  id: __webpack_require__(174).string,
	  inputComponent: __webpack_require__(174).oneOfType([__webpack_require__(174).string, typeof babelPluginFlowReactPropTypes_proptype_ComponentType === 'function' ? babelPluginFlowReactPropTypes_proptype_ComponentType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ComponentType)]),
	  inputProps: __webpack_require__(174).object,
	  inputRef: __webpack_require__(174).func,
	  margin: __webpack_require__(174).oneOf(['dense', 'none']),
	  multiline: __webpack_require__(174).bool,
	  name: __webpack_require__(174).string,
	  readOnly: __webpack_require__(174).bool,
	  onBlur: __webpack_require__(174).func,
	  onChange: __webpack_require__(174).func,
	  onClean: __webpack_require__(174).func,
	  onDirty: __webpack_require__(174).func,
	  onFocus: __webpack_require__(174).func,
	  onKeyDown: __webpack_require__(174).func,
	  onKeyUp: __webpack_require__(174).func,
	  placeholder: __webpack_require__(174).string,
	  rows: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  rowsMax: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  type: __webpack_require__(174).string,
	  value: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number, __webpack_require__(174).arrayOf(__webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]))])
	};

	var Input = function (_React$Component) {
	  (0, _inherits3.default)(Input, _React$Component);

	  function Input() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Input);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Input.__proto__ || (0, _getPrototypeOf2.default)(Input)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      focused: false
	    }, _this.input = null, _this.handleFocus = function (event) {
	      _this.setState({ focused: true });
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    }, _this.handleBlur = function (event) {
	      _this.setState({ focused: false });
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleChange = function (event) {
	      if (!_this.isControlled()) {
	        _this.checkDirty(_this.input);
	      }

	      // Perform in the willUpdate
	      if (_this.props.onChange) {
	        _this.props.onChange(event);
	      }
	    }, _this.handleRefInput = function (node) {
	      _this.input = node;
	      if (_this.props.inputRef) {
	        _this.props.inputRef(node);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Input, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      if (this.isControlled()) {
	        this.checkDirty(this.props);
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (!this.isControlled()) {
	        this.checkDirty(this.input);
	      }
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate(nextProps) {
	      if (this.isControlled()) {
	        this.checkDirty(nextProps);
	      } // else performed in the onChange
	    }

	    // Holds the input reference

	  }, {
	    key: 'isControlled',


	    // A controlled input accepts its current value as a prop.
	    //
	    // @see https://facebook.github.io/react/docs/forms.html#controlled-components
	    // @returns {boolean} true if string (including '') or number (including zero)
	    value: function isControlled() {
	      return hasValue(this.props.value);
	    }
	  }, {
	    key: 'checkDirty',
	    value: function checkDirty(obj) {
	      var muiFormControl = this.context.muiFormControl;


	      if (isDirty(obj)) {
	        if (muiFormControl && muiFormControl.onDirty) {
	          muiFormControl.onDirty();
	        }
	        if (this.props.onDirty) {
	          this.props.onDirty();
	        }
	        return;
	      }

	      if (muiFormControl && muiFormControl.onClean) {
	        muiFormControl.onClean();
	      }
	      if (this.props.onClean) {
	        this.props.onClean();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames, _classNames2;

	      var _props = this.props,
	          autoComplete = _props.autoComplete,
	          autoFocus = _props.autoFocus,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          defaultValue = _props.defaultValue,
	          disabledProp = _props.disabled,
	          disableUnderline = _props.disableUnderline,
	          errorProp = _props.error,
	          fullWidth = _props.fullWidth,
	          id = _props.id,
	          inputComponent = _props.inputComponent,
	          _props$inputProps = _props.inputProps;
	      _props$inputProps = _props$inputProps === undefined ? {} : _props$inputProps;
	      var inputPropsClassName = _props$inputProps.inputPropsClassName,
	          inputPropsProp = (0, _objectWithoutProperties3.default)(_props$inputProps, ['inputPropsClassName']),
	          inputRef = _props.inputRef,
	          marginProp = _props.margin,
	          multiline = _props.multiline,
	          onBlur = _props.onBlur,
	          onFocus = _props.onFocus,
	          onChange = _props.onChange,
	          onClean = _props.onClean,
	          onDirty = _props.onDirty,
	          onKeyDown = _props.onKeyDown,
	          onKeyUp = _props.onKeyUp,
	          placeholder = _props.placeholder,
	          name = _props.name,
	          readOnly = _props.readOnly,
	          rows = _props.rows,
	          rowsMax = _props.rowsMax,
	          type = _props.type,
	          value = _props.value,
	          other = (0, _objectWithoutProperties3.default)(_props, ['autoComplete', 'autoFocus', 'classes', 'className', 'defaultValue', 'disabled', 'disableUnderline', 'error', 'fullWidth', 'id', 'inputComponent', 'inputProps', 'inputRef', 'margin', 'multiline', 'onBlur', 'onFocus', 'onChange', 'onClean', 'onDirty', 'onKeyDown', 'onKeyUp', 'placeholder', 'name', 'readOnly', 'rows', 'rowsMax', 'type', 'value']);
	      var muiFormControl = this.context.muiFormControl;


	      var disabled = disabledProp;
	      var error = errorProp;
	      var margin = marginProp;

	      if (muiFormControl) {
	        if (typeof disabled === 'undefined') {
	          disabled = muiFormControl.disabled;
	        }

	        if (typeof error === 'undefined') {
	          error = muiFormControl.error;
	        }

	        if (typeof margin === 'undefined') {
	          margin = muiFormControl.margin;
	        }
	      }

	      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.error, error), (0, _defineProperty3.default)(_classNames, classes.fullWidth, fullWidth), (0, _defineProperty3.default)(_classNames, classes.focused, this.state.focused), (0, _defineProperty3.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty3.default)(_classNames, classes.inkbar, !disableUnderline), (0, _defineProperty3.default)(_classNames, classes.multiline, multiline), (0, _defineProperty3.default)(_classNames, classes.underline, !disableUnderline), _classNames), classNameProp);

	      var inputClassName = (0, _classnames2.default)(classes.input, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.inputDisabled, disabled), (0, _defineProperty3.default)(_classNames2, classes.inputSingleline, !multiline), (0, _defineProperty3.default)(_classNames2, classes.inputSearch, type === 'search'), (0, _defineProperty3.default)(_classNames2, classes.inputMultiline, multiline), (0, _defineProperty3.default)(_classNames2, classes.inputDense, margin === 'dense'), _classNames2), inputPropsClassName);

	      var required = muiFormControl && muiFormControl.required === true;

	      var InputComponent = 'input';
	      var inputProps = (0, _extends3.default)({
	        ref: this.handleRefInput
	      }, inputPropsProp);

	      if (inputComponent) {
	        InputComponent = inputComponent;

	        if ((0, _reactHelpers.isMuiComponent)(InputComponent, ['SelectInput'])) {
	          inputProps = (0, _extends3.default)({
	            selectRef: this.handleRefInput
	          }, inputProps, {
	            ref: null
	          });
	        }
	      } else if (multiline) {
	        if (rows && !rowsMax) {
	          InputComponent = 'textarea';
	        } else {
	          inputProps = (0, _extends3.default)({
	            rowsMax: rowsMax,
	            textareaRef: this.handleRefInput
	          }, inputProps, {
	            ref: null
	          });
	          InputComponent = _Textarea2.default;
	        }
	      }

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({ onBlur: this.handleBlur, onFocus: this.handleFocus, className: className }, other),
	        _react2.default.createElement(InputComponent, (0, _extends3.default)({
	          autoComplete: autoComplete,
	          autoFocus: autoFocus,
	          className: inputClassName,
	          onChange: this.handleChange,
	          onKeyUp: onKeyUp,
	          onKeyDown: onKeyDown,
	          disabled: disabled,
	          required: required ? true : undefined,
	          value: value,
	          id: id,
	          name: name,
	          defaultValue: defaultValue,
	          placeholder: placeholder,
	          type: type,
	          readOnly: readOnly,
	          rows: rows
	        }, inputProps))
	      );
	    }
	  }]);
	  return Input;
	}(_react2.default.Component);

	Input.muiName = 'Input';
	Input.defaultProps = {
	  disableUnderline: false,
	  fullWidth: false,
	  multiline: false,
	  type: 'text'
	};


	Input.contextTypes = {
	  muiFormControl: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiInput' })(Input);

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _debounce = __webpack_require__(619);

	var _debounce2 = _interopRequireDefault(_debounce);

	var _reactEventListener = __webpack_require__(616);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var rowsHeight = 24;

	var styles = exports.styles = {
	  root: {
	    position: 'relative' // because the shadow has position: 'absolute',
	  },
	  textarea: {
	    width: '100%',
	    height: '100%',
	    resize: 'none',
	    font: 'inherit',
	    padding: 0,
	    cursor: 'inherit',
	    boxSizing: 'border-box',
	    lineHeight: 'inherit',
	    border: 'none',
	    outline: 'none',
	    background: 'transparent'
	  },
	  shadow: {
	    resize: 'none',
	    // Overflow also needed to here to remove the extra row
	    // added to textareas in Firefox.
	    overflow: 'hidden',
	    // Visibility needed to hide the extra text area on ipads
	    visibility: 'hidden',
	    position: 'absolute',
	    height: 'auto',
	    whiteSpace: 'pre-wrap'
	  }
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  defaultValue: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  disabled: __webpack_require__(174).bool,
	  onChange: __webpack_require__(174).func,
	  rows: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  rowsMax: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  textareaRef: __webpack_require__(174).func,
	  value: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number])
	};

	/**
	 * @ignore - internal component.
	 */
	var Textarea = function (_React$Component) {
	  (0, _inherits3.default)(Textarea, _React$Component);

	  function Textarea() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Textarea);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Textarea.__proto__ || (0, _getPrototypeOf2.default)(Textarea)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      height: null
	    }, _this.handleResize = (0, _debounce2.default)(function (event) {
	      _this.syncHeightWithShadow(event);
	    }, 166), _this.handleRefInput = function (node) {
	      _this.input = node;
	      if (_this.props.textareaRef) {
	        _this.props.textareaRef(node);
	      }
	    }, _this.handleRefSinglelineShadow = function (node) {
	      _this.singlelineShadow = node;
	    }, _this.handleRefShadow = function (node) {
	      _this.shadow = node;
	    }, _this.handleChange = function (event) {
	      _this.value = event.target.value;

	      if (typeof _this.props.value === 'undefined' && _this.shadow) {
	        // The component is not controlled, we need to update the shallow value.
	        _this.shadow.value = _this.value;
	        _this.syncHeightWithShadow(event);
	      }

	      if (_this.props.onChange) {
	        _this.props.onChange(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Textarea, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      // <Input> expects the components it renders to respond to 'value'
	      // so that it can check whether they are dirty
	      this.value = this.props.value || this.props.defaultValue || '';
	      this.setState({
	        height: Number(this.props.rows) * rowsHeight
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.syncHeightWithShadow(null);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.value !== this.props.value || Number(nextProps.rowsMax) !== Number(this.props.rowsMax)) {
	        this.syncHeightWithShadow(null, nextProps);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.handleResize.cancel();
	    }
	  }, {
	    key: 'syncHeightWithShadow',
	    value: function syncHeightWithShadow(event) {
	      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;

	      if (this.shadow && this.singlelineShadow) {
	        // The component is controlled, we need to update the shallow value.
	        if (typeof this.props.value !== 'undefined') {
	          this.shadow.value = props.value == null ? '' : String(props.value);
	        }

	        var lineHeight = this.singlelineShadow.scrollHeight;
	        var newHeight = this.shadow.scrollHeight;

	        // Guarding for jsdom, where scrollHeight isn't present.
	        // See https://github.com/tmpvar/jsdom/issues/1013
	        if (newHeight === undefined) {
	          return;
	        }

	        if (Number(props.rowsMax) >= Number(props.rows)) {
	          newHeight = Math.min(Number(props.rowsMax) * lineHeight, newHeight);
	        }

	        newHeight = Math.max(newHeight, lineHeight);

	        if (this.state.height !== newHeight) {
	          this.setState({
	            height: newHeight
	          });
	        }
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          classes = _props.classes,
	          className = _props.className,
	          defaultValue = _props.defaultValue,
	          onChange = _props.onChange,
	          rows = _props.rows,
	          rowsMax = _props.rowsMax,
	          textareaRef = _props.textareaRef,
	          value = _props.value,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'defaultValue', 'onChange', 'rows', 'rowsMax', 'textareaRef', 'value']);


	      return _react2.default.createElement(
	        'div',
	        { className: classes.root, style: { height: this.state.height } },
	        _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }),
	        _react2.default.createElement('textarea', {
	          ref: this.handleRefSinglelineShadow,
	          className: (0, _classnames2.default)(classes.shadow, classes.textarea),
	          tabIndex: -1,
	          rows: '1',
	          readOnly: true,
	          'aria-hidden': 'true',
	          value: ''
	        }),
	        _react2.default.createElement('textarea', {
	          ref: this.handleRefShadow,
	          className: (0, _classnames2.default)(classes.shadow, classes.textarea),
	          tabIndex: -1,
	          rows: rows,
	          'aria-hidden': 'true',
	          readOnly: true,
	          defaultValue: defaultValue,
	          value: value
	        }),
	        _react2.default.createElement('textarea', (0, _extends3.default)({
	          ref: this.handleRefInput,
	          rows: rows,
	          className: (0, _classnames2.default)(classes.textarea, className),
	          defaultValue: defaultValue,
	          value: value,
	          onChange: this.handleChange
	        }, other))
	      );
	    }
	  }]);
	  return Textarea;
	}(_react2.default.Component);

	Textarea.defaultProps = {
	  rows: 1
	};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTextarea' })(Textarea);

/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Form = __webpack_require__(652);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      transformOrigin: 'top ' + (theme.direction === 'ltr' ? 'left' : 'right')
	    },
	    formControl: {
	      position: 'absolute',
	      left: 0,
	      top: 0,
	      // slight alteration to spec spacing to match visual spec result
	      transform: 'translate(0, ' + (theme.spacing.unit * 3 - 1) + 'px) scale(1)'
	    },
	    labelDense: {
	      // Compensation for the `Input.inputDense` style.
	      transform: 'translate(0, ' + (theme.spacing.unit * 2.5 + 1) + 'px) scale(1)'
	    },
	    shrink: {
	      transform: 'translate(0, 1.5px) scale(0.75)',
	      transformOrigin: 'top ' + (theme.direction === 'ltr' ? 'left' : 'right')
	    },
	    animated: {
	      transition: theme.transitions.create('transform', {
	        duration: theme.transitions.duration.shorter,
	        easing: theme.transitions.easing.easeOut
	      })
	    },
	    disabled: {
	      color: theme.palette.input.disabled
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  disableAnimation: __webpack_require__(174).bool,
	  disabled: __webpack_require__(174).bool,
	  error: __webpack_require__(174).bool,
	  FormControlClasses: __webpack_require__(174).object,
	  focused: __webpack_require__(174).bool,
	  margin: __webpack_require__(174).oneOf(['dense']),
	  required: __webpack_require__(174).bool,
	  shrink: __webpack_require__(174).bool
	};


	function InputLabel(props, context) {
	  var _classNames;

	  var disabled = props.disabled,
	      disableAnimation = props.disableAnimation,
	      children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      FormControlClasses = props.FormControlClasses,
	      shrinkProp = props.shrink,
	      marginProp = props.margin,
	      other = (0, _objectWithoutProperties3.default)(props, ['disabled', 'disableAnimation', 'children', 'classes', 'className', 'FormControlClasses', 'shrink', 'margin']);
	  var muiFormControl = context.muiFormControl;

	  var shrink = shrinkProp;

	  if (typeof shrink === 'undefined' && muiFormControl) {
	    shrink = muiFormControl.dirty || muiFormControl.focused;
	  }

	  var margin = marginProp;
	  if (typeof margin === 'undefined' && muiFormControl) {
	    margin = muiFormControl.margin;
	  }

	  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty3.default)(_classNames, classes.animated, !disableAnimation), (0, _defineProperty3.default)(_classNames, classes.shrink, shrink), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.labelDense, margin === 'dense'), _classNames), classNameProp);

	  return _react2.default.createElement(
	    _Form.FormLabel,
	    (0, _extends3.default)({ 'data-shrink': shrink, className: className, classes: FormControlClasses }, other),
	    children
	  );
	}

	InputLabel.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  disabled: require('prop-types').bool.isRequired,
	  disableAnimation: require('prop-types').bool.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'disableAnimation', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'disabled', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'error', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'FormControlClasses', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'focused', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'margin', require('prop-types').oneOf(['dense'])), (0, _defineProperty3.default)(_ref, 'required', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'shrink', require('prop-types').bool), _ref) : {};
	InputLabel.defaultProps = {
	  disabled: false,
	  disableAnimation: false
	};

	InputLabel.contextTypes = {
	  muiFormControl: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiInputLabel' })(InputLabel);

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _FormGroup = __webpack_require__(653);

	Object.defineProperty(exports, 'FormGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormGroup).default;
	  }
	});

	var _FormLabel = __webpack_require__(654);

	Object.defineProperty(exports, 'FormLabel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormLabel).default;
	  }
	});

	var _FormControl = __webpack_require__(655);

	Object.defineProperty(exports, 'FormControl', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormControl).default;
	  }
	});

	var _FormHelperText = __webpack_require__(656);

	Object.defineProperty(exports, 'FormHelperText', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormHelperText).default;
	  }
	});

	var _FormControlLabel = __webpack_require__(657);

	Object.defineProperty(exports, 'FormControlLabel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormControlLabel).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = {
	  root: {
	    display: 'flex',
	    flexDirection: 'column',
	    flexWrap: 'wrap'
	  },
	  row: {
	    flexDirection: 'row'
	  }
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  row: __webpack_require__(174).bool
	};


	/**
	 * `FormGroup` wraps controls such as `Checkbox` and `Switch`.
	 * It provides compact row layout.
	 * For the `Radio`, you should be using the `RadioGroup` component instead of this one.
	 */
	function FormGroup(props) {
	  var classes = props.classes,
	      className = props.className,
	      children = props.children,
	      row = props.row,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'children', 'row']);

	  var rootClassName = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.row, row), className);

	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: rootClassName }, other),
	    children
	  );
	}

	FormGroup.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'row', require('prop-types').bool), _ref) : {};
	FormGroup.defaultProps = {
	  row: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormGroup' })(FormGroup);

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  var focusColor = theme.palette.primary[theme.palette.type === 'light' ? 'A700' : 'A200'];
	  return {
	    root: {
	      fontFamily: theme.typography.fontFamily,
	      color: theme.palette.input.labelText,
	      lineHeight: 1,
	      padding: 0
	    },
	    focused: {
	      color: focusColor
	    },
	    error: {
	      color: theme.palette.error.A400
	    },
	    disabled: {
	      color: theme.palette.input.disabled
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  disabled: __webpack_require__(174).bool,
	  error: __webpack_require__(174).bool,
	  focused: __webpack_require__(174).bool,
	  required: __webpack_require__(174).bool
	};


	function FormLabel(props, context) {
	  var _classNames;

	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      Component = props.component,
	      disabledProp = props.disabled,
	      errorProp = props.error,
	      focusedProp = props.focused,
	      requiredProp = props.required,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'component', 'disabled', 'error', 'focused', 'required']);
	  var muiFormControl = context.muiFormControl;


	  var required = requiredProp;
	  var focused = focusedProp;
	  var disabled = disabledProp;
	  var error = errorProp;

	  if (muiFormControl) {
	    if (typeof required === 'undefined') {
	      required = muiFormControl.required;
	    }
	    if (typeof focused === 'undefined') {
	      focused = muiFormControl.focused;
	    }
	    if (typeof disabled === 'undefined') {
	      disabled = muiFormControl.disabled;
	    }
	    if (typeof error === 'undefined') {
	      error = muiFormControl.error;
	    }
	  }

	  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.focused, focused), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.error, error), _classNames), classNameProp);

	  var asteriskClassName = (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.error, error));

	  return _react2.default.createElement(
	    Component,
	    (0, _extends3.default)({ className: className }, other),
	    children,
	    required && _react2.default.createElement(
	      'span',
	      { className: asteriskClassName },
	      '\u2009*'
	    )
	  );
	}

	FormLabel.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType.isRequired ? babelPluginFlowReactPropTypes_proptype_ElementType.isRequired : babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType).isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'component', typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType)), (0, _defineProperty3.default)(_ref, 'disabled', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'error', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'focused', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'required', require('prop-types').bool), _ref) : {};
	FormLabel.defaultProps = {
	  component: 'label'
	};

	FormLabel.contextTypes = {
	  muiFormControl: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormLabel' })(FormLabel);

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Input = __webpack_require__(649);

	var _reactHelpers = __webpack_require__(581);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'inline-flex',
	      flexDirection: 'column',
	      position: 'relative',
	      // Reset fieldset default style
	      minWidth: 0,
	      padding: 0,
	      margin: 0,
	      border: 0
	    },
	    marginNormal: {
	      marginTop: theme.spacing.unit * 2,
	      marginBottom: theme.spacing.unit
	    },
	    marginDense: {
	      marginTop: theme.spacing.unit,
	      marginBottom: theme.spacing.unit / 2
	    },
	    fullWidth: {
	      width: '100%'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Margin = __webpack_require__(174).oneOf(['none', 'dense', 'normal']);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  disabled: __webpack_require__(174).bool,
	  error: __webpack_require__(174).bool,
	  fullWidth: __webpack_require__(174).bool,
	  onBlur: __webpack_require__(174).func,
	  onFocus: __webpack_require__(174).func,
	  required: __webpack_require__(174).bool,
	  margin: __webpack_require__(174).oneOf(['none', 'dense', 'normal'])
	};

	/**
	 * Provides context such as dirty/focused/error/required for form inputs.
	 * Relying on the context provides high flexibilty and ensures that the state always stay
	 * consitent across the children of the `FormControl`.
	 * This context is used by the following components:
	 *  - FormLabel
	 *  - FormHelperText
	 *  - Input
	 *  - InputLabel
	 */
	var FormControl = function (_React$Component) {
	  (0, _inherits3.default)(FormControl, _React$Component);

	  function FormControl() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, FormControl);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = FormControl.__proto__ || (0, _getPrototypeOf2.default)(FormControl)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      dirty: false,
	      focused: false
	    }, _this.handleFocus = function (event) {
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	      if (!_this.state.focused) {
	        _this.setState({ focused: true });
	      }
	    }, _this.handleBlur = function (event) {
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	      if (_this.state.focused) {
	        _this.setState({ focused: false });
	      }
	    }, _this.handleDirty = function () {
	      if (!_this.state.dirty) {
	        _this.setState({ dirty: true });
	      }
	    }, _this.handleClean = function () {
	      if (_this.state.dirty) {
	        _this.setState({ dirty: false });
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(FormControl, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      var _props = this.props,
	          disabled = _props.disabled,
	          error = _props.error,
	          required = _props.required,
	          margin = _props.margin;
	      var _state = this.state,
	          dirty = _state.dirty,
	          focused = _state.focused;


	      return {
	        muiFormControl: {
	          dirty: dirty,
	          disabled: disabled,
	          error: error,
	          focused: focused,
	          margin: margin,
	          required: required,
	          onDirty: this.handleDirty,
	          onClean: this.handleClean,
	          onFocus: this.handleFocus,
	          onBlur: this.handleBlur
	        }
	      };
	    }
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;

	      // We need to iterate through the children and find the Input in order
	      // to fully support server side rendering.
	      var children = this.props.children;

	      if (children) {
	        _react2.default.Children.forEach(children, function (child) {
	          if ((0, _reactHelpers.isMuiElement)(child, ['Input', 'Select']) && (0, _Input.isDirty)(child.props, true)) {
	            _this2.setState({ dirty: true });
	          }
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames;

	      var _props2 = this.props,
	          children = _props2.children,
	          classes = _props2.classes,
	          className = _props2.className,
	          ComponentProp = _props2.component,
	          disabled = _props2.disabled,
	          error = _props2.error,
	          fullWidth = _props2.fullWidth,
	          margin = _props2.margin,
	          other = (0, _objectWithoutProperties3.default)(_props2, ['children', 'classes', 'className', 'component', 'disabled', 'error', 'fullWidth', 'margin']);


	      return _react2.default.createElement(
	        ComponentProp,
	        (0, _extends3.default)({
	          className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.marginNormal, margin === 'normal'), (0, _defineProperty3.default)(_classNames, classes.marginDense, margin === 'dense'), (0, _defineProperty3.default)(_classNames, classes.fullWidth, fullWidth), _classNames), className)
	        }, other, {
	          onFocus: this.handleFocus,
	          onBlur: this.handleBlur
	        }),
	        children
	      );
	    }
	  }]);
	  return FormControl;
	}(_react2.default.Component);

	FormControl.defaultProps = {
	  component: 'div',
	  disabled: false,
	  error: false,
	  fullWidth: false,
	  margin: 'none',
	  required: false
	};
	FormControl.childContextTypes = {
	  muiFormControl: _propTypes2.default.object.isRequired
	};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormControl' })(FormControl);

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      color: theme.palette.input.helperText,
	      fontFamily: theme.typography.fontFamily,
	      fontSize: 12,
	      textAlign: 'left',
	      marginTop: theme.spacing.unit,
	      lineHeight: '1em',
	      minHeight: '1em',
	      margin: 0
	    },
	    dense: {
	      marginTop: theme.spacing.unit / 2
	    },
	    error: {
	      color: theme.palette.error.A400
	    },
	    disabled: {
	      color: theme.palette.input.disabled
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  disabled: __webpack_require__(174).bool,
	  error: __webpack_require__(174).bool,
	  margin: __webpack_require__(174).oneOf(['dense'])
	};


	function FormHelperText(props, context) {
	  var _classNames;

	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      disabledProp = props.disabled,
	      errorProp = props.error,
	      marginProp = props.margin,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'disabled', 'error', 'margin']);
	  var muiFormControl = context.muiFormControl;


	  var disabled = disabledProp;
	  var error = errorProp;
	  var margin = marginProp;

	  if (muiFormControl) {
	    if (typeof disabled === 'undefined') {
	      disabled = muiFormControl.disabled;
	    }

	    if (typeof error === 'undefined') {
	      error = muiFormControl.error;
	    }

	    if (typeof margin === 'undefined') {
	      margin = muiFormControl.margin;
	    }
	  }

	  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.error, error), (0, _defineProperty3.default)(_classNames, classes.dense, margin === 'dense'), _classNames), classNameProp);

	  return _react2.default.createElement(
	    'p',
	    (0, _extends3.default)({ className: className }, other),
	    children
	  );
	}

	FormHelperText.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'disabled', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'error', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'margin', require('prop-types').oneOf(['dense'])), _ref) : {};
	FormHelperText.contextTypes = {
	  muiFormControl: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormHelperText' })(FormHelperText);

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;
	/* eslint-disable jsx-a11y/label-has-for */

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Typography = __webpack_require__(610);

	var _Typography2 = _interopRequireDefault(_Typography);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'inline-flex',
	      alignItems: 'center',
	      cursor: 'pointer',
	      // Remove grey highlight
	      WebkitTapHighlightColor: theme.palette.common.transparent,
	      marginLeft: -14,
	      marginRight: theme.spacing.unit * 2 // used for row presentation of radio/checkbox
	    },
	    disabled: {
	      color: theme.palette.text.disabled,
	      cursor: 'default'
	    },
	    label: {
	      userSelect: 'none'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  checked: __webpack_require__(174).oneOfType([__webpack_require__(174).bool, __webpack_require__(174).string]),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  control: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element.isRequired ? babelPluginFlowReactPropTypes_proptype_Element.isRequired : babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element).isRequired,
	  disabled: __webpack_require__(174).bool,
	  inputRef: __webpack_require__(174).func,
	  label: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired,
	  name: __webpack_require__(174).string,
	  onChange: __webpack_require__(174).func,
	  value: __webpack_require__(174).string
	};


	/**
	 * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.
	 * Use this component if you want to display an extra label.
	 */
	function FormControlLabel(props) {
	  var checked = props.checked,
	      classes = props.classes,
	      classNameProp = props.className,
	      control = props.control,
	      disabled = props.disabled,
	      inputRef = props.inputRef,
	      label = props.label,
	      name = props.name,
	      onChange = props.onChange,
	      value = props.value,
	      other = (0, _objectWithoutProperties3.default)(props, ['checked', 'classes', 'className', 'control', 'disabled', 'inputRef', 'label', 'name', 'onChange', 'value']);


	  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.disabled, disabled), classNameProp);

	  return _react2.default.createElement(
	    'label',
	    (0, _extends3.default)({ className: className }, other),
	    _react2.default.cloneElement(control, {
	      disabled: typeof control.props.disabled === 'undefined' ? disabled : control.props.disabled,
	      checked: typeof control.props.checked === 'undefined' ? checked : control.props.checked,
	      name: control.props.name || name,
	      onChange: control.props.onChange || onChange,
	      value: control.props.value || value,
	      inputRef: control.props.inputRef || inputRef
	    }),
	    _react2.default.createElement(
	      _Typography2.default,
	      { className: classes.label },
	      label
	    )
	  );
	}

	FormControlLabel.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  checked: require('prop-types').oneOfType([require('prop-types').bool, require('prop-types').string])
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'control', typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element.isRequired ? babelPluginFlowReactPropTypes_proptype_Element.isRequired : babelPluginFlowReactPropTypes_proptype_Element : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Element).isRequired), (0, _defineProperty3.default)(_ref, 'disabled', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'inputRef', require('prop-types').func), (0, _defineProperty3.default)(_ref, 'label', typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired), (0, _defineProperty3.default)(_ref, 'name', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'onChange', require('prop-types').func), (0, _defineProperty3.default)(_ref, 'value', require('prop-types').string), _ref) : {};
	FormControlLabel.defaultProps = {
	  disabled: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormControlLabel' })(FormControlLabel);

/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Menu = __webpack_require__(659);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Menu).default;
	  }
	});

	var _MenuList = __webpack_require__(663);

	Object.defineProperty(exports, 'MenuList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MenuList).default;
	  }
	});

	var _MenuItem = __webpack_require__(672);

	Object.defineProperty(exports, 'MenuItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MenuItem).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _reactDom = __webpack_require__(33);

	var _scrollbarSize = __webpack_require__(604);

	var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Popover = __webpack_require__(660);

	var _Popover2 = _interopRequireDefault(_Popover);

	var _MenuList = __webpack_require__(663);

	var _MenuList2 = _interopRequireDefault(_MenuList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;
	// @inheritedComponent Popover

	var babelPluginFlowReactPropTypes_proptype_TransitionCallback = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionCallback || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  anchorEl: typeof HTMLElement === 'function' ? __webpack_require__(174).instanceOf(HTMLElement) : __webpack_require__(174).any,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  MenuListProps: __webpack_require__(174).object,
	  onEnter: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntering: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntered: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExit: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExiting: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExited: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onRequestClose: __webpack_require__(174).func,
	  open: __webpack_require__(174).bool,
	  theme: __webpack_require__(174).object,
	  transitionDuration: __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).oneOf(['auto'])])
	};


	var rtlOrigin = {
	  vertical: 'top',
	  horizontal: 'right'
	};

	var ltrOrigin = {
	  vertical: 'top',
	  horizontal: 'left'
	};

	var styles = exports.styles = {
	  root: {
	    // specZ: The maximum height of a simple menu should be one or more rows less than the view
	    // height. This ensures a tappable area outside of the simple menu with which to dismiss
	    // the menu.
	    maxHeight: 'calc(100vh - 96px)',
	    // Add iOS momentum scrolling.
	    WebkitOverflowScrolling: 'touch',
	    // So we see the menu when it's empty.
	    // It's most likely on issue on userland.
	    minWidth: 16,
	    minHeight: 16
	  }
	};

	var Menu = function (_React$Component) {
	  (0, _inherits3.default)(Menu, _React$Component);

	  function Menu() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Menu);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Menu.__proto__ || (0, _getPrototypeOf2.default)(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.menuList = undefined, _this.focus = function () {
	      if (_this.menuList && _this.menuList.selectedItem) {
	        // $FlowFixMe
	        (0, _reactDom.findDOMNode)(_this.menuList.selectedItem).focus();
	        return;
	      }

	      var menuList = (0, _reactDom.findDOMNode)(_this.menuList);
	      if (menuList && menuList.firstChild) {
	        // $FlowFixMe
	        menuList.firstChild.focus();
	      }
	    }, _this.handleEnter = function (element) {
	      var theme = _this.props.theme;


	      var menuList = (0, _reactDom.findDOMNode)(_this.menuList);

	      // Focus so the scroll computation of the Popover works as expected.
	      _this.focus();

	      // Let's ignore that piece of logic if users are already overriding the width
	      // of the menu.
	      // $FlowFixMe
	      if (menuList && element.clientHeight < menuList.clientHeight && !menuList.style.width) {
	        var size = (0, _scrollbarSize2.default)() + 'px';
	        // $FlowFixMe
	        menuList.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = size;
	        // $FlowFixMe
	        menuList.style.width = 'calc(100% + ' + size + ')';
	      }

	      if (_this.props.onEnter) {
	        _this.props.onEnter(element);
	      }
	    }, _this.handleListKeyDown = function (event, key) {
	      if (key === 'tab') {
	        event.preventDefault();

	        if (_this.props.onRequestClose) {
	          _this.props.onRequestClose(event);
	        }
	      }
	    }, _this.getContentAnchorEl = function () {
	      if (!_this.menuList || !_this.menuList.selectedItem) {
	        // $FlowFixMe
	        return (0, _reactDom.findDOMNode)(_this.menuList).firstChild;
	      }

	      return (0, _reactDom.findDOMNode)(_this.menuList.selectedItem);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Menu, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.open) {
	        this.focus();
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (!prevProps.open && this.props.open) {
	        // Needs to refocus as when a menu is rendered into another Modal,
	        // the first modal might change the focus to prevent any leak.
	        this.focus();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          children = _props.children,
	          classes = _props.classes,
	          className = _props.className,
	          MenuListProps = _props.MenuListProps,
	          onEnter = _props.onEnter,
	          theme = _props.theme,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'className', 'MenuListProps', 'onEnter', 'theme']);


	      return _react2.default.createElement(
	        _Popover2.default,
	        (0, _extends3.default)({
	          getContentAnchorEl: this.getContentAnchorEl,
	          className: (0, _classnames2.default)(classes.root, className),
	          onEnter: this.handleEnter,
	          anchorOrigin: theme.direction === 'rtl' ? rtlOrigin : ltrOrigin,
	          transformOrigin: theme.direction === 'rtl' ? rtlOrigin : ltrOrigin
	        }, other),
	        _react2.default.createElement(
	          _MenuList2.default,
	          (0, _extends3.default)({
	            role: 'menu',
	            ref: function ref(node) {
	              _this2.menuList = node;
	            },
	            onKeyDown: this.handleListKeyDown
	          }, MenuListProps),
	          children
	        )
	      );
	    }
	  }]);
	  return Menu;
	}(_react2.default.Component);

	Menu.defaultProps = {
	  open: false,
	  transitionDuration: 'auto'
	};
	exports.default = (0, _withStyles2.default)(styles, { withTheme: true, name: 'MuiMenu' })(Menu);

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Popover = __webpack_require__(661);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Popover).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _contains = __webpack_require__(526);

	var _contains2 = _interopRequireDefault(_contains);

	var _debounce = __webpack_require__(619);

	var _debounce2 = _interopRequireDefault(_debounce);

	var _reactEventListener = __webpack_require__(616);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Modal = __webpack_require__(595);

	var _Modal2 = _interopRequireDefault(_Modal);

	var _Grow = __webpack_require__(662);

	var _Grow2 = _interopRequireDefault(_Grow);

	var _Paper = __webpack_require__(569);

	var _Paper2 = _interopRequireDefault(_Paper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_TransitionCallback = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionCallback || __webpack_require__(174).any;

	function getOffsetTop(rect, vertical) {
	  var offset = 0;

	  if (typeof vertical === 'number') {
	    offset = vertical;
	  } else if (vertical === 'center') {
	    offset = rect.height / 2;
	  } else if (vertical === 'bottom') {
	    offset = rect.height;
	  }

	  return offset;
	}

	function getOffsetLeft(rect, horizontal) {
	  var offset = 0;

	  if (typeof horizontal === 'number') {
	    offset = horizontal;
	  } else if (horizontal === 'center') {
	    offset = rect.width / 2;
	  } else if (horizontal === 'right') {
	    offset = rect.width;
	  }

	  return offset;
	}

	function getTransformOriginValue(transformOrigin) {
	  return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) {
	    return typeof n === 'number' ? n + 'px' : n;
	  }).join(' ');
	}

	// Sum the scrollTop between two elements.
	function getScrollParent(parent, child) {
	  var element = child;
	  var scrollTop = 0;

	  while (element && element !== parent) {
	    element = element.parentNode;
	    scrollTop += element.scrollTop;
	  }
	  return scrollTop;
	}

	var styles = exports.styles = {
	  paper: {
	    position: 'absolute',
	    overflowY: 'auto',
	    overflowX: 'hidden',
	    '&:focus': {
	      outline: 'none'
	    }
	  }
	};

	var babelPluginFlowReactPropTypes_proptype_Origin = {
	  horizontal: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['left']), __webpack_require__(174).oneOf(['center']), __webpack_require__(174).oneOf(['right']), __webpack_require__(174).number]).isRequired,
	  vertical: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['top']), __webpack_require__(174).oneOf(['center']), __webpack_require__(174).oneOf(['bottom']), __webpack_require__(174).number]).isRequired
	};
	var babelPluginFlowReactPropTypes_proptype_Props = {
	  anchorEl: typeof HTMLElement === 'function' ? __webpack_require__(174).instanceOf(HTMLElement) : __webpack_require__(174).any,
	  anchorOrigin: __webpack_require__(174).shape({
	    horizontal: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['left']), __webpack_require__(174).oneOf(['center']), __webpack_require__(174).oneOf(['right']), __webpack_require__(174).number]).isRequired,
	    vertical: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['top']), __webpack_require__(174).oneOf(['center']), __webpack_require__(174).oneOf(['bottom']), __webpack_require__(174).number]).isRequired
	  }),
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  elevation: __webpack_require__(174).number,
	  enteredClassName: __webpack_require__(174).string,
	  enteringClassName: __webpack_require__(174).string,
	  exitedClassName: __webpack_require__(174).string,
	  exitingClassName: __webpack_require__(174).string,
	  getContentAnchorEl: __webpack_require__(174).func,
	  onEnter: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntering: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntered: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExit: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExiting: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExited: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onRequestClose: __webpack_require__(174).func,
	  open: __webpack_require__(174).bool,
	  PaperProps: __webpack_require__(174).object,
	  role: __webpack_require__(174).string,
	  transformOrigin: __webpack_require__(174).shape({
	    horizontal: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['left']), __webpack_require__(174).oneOf(['center']), __webpack_require__(174).oneOf(['right']), __webpack_require__(174).number]).isRequired,
	    vertical: __webpack_require__(174).oneOfType([__webpack_require__(174).oneOf(['top']), __webpack_require__(174).oneOf(['center']), __webpack_require__(174).oneOf(['bottom']), __webpack_require__(174).number]).isRequired
	  }),
	  transitionDuration: __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).oneOf(['auto'])])
	};

	var Popover = function (_React$Component) {
	  (0, _inherits3.default)(Popover, _React$Component);

	  function Popover() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Popover);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Popover.__proto__ || (0, _getPrototypeOf2.default)(Popover)).call.apply(_ref, [this].concat(args))), _this), _this.componentWillUnmount = function () {
	      _this.handleResize.cancel();
	    }, _this.transitionEl = undefined, _this.setPositioningStyles = function (element) {
	      if (element && element.style) {
	        var positioning = _this.getPositioningStyle(element);

	        element.style.top = positioning.top;
	        element.style.left = positioning.left;
	        element.style.transformOrigin = positioning.transformOrigin;
	      }
	    }, _this.handleEnter = function (element) {
	      if (_this.props.onEnter) {
	        _this.props.onEnter(element);
	      }

	      _this.setPositioningStyles(element);
	    }, _this.handleResize = (0, _debounce2.default)(function () {
	      var element = _reactDom2.default.findDOMNode(_this.transitionEl);
	      _this.setPositioningStyles(element);
	    }, 166), _this.marginThreshold = 16, _this.handleGetOffsetTop = getOffsetTop, _this.handleGetOffsetLeft = getOffsetLeft, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Popover, [{
	    key: 'getPositioningStyle',
	    value: function getPositioningStyle(element) {
	      // Check if the parent has requested anchoring on an inner content node
	      var contentAnchorOffset = this.getContentAnchorOffset(element);
	      // Get the offset of of the anchoring element
	      var anchorOffset = this.getAnchorOffset(contentAnchorOffset);

	      var elemRect = {
	        width: element.clientWidth,
	        height: element.clientHeight
	      };
	      // Get the transform origin point on the element itself
	      var transformOrigin = this.getTransformOrigin(elemRect, contentAnchorOffset);

	      // Calculate element positioning
	      var top = anchorOffset.top - transformOrigin.vertical;
	      var left = anchorOffset.left - transformOrigin.horizontal;
	      var bottom = top + elemRect.height;
	      var right = left + elemRect.width;

	      // Window thresholds taking required margin into account
	      var heightThreshold = window.innerHeight - this.marginThreshold;
	      var widthThreshold = window.innerWidth - this.marginThreshold;

	      // Check if the vertical axis needs shifting
	      if (top < this.marginThreshold) {
	        var diff = top - this.marginThreshold;
	        top -= diff;
	        transformOrigin.vertical += diff;
	      } else if (bottom > heightThreshold) {
	        var _diff = bottom - heightThreshold;
	        top -= _diff;
	        transformOrigin.vertical += _diff;
	      }

	      // Check if the horizontal axis needs shifting
	      if (left < this.marginThreshold) {
	        var _diff2 = left - this.marginThreshold;
	        left -= _diff2;
	        transformOrigin.horizontal += _diff2;
	      } else if (right > widthThreshold) {
	        var _diff3 = right - widthThreshold;
	        left -= _diff3;
	        transformOrigin.horizontal += _diff3;
	      }

	      return {
	        top: top + 'px',
	        left: left + 'px',
	        transformOrigin: getTransformOriginValue(transformOrigin)
	      };
	    }
	  }, {
	    key: 'getAnchorOffset',


	    // Returns the top/left offset of the position
	    // to attach to on the anchor element (or body if none is provided)
	    value: function getAnchorOffset(contentAnchorOffset) {
	      // $FlowFixMe
	      var _props = this.props,
	          anchorEl = _props.anchorEl,
	          anchorOrigin = _props.anchorOrigin;

	      var anchorElement = anchorEl || document.body;
	      var anchorRect = anchorElement.getBoundingClientRect();
	      var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';

	      return {
	        top: anchorRect.top + this.handleGetOffsetTop(anchorRect, anchorVertical),
	        left: anchorRect.left + this.handleGetOffsetLeft(anchorRect, anchorOrigin.horizontal)
	      };
	    }

	    // Returns the vertical offset of inner content to anchor the transform on if provided

	  }, {
	    key: 'getContentAnchorOffset',
	    value: function getContentAnchorOffset(element) {
	      var contentAnchorOffset = 0;

	      if (this.props.getContentAnchorEl) {
	        var contentAnchorEl = this.props.getContentAnchorEl(element);

	        if (contentAnchorEl && (0, _contains2.default)(element, contentAnchorEl)) {
	          var scrollTop = getScrollParent(element, contentAnchorEl);
	          contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
	        }

	        // != the default value
	         false ? (0, _warning2.default)(this.props.anchorOrigin.vertical === 'top', ['Material-UI: you can change the `anchorOrigin.vertical` value when also ', 'providing the `getContentAnchorEl` property. Pick one.'].join()) : void 0;
	      }

	      return contentAnchorOffset;
	    }

	    // Return the base transform origin using the element
	    // and taking the content anchor offset into account if in use

	  }, {
	    key: 'getTransformOrigin',
	    value: function getTransformOrigin(elemRect) {
	      var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	      var transformOrigin = this.props.transformOrigin;

	      return {
	        vertical: this.handleGetOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,
	        horizontal: this.handleGetOffsetLeft(elemRect, transformOrigin.horizontal)
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props2 = this.props,
	          anchorEl = _props2.anchorEl,
	          anchorOrigin = _props2.anchorOrigin,
	          children = _props2.children,
	          classes = _props2.classes,
	          className = _props2.className,
	          elevation = _props2.elevation,
	          enteredClassName = _props2.enteredClassName,
	          enteringClassName = _props2.enteringClassName,
	          exitedClassName = _props2.exitedClassName,
	          exitingClassName = _props2.exitingClassName,
	          getContentAnchorEl = _props2.getContentAnchorEl,
	          onEnter = _props2.onEnter,
	          onEntering = _props2.onEntering,
	          onEntered = _props2.onEntered,
	          onExit = _props2.onExit,
	          onExiting = _props2.onExiting,
	          onExited = _props2.onExited,
	          open = _props2.open,
	          PaperProps = _props2.PaperProps,
	          role = _props2.role,
	          transformOrigin = _props2.transformOrigin,
	          transitionDuration = _props2.transitionDuration,
	          other = (0, _objectWithoutProperties3.default)(_props2, ['anchorEl', 'anchorOrigin', 'children', 'classes', 'className', 'elevation', 'enteredClassName', 'enteringClassName', 'exitedClassName', 'exitingClassName', 'getContentAnchorEl', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'open', 'PaperProps', 'role', 'transformOrigin', 'transitionDuration']);


	      return _react2.default.createElement(
	        _Modal2.default,
	        (0, _extends3.default)({ show: open, backdropInvisible: true }, other),
	        _react2.default.createElement(
	          _Grow2.default,
	          {
	            'in': open,
	            enteredClassName: enteredClassName,
	            enteringClassName: enteringClassName,
	            exitedClassName: exitedClassName,
	            exitingClassName: exitingClassName,
	            onEnter: this.handleEnter,
	            onEntering: onEntering,
	            onEntered: onEntered,
	            onExit: onExit,
	            onExiting: onExiting,
	            onExited: onExited,
	            role: role,
	            transitionAppear: true,
	            transitionDuration: transitionDuration,
	            rootRef: function rootRef(node) {
	              _this2.transitionEl = node;
	            }
	          },
	          _react2.default.createElement(
	            _Paper2.default,
	            (0, _extends3.default)({
	              className: (0, _classnames2.default)(classes.paper, className),
	              elevation: elevation
	            }, PaperProps),
	            _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }),
	            children
	          )
	        )
	      );
	    }
	  }]);
	  return Popover;
	}(_react2.default.Component);

	Popover.defaultProps = {
	  anchorOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  open: false,
	  transformOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  transitionDuration: 'auto',
	  elevation: 8
	};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiPopover' })(Popover);

/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	exports.getScale = getScale;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _withTheme = __webpack_require__(546);

	var _withTheme2 = _interopRequireDefault(_withTheme);

	var _Transition = __webpack_require__(599);

	var _Transition2 = _interopRequireDefault(_Transition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	// Only exported for tests.
	var babelPluginFlowReactPropTypes_proptype_TransitionCallback = __webpack_require__(599).babelPluginFlowReactPropTypes_proptype_TransitionCallback || __webpack_require__(174).any;

	function getScale(value) {
	  return 'scale(' + value + ', ' + Math.pow(value, 2) + ')';
	}

	var babelPluginFlowReactPropTypes_proptype_TransitionDuration = __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).shape({
	  enter: __webpack_require__(174).number,
	  exit: __webpack_require__(174).number
	}), __webpack_require__(174).oneOf(['auto'])]);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element),
	  onEnter: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntering: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onEntered: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExit: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExiting: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  onExited: typeof babelPluginFlowReactPropTypes_proptype_TransitionCallback === 'function' ? babelPluginFlowReactPropTypes_proptype_TransitionCallback : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_TransitionCallback),
	  rootRef: __webpack_require__(174).func,
	  theme: __webpack_require__(174).object,
	  transitionDuration: __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).shape({
	    enter: __webpack_require__(174).number,
	    exit: __webpack_require__(174).number
	  }), __webpack_require__(174).oneOf(['auto'])])
	};

	/**
	 * Grow transition used by popovers such as Menu.
	 */
	var Grow = function (_React$Component) {
	  (0, _inherits3.default)(Grow, _React$Component);

	  function Grow() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Grow);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Grow.__proto__ || (0, _getPrototypeOf2.default)(Grow)).call.apply(_ref, [this].concat(args))), _this), _this.autoTransitionDuration = undefined, _this.handleEnter = function (element) {
	      element.style.opacity = '0';
	      element.style.transform = getScale(0.75);

	      if (_this.props.onEnter) {
	        _this.props.onEnter(element);
	      }

	      var _this$props = _this.props,
	          theme = _this$props.theme,
	          transitionDuration = _this$props.transitionDuration;

	      var duration = 0;

	      if (transitionDuration === 'auto') {
	        duration = theme.transitions.getAutoHeightDuration(element.clientHeight);
	        _this.autoTransitionDuration = duration;
	      } else if (typeof transitionDuration === 'number') {
	        duration = transitionDuration;
	      } else if (transitionDuration) {
	        duration = transitionDuration.enter;
	      } else {
	        // The propType will warn in this case.
	      }

	      element.style.transition = [theme.transitions.create('opacity', {
	        duration: duration
	      }), theme.transitions.create('transform', {
	        duration: duration * 0.666
	      })].join(',');
	    }, _this.handleEntering = function (element) {
	      element.style.opacity = '1';
	      element.style.transform = getScale(1);

	      if (_this.props.onEntering) {
	        _this.props.onEntering(element);
	      }
	    }, _this.handleExit = function (element) {
	      var _this$props2 = _this.props,
	          theme = _this$props2.theme,
	          transitionDuration = _this$props2.transitionDuration;

	      var duration = 0;

	      if (transitionDuration === 'auto') {
	        duration = theme.transitions.getAutoHeightDuration(element.clientHeight);
	        _this.autoTransitionDuration = duration;
	      } else if (typeof transitionDuration === 'number') {
	        duration = transitionDuration;
	      } else if (transitionDuration) {
	        duration = transitionDuration.exit;
	      } else {
	        // The propType will warn in this case.
	      }

	      element.style.transition = [theme.transitions.create('opacity', {
	        duration: duration
	      }), theme.transitions.create('transform', {
	        duration: duration * 0.666,
	        delay: duration * 0.333
	      })].join(',');

	      element.style.opacity = '0';
	      element.style.transform = getScale(0.75);

	      if (_this.props.onExit) {
	        _this.props.onExit(element);
	      }
	    }, _this.handleRequestTimeout = function () {
	      if (_this.props.transitionDuration === 'auto') {
	        return _this.autoTransitionDuration || 0;
	      }
	      return _this.props.transitionDuration;
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Grow, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          transitionDuration = _props.transitionDuration,
	          onEnter = _props.onEnter,
	          onEntering = _props.onEntering,
	          onExit = _props.onExit,
	          rootRef = _props.rootRef,
	          theme = _props.theme,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'transitionDuration', 'onEnter', 'onEntering', 'onExit', 'rootRef', 'theme']);


	      return _react2.default.createElement(
	        _Transition2.default,
	        (0, _extends3.default)({
	          onEnter: this.handleEnter,
	          onEntering: this.handleEntering,
	          onExit: this.handleExit,
	          onRequestTimeout: this.handleRequestTimeout,
	          transitionAppear: true
	        }, other, {
	          ref: rootRef
	        }),
	        children
	      );
	    }
	  }]);
	  return Grow;
	}(_react2.default.Component);

	Grow.defaultProps = {
	  transitionDuration: 'auto'
	};
	exports.default = (0, _withTheme2.default)()(Grow);

/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _toConsumableArray2 = __webpack_require__(440);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _contains = __webpack_require__(526);

	var _contains2 = _interopRequireDefault(_contains);

	var _activeElement = __webpack_require__(596);

	var _activeElement2 = _interopRequireDefault(_activeElement);

	var _ownerDocument = __webpack_require__(597);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _List = __webpack_require__(664);

	var _List2 = _interopRequireDefault(_List);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;
	// @inheritedComponent List

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  className: __webpack_require__(174).string,
	  onBlur: __webpack_require__(174).func,
	  onKeyDown: __webpack_require__(174).func
	};

	var MenuList = function (_React$Component) {
	  (0, _inherits3.default)(MenuList, _React$Component);

	  function MenuList() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, MenuList);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = MenuList.__proto__ || (0, _getPrototypeOf2.default)(MenuList)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      currentTabIndex: undefined
	    }, _this.list = undefined, _this.selectedItem = undefined, _this.blurTimer = undefined, _this.handleBlur = function (event) {
	      _this.blurTimer = setTimeout(function () {
	        if (_this.list) {
	          var list = (0, _reactDom.findDOMNode)(_this.list);
	          var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(list));
	          if (!(0, _contains2.default)(list, currentFocus)) {
	            _this.resetTabIndex();
	          }
	        }
	      }, 30);

	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleKeyDown = function (event) {
	      var list = (0, _reactDom.findDOMNode)(_this.list);
	      var key = (0, _keycode2.default)(event);
	      var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(list));

	      if ((key === 'up' || key === 'down') && (!currentFocus || currentFocus && !(0, _contains2.default)(list, currentFocus))) {
	        if (_this.selectedItem) {
	          // $FlowFixMe
	          (0, _reactDom.findDOMNode)(_this.selectedItem).focus();
	        } else {
	          // $FlowFixMe
	          list.firstChild.focus();
	        }
	      } else if (key === 'down') {
	        event.preventDefault();
	        if (currentFocus.nextElementSibling) {
	          currentFocus.nextElementSibling.focus();
	        }
	      } else if (key === 'up') {
	        event.preventDefault();
	        if (currentFocus.previousElementSibling) {
	          currentFocus.previousElementSibling.focus();
	        }
	      }

	      if (_this.props.onKeyDown) {
	        _this.props.onKeyDown(event, key);
	      }
	    }, _this.handleItemFocus = function (event) {
	      var list = (0, _reactDom.findDOMNode)(_this.list);
	      if (list) {
	        // $FlowFixMe
	        for (var i = 0; i < list.children.length; i += 1) {
	          // $FlowFixMe
	          if (list.children[i] === event.currentTarget) {
	            _this.setTabIndex(i);
	            break;
	          }
	        }
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(MenuList, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.resetTabIndex();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.blurTimer);
	    }
	  }, {
	    key: 'focus',
	    value: function focus() {
	      var currentTabIndex = this.state.currentTabIndex;

	      var list = (0, _reactDom.findDOMNode)(this.list);
	      if (!list || !list.children) {
	        return;
	      }

	      if (currentTabIndex && currentTabIndex >= 0) {
	        // $FlowFixMe
	        list.children[currentTabIndex].focus();
	      } else {
	        // $FlowFixMe
	        list.firstChild.focus();
	      }
	    }
	  }, {
	    key: 'resetTabIndex',
	    value: function resetTabIndex() {
	      var list = (0, _reactDom.findDOMNode)(this.list);
	      var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(list));
	      // $FlowFixMe
	      var items = [].concat((0, _toConsumableArray3.default)(list.children));
	      var currentFocusIndex = items.indexOf(currentFocus);

	      if (currentFocusIndex !== -1) {
	        return this.setTabIndex(currentFocusIndex);
	      }

	      if (this.selectedItem) {
	        return this.setTabIndex(items.indexOf((0, _reactDom.findDOMNode)(this.selectedItem)));
	      }

	      return this.setTabIndex(0);
	    }
	  }, {
	    key: 'setTabIndex',
	    value: function setTabIndex(index) {
	      this.setState({ currentTabIndex: index });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          onBlur = _props.onBlur,
	          onKeyDown = _props.onKeyDown,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'className', 'onBlur', 'onKeyDown']);


	      return _react2.default.createElement(
	        _List2.default,
	        (0, _extends3.default)({
	          role: 'menu',
	          rootRef: function rootRef(node) {
	            _this2.list = node;
	          },
	          className: className,
	          onKeyDown: this.handleKeyDown,
	          onBlur: this.handleBlur
	        }, other),
	        _react2.default.Children.map(children, function (child, index) {
	          if (!_react2.default.isValidElement(child)) {
	            return null;
	          }

	          return _react2.default.cloneElement(child, {
	            tabIndex: index === _this2.state.currentTabIndex ? 0 : -1,
	            ref: child.props.selected ? function (node) {
	              _this2.selectedItem = node;
	            } : undefined,
	            onFocus: _this2.handleItemFocus
	          });
	        })
	      );
	    }
	  }]);
	  return MenuList;
	}(_react2.default.Component);

	MenuList.propTypes =  false ? {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node),
	  className: require('prop-types').string,
	  onBlur: require('prop-types').func,
	  onKeyDown: require('prop-types').func
	} : {};
	exports.default = MenuList;

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _List = __webpack_require__(665);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_List).default;
	  }
	});

	var _ListItem = __webpack_require__(666);

	Object.defineProperty(exports, 'ListItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItem).default;
	  }
	});

	var _ListItemAvatar = __webpack_require__(667);

	Object.defineProperty(exports, 'ListItemAvatar', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItemAvatar).default;
	  }
	});

	var _ListItemText = __webpack_require__(668);

	Object.defineProperty(exports, 'ListItemText', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItemText).default;
	  }
	});

	var _ListItemIcon = __webpack_require__(669);

	Object.defineProperty(exports, 'ListItemIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItemIcon).default;
	  }
	});

	var _ListItemSecondaryAction = __webpack_require__(670);

	Object.defineProperty(exports, 'ListItemSecondaryAction', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItemSecondaryAction).default;
	  }
	});

	var _ListSubheader = __webpack_require__(671);

	Object.defineProperty(exports, 'ListSubheader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListSubheader).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      flex: '1 1 auto',
	      listStyle: 'none',
	      margin: 0,
	      padding: 0,
	      position: 'relative'
	    },
	    padding: {
	      paddingTop: theme.spacing.unit,
	      paddingBottom: theme.spacing.unit
	    },
	    dense: {
	      paddingTop: theme.spacing.unit / 2,
	      paddingBottom: theme.spacing.unit / 2
	    },
	    subheader: {
	      paddingTop: 0
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  dense: __webpack_require__(174).bool,
	  disablePadding: __webpack_require__(174).bool,
	  rootRef: __webpack_require__(174).func,
	  subheader: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node)
	};

	var List = function (_React$Component) {
	  (0, _inherits3.default)(List, _React$Component);

	  function List() {
	    (0, _classCallCheck3.default)(this, List);
	    return (0, _possibleConstructorReturn3.default)(this, (List.__proto__ || (0, _getPrototypeOf2.default)(List)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(List, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        dense: this.props.dense
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames;

	      var _props = this.props,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          ComponentProp = _props.component,
	          disablePadding = _props.disablePadding,
	          children = _props.children,
	          dense = _props.dense,
	          subheader = _props.subheader,
	          rootRef = _props.rootRef,
	          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'component', 'disablePadding', 'children', 'dense', 'subheader', 'rootRef']);

	      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.dense, dense && !disablePadding), (0, _defineProperty3.default)(_classNames, classes.padding, !disablePadding), (0, _defineProperty3.default)(_classNames, classes.subheader, subheader), _classNames), classNameProp);

	      return _react2.default.createElement(
	        ComponentProp,
	        (0, _extends3.default)({ ref: rootRef, className: className }, other),
	        subheader,
	        children
	      );
	    }
	  }]);
	  return List;
	}(_react2.default.Component);

	List.defaultProps = {
	  component: 'ul',
	  dense: false,
	  disablePadding: false
	};


	List.childContextTypes = {
	  dense: _propTypes2.default.bool
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiList' })(List);

/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _ButtonBase = __webpack_require__(522);

	var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

	var _reactHelpers = __webpack_require__(581);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'flex',
	      justifyContent: 'initial',
	      alignItems: 'center',
	      position: 'relative',
	      textDecoration: 'none'
	    },
	    container: {
	      position: 'relative'
	    },
	    keyboardFocused: {
	      background: theme.palette.text.divider
	    },
	    default: {
	      paddingTop: 12,
	      paddingBottom: 12
	    },
	    dense: {
	      paddingTop: theme.spacing.unit,
	      paddingBottom: theme.spacing.unit
	    },
	    disabled: {
	      opacity: 0.5
	    },
	    divider: {
	      borderBottom: '1px solid ' + theme.palette.text.lightDivider
	    },
	    gutters: {
	      paddingLeft: theme.spacing.unit * 2,
	      paddingRight: theme.spacing.unit * 2
	    },
	    button: {
	      transition: theme.transitions.create('background-color', {
	        duration: theme.transitions.duration.shortest
	      }),
	      '&:hover': {
	        textDecoration: 'none',
	        backgroundColor: theme.palette.text.divider,
	        '&$disabled': {
	          backgroundColor: 'transparent'
	        }
	      }
	    },
	    secondaryAction: {
	      // Add some space to avoid collision as `ListItemSecondaryAction`
	      // is absolutely positionned.
	      paddingRight: theme.spacing.unit * 4
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  button: __webpack_require__(174).bool,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  dense: __webpack_require__(174).bool,
	  disabled: __webpack_require__(174).bool,
	  disableGutters: __webpack_require__(174).bool,
	  divider: __webpack_require__(174).bool
	};

	var ListItem = function (_React$Component) {
	  (0, _inherits3.default)(ListItem, _React$Component);

	  function ListItem() {
	    (0, _classCallCheck3.default)(this, ListItem);
	    return (0, _possibleConstructorReturn3.default)(this, (ListItem.__proto__ || (0, _getPrototypeOf2.default)(ListItem)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(ListItem, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        dense: this.props.dense || this.context.dense || false
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames;

	      var _props = this.props,
	          button = _props.button,
	          childrenProp = _props.children,
	          classes = _props.classes,
	          classNameProp = _props.className,
	          componentProp = _props.component,
	          dense = _props.dense,
	          disabled = _props.disabled,
	          divider = _props.divider,
	          disableGutters = _props.disableGutters,
	          other = (0, _objectWithoutProperties3.default)(_props, ['button', 'children', 'classes', 'className', 'component', 'dense', 'disabled', 'divider', 'disableGutters']);

	      var isDense = dense || this.context.dense || false;
	      var children = _react2.default.Children.toArray(childrenProp);

	      var hasAvatar = children.some(function (value) {
	        return (0, _reactHelpers.isMuiElement)(value, ['ListItemAvatar']);
	      });
	      var hasSecondaryAction = children.length && (0, _reactHelpers.isMuiElement)(children[children.length - 1], ['ListItemSecondaryAction']);

	      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.gutters, !disableGutters), (0, _defineProperty3.default)(_classNames, classes.divider, divider), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.button, button), (0, _defineProperty3.default)(_classNames, classes.secondaryAction, hasSecondaryAction), (0, _defineProperty3.default)(_classNames, isDense || hasAvatar ? classes.dense : classes.default, true), _classNames), classNameProp);

	      var listItemProps = (0, _extends3.default)({ className: className, disabled: disabled }, other);
	      var ComponentMain = componentProp;

	      if (button) {
	        ComponentMain = _ButtonBase2.default;
	        listItemProps.component = componentProp || 'li';
	        listItemProps.keyboardFocusedClassName = classes.keyboardFocused;
	      }

	      if (hasSecondaryAction) {
	        return _react2.default.createElement(
	          'div',
	          { className: classes.container },
	          _react2.default.createElement(
	            ComponentMain,
	            listItemProps,
	            children
	          ),
	          children.pop()
	        );
	      }

	      return _react2.default.createElement(
	        ComponentMain,
	        listItemProps,
	        children
	      );
	    }
	  }]);
	  return ListItem;
	}(_react2.default.Component);

	ListItem.defaultProps = {
	  button: false,
	  component: 'li',
	  dense: false,
	  disabled: false,
	  disableGutters: false,
	  divider: false
	};


	ListItem.contextTypes = {
	  dense: _propTypes2.default.bool
	};

	ListItem.childContextTypes = {
	  dense: _propTypes2.default.bool
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItem' })(ListItem);

/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	var styles = exports.styles = {
	  root: {
	    width: 36,
	    height: 36,
	    fontSize: 18,
	    marginRight: 4
	  },
	  icon: {
	    width: 20,
	    height: 20,
	    fontSize: 20
	  }
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element.isRequired ? babelPluginFlowReactPropTypes_proptype_Element.isRequired : babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element).isRequired,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string
	};


	/**
	 * It's a simple wrapper to apply the `dense` mode styles to `Avatar`.
	 */
	function ListItemAvatar(props, context) {
	  if (context.dense === undefined) {
	     false ? (0, _warning2.default)(false, 'Material-UI: <ListItemAvatar> is a simple wrapper to apply the dense styles\n      to <Avatar>. You do not need it unless you are controlling the <List> dense property.') : void 0;
	    return props.children;
	  }

	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


	  return _react2.default.cloneElement(children, (0, _extends3.default)({
	    className: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.root, context.dense), classNameProp, children.props.className),
	    childrenClassName: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.icon, context.dense), children.props.childrenClassName)
	  }, other));
	}

	ListItemAvatar.contextTypes = {
	  dense: _propTypes2.default.bool
	};

	ListItemAvatar.muiName = 'ListItemAvatar';

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemAvatar' })(ListItemAvatar);

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref; //  weak

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Typography = __webpack_require__(610);

	var _Typography2 = _interopRequireDefault(_Typography);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      flex: '1 1 auto',
	      padding: '0 16px',
	      '&:first-child': {
	        paddingLeft: 0
	      }
	    },
	    inset: {
	      '&:first-child': {
	        paddingLeft: theme.spacing.unit * 7
	      }
	    },
	    dense: {
	      fontSize: 13
	    },
	    text: {}, // Present to allow external customization
	    textDense: {
	      fontSize: 'inherit'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  disableTypography: __webpack_require__(174).bool,
	  inset: __webpack_require__(174).bool,
	  primary: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  secondary: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node)
	};


	function ListItemText(props, context) {
	  var _classNames;

	  var classes = props.classes,
	      classNameProp = props.className,
	      disableTypography = props.disableTypography,
	      primary = props.primary,
	      secondary = props.secondary,
	      inset = props.inset,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'disableTypography', 'primary', 'secondary', 'inset']);
	  var dense = context.dense;

	  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.dense, dense), (0, _defineProperty3.default)(_classNames, classes.inset, inset), _classNames), classNameProp);

	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: className }, other),
	    primary && (disableTypography ? primary : _react2.default.createElement(
	      _Typography2.default,
	      {
	        type: 'subheading',
	        className: (0, _classnames2.default)(classes.text, (0, _defineProperty3.default)({}, classes.textDense, dense))
	      },
	      primary
	    )),
	    secondary && (disableTypography ? secondary : _react2.default.createElement(
	      _Typography2.default,
	      {
	        color: 'secondary',
	        type: 'body1',
	        className: (0, _classnames2.default)(classes.text, (0, _defineProperty3.default)({}, classes.textDense, dense))
	      },
	      secondary
	    ))
	  );
	}

	ListItemText.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'disableTypography', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'inset', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'primary', typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)), (0, _defineProperty3.default)(_ref, 'secondary', typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)), _ref) : {};
	ListItemText.defaultProps = {
	  disableTypography: false,
	  primary: false,
	  secondary: false,
	  inset: false
	};

	ListItemText.contextTypes = {
	  dense: _propTypes2.default.bool
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemText' })(ListItemText);

/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      height: 24,
	      marginRight: theme.spacing.unit * 2,
	      width: 24,
	      color: theme.palette.action.active,
	      flexShrink: 0
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element.isRequired ? babelPluginFlowReactPropTypes_proptype_Element.isRequired : babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element).isRequired,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string
	};


	/**
	 * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
	 */
	function ListItemIcon(props) {
	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


	  return _react2.default.cloneElement(children, (0, _extends3.default)({
	    className: (0, _classnames2.default)(classes.root, classNameProp, children.props.className)
	  }, other));
	}

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemIcon' })(ListItemIcon);

/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _ref; //  weak

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      position: 'absolute',
	      right: 4,
	      top: '50%',
	      marginTop: -theme.spacing.unit * 3
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string
	};


	function ListItemSecondaryAction(props) {
	  var children = props.children,
	      classes = props.classes,
	      className = props.className;


	  return _react2.default.createElement(
	    'div',
	    { className: (0, _classnames2.default)(classes.root, className) },
	    children
	  );
	}

	ListItemSecondaryAction.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), _ref) : {};
	ListItemSecondaryAction.muiName = 'ListItemSecondaryAction';

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemSecondaryAction' })(ListItemSecondaryAction);

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref; //  weak

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _helpers = __webpack_require__(568);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      boxSizing: 'border-box',
	      lineHeight: '48px',
	      paddingLeft: theme.spacing.unit * 2,
	      paddingRight: theme.spacing.unit * 2,
	      color: theme.palette.text.secondary,
	      fontFamily: theme.typography.fontFamily,
	      fontWeight: theme.typography.fontWeightMedium,
	      fontSize: theme.typography.fontSize
	    },
	    colorPrimary: {
	      color: theme.palette.primary[500]
	    },
	    colorInherit: {
	      color: 'inherit'
	    },
	    inset: {
	      paddingLeft: theme.spacing.unit * 9
	    },
	    sticky: {
	      position: 'sticky',
	      top: 0,
	      zIndex: 1,
	      backgroundColor: 'inherit'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  color: __webpack_require__(174).oneOf(['default', 'primary', 'inherit']),
	  disableSticky: __webpack_require__(174).bool,
	  inset: __webpack_require__(174).bool
	};


	function ListSubheader(props) {
	  var _classNames;

	  var children = props.children,
	      classes = props.classes,
	      classNameProp = props.className,
	      color = props.color,
	      disableSticky = props.disableSticky,
	      inset = props.inset,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'disableSticky', 'inset']);

	  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.inset, inset), (0, _defineProperty3.default)(_classNames, classes.sticky, !disableSticky), _classNames), classNameProp);

	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({ className: className }, other),
	    children
	  );
	}

	ListSubheader.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'color', require('prop-types').oneOf(['default', 'primary', 'inherit'])), (0, _defineProperty3.default)(_ref, 'disableSticky', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'inset', require('prop-types').bool), _ref) : {};
	ListSubheader.defaultProps = {
	  color: 'default',
	  disableSticky: false,
	  inset: false
	};

	ListSubheader.muiName = 'ListSubheader';

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListSubheader' })(ListSubheader);

/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _ref;
	// @inheritedComponent ListItem

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _ListItem = __webpack_require__(666);

	var _ListItem2 = _interopRequireDefault(_ListItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: (0, _extends3.default)({}, theme.typography.subheading, {
	      height: 24,
	      boxSizing: 'content-box',
	      background: 'none',
	      overflow: 'hidden',
	      textOverflow: 'ellipsis',
	      whiteSpace: 'nowrap',
	      '&:focus': {
	        background: theme.palette.text.divider
	      },
	      '&:hover': {
	        backgroundColor: theme.palette.text.divider
	      }
	    }),
	    selected: {
	      backgroundColor: theme.palette.text.divider
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  role: __webpack_require__(174).string,
	  selected: __webpack_require__(174).bool
	};


	function MenuItem(props) {
	  var classes = props.classes,
	      classNameProp = props.className,
	      component = props.component,
	      selected = props.selected,
	      role = props.role,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'component', 'selected', 'role']);


	  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.selected, selected), classNameProp);

	  return _react2.default.createElement(_ListItem2.default, (0, _extends3.default)({
	    button: true,
	    role: role,
	    tabIndex: -1,
	    className: className,
	    component: component
	  }, other));
	}

	MenuItem.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  role: require('prop-types').string.isRequired,
	  selected: require('prop-types').bool.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'component', typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType)), (0, _defineProperty3.default)(_ref, 'role', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'selected', require('prop-types').bool), _ref) : {};
	MenuItem.defaultProps = {
	  role: 'menuitem',
	  selected: false
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiMenuItem' })(MenuItem);

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Select = __webpack_require__(674);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Select).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _SelectInput = __webpack_require__(675);

	var _SelectInput2 = _interopRequireDefault(_SelectInput);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _Input = __webpack_require__(648);

	var _Input2 = _interopRequireDefault(_Input);

	var _reactHelpers = __webpack_require__(581);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;
	// @inheritedComponent Input

	var babelPluginFlowReactPropTypes_proptype_ChildrenArray = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ChildrenArray || __webpack_require__(174).any; // Import to enforce the CSS injection order


	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      position: 'relative'
	    },
	    select: {
	      '-moz-appearance': 'none', // Remove Firefox custom style
	      '-webkit-appearance': 'none', // Fix SSR issue
	      appearance: 'none', // Reset
	      // When interacting quickly, the text can end up selected.
	      // Native select can't be selected either.
	      userSelect: 'none',
	      padding: '0 ' + theme.spacing.unit * 4 + 'px 2px 0',
	      width: 'calc(100% - ' + theme.spacing.unit * 4 + 'px)',
	      minWidth: theme.spacing.unit * 2, // So it doesn't collapse.
	      height: 'calc(1em + ' + (theme.spacing.unit * 2 - 2) + 'px)',
	      cursor: 'pointer',
	      '&:focus': {
	        // Show that it's not an text input
	        background: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
	        borderRadius: 0 // Reset Chrome style
	      },
	      // Remove Firefox focus border
	      '&:-moz-focusring': {
	        color: 'transparent',
	        textShadow: '0 0 0 #000'
	      }
	    },
	    selectMenu: {
	      textOverflow: 'ellipsis',
	      whiteSpace: 'nowrap',
	      overflow: 'hidden',
	      lineHeight: 'calc(1em + ' + (theme.spacing.unit * 2 - 2) + 'px)'
	    },
	    disabled: {
	      cursor: 'default'
	    },
	    icon: {
	      position: 'absolute',
	      right: 0,
	      top: 4,
	      color: theme.palette.text.secondary,
	      'pointer-events': 'none' // Don't block pinter events on the select under the icon.
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  autoWidth: __webpack_require__(174).bool,
	  children: typeof $ReadOnlyArray === 'function' ? __webpack_require__(174).instanceOf($ReadOnlyArray).isRequired : __webpack_require__(174).any.isRequired,
	  classes: __webpack_require__(174).object,
	  displayEmpty: __webpack_require__(174).bool,
	  input: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element),
	  native: __webpack_require__(174).bool,
	  multiple: __webpack_require__(174).bool,
	  MenuProps: __webpack_require__(174).object,
	  renderValue: __webpack_require__(174).func,
	  value: __webpack_require__(174).oneOfType([__webpack_require__(174).arrayOf(__webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number])), __webpack_require__(174).string, __webpack_require__(174).number])
	};


	function Select(props) {
	  var autoWidth = props.autoWidth,
	      children = props.children,
	      classes = props.classes,
	      displayEmpty = props.displayEmpty,
	      input = props.input,
	      native = props.native,
	      multiple = props.multiple,
	      MenuProps = props.MenuProps,
	      renderValue = props.renderValue,
	      other = (0, _objectWithoutProperties3.default)(props, ['autoWidth', 'children', 'classes', 'displayEmpty', 'input', 'native', 'multiple', 'MenuProps', 'renderValue']);

	  // Instead of `Element<typeof Input>` to have more flexibility.

	   false ? (0, _warning2.default)((0, _reactHelpers.isMuiElement)(input, ['Input']), ['Material-UI: you have provided an invalid value to the `input` property.', 'We expect an element instance of the `Input` component.'].join('\n')) : void 0;

	  return _react2.default.cloneElement(input, (0, _extends3.default)({
	    // Most of the logic is implemented in `SelectInput`.
	    // The `Select` component is a simple API wrapper to expose something better to play with.
	    inputComponent: _SelectInput2.default
	  }, other, {
	    inputProps: (0, _extends3.default)({}, input ? input.props.inputProps : {}, {
	      autoWidth: autoWidth,
	      children: children,
	      classes: classes,
	      displayEmpty: displayEmpty,
	      native: native,
	      multiple: multiple,
	      MenuProps: MenuProps,
	      renderValue: renderValue
	    })
	  }));
	}

	Select.defaultProps = {
	  autoWidth: false,
	  displayEmpty: false,
	  input: _react2.default.createElement(_Input2.default, null),
	  native: false,
	  multiple: false
	};

	Select.muiName = 'Select';

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiSelect' })(Select);

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _toConsumableArray2 = __webpack_require__(440);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _Menu = __webpack_require__(659);

	var _Menu2 = _interopRequireDefault(_Menu);

	var _Input = __webpack_require__(649);

	var _ArrowDropDown = __webpack_require__(676);

	var _ArrowDropDown2 = _interopRequireDefault(_ArrowDropDown);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  autoWidth: __webpack_require__(174).bool.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  disabled: __webpack_require__(174).bool,
	  displayEmpty: __webpack_require__(174).bool.isRequired,
	  native: __webpack_require__(174).bool.isRequired,
	  multiple: __webpack_require__(174).bool.isRequired,
	  MenuProps: __webpack_require__(174).object,
	  name: __webpack_require__(174).string,
	  onBlur: __webpack_require__(174).func,
	  onChange: __webpack_require__(174).func,
	  onFocus: __webpack_require__(174).func,
	  readOnly: __webpack_require__(174).bool,
	  renderValue: __webpack_require__(174).func,
	  selectRef: __webpack_require__(174).func,
	  value: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number, __webpack_require__(174).arrayOf(__webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]))])
	};

	/**
	 * @ignore - internal component.
	 */
	var SelectInput = function (_React$Component) {
	  (0, _inherits3.default)(SelectInput, _React$Component);

	  function SelectInput() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, SelectInput);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SelectInput.__proto__ || (0, _getPrototypeOf2.default)(SelectInput)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      anchorEl: null,
	      open: false
	    }, _this.ignoreNextBlur = false, _this.handleClick = function (event) {
	      // Opening the menu is going to blur the. It will be focused back when closed.
	      _this.ignoreNextBlur = true;
	      _this.setState({
	        open: true,
	        anchorEl: event.currentTarget
	      });
	    }, _this.handleRequestClose = function () {
	      _this.setState({
	        open: false
	      });
	    }, _this.handleItemClick = function (child) {
	      return function (event) {
	        if (!_this.props.multiple) {
	          _this.setState({
	            open: false
	          });
	        }

	        if (_this.props.onChange) {
	          var _onChange = _this.props.onChange;

	          var _value = void 0;
	          var _target = void 0;

	          if (event.target) {
	            _target = event.target;
	          }

	          if (_this.props.multiple) {
	            _value = Array.isArray(_this.props.value) ? [].concat((0, _toConsumableArray3.default)(_this.props.value)) : [];
	            var itemIndex = _value.indexOf(child.props.value);
	            if (itemIndex === -1) {
	              _value.push(child.props.value);
	            } else {
	              _value.splice(itemIndex, 1);
	            }
	          } else {
	            _value = child.props.value;
	          }

	          event.persist();
	          event.target = (0, _extends3.default)({}, _target, { value: _value });

	          _onChange(event, child);
	        }
	      };
	    }, _this.handleBlur = function (event) {
	      if (_this.ignoreNextBlur === true) {
	        // The parent components are relying on the bubbling of the event.
	        event.stopPropagation();
	        _this.ignoreNextBlur = false;
	        return;
	      }

	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleKeyDown = function (event) {
	      if (_this.props.readOnly) {
	        return;
	      }

	      if (['space', 'up', 'down'].includes((0, _keycode2.default)(event))) {
	        event.preventDefault();
	        // Opening the menu is going to blur the. It will be focused back when closed.
	        _this.ignoreNextBlur = true;
	        _this.setState({
	          open: true,
	          anchorEl: event.currentTarget
	        });
	      }
	    }, _this.handleSelectRef = function (node) {
	      if (!_this.props.selectRef) {
	        return;
	      }

	      _this.props.selectRef({
	        node: node,
	        // By pass the native input as we expose a rich object (array).
	        value: _this.props.value
	      });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(SelectInput, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          autoWidth = _props.autoWidth,
	          children = _props.children,
	          classNameProp = _props.className,
	          classes = _props.classes,
	          disabled = _props.disabled,
	          displayEmpty = _props.displayEmpty,
	          name = _props.name,
	          native = _props.native,
	          multiple = _props.multiple,
	          _props$MenuProps = _props.MenuProps,
	          MenuProps = _props$MenuProps === undefined ? {} : _props$MenuProps,
	          onBlur = _props.onBlur,
	          onChange = _props.onChange,
	          onFocus = _props.onFocus,
	          readOnly = _props.readOnly,
	          renderValue = _props.renderValue,
	          selectRef = _props.selectRef,
	          value = _props.value,
	          other = (0, _objectWithoutProperties3.default)(_props, ['autoWidth', 'children', 'className', 'classes', 'disabled', 'displayEmpty', 'name', 'native', 'multiple', 'MenuProps', 'onBlur', 'onChange', 'onFocus', 'readOnly', 'renderValue', 'selectRef', 'value']);


	      if (native) {
	         false ? (0, _warning2.default)(multiple === false, 'Material-UI: you can not use the `native` and `multiple` properties ' + 'at the same time on a `Select` component.') : void 0;
	         false ? (0, _warning2.default)(!renderValue, 'Material-UI: the `renderValue` property is not used by the native implementation.') : void 0;
	         false ? (0, _warning2.default)(!displayEmpty, 'Material-UI: the `displayEmpty` property is not used by the native implementation.') : void 0;

	        return _react2.default.createElement(
	          'div',
	          { className: classes.root },
	          _react2.default.createElement(
	            'select',
	            (0, _extends3.default)({
	              className: (0, _classnames2.default)(classes.select, (0, _defineProperty3.default)({}, classes.disabled, disabled), classNameProp),
	              name: name,
	              disabled: disabled,
	              ref: selectRef,
	              onBlur: onBlur,
	              onChange: onChange,
	              onFocus: onFocus,
	              value: value,
	              readOnly: readOnly
	            }, other),
	            children
	          ),
	          _react2.default.createElement(_ArrowDropDown2.default, { className: classes.icon })
	        );
	      }

	      if (value === undefined) {
	        throw new Error('Material-UI: the `value` property is required ' + 'when using the `Select` component with `native=false`.');
	      }

	      var display = void 0;
	      var displaySingle = '';
	      var displayMultiple = [];
	      var computeDisplay = false;

	      // No need to display any value if the field is empty.
	      if ((0, _Input.isDirty)(this.props) || displayEmpty) {
	        if (renderValue) {
	          display = renderValue(value);
	        } else {
	          computeDisplay = true;
	        }
	      }

	      var items = _react2.default.Children.map(children, function (child) {
	        if (!_react2.default.isValidElement(child)) {
	          return null;
	        }
	        var selected = void 0;

	        if (multiple) {
	          if (!Array.isArray(value)) {
	            throw new Error('Material-UI: the `value` property must be an array ' + 'when using the `Select` component with `multiple`.');
	          }

	          selected = value.indexOf(child.props.value) !== -1;
	          if (selected && computeDisplay) {
	            displayMultiple.push(child.props.children);
	          }
	        } else {
	          selected = value === child.props.value;
	          if (selected && computeDisplay) {
	            displaySingle = child.props.children;
	          }
	        }

	        return _react2.default.cloneElement(child, {
	          role: 'option',
	          selected: selected,
	          onClick: _this2.handleItemClick(child)
	        });
	      });

	      if (computeDisplay) {
	        display = multiple ? displayMultiple.join(', ') : displaySingle;
	      }

	      var minimumMenuWidth = this.state.anchorEl != null && !autoWidth ? this.state.anchorEl.clientWidth : undefined;

	      return _react2.default.createElement(
	        'div',
	        { className: classes.root },
	        _react2.default.createElement(
	          'div',
	          {
	            className: (0, _classnames2.default)(classes.select, classes.selectMenu, (0, _defineProperty3.default)({}, classes.disabled, disabled), classNameProp),

	            'aria-pressed': this.state.open ? 'true' : 'false',
	            tabIndex: disabled ? null : 0,
	            role: 'button',
	            'aria-owns': this.state.open ? 'menu-' + (name || '') : null,
	            'aria-haspopup': 'true',
	            onKeyDown: this.handleKeyDown,
	            onBlur: this.handleBlur,
	            onClick: disabled || readOnly ? null : this.handleClick,
	            onFocus: onFocus
	          },
	          display
	        ),
	        _react2.default.createElement('input', (0, _extends3.default)({
	          ref: this.handleSelectRef,
	          value: Array.isArray(value) ? value.join(',') : value,
	          name: name,
	          readOnly: readOnly
	        }, other, {
	          type: 'hidden'
	        })),
	        _react2.default.createElement(_ArrowDropDown2.default, { className: classes.icon }),
	        _react2.default.createElement(
	          _Menu2.default,
	          (0, _extends3.default)({
	            id: 'menu-' + (name || ''),
	            anchorEl: this.state.anchorEl,
	            open: this.state.open,
	            onRequestClose: this.handleRequestClose
	          }, MenuProps, {
	            MenuListProps: (0, _extends3.default)({}, MenuProps.MenuListProps, {
	              role: 'listbox'
	            }),
	            PaperProps: (0, _extends3.default)({}, MenuProps.PaperProps, {
	              style: (0, _extends3.default)({
	                minWidth: minimumMenuWidth
	              }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
	            })
	          }),
	          items
	        )
	      );
	    }
	  }]);
	  return SelectInput;
	}(_react2.default.Component);

	SelectInput.muiName = 'SelectInput';
	exports.default = SelectInput;

/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @ignore - internal component.
	 */
	var _ref = _react2.default.createElement('path', { d: 'M7 10l5 5 5-5z' });

	var ArrowDropDown = function ArrowDropDown(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _ref
	  );
	};

	ArrowDropDown = (0, _pure2.default)(ArrowDropDown);
	ArrowDropDown.muiName = 'SvgIcon';

	exports.default = ArrowDropDown;

/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_ElementType = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ElementType || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      height: 48,
	      '&:focus': {
	        outline: 'none'
	      }
	    },
	    head: {
	      height: 56
	    },
	    footer: {
	      height: 56
	    },
	    hover: {
	      '&:hover': {
	        background: theme.palette.background.contentFrame
	      }
	    },
	    selected: {
	      background: theme.palette.background.appBar
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Context = {
	  table: __webpack_require__(174).object.isRequired
	};
	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ElementType),
	  hover: __webpack_require__(174).bool,
	  selected: __webpack_require__(174).bool
	};


	/**
	 * Will automatically set dynamic row height
	 * based on the material table element parent (head, body, etc).
	 */
	function TableRow(props, context) {
	  var _classNames;

	  var classes = props.classes,
	      classNameProp = props.className,
	      children = props.children,
	      Component = props.component,
	      hover = props.hover,
	      selected = props.selected,
	      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'children', 'component', 'hover', 'selected']);
	  var table = context.table;


	  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.head, table && table.head), (0, _defineProperty3.default)(_classNames, classes.footer, table && table.footer), (0, _defineProperty3.default)(_classNames, classes.hover, table && hover), (0, _defineProperty3.default)(_classNames, classes.selected, table && selected), _classNames), classNameProp);

	  return _react2.default.createElement(
	    Component,
	    (0, _extends3.default)({ className: className }, other),
	    children
	  );
	}

	TableRow.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  component: typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType.isRequired ? babelPluginFlowReactPropTypes_proptype_ElementType.isRequired : babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType).isRequired,
	  hover: require('prop-types').bool.isRequired,
	  selected: require('prop-types').bool.isRequired,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'component', typeof babelPluginFlowReactPropTypes_proptype_ElementType === 'function' ? babelPluginFlowReactPropTypes_proptype_ElementType : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_ElementType)), (0, _defineProperty3.default)(_ref, 'hover', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'selected', require('prop-types').bool), _ref) : {};
	TableRow.defaultProps = {
	  hover: false,
	  selected: false,
	  component: 'tr'
	};

	TableRow.contextTypes = {
	  table: _propTypes2.default.object
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableRow' })(TableRow);

/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;
	// @inheritedComponent ButtonBase

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _ButtonBase = __webpack_require__(522);

	var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

	var _ArrowDownward = __webpack_require__(679);

	var _ArrowDownward2 = _interopRequireDefault(_ArrowDownward);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      cursor: 'pointer',
	      display: 'inline-flex',
	      justifyContent: 'flex-start',
	      flexDirection: 'inherit',
	      alignItems: 'center',
	      '&:hover': {
	        color: theme.palette.text.primary
	      },
	      '&:focus': {
	        color: theme.palette.text.primary
	      }
	    },
	    active: {
	      color: theme.palette.text.primary,
	      '& $icon': {
	        opacity: 1
	      }
	    },
	    icon: {
	      height: 16,
	      marginRight: 4,
	      marginLeft: 4,
	      opacity: 0,
	      transition: theme.transitions.create(['opacity', 'transform'], {
	        duration: theme.transitions.duration.shorter
	      }),
	      userSelect: 'none',
	      width: 16
	    },
	    desc: {
	      transform: 'rotate(0deg)'
	    },
	    asc: {
	      transform: 'rotate(180deg)'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Direction = __webpack_require__(174).oneOf(['asc', 'desc']);

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  active: __webpack_require__(174).bool,
	  children: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  direction: __webpack_require__(174).oneOf(['asc', 'desc'])
	};


	/**
	 * A button based label for placing inside `TableCell` for column sorting.
	 */
	function TableSortLabel(props) {
	  var active = props.active,
	      classes = props.classes,
	      classNameProp = props.className,
	      children = props.children,
	      direction = props.direction,
	      other = (0, _objectWithoutProperties3.default)(props, ['active', 'classes', 'className', 'children', 'direction']);

	  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.active, active), classNameProp);

	  var iconClassName = (0, _classnames2.default)(classes.icon, (0, _defineProperty3.default)({}, classes[direction], !!direction));

	  return _react2.default.createElement(
	    _ButtonBase2.default,
	    (0, _extends3.default)({ className: className, component: 'span', disableRipple: true }, other),
	    children,
	    _react2.default.createElement(_ArrowDownward2.default, { className: iconClassName })
	  );
	}

	TableSortLabel.propTypes =  false ? (_ref = {
	  active: require('prop-types').bool.isRequired,
	  classes: require('prop-types').object.isRequired,
	  direction: require('prop-types').oneOf(['asc', 'desc']).isRequired
	}, (0, _defineProperty3.default)(_ref, 'active', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'children', typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)), (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'direction', require('prop-types').oneOf(['asc', 'desc'])), _ref) : {};
	TableSortLabel.defaultProps = {
	  active: false,
	  direction: 'desc'
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableSortLabel' })(TableSortLabel);

/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @ignore - internal component.
	 */
	var _ref = _react2.default.createElement('path', { d: 'M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z' });

	var ArrowDownward = function ArrowDownward(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _ref
	  );
	};

	ArrowDownward = (0, _pure2.default)(ArrowDownward);
	ArrowDownward.muiName = 'SvgIcon';

	exports.default = ArrowDownward;

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Checkbox = __webpack_require__(681);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Checkbox).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _ref;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _SwitchBase = __webpack_require__(682);

	var _SwitchBase2 = _interopRequireDefault(_SwitchBase);

	var _IndeterminateCheckBox = __webpack_require__(685);

	var _IndeterminateCheckBox2 = _interopRequireDefault(_IndeterminateCheckBox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = function styles(theme) {
	  return {
	    default: {
	      color: theme.palette.text.secondary
	    },
	    checked: {
	      color: theme.palette.primary[500]
	    },
	    disabled: {
	      color: theme.palette.action.disabled
	    }
	  };
	};

	var SwitchBase = (0, _SwitchBase2.default)();

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  checked: __webpack_require__(174).oneOfType([__webpack_require__(174).bool, __webpack_require__(174).string]),
	  checkedClassName: __webpack_require__(174).string,
	  checkedIcon: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  defaultChecked: __webpack_require__(174).bool,
	  disabled: __webpack_require__(174).bool,
	  disabledClassName: __webpack_require__(174).string,
	  disableRipple: __webpack_require__(174).bool,
	  icon: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  indeterminate: __webpack_require__(174).bool,
	  indeterminateIcon: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  inputProps: __webpack_require__(174).object,
	  inputRef: __webpack_require__(174).func,
	  name: __webpack_require__(174).string,
	  onChange: __webpack_require__(174).func,
	  tabIndex: __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).string]),
	  value: __webpack_require__(174).string
	};


	function Checkbox(props) {
	  var checkedIcon = props.checkedIcon,
	      icon = props.icon,
	      indeterminate = props.indeterminate,
	      indeterminateIcon = props.indeterminateIcon,
	      other = (0, _objectWithoutProperties3.default)(props, ['checkedIcon', 'icon', 'indeterminate', 'indeterminateIcon']);


	  return _react2.default.createElement(SwitchBase, (0, _extends3.default)({
	    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,
	    icon: indeterminate ? indeterminateIcon : icon
	  }, other));
	}

	Checkbox.propTypes =  false ? (_ref = {
	  classes: require('prop-types').object.isRequired,
	  checked: require('prop-types').oneOfType([require('prop-types').bool, require('prop-types').string]),
	  checkedClassName: require('prop-types').string,
	  checkedIcon: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)
	}, (0, _defineProperty3.default)(_ref, 'classes', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'className', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'defaultChecked', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'disabled', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'disabledClassName', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'disableRipple', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'icon', typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)), (0, _defineProperty3.default)(_ref, 'indeterminate', require('prop-types').bool), (0, _defineProperty3.default)(_ref, 'indeterminateIcon', typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : require('prop-types').shape(babelPluginFlowReactPropTypes_proptype_Node)), (0, _defineProperty3.default)(_ref, 'inputProps', require('prop-types').object), (0, _defineProperty3.default)(_ref, 'inputRef', require('prop-types').func), (0, _defineProperty3.default)(_ref, 'name', require('prop-types').string), (0, _defineProperty3.default)(_ref, 'onChange', require('prop-types').func), (0, _defineProperty3.default)(_ref, 'tabIndex', require('prop-types').oneOfType([require('prop-types').number, require('prop-types').string])), (0, _defineProperty3.default)(_ref, 'value', require('prop-types').string), _ref) : {};
	Checkbox.defaultProps = {
	  indeterminate: false,
	  indeterminateIcon: _react2.default.createElement(_IndeterminateCheckBox2.default, null)
	};

	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiCheckbox' })(Checkbox);

/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	exports.default = createSwitch;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	var _IconButton = __webpack_require__(577);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _CheckBoxOutlineBlank = __webpack_require__(683);

	var _CheckBoxOutlineBlank2 = _interopRequireDefault(_CheckBoxOutlineBlank);

	var _CheckBox = __webpack_require__(684);

	var _CheckBox2 = _interopRequireDefault(_CheckBox);

	var _Icon = __webpack_require__(579);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var styles = exports.styles = {
	  root: {
	    display: 'inline-flex',
	    alignItems: 'center',
	    transition: 'none'
	  },
	  input: {
	    cursor: 'inherit',
	    position: 'absolute',
	    opacity: 0,
	    width: '100%',
	    height: '100%',
	    top: 0,
	    left: 0,
	    margin: 0,
	    padding: 0
	  },
	  default: {},
	  checked: {},
	  disabled: {}
	};

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  checked: __webpack_require__(174).oneOfType([__webpack_require__(174).bool, __webpack_require__(174).string]),
	  checkedClassName: __webpack_require__(174).string,
	  checkedIcon: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  defaultChecked: __webpack_require__(174).bool,
	  disabled: __webpack_require__(174).bool,
	  disabledClassName: __webpack_require__(174).string,
	  disableRipple: __webpack_require__(174).bool,
	  icon: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  indeterminate: __webpack_require__(174).bool,
	  indeterminateIcon: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  inputProps: __webpack_require__(174).object,
	  inputRef: __webpack_require__(174).func,
	  name: __webpack_require__(174).string,
	  onChange: __webpack_require__(174).func,
	  tabIndex: __webpack_require__(174).oneOfType([__webpack_require__(174).number, __webpack_require__(174).string]),
	  value: __webpack_require__(174).string
	};

	// NB: If changed, please update Checkbox, Switch and Radio
	// so that the API documentation is updated.

	var babelPluginFlowReactPropTypes_proptype_Options = {
	  defaultIcon: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element.isRequired ? babelPluginFlowReactPropTypes_proptype_Element.isRequired : babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element).isRequired,
	  defaultCheckedIcon: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element.isRequired ? babelPluginFlowReactPropTypes_proptype_Element.isRequired : babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element).isRequired,
	  inputType: __webpack_require__(174).string
	};

	var _ref2 = _react2.default.createElement(_CheckBoxOutlineBlank2.default, null);

	var _ref3 = _react2.default.createElement(_CheckBox2.default, null);

	function createSwitch() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$defaultIcon = _ref.defaultIcon,
	      defaultIcon = _ref$defaultIcon === undefined ? _ref2 : _ref$defaultIcon,
	      _ref$defaultCheckedIc = _ref.defaultCheckedIcon,
	      defaultCheckedIcon = _ref$defaultCheckedIc === undefined ? _ref3 : _ref$defaultCheckedIc,
	      _ref$inputType = _ref.inputType,
	      inputType = _ref$inputType === undefined ? 'checkbox' : _ref$inputType;

	  /**
	   * @ignore - internal component.
	   */
	  var SwitchBase = function (_React$Component) {
	    (0, _inherits3.default)(SwitchBase, _React$Component);

	    function SwitchBase() {
	      var _ref4;

	      var _temp, _this, _ret;

	      (0, _classCallCheck3.default)(this, SwitchBase);

	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref4 = SwitchBase.__proto__ || (0, _getPrototypeOf2.default)(SwitchBase)).call.apply(_ref4, [this].concat(args))), _this), _this.state = {}, _this.input = null, _this.button = null, _this.isControlled = null, _this.handleInputChange = function (event) {
	        var checked = event.target.checked;

	        if (!_this.isControlled) {
	          _this.setState({ checked: checked });
	        }

	        if (_this.props.onChange) {
	          _this.props.onChange(event, checked);
	        }
	      }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	    }

	    (0, _createClass3.default)(SwitchBase, [{
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        var props = this.props;


	        this.isControlled = props.checked !== undefined;

	        if (!this.isControlled) {
	          // not controlled, use internal state
	          this.setState({
	            checked: props.defaultChecked !== undefined ? props.defaultChecked : false
	          });
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classNames,
	            _this2 = this;

	        var _props = this.props,
	            checkedProp = _props.checked,
	            classes = _props.classes,
	            classNameProp = _props.className,
	            checkedClassName = _props.checkedClassName,
	            checkedIcon = _props.checkedIcon,
	            disabled = _props.disabled,
	            disabledClassName = _props.disabledClassName,
	            iconProp = _props.icon,
	            inputProps = _props.inputProps,
	            inputRef = _props.inputRef,
	            name = _props.name,
	            onChange = _props.onChange,
	            tabIndex = _props.tabIndex,
	            value = _props.value,
	            other = (0, _objectWithoutProperties3.default)(_props, ['checked', 'classes', 'className', 'checkedClassName', 'checkedIcon', 'disabled', 'disabledClassName', 'icon', 'inputProps', 'inputRef', 'name', 'onChange', 'tabIndex', 'value']);


	        var checked = this.isControlled ? checkedProp : this.state.checked;
	        var className = (0, _classnames2.default)(classes.root, classes.default, classNameProp, (_classNames = {}, (0, _defineProperty3.default)(_classNames, (0, _classnames2.default)(classes.checked, checkedClassName), checked), (0, _defineProperty3.default)(_classNames, (0, _classnames2.default)(classes.disabled, disabledClassName), disabled), _classNames));

	        var icon = checked ? checkedIcon : iconProp;

	        if (typeof icon === 'string') {
	          icon = _react2.default.createElement(
	            _Icon2.default,
	            null,
	            icon
	          );
	        }

	        return _react2.default.createElement(
	          _IconButton2.default,
	          (0, _extends3.default)({
	            component: 'span',
	            className: className,
	            disabled: disabled,
	            tabIndex: null,
	            role: undefined,
	            rootRef: function rootRef(node) {
	              _this2.button = node;
	            }
	          }, other),
	          icon,
	          _react2.default.createElement('input', (0, _extends3.default)({
	            ref: function ref(node) {
	              _this2.input = node;
	              if (inputRef) {
	                inputRef(node);
	              }
	            },
	            type: inputType,
	            name: name,
	            checked: this.isControlled ? checkedProp : undefined,
	            onChange: this.handleInputChange,
	            className: classes.input,
	            disabled: disabled,
	            tabIndex: tabIndex,
	            value: value
	          }, inputProps))
	        );
	      }
	    }]);
	    return SwitchBase;
	  }(_react2.default.Component);

	  SwitchBase.defaultProps = {
	    checkedIcon: defaultCheckedIcon,
	    disableRipple: false,
	    icon: defaultIcon
	  };


	  return (0, _withStyles2.default)(styles, { name: 'MuiSwitchBase' })(SwitchBase);
	}

/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @ignore - internal component.
	 */
	var _ref = _react2.default.createElement('path', { d: 'M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z' });

	var CheckBoxOutlineBlank = function CheckBoxOutlineBlank(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _ref
	  );
	};
	CheckBoxOutlineBlank = (0, _pure2.default)(CheckBoxOutlineBlank);
	CheckBoxOutlineBlank.muiName = 'SvgIcon';

	exports.default = CheckBoxOutlineBlank;

/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @ignore - internal component.
	 */
	var _ref = _react2.default.createElement('path', { d: 'M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' });

	var CheckBox = function CheckBox(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _ref
	  );
	};
	CheckBox = (0, _pure2.default)(CheckBox);
	CheckBox.muiName = 'SvgIcon';

	exports.default = CheckBox;

/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @ignore - internal component.
	 */
	var _ref = _react2.default.createElement('path', { d: 'M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z' });

	var IndeterminateCheckBox = function IndeterminateCheckBox(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _ref
	  );
	};
	IndeterminateCheckBox = (0, _pure2.default)(IndeterminateCheckBox);
	IndeterminateCheckBox.muiName = 'SvgIcon';

	exports.default = IndeterminateCheckBox;

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Tooltip = __webpack_require__(687);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Tooltip).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.styles = undefined;

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _defineProperty2 = __webpack_require__(316);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _getPrototypeOf = __webpack_require__(365);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(369);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(370);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(371);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(405);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(33);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _classnames = __webpack_require__(359);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _reactPopper = __webpack_require__(688);

	var _helpers = __webpack_require__(568);

	var _common = __webpack_require__(507);

	var _common2 = _interopRequireDefault(_common);

	var _grey = __webpack_require__(505);

	var _grey2 = _interopRequireDefault(_grey);

	var _withStyles = __webpack_require__(360);

	var _withStyles2 = _interopRequireDefault(_withStyles);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any; /* eslint-disable react/no-multi-comp */


	var babelPluginFlowReactPropTypes_proptype_Element = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Element || __webpack_require__(174).any;

	// Use a class component so we can get a reference.
	var TargetChildren = function (_React$Component) {
	  (0, _inherits3.default)(TargetChildren, _React$Component);

	  function TargetChildren() {
	    (0, _classCallCheck3.default)(this, TargetChildren);
	    return (0, _possibleConstructorReturn3.default)(this, (TargetChildren.__proto__ || (0, _getPrototypeOf2.default)(TargetChildren)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(TargetChildren, [{
	    key: 'render',
	    value: function render() {
	      return this.props.element;
	    }
	  }]);
	  return TargetChildren;
	}(_react2.default.Component);

	var styles = exports.styles = function styles(theme) {
	  return {
	    root: {
	      display: 'inline',
	      flexDirection: 'inherit' // Makes the wrapper more transparent.
	    },
	    popper: {
	      zIndex: theme.zIndex.tooltip
	    },
	    popperClose: {
	      pointerEvents: 'none'
	    },
	    tooltip: (0, _defineProperty3.default)({
	      background: _grey2.default[700],
	      borderRadius: 2,
	      color: _common2.default.fullWhite,
	      fontFamily: theme.typography.fontFamily,
	      fontSize: 14,
	      minHeight: theme.spacing.unit * 4,
	      lineHeight: '32px',
	      opacity: 0,
	      padding: '0 ' + theme.spacing.unit + 'px',
	      transform: 'scale(0)',
	      transition: theme.transitions.create(['opacity', 'transform'], {
	        duration: theme.transitions.duration.shortest
	      })
	    }, theme.breakpoints.up('sm'), {
	      minHeight: 22,
	      lineHeight: '22px',
	      padding: '0 ' + theme.spacing.unit + 'px',
	      fontSize: 10
	    }),
	    tooltipLeft: (0, _defineProperty3.default)({
	      transformOrigin: 'right center',
	      margin: '0 ' + theme.spacing.unit * 3 + 'px'
	    }, theme.breakpoints.up('sm'), {
	      margin: '0 14px'
	    }),
	    tooltipRight: (0, _defineProperty3.default)({
	      transformOrigin: 'left center',
	      margin: '0 ' + theme.spacing.unit * 3 + 'px'
	    }, theme.breakpoints.up('sm'), {
	      margin: '0 14px'
	    }),
	    tooltipTop: (0, _defineProperty3.default)({
	      transformOrigin: 'center bottom',
	      margin: theme.spacing.unit * 3 + 'px 0'
	    }, theme.breakpoints.up('sm'), {
	      margin: '14px 0'
	    }),
	    tooltipBottom: (0, _defineProperty3.default)({
	      transformOrigin: 'center top',
	      margin: theme.spacing.unit * 3 + 'px 0'
	    }, theme.breakpoints.up('sm'), {
	      margin: '14px 0'
	    }),
	    tooltipOpen: {
	      opacity: 0.9,
	      transform: 'scale(1)'
	    }
	  };
	};

	var babelPluginFlowReactPropTypes_proptype_Placement = __webpack_require__(174).oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']);

	function flipPlacement(placement) {
	  switch (placement) {
	    case 'bottom-end':
	      return 'bottom-start';
	    case 'bottom-start':
	      return 'bottom-end';
	    case 'top-end':
	      return 'top-start';
	    case 'top-start':
	      return 'top-end';
	    default:
	      return placement;
	  }
	}

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  children: typeof babelPluginFlowReactPropTypes_proptype_Element === 'function' ? babelPluginFlowReactPropTypes_proptype_Element.isRequired ? babelPluginFlowReactPropTypes_proptype_Element.isRequired : babelPluginFlowReactPropTypes_proptype_Element : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Element).isRequired,
	  classes: __webpack_require__(174).object,
	  className: __webpack_require__(174).string,
	  disableTriggerFocus: __webpack_require__(174).bool,
	  disableTriggerHover: __webpack_require__(174).bool,
	  disableTriggerTouch: __webpack_require__(174).bool,
	  id: __webpack_require__(174).string,
	  onRequestClose: __webpack_require__(174).func,
	  onRequestOpen: __webpack_require__(174).func,
	  open: __webpack_require__(174).bool,
	  title: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node.isRequired ? babelPluginFlowReactPropTypes_proptype_Node.isRequired : babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node).isRequired,
	  enterDelay: __webpack_require__(174).number,
	  leaveDelay: __webpack_require__(174).number,
	  placement: __webpack_require__(174).oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),
	  PopperProps: __webpack_require__(174).object,
	  theme: __webpack_require__(174).object
	};

	var Tooltip = function (_React$Component2) {
	  (0, _inherits3.default)(Tooltip, _React$Component2);

	  function Tooltip() {
	    var _ref;

	    var _temp, _this2, _ret;

	    (0, _classCallCheck3.default)(this, Tooltip);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this2 = (0, _possibleConstructorReturn3.default)(this, (_ref = Tooltip.__proto__ || (0, _getPrototypeOf2.default)(Tooltip)).call.apply(_ref, [this].concat(args))), _this2), _this2.state = {}, _this2.enterTimer = null, _this2.leaveTimer = null, _this2.touchTimer = null, _this2.isControlled = null, _this2.ignoreNonTouchEvents = false, _this2.handleRequestOpen = function (event) {
	      var children = _this2.props.children;

	      if (typeof children !== 'string') {
	        var childrenProps = _react.Children.only(children).props;

	        if (event.type === 'focus' && childrenProps.onFocus) {
	          childrenProps.onFocus(event);
	        }

	        if (event.type === 'mouseover' && childrenProps.onMouseOver) {
	          childrenProps.onMouseOver(event);
	        }
	      }

	      if (_this2.ignoreNonTouchEvents && event.type !== 'touchstart') {
	        return;
	      }

	      clearTimeout(_this2.leaveTimer);
	      if (_this2.props.enterDelay > 0) {
	        _this2.leaveTimer = setTimeout(function () {
	          _this2.requestOpen(event);
	        }, _this2.props.enterDelay);
	      } else {
	        _this2.requestOpen(event);
	      }
	    }, _this2.requestOpen = function (event) {
	      if (!_this2.isControlled) {
	        _this2.setState({ open: true });
	      }

	      if (_this2.props.onRequestOpen) {
	        _this2.props.onRequestOpen(event, true);
	      }
	    }, _this2.handleRequestClose = function (event) {
	      var children = _this2.props.children;

	      if (typeof children !== 'string') {
	        var childrenProps = _react.Children.only(children).props;

	        if (event.type === 'blur' && childrenProps.onBlur) {
	          childrenProps.onBlur(event);
	        }

	        if (event.type === 'mouseleave' && childrenProps.onMouseLeave) {
	          childrenProps.onMouseLeave(event);
	        }
	      }

	      clearTimeout(_this2.leaveTimer);
	      if (_this2.props.leaveDelay) {
	        _this2.leaveTimer = setTimeout(function () {
	          _this2.requestClose(event);
	        }, _this2.props.leaveDelay);
	      } else {
	        _this2.requestClose(event);
	      }
	    }, _this2.requestClose = function (event) {
	      _this2.ignoreNonTouchEvents = false;

	      if (!_this2.isControlled) {
	        _this2.setState({ open: false });
	      }

	      if (_this2.props.onRequestClose) {
	        _this2.props.onRequestClose(event, false);
	      }
	    }, _this2.handleTouchStart = function (event) {
	      _this2.ignoreNonTouchEvents = true;
	      var children = _this2.props.children;

	      if (typeof children !== 'string') {
	        var childrenProps = _react.Children.only(children).props;

	        if (childrenProps.onTouchStart) {
	          childrenProps.onTouchStart(event);
	        }
	      }

	      clearTimeout(_this2.touchTimer);
	      event.persist();
	      _this2.touchTimer = setTimeout(function () {
	        _this2.handleRequestOpen(event);
	      }, 1e3);
	    }, _this2.handleTouchEnd = function (event) {
	      var children = _this2.props.children;

	      if (typeof children !== 'string') {
	        var childrenProps = _react.Children.only(children).props;

	        if (childrenProps.onTouchEnd) {
	          childrenProps.onTouchEnd(event);
	        }
	      }

	      clearTimeout(_this2.touchTimer);
	      clearTimeout(_this2.leaveTimer);
	      event.persist();
	      _this2.leaveTimer = setTimeout(function () {
	        _this2.requestClose(event);
	      }, 1500 + _this2.props.leaveDelay);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this2, _ret);
	  }

	  (0, _createClass3.default)(Tooltip, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var props = this.props;


	      this.isControlled = props.open !== undefined;

	      if (!this.isControlled) {
	        // not controlled, use internal state
	        this.setState({
	          open: false
	        });
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.enterTimer);
	      clearTimeout(this.leaveTimer);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          childrenProp = _props.children,
	          classes = _props.classes,
	          className = _props.className,
	          disableTriggerFocus = _props.disableTriggerFocus,
	          disableTriggerHover = _props.disableTriggerHover,
	          disableTriggerTouch = _props.disableTriggerTouch,
	          enterDelay = _props.enterDelay,
	          id = _props.id,
	          leaveDelay = _props.leaveDelay,
	          openProp = _props.open,
	          onRequestClose = _props.onRequestClose,
	          onRequestOpen = _props.onRequestOpen,
	          theme = _props.theme,
	          title = _props.title,
	          rawPlacement = _props.placement,
	          _props$PopperProps = _props.PopperProps;
	      _props$PopperProps = _props$PopperProps === undefined ? {} : _props$PopperProps;
	      var PopperClassName = _props$PopperProps.PopperClassName,
	          PopperOther = (0, _objectWithoutProperties3.default)(_props$PopperProps, ['PopperClassName']),
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'className', 'disableTriggerFocus', 'disableTriggerHover', 'disableTriggerTouch', 'enterDelay', 'id', 'leaveDelay', 'open', 'onRequestClose', 'onRequestOpen', 'theme', 'title', 'placement', 'PopperProps']);


	      var placement = theme.direction === 'rtl' ? flipPlacement(rawPlacement) : rawPlacement;
	      var open = this.isControlled ? openProp : this.state.open;
	      var childrenProps = {};

	      childrenProps['aria-describedby'] = id;

	      if (!disableTriggerTouch) {
	        childrenProps.onTouchStart = this.handleTouchStart;
	        childrenProps.onTouchEnd = this.handleTouchEnd;
	      }

	      if (!disableTriggerHover) {
	        childrenProps.onMouseOver = this.handleRequestOpen;
	        childrenProps.onMouseLeave = this.handleRequestClose;
	      }

	      if (!disableTriggerFocus) {
	        childrenProps.onFocus = this.handleRequestOpen;
	        childrenProps.onBlur = this.handleRequestClose;
	      }

	      if (typeof childrenProp !== 'string' && childrenProp.props) {
	         false ? (0, _warning2.default)(!childrenProp.props.title, ['Material-UI: you have been providing a `title` property to the child of <Tooltip />.', 'Remove this title property `' + childrenProp.props.title + '` or the Tooltip component.'].join('\n')) : void 0;
	      }

	      return _react2.default.createElement(
	        _reactPopper.Manager,
	        (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
	        _react2.default.createElement(
	          _reactPopper.Target,
	          null,
	          function (_ref2) {
	            var targetProps = _ref2.targetProps;
	            return _react2.default.createElement(TargetChildren, {
	              element: typeof childrenProp !== 'string' ? _react2.default.cloneElement(childrenProp, childrenProps) : childrenProp,
	              ref: function ref(node) {
	                targetProps.ref((0, _reactDom.findDOMNode)(node));
	              }
	            });
	          }
	        ),
	        _react2.default.createElement(
	          _reactPopper.Popper,
	          (0, _extends3.default)({
	            placement: placement,
	            eventsEnabled: open,
	            className: (0, _classnames2.default)(classes.popper, (0, _defineProperty3.default)({}, classes.popperClose, !open), PopperClassName)
	          }, PopperOther),
	          _react2.default.createElement(
	            'div',
	            {
	              id: id,
	              role: 'tooltip',
	              'aria-hidden': !open,
	              className: (0, _classnames2.default)(classes.tooltip, (0, _defineProperty3.default)({}, classes.tooltipOpen, open), classes['tooltip' + (0, _helpers.capitalizeFirstLetter)(placement.split('-')[0])])
	            },
	            title
	          )
	        )
	      );
	    }
	  }]);
	  return Tooltip;
	}(_react2.default.Component);

	Tooltip.defaultProps = {
	  disableTriggerFocus: false,
	  disableTriggerHover: false,
	  disableTriggerTouch: false,
	  enterDelay: 0,
	  leaveDelay: 0,
	  placement: 'bottom'
	};
	exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTooltip', withTheme: true })(Tooltip);

/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Arrow = exports.Popper = exports.Target = exports.Manager = undefined;

	var _Manager2 = __webpack_require__(689);

	var _Manager3 = _interopRequireDefault(_Manager2);

	var _Target2 = __webpack_require__(690);

	var _Target3 = _interopRequireDefault(_Target2);

	var _Popper2 = __webpack_require__(691);

	var _Popper3 = _interopRequireDefault(_Popper2);

	var _Arrow2 = __webpack_require__(693);

	var _Arrow3 = _interopRequireDefault(_Arrow2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Manager = _Manager3.default;
	exports.Target = _Target3.default;
	exports.Popper = _Popper3.default;
	exports.Arrow = _Arrow3.default;

/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Manager = function (_Component) {
	  _inherits(Manager, _Component);

	  function Manager() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Manager);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Manager.__proto__ || Object.getPrototypeOf(Manager)).call.apply(_ref, [this].concat(args))), _this), _this._setTargetNode = function (node) {
	      _this._targetNode = node;
	    }, _this._getTargetNode = function () {
	      return _this._targetNode;
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Manager, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        popperManager: {
	          setTargetNode: this._setTargetNode,
	          getTargetNode: this._getTargetNode
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          tag = _props.tag,
	          children = _props.children,
	          restProps = _objectWithoutProperties(_props, ['tag', 'children']);

	      if (tag !== false) {
	        return (0, _react.createElement)(tag, restProps, children);
	      } else {
	        return children;
	      }
	    }
	  }]);

	  return Manager;
	}(_react.Component);

	Manager.childContextTypes = {
	  popperManager: _propTypes2.default.object.isRequired
	};
	Manager.propTypes = {
	  tag: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])
	};
	Manager.defaultProps = {
	  tag: 'div'
	};
	exports.default = Manager;

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var Target = function Target(props, context) {
	  var _props$component = props.component,
	      component = _props$component === undefined ? 'div' : _props$component,
	      innerRef = props.innerRef,
	      children = props.children,
	      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);

	  var popperManager = context.popperManager;

	  var targetRef = function targetRef(node) {
	    popperManager.setTargetNode(node);
	    if (typeof innerRef === 'function') {
	      innerRef(node);
	    }
	  };

	  if (typeof children === 'function') {
	    var targetProps = { ref: targetRef };
	    return children({ targetProps: targetProps, restProps: restProps });
	  }

	  var componentProps = _extends({}, restProps);

	  if (typeof component === 'string') {
	    componentProps.ref = targetRef;
	  } else {
	    componentProps.innerRef = targetRef;
	  }

	  return (0, _react.createElement)(component, componentProps, children);
	};

	Target.contextTypes = {
	  popperManager: _propTypes2.default.object.isRequired
	};

	Target.propTypes = {
	  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
	  innerRef: _propTypes2.default.func,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])
	};

	exports.default = Target;

/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _popper = __webpack_require__(692);

	var _popper2 = _interopRequireDefault(_popper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var noop = function noop() {
	  return null;
	};

	var Popper = function (_Component) {
	  _inherits(Popper, _Component);

	  function Popper() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Popper);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Popper.__proto__ || Object.getPrototypeOf(Popper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._setArrowNode = function (node) {
	      _this._arrowNode = node;
	    }, _this._getTargetNode = function () {
	      return _this.context.popperManager.getTargetNode();
	    }, _this._getOffsets = function (data) {
	      return Object.keys(data.offsets).map(function (key) {
	        return data.offsets[key];
	      });
	    }, _this._isDataDirty = function (data) {
	      if (_this.state.data) {
	        return JSON.stringify(_this._getOffsets(_this.state.data)) !== JSON.stringify(_this._getOffsets(data));
	      } else {
	        return true;
	      }
	    }, _this._updateStateModifier = {
	      enabled: true,
	      order: 900,
	      fn: function fn(data) {
	        if (_this._isDataDirty(data)) {
	          _this.setState({ data: data });
	        }
	        return data;
	      }
	    }, _this._getPopperStyle = function () {
	      var data = _this.state.data;

	      // If Popper isn't instantiated, hide the popperElement
	      // to avoid flash of unstyled content

	      if (!_this._popper || !data) {
	        return {
	          position: 'absolute',
	          pointerEvents: 'none',
	          opacity: 0
	        };
	      }

	      var _data$offsets$popper = data.offsets.popper,
	          top = _data$offsets$popper.top,
	          left = _data$offsets$popper.left,
	          position = _data$offsets$popper.position;


	      return _extends({
	        position: position
	      }, data.styles);
	    }, _this._getPopperPlacement = function () {
	      return !!_this.state.data ? _this.state.data.placement : undefined;
	    }, _this._getPopperHide = function () {
	      return !!_this.state.data && _this.state.data.hide ? '' : undefined;
	    }, _this._getArrowStyle = function () {
	      if (!_this.state.data || !_this.state.data.offsets.arrow) {
	        return {};
	      } else {
	        var _this$state$data$offs = _this.state.data.offsets.arrow,
	            top = _this$state$data$offs.top,
	            left = _this$state$data$offs.left;

	        return { top: top, left: left };
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Popper, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        popper: {
	          setArrowNode: this._setArrowNode,
	          getArrowStyle: this._getArrowStyle
	        }
	      };
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._updatePopper();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(lastProps) {
	      if (lastProps.placement !== this.props.placement || lastProps.eventsEnabled !== this.props.eventsEnabled) {
	        this._updatePopper();
	      }

	      if (this._popper && lastProps.children !== this.props.children) {
	        this._popper.scheduleUpdate();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this._destroyPopper();
	    }
	  }, {
	    key: '_updatePopper',
	    value: function _updatePopper() {
	      this._destroyPopper();
	      if (this._node) {
	        this._createPopper();
	      }
	    }
	  }, {
	    key: '_createPopper',
	    value: function _createPopper() {
	      var _props = this.props,
	          placement = _props.placement,
	          eventsEnabled = _props.eventsEnabled;

	      var modifiers = _extends({}, this.props.modifiers, {
	        applyStyle: { enabled: false },
	        updateState: this._updateStateModifier
	      });

	      if (this._arrowNode) {
	        modifiers.arrow = {
	          element: this._arrowNode
	        };
	      }

	      this._popper = new _popper2.default(this._getTargetNode(), this._node, {
	        placement: placement,
	        eventsEnabled: eventsEnabled,
	        modifiers: modifiers
	      });

	      // schedule an update to make sure everything gets positioned correct
	      // after being instantiated
	      this._popper.scheduleUpdate();
	    }
	  }, {
	    key: '_destroyPopper',
	    value: function _destroyPopper() {
	      if (this._popper) {
	        this._popper.destroy();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props2 = this.props,
	          component = _props2.component,
	          innerRef = _props2.innerRef,
	          placement = _props2.placement,
	          eventsEnabled = _props2.eventsEnabled,
	          modifiers = _props2.modifiers,
	          children = _props2.children,
	          restProps = _objectWithoutProperties(_props2, ['component', 'innerRef', 'placement', 'eventsEnabled', 'modifiers', 'children']);

	      var popperRef = function popperRef(node) {
	        _this2._node = node;
	        if (typeof innerRef === 'function') {
	          innerRef(node);
	        }
	      };
	      var popperStyle = this._getPopperStyle();
	      var popperPlacement = this._getPopperPlacement();
	      var popperHide = this._getPopperHide();

	      if (typeof children === 'function') {
	        var _popperProps;

	        var popperProps = (_popperProps = {
	          ref: popperRef,
	          style: popperStyle
	        }, _defineProperty(_popperProps, 'data-placement', popperPlacement), _defineProperty(_popperProps, 'data-x-out-of-boundaries', popperHide), _popperProps);
	        return children({
	          popperProps: popperProps,
	          restProps: restProps,
	          scheduleUpdate: this._popper && this._popper.scheduleUpdate
	        });
	      }

	      var componentProps = _extends({}, restProps, {
	        style: _extends({}, restProps.style, popperStyle),
	        'data-placement': popperPlacement,
	        'data-x-out-of-boundaries': popperHide
	      });

	      if (typeof component === 'string') {
	        componentProps.ref = popperRef;
	      } else {
	        componentProps.innerRef = popperRef;
	      }

	      return (0, _react.createElement)(component, componentProps, children);
	    }
	  }]);

	  return Popper;
	}(_react.Component);

	Popper.contextTypes = {
	  popperManager: _propTypes2.default.object.isRequired
	};
	Popper.childContextTypes = {
	  popper: _propTypes2.default.object.isRequired
	};
	Popper.propTypes = {
	  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
	  innerRef: _propTypes2.default.func,
	  placement: _propTypes2.default.oneOf(_popper2.default.placements),
	  eventsEnabled: _propTypes2.default.bool,
	  modifiers: _propTypes2.default.object,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])
	};
	Popper.defaultProps = {
	  component: 'div',
	  placement: 'bottom',
	  eventsEnabled: true,
	  modifiers: {}
	};
	exports.default = Popper;

/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/**!
	 * @fileOverview Kickass library to create and place poppers near their reference elements.
	 * @version 1.12.6
	 * @license
	 * Copyright (c) 2016 Federico Zivolo and contributors
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in all
	 * copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	 * SOFTWARE.
	 */
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.Popper = factory());
	}(this, (function () { 'use strict';

	var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
	var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
	var timeoutDuration = 0;
	for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
	  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
	    timeoutDuration = 1;
	    break;
	  }
	}

	function microtaskDebounce(fn) {
	  var called = false;
	  return function () {
	    if (called) {
	      return;
	    }
	    called = true;
	    Promise.resolve().then(function () {
	      called = false;
	      fn();
	    });
	  };
	}

	function taskDebounce(fn) {
	  var scheduled = false;
	  return function () {
	    if (!scheduled) {
	      scheduled = true;
	      setTimeout(function () {
	        scheduled = false;
	        fn();
	      }, timeoutDuration);
	    }
	  };
	}

	var supportsMicroTasks = isBrowser && window.Promise;

	/**
	* Create a debounced version of a method, that's asynchronously deferred
	* but called in the minimum time possible.
	*
	* @method
	* @memberof Popper.Utils
	* @argument {Function} fn
	* @returns {Function}
	*/
	var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

	/**
	 * Check if the given variable is a function
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Any} functionToCheck - variable to check
	 * @returns {Boolean} answer to: is a function?
	 */
	function isFunction(functionToCheck) {
	  var getType = {};
	  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
	}

	/**
	 * Get CSS computed property of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Eement} element
	 * @argument {String} property
	 */
	function getStyleComputedProperty(element, property) {
	  if (element.nodeType !== 1) {
	    return [];
	  }
	  // NOTE: 1 DOM access here
	  var css = window.getComputedStyle(element, null);
	  return property ? css[property] : css;
	}

	/**
	 * Returns the parentNode or the host of the element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} parent
	 */
	function getParentNode(element) {
	  if (element.nodeName === 'HTML') {
	    return element;
	  }
	  return element.parentNode || element.host;
	}

	/**
	 * Returns the scrolling parent of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} scroll parent
	 */
	function getScrollParent(element) {
	  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
	  if (!element) {
	    return window.document.body;
	  }

	  switch (element.nodeName) {
	    case 'HTML':
	    case 'BODY':
	      return element.ownerDocument.body;
	    case '#document':
	      return element.body;
	  }

	  // Firefox want us to check `-x` and `-y` variations as well

	  var _getStyleComputedProp = getStyleComputedProperty(element),
	      overflow = _getStyleComputedProp.overflow,
	      overflowX = _getStyleComputedProp.overflowX,
	      overflowY = _getStyleComputedProp.overflowY;

	  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
	    return element;
	  }

	  return getScrollParent(getParentNode(element));
	}

	/**
	 * Returns the offset parent of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} offset parent
	 */
	function getOffsetParent(element) {
	  // NOTE: 1 DOM access here
	  var offsetParent = element && element.offsetParent;
	  var nodeName = offsetParent && offsetParent.nodeName;

	  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
	    if (element) {
	      return element.ownerDocument.documentElement;
	    }

	    return window.document.documentElement;
	  }

	  // .offsetParent will return the closest TD or TABLE in case
	  // no offsetParent is present, I hate this job...
	  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
	    return getOffsetParent(offsetParent);
	  }

	  return offsetParent;
	}

	function isOffsetContainer(element) {
	  var nodeName = element.nodeName;

	  if (nodeName === 'BODY') {
	    return false;
	  }
	  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
	}

	/**
	 * Finds the root node (document, shadowDOM root) of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} node
	 * @returns {Element} root node
	 */
	function getRoot(node) {
	  if (node.parentNode !== null) {
	    return getRoot(node.parentNode);
	  }

	  return node;
	}

	/**
	 * Finds the offset parent common to the two provided nodes
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element1
	 * @argument {Element} element2
	 * @returns {Element} common offset parent
	 */
	function findCommonOffsetParent(element1, element2) {
	  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
	  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
	    return window.document.documentElement;
	  }

	  // Here we make sure to give as "start" the element that comes first in the DOM
	  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
	  var start = order ? element1 : element2;
	  var end = order ? element2 : element1;

	  // Get common ancestor container
	  var range = document.createRange();
	  range.setStart(start, 0);
	  range.setEnd(end, 0);
	  var commonAncestorContainer = range.commonAncestorContainer;

	  // Both nodes are inside #document

	  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
	    if (isOffsetContainer(commonAncestorContainer)) {
	      return commonAncestorContainer;
	    }

	    return getOffsetParent(commonAncestorContainer);
	  }

	  // one of the nodes is inside shadowDOM, find which one
	  var element1root = getRoot(element1);
	  if (element1root.host) {
	    return findCommonOffsetParent(element1root.host, element2);
	  } else {
	    return findCommonOffsetParent(element1, getRoot(element2).host);
	  }
	}

	/**
	 * Gets the scroll value of the given element in the given side (top and left)
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @argument {String} side `top` or `left`
	 * @returns {number} amount of scrolled pixels
	 */
	function getScroll(element) {
	  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

	  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
	  var nodeName = element.nodeName;

	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    var html = element.ownerDocument.documentElement;
	    var scrollingElement = element.ownerDocument.scrollingElement || html;
	    return scrollingElement[upperSide];
	  }

	  return element[upperSide];
	}

	/*
	 * Sum or subtract the element scroll values (left and top) from a given rect object
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} rect - Rect object you want to change
	 * @param {HTMLElement} element - The element from the function reads the scroll values
	 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
	 * @return {Object} rect - The modifier rect object
	 */
	function includeScroll(rect, element) {
	  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	  var scrollTop = getScroll(element, 'top');
	  var scrollLeft = getScroll(element, 'left');
	  var modifier = subtract ? -1 : 1;
	  rect.top += scrollTop * modifier;
	  rect.bottom += scrollTop * modifier;
	  rect.left += scrollLeft * modifier;
	  rect.right += scrollLeft * modifier;
	  return rect;
	}

	/*
	 * Helper to detect borders of a given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {CSSStyleDeclaration} styles
	 * Result of `getStyleComputedProperty` on the given element
	 * @param {String} axis - `x` or `y`
	 * @return {number} borders - The borders size of the given axis
	 */

	function getBordersSize(styles, axis) {
	  var sideA = axis === 'x' ? 'Left' : 'Top';
	  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

	  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];
	}

	/**
	 * Tells if you are running Internet Explorer 10
	 * @method
	 * @memberof Popper.Utils
	 * @returns {Boolean} isIE10
	 */
	var isIE10 = undefined;

	var isIE10$1 = function () {
	  if (isIE10 === undefined) {
	    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;
	  }
	  return isIE10;
	};

	function getSize(axis, body, html, computedStyle) {
	  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);
	}

	function getWindowSizes() {
	  var body = window.document.body;
	  var html = window.document.documentElement;
	  var computedStyle = isIE10$1() && window.getComputedStyle(html);

	  return {
	    height: getSize('Height', body, html, computedStyle),
	    width: getSize('Width', body, html, computedStyle)
	  };
	}

	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();





	var defineProperty = function (obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	};

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

	/**
	 * Given element offsets, generate an output similar to getBoundingClientRect
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Object} offsets
	 * @returns {Object} ClientRect like output
	 */
	function getClientRect(offsets) {
	  return _extends({}, offsets, {
	    right: offsets.left + offsets.width,
	    bottom: offsets.top + offsets.height
	  });
	}

	/**
	 * Get bounding client rect of given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {HTMLElement} element
	 * @return {Object} client rect
	 */
	function getBoundingClientRect(element) {
	  var rect = {};

	  // IE10 10 FIX: Please, don't ask, the element isn't
	  // considered in DOM in some circumstances...
	  // This isn't reproducible in IE10 compatibility mode of IE11
	  if (isIE10$1()) {
	    try {
	      rect = element.getBoundingClientRect();
	      var scrollTop = getScroll(element, 'top');
	      var scrollLeft = getScroll(element, 'left');
	      rect.top += scrollTop;
	      rect.left += scrollLeft;
	      rect.bottom += scrollTop;
	      rect.right += scrollLeft;
	    } catch (err) {}
	  } else {
	    rect = element.getBoundingClientRect();
	  }

	  var result = {
	    left: rect.left,
	    top: rect.top,
	    width: rect.right - rect.left,
	    height: rect.bottom - rect.top
	  };

	  // subtract scrollbar size from sizes
	  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};
	  var width = sizes.width || element.clientWidth || result.right - result.left;
	  var height = sizes.height || element.clientHeight || result.bottom - result.top;

	  var horizScrollbar = element.offsetWidth - width;
	  var vertScrollbar = element.offsetHeight - height;

	  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
	  // we make this check conditional for performance reasons
	  if (horizScrollbar || vertScrollbar) {
	    var styles = getStyleComputedProperty(element);
	    horizScrollbar -= getBordersSize(styles, 'x');
	    vertScrollbar -= getBordersSize(styles, 'y');

	    result.width -= horizScrollbar;
	    result.height -= vertScrollbar;
	  }

	  return getClientRect(result);
	}

	function getOffsetRectRelativeToArbitraryNode(children, parent) {
	  var isIE10 = isIE10$1();
	  var isHTML = parent.nodeName === 'HTML';
	  var childrenRect = getBoundingClientRect(children);
	  var parentRect = getBoundingClientRect(parent);
	  var scrollParent = getScrollParent(children);

	  var styles = getStyleComputedProperty(parent);
	  var borderTopWidth = +styles.borderTopWidth.split('px')[0];
	  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];

	  var offsets = getClientRect({
	    top: childrenRect.top - parentRect.top - borderTopWidth,
	    left: childrenRect.left - parentRect.left - borderLeftWidth,
	    width: childrenRect.width,
	    height: childrenRect.height
	  });
	  offsets.marginTop = 0;
	  offsets.marginLeft = 0;

	  // Subtract margins of documentElement in case it's being used as parent
	  // we do this only on HTML because it's the only element that behaves
	  // differently when margins are applied to it. The margins are included in
	  // the box of the documentElement, in the other cases not.
	  if (!isIE10 && isHTML) {
	    var marginTop = +styles.marginTop.split('px')[0];
	    var marginLeft = +styles.marginLeft.split('px')[0];

	    offsets.top -= borderTopWidth - marginTop;
	    offsets.bottom -= borderTopWidth - marginTop;
	    offsets.left -= borderLeftWidth - marginLeft;
	    offsets.right -= borderLeftWidth - marginLeft;

	    // Attach marginTop and marginLeft because in some circumstances we may need them
	    offsets.marginTop = marginTop;
	    offsets.marginLeft = marginLeft;
	  }

	  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
	    offsets = includeScroll(offsets, parent);
	  }

	  return offsets;
	}

	function getViewportOffsetRectRelativeToArtbitraryNode(element) {
	  var html = element.ownerDocument.documentElement;
	  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
	  var width = Math.max(html.clientWidth, window.innerWidth || 0);
	  var height = Math.max(html.clientHeight, window.innerHeight || 0);

	  var scrollTop = getScroll(html);
	  var scrollLeft = getScroll(html, 'left');

	  var offset = {
	    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
	    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
	    width: width,
	    height: height
	  };

	  return getClientRect(offset);
	}

	/**
	 * Check if the given element is fixed or is inside a fixed parent
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @argument {Element} customContainer
	 * @returns {Boolean} answer to "isFixed?"
	 */
	function isFixed(element) {
	  var nodeName = element.nodeName;
	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    return false;
	  }
	  if (getStyleComputedProperty(element, 'position') === 'fixed') {
	    return true;
	  }
	  return isFixed(getParentNode(element));
	}

	/**
	 * Computed the boundaries limits and return them
	 * @method
	 * @memberof Popper.Utils
	 * @param {HTMLElement} popper
	 * @param {HTMLElement} reference
	 * @param {number} padding
	 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
	 * @returns {Object} Coordinates of the boundaries
	 */
	function getBoundaries(popper, reference, padding, boundariesElement) {
	  // NOTE: 1 DOM access here
	  var boundaries = { top: 0, left: 0 };
	  var offsetParent = findCommonOffsetParent(popper, reference);

	  // Handle viewport case
	  if (boundariesElement === 'viewport') {
	    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);
	  } else {
	    // Handle other cases based on DOM element used as boundaries
	    var boundariesNode = void 0;
	    if (boundariesElement === 'scrollParent') {
	      boundariesNode = getScrollParent(getParentNode(popper));
	      if (boundariesNode.nodeName === 'BODY') {
	        boundariesNode = popper.ownerDocument.documentElement;
	      }
	    } else if (boundariesElement === 'window') {
	      boundariesNode = popper.ownerDocument.documentElement;
	    } else {
	      boundariesNode = boundariesElement;
	    }

	    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);

	    // In case of HTML, we need a different computation
	    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
	      var _getWindowSizes = getWindowSizes(),
	          height = _getWindowSizes.height,
	          width = _getWindowSizes.width;

	      boundaries.top += offsets.top - offsets.marginTop;
	      boundaries.bottom = height + offsets.top;
	      boundaries.left += offsets.left - offsets.marginLeft;
	      boundaries.right = width + offsets.left;
	    } else {
	      // for all the other DOM elements, this one is good
	      boundaries = offsets;
	    }
	  }

	  // Add paddings
	  boundaries.left += padding;
	  boundaries.top += padding;
	  boundaries.right -= padding;
	  boundaries.bottom -= padding;

	  return boundaries;
	}

	function getArea(_ref) {
	  var width = _ref.width,
	      height = _ref.height;

	  return width * height;
	}

	/**
	 * Utility used to transform the `auto` placement to the placement with more
	 * available space.
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
	  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

	  if (placement.indexOf('auto') === -1) {
	    return placement;
	  }

	  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

	  var rects = {
	    top: {
	      width: boundaries.width,
	      height: refRect.top - boundaries.top
	    },
	    right: {
	      width: boundaries.right - refRect.right,
	      height: boundaries.height
	    },
	    bottom: {
	      width: boundaries.width,
	      height: boundaries.bottom - refRect.bottom
	    },
	    left: {
	      width: refRect.left - boundaries.left,
	      height: boundaries.height
	    }
	  };

	  var sortedAreas = Object.keys(rects).map(function (key) {
	    return _extends({
	      key: key
	    }, rects[key], {
	      area: getArea(rects[key])
	    });
	  }).sort(function (a, b) {
	    return b.area - a.area;
	  });

	  var filteredAreas = sortedAreas.filter(function (_ref2) {
	    var width = _ref2.width,
	        height = _ref2.height;
	    return width >= popper.clientWidth && height >= popper.clientHeight;
	  });

	  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

	  var variation = placement.split('-')[1];

	  return computedPlacement + (variation ? '-' + variation : '');
	}

	/**
	 * Get offsets to the reference element
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} state
	 * @param {Element} popper - the popper element
	 * @param {Element} reference - the reference element (the popper will be relative to this)
	 * @returns {Object} An object containing the offsets which will be applied to the popper
	 */
	function getReferenceOffsets(state, popper, reference) {
	  var commonOffsetParent = findCommonOffsetParent(popper, reference);
	  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);
	}

	/**
	 * Get the outer sizes of the given element (offset size + margins)
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Object} object containing width and height properties
	 */
	function getOuterSizes(element) {
	  var styles = window.getComputedStyle(element);
	  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
	  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
	  var result = {
	    width: element.offsetWidth + y,
	    height: element.offsetHeight + x
	  };
	  return result;
	}

	/**
	 * Get the opposite placement of the given one
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement
	 * @returns {String} flipped placement
	 */
	function getOppositePlacement(placement) {
	  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
	  return placement.replace(/left|right|bottom|top/g, function (matched) {
	    return hash[matched];
	  });
	}

	/**
	 * Get offsets to the popper
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} position - CSS position the Popper will get applied
	 * @param {HTMLElement} popper - the popper element
	 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
	 * @param {String} placement - one of the valid placement options
	 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
	 */
	function getPopperOffsets(popper, referenceOffsets, placement) {
	  placement = placement.split('-')[0];

	  // Get popper node sizes
	  var popperRect = getOuterSizes(popper);

	  // Add position, width and height to our offsets object
	  var popperOffsets = {
	    width: popperRect.width,
	    height: popperRect.height
	  };

	  // depending by the popper placement we have to compute its offsets slightly differently
	  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
	  var mainSide = isHoriz ? 'top' : 'left';
	  var secondarySide = isHoriz ? 'left' : 'top';
	  var measurement = isHoriz ? 'height' : 'width';
	  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

	  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
	  if (placement === secondarySide) {
	    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
	  } else {
	    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
	  }

	  return popperOffsets;
	}

	/**
	 * Mimics the `find` method of Array
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Array} arr
	 * @argument prop
	 * @argument value
	 * @returns index or -1
	 */
	function find(arr, check) {
	  // use native find if supported
	  if (Array.prototype.find) {
	    return arr.find(check);
	  }

	  // use `filter` to obtain the same behavior of `find`
	  return arr.filter(check)[0];
	}

	/**
	 * Return the index of the matching object
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Array} arr
	 * @argument prop
	 * @argument value
	 * @returns index or -1
	 */
	function findIndex(arr, prop, value) {
	  // use native findIndex if supported
	  if (Array.prototype.findIndex) {
	    return arr.findIndex(function (cur) {
	      return cur[prop] === value;
	    });
	  }

	  // use `find` + `indexOf` if `findIndex` isn't supported
	  var match = find(arr, function (obj) {
	    return obj[prop] === value;
	  });
	  return arr.indexOf(match);
	}

	/**
	 * Loop trough the list of modifiers and run them in order,
	 * each of them will then edit the data object.
	 * @method
	 * @memberof Popper.Utils
	 * @param {dataObject} data
	 * @param {Array} modifiers
	 * @param {String} ends - Optional modifier name used as stopper
	 * @returns {dataObject}
	 */
	function runModifiers(modifiers, data, ends) {
	  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

	  modifiersToRun.forEach(function (modifier) {
	    if (modifier['function']) {
	      // eslint-disable-line dot-notation
	      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
	    }
	    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
	    if (modifier.enabled && isFunction(fn)) {
	      // Add properties to offsets to make them a complete clientRect object
	      // we do this before each modifier to make sure the previous one doesn't
	      // mess with these values
	      data.offsets.popper = getClientRect(data.offsets.popper);
	      data.offsets.reference = getClientRect(data.offsets.reference);

	      data = fn(data, modifier);
	    }
	  });

	  return data;
	}

	/**
	 * Updates the position of the popper, computing the new offsets and applying
	 * the new style.<br />
	 * Prefer `scheduleUpdate` over `update` because of performance reasons.
	 * @method
	 * @memberof Popper
	 */
	function update() {
	  // if popper is destroyed, don't perform any further update
	  if (this.state.isDestroyed) {
	    return;
	  }

	  var data = {
	    instance: this,
	    styles: {},
	    arrowStyles: {},
	    attributes: {},
	    flipped: false,
	    offsets: {}
	  };

	  // compute reference element offsets
	  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);

	  // compute auto placement, store placement inside the data object,
	  // modifiers will be able to edit `placement` if needed
	  // and refer to originalPlacement to know the original value
	  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

	  // store the computed placement inside `originalPlacement`
	  data.originalPlacement = data.placement;

	  // compute the popper offsets
	  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
	  data.offsets.popper.position = 'absolute';

	  // run the modifiers
	  data = runModifiers(this.modifiers, data);

	  // the first `update` will call `onCreate` callback
	  // the other ones will call `onUpdate` callback
	  if (!this.state.isCreated) {
	    this.state.isCreated = true;
	    this.options.onCreate(data);
	  } else {
	    this.options.onUpdate(data);
	  }
	}

	/**
	 * Helper used to know if the given modifier is enabled.
	 * @method
	 * @memberof Popper.Utils
	 * @returns {Boolean}
	 */
	function isModifierEnabled(modifiers, modifierName) {
	  return modifiers.some(function (_ref) {
	    var name = _ref.name,
	        enabled = _ref.enabled;
	    return enabled && name === modifierName;
	  });
	}

	/**
	 * Get the prefixed supported property name
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} property (camelCase)
	 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
	 */
	function getSupportedPropertyName(property) {
	  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
	  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

	  for (var i = 0; i < prefixes.length - 1; i++) {
	    var prefix = prefixes[i];
	    var toCheck = prefix ? '' + prefix + upperProp : property;
	    if (typeof window.document.body.style[toCheck] !== 'undefined') {
	      return toCheck;
	    }
	  }
	  return null;
	}

	/**
	 * Destroy the popper
	 * @method
	 * @memberof Popper
	 */
	function destroy() {
	  this.state.isDestroyed = true;

	  // touch DOM only if `applyStyle` modifier is enabled
	  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
	    this.popper.removeAttribute('x-placement');
	    this.popper.style.left = '';
	    this.popper.style.position = '';
	    this.popper.style.top = '';
	    this.popper.style[getSupportedPropertyName('transform')] = '';
	  }

	  this.disableEventListeners();

	  // remove the popper if user explicity asked for the deletion on destroy
	  // do not use `remove` because IE11 doesn't support it
	  if (this.options.removeOnDestroy) {
	    this.popper.parentNode.removeChild(this.popper);
	  }
	  return this;
	}

	/**
	 * Get the window associated with the element
	 * @argument {Element} element
	 * @returns {Window}
	 */
	function getWindow(element) {
	  var ownerDocument = element.ownerDocument;
	  return ownerDocument ? ownerDocument.defaultView : window;
	}

	function attachToScrollParents(scrollParent, event, callback, scrollParents) {
	  var isBody = scrollParent.nodeName === 'BODY';
	  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
	  target.addEventListener(event, callback, { passive: true });

	  if (!isBody) {
	    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
	  }
	  scrollParents.push(target);
	}

	/**
	 * Setup needed event listeners used to update the popper position
	 * @method
	 * @memberof Popper.Utils
	 * @private
	 */
	function setupEventListeners(reference, options, state, updateBound) {
	  // Resize event listener on window
	  state.updateBound = updateBound;
	  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

	  // Scroll event listener on scroll parents
	  var scrollElement = getScrollParent(reference);
	  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
	  state.scrollElement = scrollElement;
	  state.eventsEnabled = true;

	  return state;
	}

	/**
	 * It will add resize/scroll events and start recalculating
	 * position of the popper element when they are triggered.
	 * @method
	 * @memberof Popper
	 */
	function enableEventListeners() {
	  if (!this.state.eventsEnabled) {
	    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
	  }
	}

	/**
	 * Remove event listeners used to update the popper position
	 * @method
	 * @memberof Popper.Utils
	 * @private
	 */
	function removeEventListeners(reference, state) {
	  // Remove resize event listener on window
	  getWindow(reference).removeEventListener('resize', state.updateBound);

	  // Remove scroll event listener on scroll parents
	  state.scrollParents.forEach(function (target) {
	    target.removeEventListener('scroll', state.updateBound);
	  });

	  // Reset state
	  state.updateBound = null;
	  state.scrollParents = [];
	  state.scrollElement = null;
	  state.eventsEnabled = false;
	  return state;
	}

	/**
	 * It will remove resize/scroll events and won't recalculate popper position
	 * when they are triggered. It also won't trigger onUpdate callback anymore,
	 * unless you call `update` method manually.
	 * @method
	 * @memberof Popper
	 */
	function disableEventListeners() {
	  if (this.state.eventsEnabled) {
	    window.cancelAnimationFrame(this.scheduleUpdate);
	    this.state = removeEventListeners(this.reference, this.state);
	  }
	}

	/**
	 * Tells if a given input is a number
	 * @method
	 * @memberof Popper.Utils
	 * @param {*} input to check
	 * @return {Boolean}
	 */
	function isNumeric(n) {
	  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
	}

	/**
	 * Set the style to the given popper
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element - Element to apply the style to
	 * @argument {Object} styles
	 * Object with a list of properties and values which will be applied to the element
	 */
	function setStyles(element, styles) {
	  Object.keys(styles).forEach(function (prop) {
	    var unit = '';
	    // add unit if the value is numeric and is one of the following
	    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
	      unit = 'px';
	    }
	    element.style[prop] = styles[prop] + unit;
	  });
	}

	/**
	 * Set the attributes to the given popper
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element - Element to apply the attributes to
	 * @argument {Object} styles
	 * Object with a list of properties and values which will be applied to the element
	 */
	function setAttributes(element, attributes) {
	  Object.keys(attributes).forEach(function (prop) {
	    var value = attributes[prop];
	    if (value !== false) {
	      element.setAttribute(prop, attributes[prop]);
	    } else {
	      element.removeAttribute(prop);
	    }
	  });
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} data.styles - List of style properties - values to apply to popper element
	 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The same data object
	 */
	function applyStyle(data) {
	  // any property present in `data.styles` will be applied to the popper,
	  // in this way we can make the 3rd party modifiers add custom styles to it
	  // Be aware, modifiers could override the properties defined in the previous
	  // lines of this modifier!
	  setStyles(data.instance.popper, data.styles);

	  // any property present in `data.attributes` will be applied to the popper,
	  // they will be set as HTML attributes of the element
	  setAttributes(data.instance.popper, data.attributes);

	  // if arrowElement is defined and arrowStyles has some properties
	  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
	    setStyles(data.arrowElement, data.arrowStyles);
	  }

	  return data;
	}

	/**
	 * Set the x-placement attribute before everything else because it could be used
	 * to add margins to the popper margins needs to be calculated to get the
	 * correct popper offsets.
	 * @method
	 * @memberof Popper.modifiers
	 * @param {HTMLElement} reference - The reference element used to position the popper
	 * @param {HTMLElement} popper - The HTML element used as popper.
	 * @param {Object} options - Popper.js options
	 */
	function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
	  // compute reference element offsets
	  var referenceOffsets = getReferenceOffsets(state, popper, reference);

	  // compute auto placement, store placement inside the data object,
	  // modifiers will be able to edit `placement` if needed
	  // and refer to originalPlacement to know the original value
	  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

	  popper.setAttribute('x-placement', placement);

	  // Apply `position` to popper before anything else because
	  // without the position applied we can't guarantee correct computations
	  setStyles(popper, { position: 'absolute' });

	  return options;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function computeStyle(data, options) {
	  var x = options.x,
	      y = options.y;
	  var popper = data.offsets.popper;

	  // Remove this legacy support in Popper.js v2

	  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'applyStyle';
	  }).gpuAcceleration;
	  if (legacyGpuAccelerationOption !== undefined) {
	    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
	  }
	  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

	  var offsetParent = getOffsetParent(data.instance.popper);
	  var offsetParentRect = getBoundingClientRect(offsetParent);

	  // Styles
	  var styles = {
	    position: popper.position
	  };

	  // floor sides to avoid blurry text
	  var offsets = {
	    left: Math.floor(popper.left),
	    top: Math.floor(popper.top),
	    bottom: Math.floor(popper.bottom),
	    right: Math.floor(popper.right)
	  };

	  var sideA = x === 'bottom' ? 'top' : 'bottom';
	  var sideB = y === 'right' ? 'left' : 'right';

	  // if gpuAcceleration is set to `true` and transform is supported,
	  //  we use `translate3d` to apply the position to the popper we
	  // automatically use the supported prefixed version if needed
	  var prefixedProperty = getSupportedPropertyName('transform');

	  // now, let's make a step back and look at this code closely (wtf?)
	  // If the content of the popper grows once it's been positioned, it
	  // may happen that the popper gets misplaced because of the new content
	  // overflowing its reference element
	  // To avoid this problem, we provide two options (x and y), which allow
	  // the consumer to define the offset origin.
	  // If we position a popper on top of a reference element, we can set
	  // `x` to `top` to make the popper grow towards its top instead of
	  // its bottom.
	  var left = void 0,
	      top = void 0;
	  if (sideA === 'bottom') {
	    top = -offsetParentRect.height + offsets.bottom;
	  } else {
	    top = offsets.top;
	  }
	  if (sideB === 'right') {
	    left = -offsetParentRect.width + offsets.right;
	  } else {
	    left = offsets.left;
	  }
	  if (gpuAcceleration && prefixedProperty) {
	    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
	    styles[sideA] = 0;
	    styles[sideB] = 0;
	    styles.willChange = 'transform';
	  } else {
	    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
	    var invertTop = sideA === 'bottom' ? -1 : 1;
	    var invertLeft = sideB === 'right' ? -1 : 1;
	    styles[sideA] = top * invertTop;
	    styles[sideB] = left * invertLeft;
	    styles.willChange = sideA + ', ' + sideB;
	  }

	  // Attributes
	  var attributes = {
	    'x-placement': data.placement
	  };

	  // Update `data` attributes, styles and arrowStyles
	  data.attributes = _extends({}, attributes, data.attributes);
	  data.styles = _extends({}, styles, data.styles);
	  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

	  return data;
	}

	/**
	 * Helper used to know if the given modifier depends from another one.<br />
	 * It checks if the needed modifier is listed and enabled.
	 * @method
	 * @memberof Popper.Utils
	 * @param {Array} modifiers - list of modifiers
	 * @param {String} requestingName - name of requesting modifier
	 * @param {String} requestedName - name of requested modifier
	 * @returns {Boolean}
	 */
	function isModifierRequired(modifiers, requestingName, requestedName) {
	  var requesting = find(modifiers, function (_ref) {
	    var name = _ref.name;
	    return name === requestingName;
	  });

	  var isRequired = !!requesting && modifiers.some(function (modifier) {
	    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
	  });

	  if (!isRequired) {
	    var _requesting = '`' + requestingName + '`';
	    var requested = '`' + requestedName + '`';
	    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
	  }
	  return isRequired;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function arrow(data, options) {
	  // arrow depends on keepTogether in order to work
	  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
	    return data;
	  }

	  var arrowElement = options.element;

	  // if arrowElement is a string, suppose it's a CSS selector
	  if (typeof arrowElement === 'string') {
	    arrowElement = data.instance.popper.querySelector(arrowElement);

	    // if arrowElement is not found, don't run the modifier
	    if (!arrowElement) {
	      return data;
	    }
	  } else {
	    // if the arrowElement isn't a query selector we must check that the
	    // provided DOM node is child of its popper node
	    if (!data.instance.popper.contains(arrowElement)) {
	      console.warn('WARNING: `arrow.element` must be child of its popper element!');
	      return data;
	    }
	  }

	  var placement = data.placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

	  var len = isVertical ? 'height' : 'width';
	  var sideCapitalized = isVertical ? 'Top' : 'Left';
	  var side = sideCapitalized.toLowerCase();
	  var altSide = isVertical ? 'left' : 'top';
	  var opSide = isVertical ? 'bottom' : 'right';
	  var arrowElementSize = getOuterSizes(arrowElement)[len];

	  //
	  // extends keepTogether behavior making sure the popper and its
	  // reference have enough pixels in conjuction
	  //

	  // top/left side
	  if (reference[opSide] - arrowElementSize < popper[side]) {
	    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
	  }
	  // bottom/right side
	  if (reference[side] + arrowElementSize > popper[opSide]) {
	    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
	  }

	  // compute center of the popper
	  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

	  // Compute the sideValue using the updated popper offsets
	  // take popper margin in account because we don't have this info available
	  var popperMarginSide = getStyleComputedProperty(data.instance.popper, 'margin' + sideCapitalized).replace('px', '');
	  var sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide;

	  // prevent arrowElement from being placed not contiguously to its popper
	  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

	  data.arrowElement = arrowElement;
	  data.offsets.arrow = {};
	  data.offsets.arrow[side] = Math.round(sideValue);
	  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node

	  return data;
	}

	/**
	 * Get the opposite placement variation of the given one
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement variation
	 * @returns {String} flipped placement variation
	 */
	function getOppositeVariation(variation) {
	  if (variation === 'end') {
	    return 'start';
	  } else if (variation === 'start') {
	    return 'end';
	  }
	  return variation;
	}

	/**
	 * List of accepted placements to use as values of the `placement` option.<br />
	 * Valid placements are:
	 * - `auto`
	 * - `top`
	 * - `right`
	 * - `bottom`
	 * - `left`
	 *
	 * Each placement can have a variation from this list:
	 * - `-start`
	 * - `-end`
	 *
	 * Variations are interpreted easily if you think of them as the left to right
	 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
	 * is right.<br />
	 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
	 *
	 * Some valid examples are:
	 * - `top-end` (on top of reference, right aligned)
	 * - `right-start` (on right of reference, top aligned)
	 * - `bottom` (on bottom, centered)
	 * - `auto-right` (on the side with more space available, alignment depends by placement)
	 *
	 * @static
	 * @type {Array}
	 * @enum {String}
	 * @readonly
	 * @method placements
	 * @memberof Popper
	 */
	var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

	// Get rid of `auto` `auto-start` and `auto-end`
	var validPlacements = placements.slice(3);

	/**
	 * Given an initial placement, returns all the subsequent placements
	 * clockwise (or counter-clockwise).
	 *
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement - A valid placement (it accepts variations)
	 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
	 * @returns {Array} placements including their variations
	 */
	function clockwise(placement) {
	  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	  var index = validPlacements.indexOf(placement);
	  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
	  return counter ? arr.reverse() : arr;
	}

	var BEHAVIORS = {
	  FLIP: 'flip',
	  CLOCKWISE: 'clockwise',
	  COUNTERCLOCKWISE: 'counterclockwise'
	};

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function flip(data, options) {
	  // if `inner` modifier is enabled, we can't use the `flip` modifier
	  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
	    return data;
	  }

	  if (data.flipped && data.placement === data.originalPlacement) {
	    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
	    return data;
	  }

	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);

	  var placement = data.placement.split('-')[0];
	  var placementOpposite = getOppositePlacement(placement);
	  var variation = data.placement.split('-')[1] || '';

	  var flipOrder = [];

	  switch (options.behavior) {
	    case BEHAVIORS.FLIP:
	      flipOrder = [placement, placementOpposite];
	      break;
	    case BEHAVIORS.CLOCKWISE:
	      flipOrder = clockwise(placement);
	      break;
	    case BEHAVIORS.COUNTERCLOCKWISE:
	      flipOrder = clockwise(placement, true);
	      break;
	    default:
	      flipOrder = options.behavior;
	  }

	  flipOrder.forEach(function (step, index) {
	    if (placement !== step || flipOrder.length === index + 1) {
	      return data;
	    }

	    placement = data.placement.split('-')[0];
	    placementOpposite = getOppositePlacement(placement);

	    var popperOffsets = data.offsets.popper;
	    var refOffsets = data.offsets.reference;

	    // using floor because the reference offsets may contain decimals we are not going to consider here
	    var floor = Math.floor;
	    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

	    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
	    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
	    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
	    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

	    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

	    // flip the variation if required
	    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

	    if (overlapsRef || overflowsBoundaries || flippedVariation) {
	      // this boolean to detect any flip loop
	      data.flipped = true;

	      if (overlapsRef || overflowsBoundaries) {
	        placement = flipOrder[index + 1];
	      }

	      if (flippedVariation) {
	        variation = getOppositeVariation(variation);
	      }

	      data.placement = placement + (variation ? '-' + variation : '');

	      // this object contains `position`, we want to preserve it along with
	      // any additional property we may add in the future
	      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

	      data = runModifiers(data.instance.modifiers, data, 'flip');
	    }
	  });
	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function keepTogether(data) {
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var placement = data.placement.split('-')[0];
	  var floor = Math.floor;
	  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	  var side = isVertical ? 'right' : 'bottom';
	  var opSide = isVertical ? 'left' : 'top';
	  var measurement = isVertical ? 'width' : 'height';

	  if (popper[side] < floor(reference[opSide])) {
	    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
	  }
	  if (popper[opSide] > floor(reference[side])) {
	    data.offsets.popper[opSide] = floor(reference[side]);
	  }

	  return data;
	}

	/**
	 * Converts a string containing value + unit into a px value number
	 * @function
	 * @memberof {modifiers~offset}
	 * @private
	 * @argument {String} str - Value + unit string
	 * @argument {String} measurement - `height` or `width`
	 * @argument {Object} popperOffsets
	 * @argument {Object} referenceOffsets
	 * @returns {Number|String}
	 * Value in pixels, or original string if no values were extracted
	 */
	function toValue(str, measurement, popperOffsets, referenceOffsets) {
	  // separate value from unit
	  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
	  var value = +split[1];
	  var unit = split[2];

	  // If it's not a number it's an operator, I guess
	  if (!value) {
	    return str;
	  }

	  if (unit.indexOf('%') === 0) {
	    var element = void 0;
	    switch (unit) {
	      case '%p':
	        element = popperOffsets;
	        break;
	      case '%':
	      case '%r':
	      default:
	        element = referenceOffsets;
	    }

	    var rect = getClientRect(element);
	    return rect[measurement] / 100 * value;
	  } else if (unit === 'vh' || unit === 'vw') {
	    // if is a vh or vw, we calculate the size based on the viewport
	    var size = void 0;
	    if (unit === 'vh') {
	      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
	    } else {
	      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
	    }
	    return size / 100 * value;
	  } else {
	    // if is an explicit pixel unit, we get rid of the unit and keep the value
	    // if is an implicit unit, it's px, and we return just the value
	    return value;
	  }
	}

	/**
	 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
	 * @function
	 * @memberof {modifiers~offset}
	 * @private
	 * @argument {String} offset
	 * @argument {Object} popperOffsets
	 * @argument {Object} referenceOffsets
	 * @argument {String} basePlacement
	 * @returns {Array} a two cells array with x and y offsets in numbers
	 */
	function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
	  var offsets = [0, 0];

	  // Use height if placement is left or right and index is 0 otherwise use width
	  // in this way the first offset will use an axis and the second one
	  // will use the other one
	  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

	  // Split the offset string to obtain a list of values and operands
	  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
	  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
	    return frag.trim();
	  });

	  // Detect if the offset string contains a pair of values or a single one
	  // they could be separated by comma or space
	  var divider = fragments.indexOf(find(fragments, function (frag) {
	    return frag.search(/,|\s/) !== -1;
	  }));

	  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
	    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
	  }

	  // If divider is found, we divide the list of values and operands to divide
	  // them by ofset X and Y.
	  var splitRegex = /\s*,\s*|\s+/;
	  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

	  // Convert the values with units to absolute pixels to allow our computations
	  ops = ops.map(function (op, index) {
	    // Most of the units rely on the orientation of the popper
	    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
	    var mergeWithPrevious = false;
	    return op
	    // This aggregates any `+` or `-` sign that aren't considered operators
	    // e.g.: 10 + +5 => [10, +, +5]
	    .reduce(function (a, b) {
	      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
	        a[a.length - 1] = b;
	        mergeWithPrevious = true;
	        return a;
	      } else if (mergeWithPrevious) {
	        a[a.length - 1] += b;
	        mergeWithPrevious = false;
	        return a;
	      } else {
	        return a.concat(b);
	      }
	    }, [])
	    // Here we convert the string values into number values (in px)
	    .map(function (str) {
	      return toValue(str, measurement, popperOffsets, referenceOffsets);
	    });
	  });

	  // Loop trough the offsets arrays and execute the operations
	  ops.forEach(function (op, index) {
	    op.forEach(function (frag, index2) {
	      if (isNumeric(frag)) {
	        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
	      }
	    });
	  });
	  return offsets;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @argument {Number|String} options.offset=0
	 * The offset value as described in the modifier description
	 * @returns {Object} The data object, properly modified
	 */
	function offset(data, _ref) {
	  var offset = _ref.offset;
	  var placement = data.placement,
	      _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var basePlacement = placement.split('-')[0];

	  var offsets = void 0;
	  if (isNumeric(+offset)) {
	    offsets = [+offset, 0];
	  } else {
	    offsets = parseOffset(offset, popper, reference, basePlacement);
	  }

	  if (basePlacement === 'left') {
	    popper.top += offsets[0];
	    popper.left -= offsets[1];
	  } else if (basePlacement === 'right') {
	    popper.top += offsets[0];
	    popper.left += offsets[1];
	  } else if (basePlacement === 'top') {
	    popper.left += offsets[0];
	    popper.top -= offsets[1];
	  } else if (basePlacement === 'bottom') {
	    popper.left += offsets[0];
	    popper.top += offsets[1];
	  }

	  data.popper = popper;
	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function preventOverflow(data, options) {
	  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

	  // If offsetParent is the reference element, we really want to
	  // go one step up and use the next offsetParent as reference to
	  // avoid to make this modifier completely useless and look like broken
	  if (data.instance.reference === boundariesElement) {
	    boundariesElement = getOffsetParent(boundariesElement);
	  }

	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);
	  options.boundaries = boundaries;

	  var order = options.priority;
	  var popper = data.offsets.popper;

	  var check = {
	    primary: function primary(placement) {
	      var value = popper[placement];
	      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
	        value = Math.max(popper[placement], boundaries[placement]);
	      }
	      return defineProperty({}, placement, value);
	    },
	    secondary: function secondary(placement) {
	      var mainSide = placement === 'right' ? 'left' : 'top';
	      var value = popper[mainSide];
	      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
	        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
	      }
	      return defineProperty({}, mainSide, value);
	    }
	  };

	  order.forEach(function (placement) {
	    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
	    popper = _extends({}, popper, check[side](placement));
	  });

	  data.offsets.popper = popper;

	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function shift(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var shiftvariation = placement.split('-')[1];

	  // if shift shiftvariation is specified, run the modifier
	  if (shiftvariation) {
	    var _data$offsets = data.offsets,
	        reference = _data$offsets.reference,
	        popper = _data$offsets.popper;

	    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
	    var side = isVertical ? 'left' : 'top';
	    var measurement = isVertical ? 'width' : 'height';

	    var shiftOffsets = {
	      start: defineProperty({}, side, reference[side]),
	      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
	    };

	    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
	  }

	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function hide(data) {
	  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
	    return data;
	  }

	  var refRect = data.offsets.reference;
	  var bound = find(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'preventOverflow';
	  }).boundaries;

	  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
	    // Avoid unnecessary DOM access if visibility hasn't changed
	    if (data.hide === true) {
	      return data;
	    }

	    data.hide = true;
	    data.attributes['x-out-of-boundaries'] = '';
	  } else {
	    // Avoid unnecessary DOM access if visibility hasn't changed
	    if (data.hide === false) {
	      return data;
	    }

	    data.hide = false;
	    data.attributes['x-out-of-boundaries'] = false;
	  }

	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function inner(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

	  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

	  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

	  data.placement = getOppositePlacement(placement);
	  data.offsets.popper = getClientRect(popper);

	  return data;
	}

	/**
	 * Modifier function, each modifier can have a function of this type assigned
	 * to its `fn` property.<br />
	 * These functions will be called on each update, this means that you must
	 * make sure they are performant enough to avoid performance bottlenecks.
	 *
	 * @function ModifierFn
	 * @argument {dataObject} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {dataObject} The data object, properly modified
	 */

	/**
	 * Modifiers are plugins used to alter the behavior of your poppers.<br />
	 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
	 * needed by the library.
	 *
	 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
	 * All the other properties are configurations that could be tweaked.
	 * @namespace modifiers
	 */
	var modifiers = {
	  /**
	   * Modifier used to shift the popper on the start or end of its reference
	   * element.<br />
	   * It will read the variation of the `placement` property.<br />
	   * It can be one either `-end` or `-start`.
	   * @memberof modifiers
	   * @inner
	   */
	  shift: {
	    /** @prop {number} order=100 - Index used to define the order of execution */
	    order: 100,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: shift
	  },

	  /**
	   * The `offset` modifier can shift your popper on both its axis.
	   *
	   * It accepts the following units:
	   * - `px` or unitless, interpreted as pixels
	   * - `%` or `%r`, percentage relative to the length of the reference element
	   * - `%p`, percentage relative to the length of the popper element
	   * - `vw`, CSS viewport width unit
	   * - `vh`, CSS viewport height unit
	   *
	   * For length is intended the main axis relative to the placement of the popper.<br />
	   * This means that if the placement is `top` or `bottom`, the length will be the
	   * `width`. In case of `left` or `right`, it will be the height.
	   *
	   * You can provide a single value (as `Number` or `String`), or a pair of values
	   * as `String` divided by a comma or one (or more) white spaces.<br />
	   * The latter is a deprecated method because it leads to confusion and will be
	   * removed in v2.<br />
	   * Additionally, it accepts additions and subtractions between different units.
	   * Note that multiplications and divisions aren't supported.
	   *
	   * Valid examples are:
	   * ```
	   * 10
	   * '10%'
	   * '10, 10'
	   * '10%, 10'
	   * '10 + 10%'
	   * '10 - 5vh + 3%'
	   * '-10px + 5vh, 5px - 6%'
	   * ```
	   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
	   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
	   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  offset: {
	    /** @prop {number} order=200 - Index used to define the order of execution */
	    order: 200,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: offset,
	    /** @prop {Number|String} offset=0
	     * The offset value as described in the modifier description
	     */
	    offset: 0
	  },

	  /**
	   * Modifier used to prevent the popper from being positioned outside the boundary.
	   *
	   * An scenario exists where the reference itself is not within the boundaries.<br />
	   * We can say it has "escaped the boundaries" — or just "escaped".<br />
	   * In this case we need to decide whether the popper should either:
	   *
	   * - detach from the reference and remain "trapped" in the boundaries, or
	   * - if it should ignore the boundary and "escape with its reference"
	   *
	   * When `escapeWithReference` is set to`true` and reference is completely
	   * outside its boundaries, the popper will overflow (or completely leave)
	   * the boundaries in order to remain attached to the edge of the reference.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  preventOverflow: {
	    /** @prop {number} order=300 - Index used to define the order of execution */
	    order: 300,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: preventOverflow,
	    /**
	     * @prop {Array} [priority=['left','right','top','bottom']]
	     * Popper will try to prevent overflow following these priorities by default,
	     * then, it could overflow on the left and on top of the `boundariesElement`
	     */
	    priority: ['left', 'right', 'top', 'bottom'],
	    /**
	     * @prop {number} padding=5
	     * Amount of pixel used to define a minimum distance between the boundaries
	     * and the popper this makes sure the popper has always a little padding
	     * between the edges of its container
	     */
	    padding: 5,
	    /**
	     * @prop {String|HTMLElement} boundariesElement='scrollParent'
	     * Boundaries used by the modifier, can be `scrollParent`, `window`,
	     * `viewport` or any DOM element.
	     */
	    boundariesElement: 'scrollParent'
	  },

	  /**
	   * Modifier used to make sure the reference and its popper stay near eachothers
	   * without leaving any gap between the two. Expecially useful when the arrow is
	   * enabled and you want to assure it to point to its reference element.
	   * It cares only about the first axis, you can still have poppers with margin
	   * between the popper and its reference element.
	   * @memberof modifiers
	   * @inner
	   */
	  keepTogether: {
	    /** @prop {number} order=400 - Index used to define the order of execution */
	    order: 400,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: keepTogether
	  },

	  /**
	   * This modifier is used to move the `arrowElement` of the popper to make
	   * sure it is positioned between the reference element and its popper element.
	   * It will read the outer size of the `arrowElement` node to detect how many
	   * pixels of conjuction are needed.
	   *
	   * It has no effect if no `arrowElement` is provided.
	   * @memberof modifiers
	   * @inner
	   */
	  arrow: {
	    /** @prop {number} order=500 - Index used to define the order of execution */
	    order: 500,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: arrow,
	    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
	    element: '[x-arrow]'
	  },

	  /**
	   * Modifier used to flip the popper's placement when it starts to overlap its
	   * reference element.
	   *
	   * Requires the `preventOverflow` modifier before it in order to work.
	   *
	   * **NOTE:** this modifier will interrupt the current update cycle and will
	   * restart it if it detects the need to flip the placement.
	   * @memberof modifiers
	   * @inner
	   */
	  flip: {
	    /** @prop {number} order=600 - Index used to define the order of execution */
	    order: 600,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: flip,
	    /**
	     * @prop {String|Array} behavior='flip'
	     * The behavior used to change the popper's placement. It can be one of
	     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
	     * placements (with optional variations).
	     */
	    behavior: 'flip',
	    /**
	     * @prop {number} padding=5
	     * The popper will flip if it hits the edges of the `boundariesElement`
	     */
	    padding: 5,
	    /**
	     * @prop {String|HTMLElement} boundariesElement='viewport'
	     * The element which will define the boundaries of the popper position,
	     * the popper will never be placed outside of the defined boundaries
	     * (except if keepTogether is enabled)
	     */
	    boundariesElement: 'viewport'
	  },

	  /**
	   * Modifier used to make the popper flow toward the inner of the reference element.
	   * By default, when this modifier is disabled, the popper will be placed outside
	   * the reference element.
	   * @memberof modifiers
	   * @inner
	   */
	  inner: {
	    /** @prop {number} order=700 - Index used to define the order of execution */
	    order: 700,
	    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
	    enabled: false,
	    /** @prop {ModifierFn} */
	    fn: inner
	  },

	  /**
	   * Modifier used to hide the popper when its reference element is outside of the
	   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
	   * be used to hide with a CSS selector the popper when its reference is
	   * out of boundaries.
	   *
	   * Requires the `preventOverflow` modifier before it in order to work.
	   * @memberof modifiers
	   * @inner
	   */
	  hide: {
	    /** @prop {number} order=800 - Index used to define the order of execution */
	    order: 800,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: hide
	  },

	  /**
	   * Computes the style that will be applied to the popper element to gets
	   * properly positioned.
	   *
	   * Note that this modifier will not touch the DOM, it just prepares the styles
	   * so that `applyStyle` modifier can apply it. This separation is useful
	   * in case you need to replace `applyStyle` with a custom implementation.
	   *
	   * This modifier has `850` as `order` value to maintain backward compatibility
	   * with previous versions of Popper.js. Expect the modifiers ordering method
	   * to change in future major versions of the library.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  computeStyle: {
	    /** @prop {number} order=850 - Index used to define the order of execution */
	    order: 850,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: computeStyle,
	    /**
	     * @prop {Boolean} gpuAcceleration=true
	     * If true, it uses the CSS 3d transformation to position the popper.
	     * Otherwise, it will use the `top` and `left` properties.
	     */
	    gpuAcceleration: true,
	    /**
	     * @prop {string} [x='bottom']
	     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
	     * Change this if your popper should grow in a direction different from `bottom`
	     */
	    x: 'bottom',
	    /**
	     * @prop {string} [x='left']
	     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
	     * Change this if your popper should grow in a direction different from `right`
	     */
	    y: 'right'
	  },

	  /**
	   * Applies the computed styles to the popper element.
	   *
	   * All the DOM manipulations are limited to this modifier. This is useful in case
	   * you want to integrate Popper.js inside a framework or view library and you
	   * want to delegate all the DOM manipulations to it.
	   *
	   * Note that if you disable this modifier, you must make sure the popper element
	   * has its position set to `absolute` before Popper.js can do its work!
	   *
	   * Just disable this modifier and define you own to achieve the desired effect.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  applyStyle: {
	    /** @prop {number} order=900 - Index used to define the order of execution */
	    order: 900,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: applyStyle,
	    /** @prop {Function} */
	    onLoad: applyStyleOnLoad,
	    /**
	     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
	     * @prop {Boolean} gpuAcceleration=true
	     * If true, it uses the CSS 3d transformation to position the popper.
	     * Otherwise, it will use the `top` and `left` properties.
	     */
	    gpuAcceleration: undefined
	  }
	};

	/**
	 * The `dataObject` is an object containing all the informations used by Popper.js
	 * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
	 * @name dataObject
	 * @property {Object} data.instance The Popper.js instance
	 * @property {String} data.placement Placement applied to popper
	 * @property {String} data.originalPlacement Placement originally defined on init
	 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
	 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.
	 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
	 * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)
	 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)
	 * @property {Object} data.boundaries Offsets of the popper boundaries
	 * @property {Object} data.offsets The measurements of popper, reference and arrow elements.
	 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
	 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
	 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
	 */

	/**
	 * Default options provided to Popper.js constructor.<br />
	 * These can be overriden using the `options` argument of Popper.js.<br />
	 * To override an option, simply pass as 3rd argument an object with the same
	 * structure of this object, example:
	 * ```
	 * new Popper(ref, pop, {
	 *   modifiers: {
	 *     preventOverflow: { enabled: false }
	 *   }
	 * })
	 * ```
	 * @type {Object}
	 * @static
	 * @memberof Popper
	 */
	var Defaults = {
	  /**
	   * Popper's placement
	   * @prop {Popper.placements} placement='bottom'
	   */
	  placement: 'bottom',

	  /**
	   * Whether events (resize, scroll) are initially enabled
	   * @prop {Boolean} eventsEnabled=true
	   */
	  eventsEnabled: true,

	  /**
	   * Set to true if you want to automatically remove the popper when
	   * you call the `destroy` method.
	   * @prop {Boolean} removeOnDestroy=false
	   */
	  removeOnDestroy: false,

	  /**
	   * Callback called when the popper is created.<br />
	   * By default, is set to no-op.<br />
	   * Access Popper.js instance with `data.instance`.
	   * @prop {onCreate}
	   */
	  onCreate: function onCreate() {},

	  /**
	   * Callback called when the popper is updated, this callback is not called
	   * on the initialization/creation of the popper, but only on subsequent
	   * updates.<br />
	   * By default, is set to no-op.<br />
	   * Access Popper.js instance with `data.instance`.
	   * @prop {onUpdate}
	   */
	  onUpdate: function onUpdate() {},

	  /**
	   * List of modifiers used to modify the offsets before they are applied to the popper.
	   * They provide most of the functionalities of Popper.js
	   * @prop {modifiers}
	   */
	  modifiers: modifiers
	};

	/**
	 * @callback onCreate
	 * @param {dataObject} data
	 */

	/**
	 * @callback onUpdate
	 * @param {dataObject} data
	 */

	// Utils
	// Methods
	var Popper = function () {
	  /**
	   * Create a new Popper.js instance
	   * @class Popper
	   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
	   * @param {HTMLElement} popper - The HTML element used as popper.
	   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
	   * @return {Object} instance - The generated Popper.js instance
	   */
	  function Popper(reference, popper) {
	    var _this = this;

	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	    classCallCheck(this, Popper);

	    this.scheduleUpdate = function () {
	      return requestAnimationFrame(_this.update);
	    };

	    // make update() debounced, so that it only runs at most once-per-tick
	    this.update = debounce(this.update.bind(this));

	    // with {} we create a new object with the options inside it
	    this.options = _extends({}, Popper.Defaults, options);

	    // init state
	    this.state = {
	      isDestroyed: false,
	      isCreated: false,
	      scrollParents: []
	    };

	    // get reference and popper elements (allow jQuery wrappers)
	    this.reference = reference && reference.jquery ? reference[0] : reference;
	    this.popper = popper && popper.jquery ? popper[0] : popper;

	    // Deep merge modifiers options
	    this.options.modifiers = {};
	    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
	      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
	    });

	    // Refactoring modifiers' list (Object => Array)
	    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
	      return _extends({
	        name: name
	      }, _this.options.modifiers[name]);
	    })
	    // sort the modifiers by order
	    .sort(function (a, b) {
	      return a.order - b.order;
	    });

	    // modifiers have the ability to execute arbitrary code when Popper.js get inited
	    // such code is executed in the same order of its modifier
	    // they could add new properties to their options configuration
	    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
	    this.modifiers.forEach(function (modifierOptions) {
	      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
	        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
	      }
	    });

	    // fire the first update to position the popper in the right place
	    this.update();

	    var eventsEnabled = this.options.eventsEnabled;
	    if (eventsEnabled) {
	      // setup event listeners, they will take care of update the position in specific situations
	      this.enableEventListeners();
	    }

	    this.state.eventsEnabled = eventsEnabled;
	  }

	  // We can't use class properties because they don't get listed in the
	  // class prototype and break stuff like Sinon stubs


	  createClass(Popper, [{
	    key: 'update',
	    value: function update$$1() {
	      return update.call(this);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy$$1() {
	      return destroy.call(this);
	    }
	  }, {
	    key: 'enableEventListeners',
	    value: function enableEventListeners$$1() {
	      return enableEventListeners.call(this);
	    }
	  }, {
	    key: 'disableEventListeners',
	    value: function disableEventListeners$$1() {
	      return disableEventListeners.call(this);
	    }

	    /**
	     * Schedule an update, it will run on the next UI update available
	     * @method scheduleUpdate
	     * @memberof Popper
	     */


	    /**
	     * Collection of utilities useful when writing custom modifiers.
	     * Starting from version 1.7, this method is available only if you
	     * include `popper-utils.js` before `popper.js`.
	     *
	     * **DEPRECATION**: This way to access PopperUtils is deprecated
	     * and will be removed in v2! Use the PopperUtils module directly instead.
	     * Due to the high instability of the methods contained in Utils, we can't
	     * guarantee them to follow semver. Use them at your own risk!
	     * @static
	     * @private
	     * @type {Object}
	     * @deprecated since version 1.8
	     * @member Utils
	     * @memberof Popper
	     */

	  }]);
	  return Popper;
	}();

	/**
	 * The `referenceObject` is an object that provides an interface compatible with Popper.js
	 * and lets you use it as replacement of a real DOM node.<br />
	 * You can use this method to position a popper relatively to a set of coordinates
	 * in case you don't have a DOM node to use as reference.
	 *
	 * ```
	 * new Popper(referenceObject, popperNode);
	 * ```
	 *
	 * NB: This feature isn't supported in Internet Explorer 10
	 * @name referenceObject
	 * @property {Function} data.getBoundingClientRect
	 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
	 * @property {number} data.clientWidth
	 * An ES6 getter that will return the width of the virtual reference element.
	 * @property {number} data.clientHeight
	 * An ES6 getter that will return the height of the virtual reference element.
	 */


	Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
	Popper.placements = placements;
	Popper.Defaults = Defaults;

	return Popper;

	})));
	//# sourceMappingURL=popper.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var Arrow = function Arrow(props, context) {
	  var _props$component = props.component,
	      component = _props$component === undefined ? 'span' : _props$component,
	      innerRef = props.innerRef,
	      children = props.children,
	      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);

	  var popper = context.popper;

	  var arrowRef = function arrowRef(node) {
	    popper.setArrowNode(node);
	    if (typeof innerRef === 'function') {
	      innerRef(node);
	    }
	  };
	  var arrowStyle = popper.getArrowStyle();

	  if (typeof children === 'function') {
	    var arrowProps = {
	      ref: arrowRef,
	      style: arrowStyle
	    };
	    return children({ arrowProps: arrowProps, restProps: restProps });
	  }

	  var componentProps = _extends({}, restProps, {
	    style: _extends({}, arrowStyle, restProps.style)
	  });

	  if (typeof component === 'string') {
	    componentProps.ref = arrowRef;
	  } else {
	    componentProps.innerRef = arrowRef;
	  }

	  return (0, _react.createElement)(component, componentProps, children);
	};

	Arrow.contextTypes = {
	  popper: _propTypes2.default.object.isRequired
	};

	Arrow.propTypes = {
	  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
	  innerRef: _propTypes2.default.func,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])
	};

	exports.default = Arrow;

/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' });

	var Delete = function Delete(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Delete = (0, _pure2.default)(Delete);
	Delete.muiName = 'SvgIcon';

	exports.default = Delete;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' });

	var Search = function Search(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Search = (0, _pure2.default)(Search);
	Search.muiName = 'SvgIcon';

	exports.default = Search;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M6 6h12v12H6z' });

	var Stop = function Stop(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Stop = (0, _pure2.default)(Stop);
	Stop.muiName = 'SvgIcon';

	exports.default = Stop;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M16.01 7L16 3h-2v4h-4V3H8v4h-.01C7 6.99 6 7.99 6 8.99v5.49L9.5 18v3h5v-3l3.5-3.51v-5.5c0-1-1-2-1.99-1.99z' });

	var Power = function Power(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Power = (0, _pure2.default)(Power);
	Power.muiName = 'SvgIcon';

	exports.default = Power;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z' });

	var Info = function Info(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Info = (0, _pure2.default)(Info);
	Info.muiName = 'SvgIcon';

	exports.default = Info;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z' });

	var Cached = function Cached(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Cached = (0, _pure2.default)(Cached);
	Cached.muiName = 'SvgIcon';

	exports.default = Cached;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4z' });

	var BatteryStd = function BatteryStd(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	BatteryStd = (0, _pure2.default)(BatteryStd);
	BatteryStd.muiName = 'SvgIcon';

	exports.default = BatteryStd;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M7 12l-2-2-2 2 2 2 2-2zm10.71-4.29L12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88zM19 10l-2 2 2 2 2-2-2-2z' });

	var BluetoothConnected = function BluetoothConnected(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	BluetoothConnected = (0, _pure2.default)(BluetoothConnected);
	BluetoothConnected.muiName = 'SvgIcon';

	exports.default = BluetoothConnected;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M7 2v11h3v9l7-12h-4l4-8z' });

	var FlashOn = function FlashOn(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	FlashOn = (0, _pure2.default)(FlashOn);
	FlashOn.muiName = 'SvgIcon';

	exports.default = FlashOn;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z' });

	var AddBox = function AddBox(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	AddBox = (0, _pure2.default)(AddBox);
	AddBox.muiName = 'SvgIcon';

	exports.default = AddBox;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z' });

	var Refresh = function Refresh(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Refresh = (0, _pure2.default)(Refresh);
	Refresh.muiName = 'SvgIcon';

	exports.default = Refresh;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z' });

	var Warning = function Warning(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Warning = (0, _pure2.default)(Warning);
	Warning.muiName = 'SvgIcon';

	exports.default = Warning;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _TextField = __webpack_require__(707);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TextField).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(336);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(335);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(446);

	var _warning2 = _interopRequireDefault(_warning);

	var _Input = __webpack_require__(648);

	var _Input2 = _interopRequireDefault(_Input);

	var _FormControl = __webpack_require__(655);

	var _FormControl2 = _interopRequireDefault(_FormControl);

	var _FormHelperText = __webpack_require__(656);

	var _FormHelperText2 = _interopRequireDefault(_FormHelperText);

	var _Select = __webpack_require__(674);

	var _Select2 = _interopRequireDefault(_Select);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// @inheritedComponent FormControl

	var babelPluginFlowReactPropTypes_proptype_Node = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_Node || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_ChildrenArray = __webpack_require__(3).babelPluginFlowReactPropTypes_proptype_ChildrenArray || __webpack_require__(174).any;

	var babelPluginFlowReactPropTypes_proptype_Props = {
	  autoComplete: __webpack_require__(174).string,
	  autoFocus: __webpack_require__(174).bool,
	  children: typeof babelPluginFlowReactPropTypes_proptype_ChildrenArray === 'function' ? babelPluginFlowReactPropTypes_proptype_ChildrenArray : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_ChildrenArray),
	  className: __webpack_require__(174).string,
	  defaultValue: __webpack_require__(174).string,
	  disabled: __webpack_require__(174).bool,
	  error: __webpack_require__(174).bool,
	  FormHelperTextProps: __webpack_require__(174).object,
	  fullWidth: __webpack_require__(174).bool,
	  helperText: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  helperTextClassName: __webpack_require__(174).string,
	  id: __webpack_require__(174).string,
	  inputClassName: __webpack_require__(174).string,
	  InputClassName: __webpack_require__(174).string,
	  InputLabelProps: __webpack_require__(174).object,
	  inputProps: __webpack_require__(174).object,
	  InputProps: __webpack_require__(174).object,
	  inputRef: __webpack_require__(174).func,
	  label: typeof babelPluginFlowReactPropTypes_proptype_Node === 'function' ? babelPluginFlowReactPropTypes_proptype_Node : __webpack_require__(174).shape(babelPluginFlowReactPropTypes_proptype_Node),
	  labelClassName: __webpack_require__(174).string,
	  multiline: __webpack_require__(174).bool,
	  name: __webpack_require__(174).string,
	  onChange: __webpack_require__(174).func,
	  placeholder: __webpack_require__(174).string,
	  required: __webpack_require__(174).bool,
	  rootRef: __webpack_require__(174).func,
	  rows: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  rowsMax: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  select: __webpack_require__(174).bool,
	  SelectProps: __webpack_require__(174).object,
	  type: __webpack_require__(174).string,
	  value: __webpack_require__(174).oneOfType([__webpack_require__(174).string, __webpack_require__(174).number]),
	  margin: __webpack_require__(174).oneOf(['none', 'dense', 'normal'])
	};


	function TextField(props) {
	  var autoComplete = props.autoComplete,
	      autoFocus = props.autoFocus,
	      children = props.children,
	      className = props.className,
	      defaultValue = props.defaultValue,
	      disabled = props.disabled,
	      error = props.error,
	      id = props.id,
	      inputClassName = props.inputClassName,
	      InputClassName = props.InputClassName,
	      inputPropsProp = props.inputProps,
	      InputProps = props.InputProps,
	      inputRef = props.inputRef,
	      label = props.label,
	      labelClassName = props.labelClassName,
	      InputLabelProps = props.InputLabelProps,
	      helperText = props.helperText,
	      helperTextClassName = props.helperTextClassName,
	      FormHelperTextProps = props.FormHelperTextProps,
	      fullWidth = props.fullWidth,
	      required = props.required,
	      type = props.type,
	      multiline = props.multiline,
	      name = props.name,
	      onChange = props.onChange,
	      placeholder = props.placeholder,
	      rootRef = props.rootRef,
	      rows = props.rows,
	      rowsMax = props.rowsMax,
	      select = props.select,
	      SelectProps = props.SelectProps,
	      value = props.value,
	      other = (0, _objectWithoutProperties3.default)(props, ['autoComplete', 'autoFocus', 'children', 'className', 'defaultValue', 'disabled', 'error', 'id', 'inputClassName', 'InputClassName', 'inputProps', 'InputProps', 'inputRef', 'label', 'labelClassName', 'InputLabelProps', 'helperText', 'helperTextClassName', 'FormHelperTextProps', 'fullWidth', 'required', 'type', 'multiline', 'name', 'onChange', 'placeholder', 'rootRef', 'rows', 'rowsMax', 'select', 'SelectProps', 'value']);


	  var inputProps = inputPropsProp;

	  if (inputClassName) {
	    inputProps = (0, _extends3.default)({
	      className: inputClassName
	    }, inputProps);
	  }

	   false ? (0, _warning2.default)(!select || children, 'Material-UI: `children` must be passed when using the `TextField` component with `select`.') : void 0;

	  var InputComponent = _react2.default.createElement(_Input2.default, (0, _extends3.default)({
	    autoComplete: autoComplete,
	    autoFocus: autoFocus,
	    className: InputClassName,
	    defaultValue: defaultValue,
	    disabled: disabled,
	    multiline: multiline,
	    name: name,
	    rows: rows,
	    rowsMax: rowsMax,
	    type: type,
	    value: value,
	    id: id,
	    inputProps: inputProps,
	    inputRef: inputRef,
	    onChange: onChange,
	    placeholder: placeholder
	  }, InputProps));

	  return _react2.default.createElement(
	    _FormControl2.default,
	    (0, _extends3.default)({
	      fullWidth: fullWidth,
	      ref: rootRef,
	      className: className,
	      error: error,
	      required: required
	    }, other),
	    label && _react2.default.createElement(
	      _Input.InputLabel,
	      (0, _extends3.default)({ htmlFor: id, className: labelClassName }, InputLabelProps),
	      label
	    ),
	    select ? _react2.default.createElement(
	      _Select2.default,
	      (0, _extends3.default)({ input: InputComponent }, SelectProps),
	      children
	    ) : InputComponent,
	    helperText && _react2.default.createElement(
	      _FormHelperText2.default,
	      (0, _extends3.default)({ className: helperTextClassName }, FormHelperTextProps),
	      helperText
	    )
	  );
	}

	TextField.propTypes =  false ? babelPluginFlowReactPropTypes_proptype_Props : {};
	TextField.defaultProps = {
	  required: false,
	  select: false
	};

	exports.default = TextField;

/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _socket = __webpack_require__(215);

	var _socket2 = _interopRequireDefault(_socket);

	var _styles = __webpack_require__(542);

	var _AppBar = __webpack_require__(566);

	var _AppBar2 = _interopRequireDefault(_AppBar);

	var _Toolbar = __webpack_require__(571);

	var _Toolbar2 = _interopRequireDefault(_Toolbar);

	var _Typography = __webpack_require__(610);

	var _Typography2 = _interopRequireDefault(_Typography);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _IconButton = __webpack_require__(577);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _Menu = __webpack_require__(640);

	var _Menu2 = _interopRequireDefault(_Menu);

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _Table = __webpack_require__(641);

	var _Table2 = _interopRequireDefault(_Table);

	var _Paper = __webpack_require__(569);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _Checkbox = __webpack_require__(680);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _Tooltip = __webpack_require__(686);

	var _Tooltip2 = _interopRequireDefault(_Tooltip);

	var _PersonAdd = __webpack_require__(709);

	var _PersonAdd2 = _interopRequireDefault(_PersonAdd);

	var _Search = __webpack_require__(695);

	var _Search2 = _interopRequireDefault(_Search);

	var _Stop = __webpack_require__(696);

	var _Stop2 = _interopRequireDefault(_Stop);

	var _Delete = __webpack_require__(694);

	var _Delete2 = _interopRequireDefault(_Delete);

	var _Edit = __webpack_require__(710);

	var _Edit2 = _interopRequireDefault(_Edit);

	var _Dialog = __webpack_require__(593);

	var _Dialog2 = _interopRequireDefault(_Dialog);

	var _TextField = __webpack_require__(706);

	var _TextField2 = _interopRequireDefault(_TextField);

	var _MenuItem = __webpack_require__(672);

	var _MenuItem2 = _interopRequireDefault(_MenuItem);

	var _editRider = __webpack_require__(711);

	var _editRider2 = _interopRequireDefault(_editRider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Riders = (_temp2 = _class = function (_Component) {
	  _inherits(Riders, _Component);

	  function Riders() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Riders);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Riders.__proto__ || Object.getPrototypeOf(Riders)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      addingRider: false,
	      editingRider: false
	    }, _this.addRider = function () {
	      _this.setState({
	        addingRider: true,
	        editingRider: false
	      });
	    }, _this.saveRider = function (rider) {
	      if (_this.state.editingRider) {
	        _socket2.default.emit('admin:riders:update', _this.props.adminToken, {
	          id: _this.state.editingRider,
	          name: rider.name,
	          age: rider.age,
	          weight: rider.weight,
	          gender: rider.gender,
	          photoSelect: rider.photoSelect,
	          photoWin: rider.photoWin,
	          photoLose: rider.photoLose,
	          photoPower: rider.photoPower
	        });
	      } else {
	        _socket2.default.emit('admin:riders:create', _this.props.adminToken, {
	          name: rider.name,
	          age: rider.age,
	          weight: rider.weight,
	          gender: rider.gender,
	          photoSelect: rider.photoSelect,
	          photoWin: rider.photoWin,
	          photoLose: rider.photoLose,
	          photoPower: rider.photoPower
	        });
	      }

	      _this.setState({
	        addingRider: false,
	        editingRider: false
	      });
	    }, _this.deleteRider = function (rider) {
	      return function () {
	        _socket2.default.emit('admin:riders:delete', _this.props.adminToken, rider);
	      };
	    }, _this.hideAddRider = function () {
	      _this.setState({
	        addingRider: false,
	        editingRider: false
	      });
	    }, _this.editRider = function (rider) {
	      return function () {
	        _this.setState({
	          addingRider: false,
	          editingRider: rider.id
	        });
	      };
	    }, _this.hideEditRider = function () {
	      _this.setState({
	        addingRider: false,
	        editingRider: false
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Riders, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var riders = this.props.riders.sort(function (a, b) {
	        return a.name - b.name;
	      });

	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          _AppBar2.default,
	          { position: 'static' },
	          _react2.default.createElement(
	            _Toolbar2.default,
	            null,
	            _react2.default.createElement(
	              _IconButton2.default,
	              { color: 'contrast', 'aria-label': 'Add rider', onClick: this.addRider },
	              _react2.default.createElement(_PersonAdd2.default, null),
	              _react2.default.createElement(_editRider2.default, {
	                open: this.state.addingRider,
	                onSave: this.saveRider,
	                onCancel: this.hideAddRider
	              })
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _Table2.default,
	          null,
	          _react2.default.createElement(
	            _Table.TableBody,
	            null,
	            riders.map(function (rider) {
	              return _react2.default.createElement(
	                _Table.TableRow,
	                {
	                  key: rider.id
	                },
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  { padding: 'dense' },
	                  rider.name
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  { padding: 'dense', numeric: true },
	                  rider.age
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  { padding: 'dense', numeric: true },
	                  rider.weight,
	                  ' kg'
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  { padding: 'dense' },
	                  rider.gender
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  { padding: 'checkbox' },
	                  _react2.default.createElement(
	                    _IconButton2.default,
	                    { color: 'contrast', 'aria-label': 'Edit rider', onClick: _this2.editRider(rider) },
	                    _react2.default.createElement(_Edit2.default, null),
	                    _react2.default.createElement(_editRider2.default, {
	                      open: _this2.state.editingRider === rider.id,
	                      onSave: _this2.saveRider,
	                      onCancel: _this2.hideEditRider,
	                      rider: rider
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  _Table.TableCell,
	                  { padding: 'checkbox' },
	                  _react2.default.createElement(
	                    _IconButton2.default,
	                    { color: 'contrast', 'aria-label': 'Delete rider', onClick: _this2.deleteRider(rider) },
	                    _react2.default.createElement(_Delete2.default, null)
	                  )
	                )
	              );
	            })
	          )
	        )
	      );
	    }
	  }]);

	  return Riders;
	}(_react.Component), _class.propTypes = {
	  adminToken: _propTypes2.default.string.isRequired,
	  riders: _propTypes2.default.array.isRequired
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref2) {
	  var token = _ref2.admin.token,
	      riders = _ref2.riders.riders;
	  return {
	    adminToken: token,
	    riders: riders
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Riders);

/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z' });

	var PersonAdd = function PersonAdd(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	PersonAdd = (0, _pure2.default)(PersonAdd);
	PersonAdd.muiName = 'SvgIcon';

	exports.default = PersonAdd;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(583);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(588);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

	var _ref = _react2.default.createElement('path', { d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z' });

	var Edit = function Edit(props) {
	  return _react2.default.createElement(
	    SvgIconCustom,
	    props,
	    _ref
	  );
	};

	Edit = (0, _pure2.default)(Edit);
	Edit.muiName = 'SvgIcon';

	exports.default = Edit;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  height: 693px;\n'], ['\n  height: 693px;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _styles = __webpack_require__(542);

	var _Menu = __webpack_require__(640);

	var _Menu2 = _interopRequireDefault(_Menu);

	var _keycode = __webpack_require__(524);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _Checkbox = __webpack_require__(680);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _Tooltip = __webpack_require__(686);

	var _Tooltip2 = _interopRequireDefault(_Tooltip);

	var _Dialog = __webpack_require__(593);

	var _Dialog2 = _interopRequireDefault(_Dialog);

	var _TextField = __webpack_require__(706);

	var _TextField2 = _interopRequireDefault(_TextField);

	var _MenuItem = __webpack_require__(672);

	var _MenuItem2 = _interopRequireDefault(_MenuItem);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _shortid = __webpack_require__(218);

	var _shortid2 = _interopRequireDefault(_shortid);

	var _socket = __webpack_require__(215);

	var _socket2 = _interopRequireDefault(_socket);

	var _photo = __webpack_require__(712);

	var _photo2 = _interopRequireDefault(_photo);

	var _settings = __webpack_require__(301);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var styles = {};

	var PhotosWrapper = _styledComponents2.default.div(_templateObject);

	var EditRider = (_temp2 = _class = function (_Component) {
	  _inherits(EditRider, _Component);

	  function EditRider() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, EditRider);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EditRider.__proto__ || Object.getPrototypeOf(EditRider)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      mediaStream: null
	    }, _this.handleChange = function (name) {
	      return function (event) {
	        _this.setState(_defineProperty({}, name, event.target.value));
	      };
	    }, _this.saveRider = function () {
	      if (!_this.state.name || !_this.state.age || !_this.state.weight) {
	        return;
	      }

	      _this.props.onSave({
	        name: _this.state.name,
	        age: _this.state.age,
	        weight: _this.state.weight,
	        gender: _this.state.gender,
	        photoSelect: _this.state.photoSelect,
	        photoWin: _this.state.photoWin,
	        photoLose: _this.state.photoLose,
	        photoPower: _this.state.photoPower
	      });

	      _this.setState({
	        name: null,
	        age: null,
	        weight: null,
	        gender: 'male',
	        photoSelect: null,
	        photoWin: null,
	        photoLose: null,
	        photoPower: null
	      });
	    }, _this.onPhotoTaken = function (type) {
	      return function (photo) {
	        var id = _shortid2.default.generate();

	        _socket2.default.once('admin:photo:uploaded:' + id, function (path) {
	          _this.setState(function (s) {
	            return _defineProperty({}, 'photo' + type.substring(0, 1).toUpperCase() + type.substring(1), path);
	          });
	        });

	        _socket2.default.emit('admin:photo:upload', _this.props.adminToken, id, photo);
	      };
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(EditRider, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      // Prefer camera resolution nearest to 1280x720.
	      var constraints = {
	        audio: false,
	        video: {
	          width: 572,
	          height: 693
	        }
	      };

	      navigator.mediaDevices.getUserMedia(constraints).then(function (mediaStream) {
	        _this2.setState({
	          mediaStream: mediaStream
	        });
	      }).catch(function (err) {
	        return console.log(err.name + ": " + err.message);
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(props) {
	      this.setState({
	        name: props.rider && props.rider.name,
	        age: props.rider && props.rider.age,
	        weight: props.rider && props.rider.weight,
	        gender: props.rider && props.rider.gender || 'male',
	        photoSelect: props.rider && props.rider.photoSelect,
	        photoWin: props.rider && props.rider.photoWin,
	        photoLose: props.rider && props.rider.photoLose,
	        photoPower: props.rider && props.rider.photoPower
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var classes = this.props.classes;


	      return _react2.default.createElement(
	        _Dialog2.default,
	        { open: this.props.open, onRequestClose: this.props.onCancel, maxWidth: 'md' },
	        _react2.default.createElement(
	          _Dialog.DialogTitle,
	          null,
	          'Add rider'
	        ),
	        _react2.default.createElement(
	          _Dialog.DialogContent,
	          null,
	          _react2.default.createElement(
	            'form',
	            null,
	            _react2.default.createElement(_TextField2.default, {
	              id: 'name',
	              label: 'Name',
	              margin: 'normal',
	              className: classes.textField,
	              onChange: this.handleChange('name'),
	              value: this.state.name,
	              required: true
	            }),
	            _react2.default.createElement(_TextField2.default, {
	              id: 'age',
	              label: 'Age',
	              margin: 'normal',
	              type: 'number',
	              className: classes.textField,
	              onChange: this.handleChange('age'),
	              value: this.state.age,
	              required: true
	            }),
	            _react2.default.createElement(_TextField2.default, {
	              id: 'weight',
	              label: 'Weight (kg)',
	              margin: 'normal',
	              type: 'number',
	              className: classes.textField,
	              onChange: this.handleChange('weight'),
	              value: this.state.weight,
	              required: true
	            }),
	            _react2.default.createElement(
	              _TextField2.default,
	              {
	                id: 'gender',
	                label: 'Gender',
	                margin: 'normal',
	                className: classes.textField,
	                onChange: this.handleChange('gender'),
	                value: this.state.gender,
	                select: true
	              },
	              _react2.default.createElement(
	                _MenuItem2.default,
	                { key: 'male', value: 'male' },
	                'Male'
	              ),
	              _react2.default.createElement(
	                _MenuItem2.default,
	                { key: 'female', value: 'female' },
	                'Female'
	              )
	            ),
	            _react2.default.createElement(
	              PhotosWrapper,
	              null,
	              _react2.default.createElement(_photo2.default, { text: 'Game face', image: this.state.photoSelect, onPhotoTaken: this.onPhotoTaken('select') }),
	              _react2.default.createElement(_photo2.default, { text: 'Happy face', image: this.state.photoWin, onPhotoTaken: this.onPhotoTaken('win') }),
	              _react2.default.createElement(_photo2.default, { text: 'Sad face', image: this.state.photoLose, onPhotoTaken: this.onPhotoTaken('lose') }),
	              _react2.default.createElement(_photo2.default, { text: 'Power face', image: this.state.photoPower, onPhotoTaken: this.onPhotoTaken('power') })
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _Dialog.DialogActions,
	          null,
	          _react2.default.createElement(
	            _Button2.default,
	            { color: 'primary', onClick: this.saveRider },
	            'OK'
	          )
	        )
	      );
	    }
	  }]);

	  return EditRider;
	}(_react.Component), _class.propTypes = {
	  classes: _propTypes2.default.object.isRequired,
	  adminToken: _propTypes2.default.string.isRequired,
	  open: _propTypes2.default.bool.isRequired,
	  onSave: _propTypes2.default.func.isRequired,
	  onCancel: _propTypes2.default.func.isRequired,
	  rider: _propTypes2.default.object
	}, _class.defaultProps = {
	  gender: 'male'
	}, _temp2);


	var mapStateToProps = function mapStateToProps(_ref3) {
	  var token = _ref3.admin.token;
	  return {
	    adminToken: token
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _styles.withStyles)(styles)(EditRider));

/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  width: ', 'px;\n  height: ', 'px;\n  display: inline-block;\n'], ['\n  width: ', 'px;\n  height: ', 'px;\n  display: inline-block;\n']),
	    _templateObject2 = _taggedTemplateLiteral(['\n  font-size: 16px;\n  text-align: center;\n'], ['\n  font-size: 16px;\n  text-align: center;\n']),
	    _templateObject3 = _taggedTemplateLiteral(['\n  text-align: center;\n'], ['\n  text-align: center;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _photoTaker = __webpack_require__(713);

	var _photoTaker2 = _interopRequireDefault(_photoTaker);

	var _riderFemale = __webpack_require__(249);

	var _riderFemale2 = _interopRequireDefault(_riderFemale);

	var _settings = __webpack_require__(301);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var Wrapper = _styledComponents2.default.div(_templateObject, _settings.PHOTO_WIDTH, _settings.PHOTO_HEIGHT);

	var PhotoTitle = _styledComponents2.default.p(_templateObject2);

	var PhotoDisplayWrapper = _styledComponents2.default.div(_templateObject3);

	var PhotoDisplay = function PhotoDisplay(_ref) {
	  var image = _ref.image,
	      onTakePhoto = _ref.onTakePhoto;

	  return _react2.default.createElement(
	    PhotoDisplayWrapper,
	    null,
	    _react2.default.createElement('img', { src: image, width: _settings.PHOTO_WIDTH, height: _settings.PHOTO_HEIGHT }),
	    _react2.default.createElement(
	      _Button2.default,
	      { onClick: onTakePhoto },
	      'Take photo'
	    )
	  );
	};

	var Photo = (_temp2 = _class = function (_Component) {
	  _inherits(Photo, _Component);

	  function Photo() {
	    var _ref2;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Photo);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Photo.__proto__ || Object.getPrototypeOf(Photo)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
	      takingPhoto: false
	    }, _this.onTakePhoto = function () {
	      _this.setState({
	        takingPhoto: true
	      });
	    }, _this.onPhotoTaken = function (image) {
	      _this.props.onPhotoTaken(image);

	      _this.setState({
	        takingPhoto: false
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Photo, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.setState({
	        takingPhoto: false
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        Wrapper,
	        null,
	        _react2.default.createElement(
	          PhotoTitle,
	          null,
	          this.props.text
	        ),
	        this.state.takingPhoto && _react2.default.createElement(_photoTaker2.default, { onPhoto: this.onPhotoTaken }),
	        !this.state.takingPhoto && _react2.default.createElement(PhotoDisplay, { image: this.props.image, onTakePhoto: this.onTakePhoto })
	      );
	    }
	  }]);

	  return Photo;
	}(_react.Component), _class.propTypes = {
	  text: _propTypes2.default.string.isRequired,
	  image: _propTypes2.default.string.isRequired,
	  onPhotoTaken: _propTypes2.default.func.isRequired
	}, _class.defaultProps = {
	  image: _riderFemale2.default
	}, _temp2);
	exports.default = Photo;

/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp2;

	var _templateObject = _taggedTemplateLiteral(['\n  width: ', 'px;\n  height: ', 'px;\n  display: inline-block;\n  text-align: center;\n'], ['\n  width: ', 'px;\n  height: ', 'px;\n  display: inline-block;\n  text-align: center;\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Button = __webpack_require__(314);

	var _Button2 = _interopRequireDefault(_Button);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _settings = __webpack_require__(301);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var VideoWrapper = _styledComponents2.default.div(_templateObject, _settings.PHOTO_WIDTH, _settings.PHOTO_HEIGHT);

	var PhotoTaker = (_temp2 = _class = function (_Component) {
	  _inherits(PhotoTaker, _Component);

	  function PhotoTaker() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, PhotoTaker);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PhotoTaker.__proto__ || Object.getPrototypeOf(PhotoTaker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      mediaStream: null
	    }, _this.videoLoaded = function (ref) {
	      if (ref) {
	        _this.video = ref;

	        var constraints = {
	          audio: false,
	          video: {
	            width: _settings.PHOTO_WIDTH,
	            height: _settings.PHOTO_HEIGHT
	          }
	        };

	        navigator.mediaDevices.getUserMedia(constraints).then(function (mediaStream) {
	          ref.srcObject = mediaStream;
	          ref.onloadedmetadata = function () {
	            ref.play();
	          };
	        }).catch(function (err) {
	          return console.log(err.name + ": " + err.message);
	        });
	      }
	    }, _this.savePhoto = function () {
	      if (!_this.video) {
	        console.error('No video element..');
	      }

	      var canvas = document.createElement('canvas');
	      canvas.width = _settings.PHOTO_WIDTH;
	      canvas.height = _settings.PHOTO_HEIGHT;
	      canvas.getContext('2d').drawImage(_this.video, 0, 0, _settings.PHOTO_WIDTH, _settings.PHOTO_HEIGHT, 0, 0, _settings.PHOTO_WIDTH, _settings.PHOTO_HEIGHT);
	      var img = canvas.toDataURL('image/png');

	      _this.props.onPhoto(img);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(PhotoTaker, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        VideoWrapper,
	        null,
	        _react2.default.createElement('video', { height: _settings.PHOTO_HEIGHT, width: _settings.PHOTO_WIDTH, ref: this.videoLoaded }),
	        _react2.default.createElement(
	          _Button2.default,
	          { color: 'primary', onClick: this.savePhoto },
	          'Take photo'
	        )
	      );
	    }
	  }]);

	  return PhotoTaker;
	}(_react.Component), _class.propTypes = {
	  onPhoto: _propTypes2.default.func.isRequired
	}, _temp2);
	exports.default = PhotoTaker;

/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(174);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(172);

	var _TextField = __webpack_require__(706);

	var _TextField2 = _interopRequireDefault(_TextField);

	var _actions = __webpack_require__(235);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Authenticate = function (_Component) {
	  _inherits(Authenticate, _Component);

	  function Authenticate() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, Authenticate);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Authenticate.__proto__ || Object.getPrototypeOf(Authenticate)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      password: ''
	    }, _this.handleChange = function (name) {
	      return function (event) {
	        _this.setState(_defineProperty({}, name, event.target.value));

	        _this.props.setAdminToken(event.target.value);
	      };
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(Authenticate, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.setState({
	        password: this.props.authToken
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_TextField2.default, {
	          id: 'password',
	          label: 'Password',
	          type: 'password',
	          autoComplete: 'current-password',
	          margin: 'normal',
	          onChange: this.handleChange('password'),
	          value: this.state.password
	        })
	      );
	    }
	  }]);

	  return Authenticate;
	}(_react.Component);

	Authenticate.propTypes = {
	  authToken: _propTypes2.default.string
	};

	var mapStateToProps = function mapStateToProps(_ref2) {
	  var token = _ref2.admin.token;
	  return {
	    authToken: token
	  };
	};

	var mapDispatchToProps = {
	  setAdminToken: _actions.setAdminToken
	};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Authenticate);

/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _templateObject = _taggedTemplateLiteral(['\n  color: #F10\n'], ['\n  color: #F10\n']);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _styledComponents = __webpack_require__(262);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _reactRedux = __webpack_require__(172);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

	var LoadingPanel = _styledComponents2.default.div(_templateObject);

	var Loading = function Loading(_ref) {
	  var loaded = _ref.loaded;

	  return _react2.default.createElement(
	    LoadingPanel,
	    null,
	    'Loading ',
	    loaded,
	    '%...'
	  );
	};

	var mapStateToProps = function mapStateToProps(_ref2) {
	  var loaded = _ref2.game.loaded;
	  return {
	    loaded: loaded
	  };
	};

	var mapDispatchToProps = {};

	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Loading);

/***/ })
/******/ ]);